{"sections":{"__uncategorized":{"docs":[],"sections":[],"level":0},"Getting Started":{"docs":["CODE_OF_CONDUCT","LICENSE","accessibility","api-guidelines","contributing","dev-commands","releases","testing-components","theming-components","usage"],"sections":[],"level":0,"title":"Getting Started"},"Guides":{"docs":["focus-management","themeable-to-emotion-migration-guide","v8-deprecations","v8-upgrade-guide"],"sections":[],"level":0,"title":"Guides"},"Patterns":{"docs":["ContentAlignment","DestroyAction","Drilldown","Search","TimeDate","UsingIcons"],"sections":[],"level":0,"title":"Patterns"},"packages":{"docs":["babel-plugin-transform-imports","browserslist-config-instui","command-utils","config-loader","console","cz-lerna-changelog","debounce_README","emotion","eslint-plugin-instructure-ui","instui-cli","instui-config","pkg-utils","ui","ui-a11y-content","ui-a11y-utils","ui-alerts","ui-avatar","ui-axe-check","ui-babel-preset","ui-badge","ui-billboard","ui-breadcrumb","ui-buttons","ui-byline","ui-calendar","ui-checkbox","ui-code-editor","ui-codemods","ui-color-utils","ui-component-examples","ui-date-input","ui-decorator","ui-dialog","ui-dom-utils","ui-drawer-layout","ui-editable","ui-eslint-config","ui-expandable","ui-file-drop","ui-flex","ui-focusable","ui-form-field","ui-grid","ui-heading","ui-i18n","ui-icons","ui-icons-build","ui-img","ui-karma-config","ui-link","ui-list","ui-menu","ui-metric","ui-modal","ui-motion","ui-navigation","ui-number-input","ui-options","ui-overlays","ui-pages","ui-pagination","ui-pill","ui-polyfill-loader","ui-popover","ui-portal","ui-position","ui-progress","ui-prop-types","ui-radio-input","ui-range-input","ui-rating","ui-react-utils","ui-responsive","ui-scripts","ui-select","ui-selectable","ui-simple-select","ui-spinner","ui-stylelint-config","ui-svg-images","ui-table","ui-tabs","ui-tag","ui-template-scripts","ui-test-locator","ui-test-queries","ui-test-sandbox","ui-test-utils","ui-testable","ui-text","ui-text-area","ui-text-input","ui-themes","ui-time-select","ui-toggle-details","ui-token-scripts","ui-tooltip","ui-tray","ui-tree-browser","ui-truncate-text","ui-upgrade-scripts","ui-utils","ui-view","ui-webpack-config","uid_README"],"sections":[],"level":0,"title":"packages"},"utilities":{"docs":["debounce","alpha","contrast","conversions","darken","isValid","lighten","decorator","Browser","camelize","capitalizeFirstLetter","cloneArray","deepEqual","isEdge","isIE11","mergeDeep","ms","parseUnit","pascalize","px","shallowEqual","within","uid"],"sections":["utilities/themes","utilities/a11y","utilities/DOM","utilities/form","utilities/i18n","utilities/position","utilities/PropTypes","utilities/react","utilities/layout"],"level":0,"title":"utilities"},"utilities/themes":{"docs":["withStyle","ThemeablePropTypes","bidirectionalPolyfill","getShorthandPropValue","makeThemeVars","mirrorShorthand"],"sections":[],"level":1,"title":"themes"},"utilities/a11y":{"docs":["FocusRegion","FocusRegionManager","KeyboardFocusRegion","ScreenReaderFocusRegion","hasVisibleChildren","scopeTab","findFocusable","findTabbable"],"sections":[],"level":1,"title":"a11y"},"utilities/DOM":{"docs":["addEventListener","addPositionChangeListener","addResizeListener","canUseDOM","contains","containsActiveElement","elementMatches","findDOMNode","getActiveElement","getBoundingClientRect","getClassList","getComputedStyle","getFontSize","getOffsetParents","getScrollParents","handleMouseOverOut","isActiveElement","isVisible","matchMedia","ownerDocument","ownerWindow","requestAnimationFrame","supportsObjectFit","transformSelection"],"sections":[],"level":1,"title":"DOM"},"utilities/form":{"docs":["FormPropTypes"],"sections":[],"level":1,"title":"form"},"utilities/i18n":{"docs":["DateTime","I18nPropTypes","Locale","bidirectional","getTextDirection"],"sections":[],"level":1,"title":"i18n"},"utilities/position":{"docs":["PositionPropTypes","calculateElementPosition","mirrorPlacement"],"sections":[],"level":1,"title":"position"},"utilities/PropTypes":{"docs":["Children","childrenOrValue","controllable","cursor","element","makeRequirable","xor"],"sections":[],"level":1,"title":"PropTypes"},"utilities/react":{"docs":["ComponentIdentifier","callRenderProp","deprecated","ensureSingleChild","experimental","getDisplayName","getElementType","getInteraction","hack","matchComponentTypes","omitProps","pickProps","safeCloneElement","windowMessageListener","createChainedFunction"],"sections":[],"level":1,"title":"react"},"utilities/layout":{"docs":["ResponsivePropTypes","addElementQueryMatchListener","addMediaQueryMatchListener","jsonToMediaQuery","parseQuery"],"sections":[],"level":1,"title":"layout"},"components":{"docs":["Alert","Avatar","Badge","Billboard","Breadcrumb","Button","CloseButton","CondensedButton","IconButton","ToggleButton","Byline","Calendar","Checkbox","CheckboxGroup","CodeEditor","DateInput","DrawerLayout","Editable","InPlaceEdit","FileDrop","Flex","FormField","FormFieldGroup","Grid","Heading","Img","Link","InlineList","List","Menu","Metric","MetricGroup","Modal","AppNav","Navigation","NumberInput","Options","Overlay","Pages","Pagination","Pill","Popover","ProgressBar","ProgressCircle","RadioInput","RadioInputGroup","RangeInput","Rating","Responsive","Select","Selectable","SimpleSelect","Spinner","Table","Tabs","Tag","Text","TextArea","TextInput","TimeSelect","ToggleDetails","ToggleGroup","Tooltip","Tray","TreeBrowser","TruncateText","ContextView","View"],"sections":["components/utilities"],"level":0,"title":"components"},"components/utilities":{"docs":["EmotionThemeProvider","AccessibleContent","PresentationContent","ScreenReaderContent","BaseButton","Dialog","Expandable","Focusable","ApplyLocale","ApplyTextDirection","Transition","Mask","Portal","Position","InlineSVG","SVGIcon"],"sections":[],"level":1,"title":"utilities"}},"parents":{"FormField":{"children":["FormFieldLabel","FormFieldLayout","FormFieldMessage","FormFieldMessages"]},"Grid":{"children":["Grid.Col","Grid.Row"]},"Rating":{"children":["Rating.Icon"]},"Breadcrumb":{"children":["Breadcrumb.Link"]},"Calendar":{"children":["Calendar.Day"]},"Checkbox":{"children":["CheckboxFacade","ToggleFacade"]},"DrawerLayout":{"children":["DrawerLayout.Content","DrawerLayout.Tray"]},"Flex":{"children":["Flex.Item"]},"InlineList":{"children":["InlineList.Item"]},"List":{"children":["List.Item"]},"Menu":{"children":["Menu.Item","Menu.Group","Menu.Separator"]},"Modal":{"children":["Modal.Body","Modal.Footer","Modal.Header"]},"AppNav":{"children":["AppNav.Item"]},"Navigation":{"children":["Navigation.Item"]},"Options":{"children":["Options.Item","Options.Separator"]},"Pages":{"children":["Pages.Page"]},"Pagination":{"children":["Pagination.Navigation","Pagination.Page"]},"Select":{"children":["Select.Group","Select.Option"]},"SimpleSelect":{"children":["SimpleSelect.Group","SimpleSelect.Option"]},"Table":{"children":["Table.Body","Table.Cell","Table.ColHeader","Table.Head","Table.Row","Table.RowHeader"]},"Tabs":{"children":["Tabs.Panel","Tabs.Tab"]},"TreeBrowser":{"children":["TreeBrowser.Button","TreeBrowser.Collection","TreeBrowser.Node"]}},"docs":{"CHANGELOG":{"description":"# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n\n# [8.2.0](https://github.com/instructure/instructure-ui/compare/v8.1.0...v8.2.0) (2021-04-22)\n\n### Bug Fixes\n\n- **ui-link:** fix link not displaying outline on focus ([8f36891](https://github.com/instructure/instructure-ui/commit/8f36891996d1fc623cb284e7b3c6f787197fd7f9))\n- **ui-menu:** fix Menu keyboard navigation on submenus ([cbdabb3](https://github.com/instructure/instructure-ui/commit/cbdabb39fc58513f8312137273207fe1f7edffcb))\n- **ui-tree-browser:** fix large thumbnail style; PR fixes ([4d7eee1](https://github.com/instructure/instructure-ui/commit/4d7eee1a3fd882c65846ed827d759e41da8eb79f))\n\n### Features\n\n- **ui-tree-browser:** Add new getCollectionProps ([7926b3d](https://github.com/instructure/instructure-ui/commit/7926b3db42781540959bb6cbb07002b8c8cdd615))\n- **ui-tree-browser:** allow to render custom content in TreeBrowser nodes ([af9eb19](https://github.com/instructure/instructure-ui/commit/af9eb19e57f9f62244d5f8ab7bd9955d4b32120d))\n- **ui-tree-browser:** remove dash at root icon ([e671214](https://github.com/instructure/instructure-ui/commit/e67121436f44c64f61fa95f222a2aefc41568f34))\n\n# [8.1.0](https://github.com/instructure/instructure-ui/compare/v8.0.0...v8.1.0) (2021-04-15)\n\n### Bug Fixes\n\n- **emotion:** fix ui-babel-preset dependency ([fb1443e](https://github.com/instructure/instructure-ui/commit/fb1443ebb581663160df868f2d44c6927d8aa1ab))\n- **template-app,ui-template-scripts:** fix template app generation error ([f3a5a7c](https://github.com/instructure/instructure-ui/commit/f3a5a7c07ab32225e9ed3e6f596b093e74563620))\n- **ui:** add SimpleSelect export to @instructure/ui ([e6efc4d](https://github.com/instructure/instructure-ui/commit/e6efc4d5fa3297ef8d54abb27d078cbf8d2bce72))\n- **ui-navigation:** fix AppNav crashing with a single Item ([3023464](https://github.com/instructure/instructure-ui/commit/3023464c1f272c9bbf44a3a8f5d03b595e1d3643))\n- **ui-select:** fix null pointer exception in Select ([04ae3a4](https://github.com/instructure/instructure-ui/commit/04ae3a42f6e35968303ea4ba23137443838dc611))\n- **ui-tree-browser:** fix vertical line extending into collection icon ([eb7eec7](https://github.com/instructure/instructure-ui/commit/eb7eec7e5fa3f2c80001e2f56e7b3ec3e94c9154))\n- **ui-tree-browser:** list root items too when `showRootCollection` is `false` ([d6b5b44](https://github.com/instructure/instructure-ui/commit/d6b5b445dbdf0c806a13225d4f53585748712dda))\n\n### Features\n\n- **ui-simple-select:** add number value option to simple-select ([3c422d8](https://github.com/instructure/instructure-ui/commit/3c422d86754f582d08ed344e7f3f5a32a19710e7))\n\n# [8.0.0](https://github.com/instructure/instructure-ui/compare/v7.5.0...v8.0.0) (2021-03-29)\n\nThe main feature for version 8 is the switch of the theming engine, we replaced the in-house `themeable` theming with the popular [emotion.js](https://emotion.sh/).\n\n### Bug Fixes\n\n- **ui-checkbox:** add spacing between single checkbox and messages ([e67bd98](https://github.com/instructure/instructure-ui/commit/e67bd9873f082656cef038295647c21b9fa8f46e))\n- **ui-popover:** tooltips dont dismiss when hovered over (a11y) ([7b166c1](https://github.com/instructure/instructure-ui/commit/7b166c1a0c6701bf95a2f85059bdfecf514271f2))\n- add all components to **docs** dependencies ([7fb5f51](https://github.com/instructure/instructure-ui/commit/7fb5f5177d8e35373335e0024fa790286e18c1d7))\n\n### Code Refactoring\n\n- **Migrated the package and it's component(s) from using `ui-themeable` to using the new theming solution based on [emotion.js](https://emotion.sh/).**\n- **emotion,ui-themeable:** move ThemeablePropValues and ThemeablePropTypes util to emotion pack ([2d0ac1d](https://github.com/instructure/instructure-ui/commit/2d0ac1d3d4ae60802f639bee2545f9a8a32446b6))\n- **emotion,ui-themeable,ui-view:** move `getShorthandPropValue` from `ui-themeable` to `emotion` ([91fd876](https://github.com/instructure/instructure-ui/commit/91fd876068b535e159367d46115782156e6a159a))\n- **emotion,ui-themeable,ui-view:** move `makeThemeVars` util from `ui-themeable` to `emotion` ([f2291ba](https://github.com/instructure/instructure-ui/commit/f2291ba19ae680fe5202e2ea9508157950f14a38))\n- **emotion,ui-themeable,ui-view:** move `mirrorShorthand` utils to `emotion` ([c779407](https://github.com/instructure/instructure-ui/commit/c77940764c1ee2b99d6fe7a55a8fd6aaf2b07197))\n- **ui-avatar:** removed deprecated `inline` prop ([410d6ed](https://github.com/instructure/instructure-ui/commit/410d6ed0962b91b99883d5b2ed6ada5d190513c5))\n- **ui-avatar:** removed deprecated `variant` prop ([ec75e0f](https://github.com/instructure/instructure-ui/commit/ec75e0f5bcdbf505d87550a746fe4619fda0c5cf))\n- **ui-babel-preset,ui-webpack-config:** remove unnecessary babel and postcss plugins ([457bd82](https://github.com/instructure/instructure-ui/commit/457bd828fba65f9d60bc07afd4803b3499bf31b4))\n- **ui-breadcrumb:** remove deprecated `icon` prop ([ebde230](https://github.com/instructure/instructure-ui/commit/ebde2302f01501a4d44f8f166ec44713e7aa8d8d))\n- **ui-buttons:** remove deprecated `DeprecatedButton` component ([c0e2d03](https://github.com/instructure/instructure-ui/commit/c0e2d031301fddf68e816bf5587d6357b15b7035))\n- **ui-buttons:** remove deprecated `icon` prop ([e024d59](https://github.com/instructure/instructure-ui/commit/e024d59d0caac7414cea2f8b957c8f2521887d37))\n- **ui-buttons:** remove deprecated `variant` prop ([755608a](https://github.com/instructure/instructure-ui/commit/755608a0cae2c01dc4028a4f36a03c605a17c8f4))\n- **ui-buttons:** remove deprecated CloseButton props ([cf8657d](https://github.com/instructure/instructure-ui/commit/cf8657d42f4c46f31f1292d468221eaff36327ca))\n- **ui-buttons:** removed deprecated `buttonRef` prop ([92330fd](https://github.com/instructure/instructure-ui/commit/92330fdef044d0f401ff8145aed4d5964db69619))\n- **ui-buttons,ui-toggle-details:** remove deprecated `fluidWidth` prop ([0ced14e](https://github.com/instructure/instructure-ui/commit/0ced14e08e15d6922dc6b3aac755ed2686ad7a70))\n- **ui-byline:** remove deprecated `Media` component ([8ba146c](https://github.com/instructure/instructure-ui/commit/8ba146cc6f0169a56d2c12a37e1900153cdfcc55))\n- **ui-date-input:** remove deprecated `label` prop ([55a0066](https://github.com/instructure/instructure-ui/commit/55a00661560be1a8d5d606bc2e5fc2e14165b7ff))\n- **ui-file-drop:** removed deprecated `allowMultiple` prop ([e67dee7](https://github.com/instructure/instructure-ui/commit/e67dee7f064a5494cd601596baded0e9bc61c3d7))\n- **ui-file-drop:** removed deprecated `allowRepeatFileSelection` prop ([90b5f19](https://github.com/instructure/instructure-ui/commit/90b5f1912f67ae1d23d2ad0a7e76b99481c64910))\n- **ui-file-drop:** removed deprecated `enablePreview` prop ([8a18fcd](https://github.com/instructure/instructure-ui/commit/8a18fcd91adf55291b8928180ee5efbb3bf8dd70))\n- **ui-file-drop:** removed deprecated `label` prop ([5a0d088](https://github.com/instructure/instructure-ui/commit/5a0d088c7e33256c9ac27dc276d68f7927ecbbd4))\n- **ui-flex:** removed deprecated `grow` prop ([01cf295](https://github.com/instructure/instructure-ui/commit/01cf2952b294bf247e45eb2f328473e416921751))\n- **ui-flex:** removed deprecated `inline` prop ([92834f0](https://github.com/instructure/instructure-ui/commit/92834f0d9ffc3ba60f4e14a4f3427b10754d1e61))\n- **ui-flex:** removed deprecated `shrink` prop ([50aab33](https://github.com/instructure/instructure-ui/commit/50aab33245bc0a0340e6dbdd7c263a179e9e92ab))\n- **ui-flex:** removed deprecated `visualDebug` prop ([40a0c92](https://github.com/instructure/instructure-ui/commit/40a0c9223b929c7a9c2a35fffbb2da8901dd5ecf))\n- **ui-flex:** removed deprecated `wrapItems` prop ([57ef6ab](https://github.com/instructure/instructure-ui/commit/57ef6abb881454f8096bb6d8cdf98078c01fbe0d))\n- **ui-focusable:** removed deprecated `FocusableView` component ([cb1eff4](https://github.com/instructure/instructure-ui/commit/cb1eff4d3f6b582df76a20de39d7dbc6d068b73e))\n- **ui-heading:** remove deprecated themeAdapter from Heading ([bb1f68c](https://github.com/instructure/instructure-ui/commit/bb1f68c2c8d7d795e6398e9eb93b7063a3b59e69))\n- **ui-heading:** removed deprecated `ellipsis` prop ([4eacdef](https://github.com/instructure/instructure-ui/commit/4eacdefe876bb482a2be7cbd7436017ac7b20e12))\n- **ui-img:** removed deprecated `blur` prop, use `withBlur` instead. ([3db9952](https://github.com/instructure/instructure-ui/commit/3db99525baff0bdfd6470191aa2937613cc874c0))\n- **ui-img:** removed deprecated `grayscale` prop ([5087021](https://github.com/instructure/instructure-ui/commit/50870218749c55ec5c85592d9fe3203d4fe324e5))\n- **ui-img:** removed deprecated `inline` prop ([43868ed](https://github.com/instructure/instructure-ui/commit/43868ed4748e26ff0017c003bfaeb615b09a4b21))\n- **ui-link:** removed deprecated `linkRef` prop ([f09d9e1](https://github.com/instructure/instructure-ui/commit/f09d9e1b6dd1fa0297aaed255250b1cc9d943ebf))\n- **ui-link:** removed deprecated `variant` prop ([624d396](https://github.com/instructure/instructure-ui/commit/624d396923afcad4e2eab86cb7e8484c3c7d80c9))\n- **ui-list:** deprecate `variant` inline styles ([376abd7](https://github.com/instructure/instructure-ui/commit/376abd7d05d61ed075414f9aab7880f495c6c1ad))\n- **ui-metric,ui:** removed deprecated `MetricList` component ([d795851](https://github.com/instructure/instructure-ui/commit/d795851c05a87ae916649dc18c11bd042e31405c))\n- **ui-metric,ui:** removed deprecated `MetricListItem` component ([b8e52b8](https://github.com/instructure/instructure-ui/commit/b8e52b897368733e354a02b1da097070fda3faba))\n- **ui-number-input:** removed deprecated `inline` prop ([a985528](https://github.com/instructure/instructure-ui/commit/a9855282e851be8c6d4581610987230a11153386))\n- **ui-number-input:** removed deprecated `label` prop ([15060d7](https://github.com/instructure/instructure-ui/commit/15060d7781bc10862d3950e6af55a4bbafdc1d0e))\n- **ui-number-input:** removed deprecated `required` prop ([987b36f](https://github.com/instructure/instructure-ui/commit/987b36ff67097cfae6491efa02cf7dea0bdeff30))\n- **ui-pill,ui-responsive:** remove deprecated props from Pill ([125f14c](https://github.com/instructure/instructure-ui/commit/125f14c45f9035a86a3ed2a459ad692c5ecaa7b4))\n- **ui-popover:** removed deprecated `alignArrow` prop ([3799228](https://github.com/instructure/instructure-ui/commit/3799228e2a80284422e96bc5053b217055a6b324))\n- **ui-popover:** removed deprecated `defaultShow` prop ([ecfb67f](https://github.com/instructure/instructure-ui/commit/ecfb67f1ff45893295d0fc4a916fecc0751b6b30))\n- **ui-popover:** removed deprecated `label` prop ([efb32a7](https://github.com/instructure/instructure-ui/commit/efb32a7e97f3b0a3ada4528ed408d405d5c89f39))\n- **ui-popover:** removed deprecated `onDismiss` prop ([5a39dd6](https://github.com/instructure/instructure-ui/commit/5a39dd6c54d3e26d9a06e1d875f12a29a8d08e7f))\n- **ui-popover:** removed deprecated `onShow` prop ([43007c0](https://github.com/instructure/instructure-ui/commit/43007c028f4d790297d78dd95b151177c0d28e73))\n- **ui-popover:** removed deprecated `onToggle` prop ([bdfcda8](https://github.com/instructure/instructure-ui/commit/bdfcda8963a720335ee51bdf14a7a2f8ceb86de2))\n- **ui-popover:** removed deprecated `PopoverContent` component ([5e5cf71](https://github.com/instructure/instructure-ui/commit/5e5cf7153eea46664df346089d39de10621caa9f))\n- **ui-popover:** removed deprecated `PopoverTrigger` component ([9768ade](https://github.com/instructure/instructure-ui/commit/9768adef486c2dfcbe1bbded0ac17ec6698adfaa))\n- **ui-popover:** removed deprecated `show` prop ([6000c93](https://github.com/instructure/instructure-ui/commit/6000c9366fd2d6820aa366f3caaea59edd032f3f))\n- **ui-popover:** removed deprecated `trackPosition` prop ([e60e89b](https://github.com/instructure/instructure-ui/commit/e60e89b60d6f6bb37612cfc7935df1a3b8e00e4c))\n- **ui-popover:** removed deprecated `variant` prop ([1d16dff](https://github.com/instructure/instructure-ui/commit/1d16dff819b1f15b8f684be8fb317da70c31812b))\n- **ui-position:** deprecate `trackPosition` and `over` properties ([b636040](https://github.com/instructure/instructure-ui/commit/b6360407c5d7ae648e74c380c6e90714b80fb69e))\n- **ui-position:** deprecate `Position.Target` and `Position.Content` components ([9c731c8](https://github.com/instructure/instructure-ui/commit/9c731c8a625085edb9f9d94ac04ddb371499c960))\n- **ui-progress,ui:** delete deprecated `Progress` component ([69a84d0](https://github.com/instructure/instructure-ui/commit/69a84d08f6d1347c3bd5fb4259879af3ed2e5d27))\n- **ui-spinner:** removed deprecated `title` prop ([44dc5b1](https://github.com/instructure/instructure-ui/commit/44dc5b177bf31cea42817802c61500a3e0aed74e))\n- **ui-tabs:** remove deprecated `selected` and `disabled` props ([3472cf2](https://github.com/instructure/instructure-ui/commit/3472cf28173fb58724ccf4ec2ca2fa82d9839989))\n- **ui-tabs:** remove deprecated `selectedIndex` prop ([1557b96](https://github.com/instructure/instructure-ui/commit/1557b967144af197110795548b17a7a749495eaa))\n- **ui-tabs:** remove deprecated `size` prop ([fecbf13](https://github.com/instructure/instructure-ui/commit/fecbf13668ca1b4c261b9f719727207732480c45))\n- **ui-tabs:** remove deprecated `title` prop ([3e44810](https://github.com/instructure/instructure-ui/commit/3e448101e432b72eddcc766ba29c1bb9f6cf54b7))\n- **ui-tabs:** remove deprecated props `onChange` and `focus` ([a3c640f](https://github.com/instructure/instructure-ui/commit/a3c640f5a952a21a0035471e9a7b03cae24fd44b))\n- **ui-text:** remove color type `error` ([6d44017](https://github.com/instructure/instructure-ui/commit/6d44017dc3e0daa2d3c7e5135326aa06bc079f2e))\n- **ui-text-input:** removed deprecated `icon` prop ([694962c](https://github.com/instructure/instructure-ui/commit/694962c08d1d77a81a0f270116a38c2200ed07e9))\n- **ui-text-input:** removed deprecated `inline` prop ([7a51241](https://github.com/instructure/instructure-ui/commit/7a5124143f28e9470f52fb60b4bd660952e64cdd))\n- **ui-text-input:** removed deprecated `label` prop ([dc01d90](https://github.com/instructure/instructure-ui/commit/dc01d90d1857d9e61270c7996959420531bc99fe))\n- **ui-text-input:** removed deprecated `required` prop ([20cd5dd](https://github.com/instructure/instructure-ui/commit/20cd5dd8eb28243b2c8151420af3086eb7b1a35d))\n- **ui-time-select:** removed deprecated `label` prop ([fce697f](https://github.com/instructure/instructure-ui/commit/fce697f583e0bf7c8d1d3eaaf4e2b01f22d5301e))\n- **ui-tooltip:** `tip` and `variant` properties deprecated ([cd17b6b](https://github.com/instructure/instructure-ui/commit/cd17b6b5873a96040a9630c09177f47c4601b56e))\n- **ui-view:** remove deprecated themeAdapter ([bbfb295](https://github.com/instructure/instructure-ui/commit/bbfb2950223a718a31eac4eb78bd95680e0981a5))\n- **ui-view:** removed deprecated `focused` prop ([3980814](https://github.com/instructure/instructure-ui/commit/3980814a1c2780249dd41a373721c22298895a30))\n- **ui-view:** removed deprecated `visualDebug` prop ([6d8e0bb](https://github.com/instructure/instructure-ui/commit/6d8e0bb55ef5a6ffa1d30b65879bcdc2ead99569))\n\n### Features\n\n- **instui-cli,ui-upgrade-scripts:** add codemod to rename `theme` prop to `themeOverride` ([e0607dd](https://github.com/instructure/instructure-ui/commit/e0607dd0a30c086a538817bde19e725ccc5dd085))\n- **instui-config:** add codemod for themeable util imports ([89a95f8](https://github.com/instructure/instructure-ui/commit/89a95f86c129b266a0090b983587933c285a0960))\n- **ui-color-utils:** add utility mehtod to convert a color string to a hexadecimal color string in the #AABBCC format([20a3a69](https://github.com/instructure/instructure-ui/commit/20a3a6990469a427b4115090faccad67f9216830))\n- **ui-editable,ui-focusable:** delete depracated FocusableView ([fac2670](https://github.com/instructure/instructure-ui/commit/fac2670fdd165d8342209bac128fb6e02f1fd061))\n- **ui-i18n:** remove decimal.js, its .mjs export is causing issues with Jest ([2e00b30](https://github.com/instructure/instructure-ui/commit/2e00b308cea08585b1afdc5861a5f9142a12f2af))\n- **ui-icons:** add new icons and update old ones ([03e6027](https://github.com/instructure/instructure-ui/commit/03e60278022d1420feda12586f8260cf8f322b07))\n- **ui-icons-build,ui-icons:** generate icons from svg files ([7bf065a](https://github.com/instructure/instructure-ui/commit/7bf065a036227956c9008c1992834c48fafa25e3))\n- **ui-test-sandbox,ui:** delete ui-themeable package and usages ([60e4080](https://github.com/instructure/instructure-ui/commit/60e4080a68dd76b0d6462fa1b63e6a4f59c38f7d))\n\n### Performance Improvements\n\n- **ui-docs-client:** speed up iconography page ([d16a046](https://github.com/instructure/instructure-ui/commit/d16a046b24540fcd9dd9f642af31145671c9dda7))\n\n### BREAKING CHANGES\n\n- **ui-checkbox:** VISUAL CHANGE: Since there is more space between the checkbox and the messages, it can potentially break layouts (vertically more pixels).\n- It is no longer a valid strategy to surround `jsx` code with `try..catch` because writing something in the console does not cause errors to be thrown. Use `spy(console, 'error')` instead. Also, when accessing `Component.displayName`, use `Component.displayName || Component.name` with the name as a fallback instead.\n- **ui-babel-preset,ui-webpack-config:** Removed the following packages because they were supporting `ui-themable`, and are no longer needed when using `emotion` theming: `babel-plugin-themeable-styles`, `postcss-themeable-styles`, `ui-postcss-config`.\n- **ui-test-sandbox,ui:** The whole `ui-themeable` package was deleted. It is superseeded by the `emotion` package.\n- **ui-tabs:** `SecondarySelectedColor` style was removed, now just `secondaryColor` determines the color of the secondary tab. VISUAL CHANGE: `secondaryColor` changed to `textDarkest`, in the Canvas theme to `ic-brand-font-color-dark`\n- **emotion,ui-themeable,ui-view:** Moved `mirrorShorthand`, `mirrorShorthandEdges`, `mirrorShorthandCorners` utils to from\n  `ui-themeable` to `emotion` package.\n- **emotion,ui-themeable,ui-view:** Moved `getShorthandPropValue` from `ui-themeable` to `emotion` package.\n- **emotion,ui-themeable,ui-view:** Moved `makeThemeVars` util from `ui-themeable` to `emotion` package.\n- **emotion,ui-themeable:** Moved `ThemeablePropValues` and `ThemeablePropTypes` utils from `ui-themeable`to `emotion` package.\n- **ui-heading:** The theme variable 'fontFamily' has been split into the following values, override them\n  individually: `h1FontFamily`, `h2FontFamily`, `h3FontFamily`, `h4FontFamily`, `h5FontFamily`.\n- **ui-view:** Removed themeAdapter for deprecated theme variables: 'borderColorDefault' is now\n  `borderColorPrimary`, 'borderColorInverse' is now `borderColorTransparent`, 'colorInverse' is now\n  `colorPrimaryInverse`, 'background' is now `backgroundPrimary`, 'backgroundLight' is now\n  `backgroundSecondary`, 'backgroundInverse' is now `backgroundPrimaryInverse`.\n- **ui-view:** Removed deprecated `visualDebug` prop, use `withVisualDebug` instead.\n- **ui-view:** Removed deprecated `focused` prop, use `withFocusOutline` instead.\n- **ui-img:** Removed deprecated `blur` prop, use `withBlur` instead.\n- **ui-img:** Removed deprecated `grayscale` prop, use `withGrayscale` instead.\n- **ui-img:** Removed deprecated `inline` prop, use `display` ('inline-block' or ‘block') instead.\n- **ui-heading:** Removed deprecated `ellipsis` prop, use `TruncateText` component child instead.\n- **ui-focusable:** Removed deprecated `FocusableView` component, use `View` instead.\n- **ui-avatar:** Removed deprecated `variant` prop, use `shape` instead.\n- **ui-avatar:** Removed deprecated `inline` prop, use `display` ('inline-block' or 'block') instead.\n- **ui-number-input:** Removed deprecated `inline` prop, use `display` ('inline-block' or 'block') instead.\n- **ui-number-input:** Removed deprecated `required` prop, use `isRequired` instead.\n- **ui-number-input:** Removed deprecated `label` prop, use `renderLabel` instead.\n- **ui-time-select:** Removed deprecated `label` prop, use `renderLabel` instead.\n- **ui-text-input:** Removed deprecated `icon` prop, use `renderAfterInput` instead.\n- **ui-text-input:** Removed deprecated `inline` prop, use `display` ('inline-block' or ‘block') instead.\n- **ui-text-input:** Removed deprecated `required` prop, use `isRequired` instead.\n- **ui-text-input:** Removed deprecated `label` prop, use `renderLabel` instead.\n- **ui-spinner:** Removed deprecated `title` prop, use `renderTitle` instead.\n- **ui-popover:** Removed deprecated `onDismiss` prop, use `onHideContent` instead.\n- **ui-popover:** Removed deprecated `alignArrow` prop, use `shouldAlignArrow` instead.\n- **ui-popover:** Removed deprecated `trackPosition` prop, use `shouldTrackPosition` instead.\n- **ui-popover:** Removed deprecated `label` prop, use `screenReaderLabel` instead.\n- **ui-popover:** Removed deprecated `variant` prop, use `color` ('primary' or 'primary-inverse') instead.\n- **ui-popover:** Removed deprecated `defaultShow` prop, use `defaultIsShowingContent` instead.\n- **ui-popover:** Removed deprecated `show` prop, use `isShowingContent` instead.\n- **ui-popover:** Removed deprecated `onToggle` prop, use `onShowContent` and `onHideContent` instead.\n- **ui-popover:** Removed deprecated `onShow` prop, use `onPositioned` instead.\n- **ui-popover:** Removed deprecated `PopoverContent` component, use Popover's `children` instead.\n- **ui-popover:** Removed deprecated `PopoverTrigger` component, use Popover's `renderTrigger` prop instead.\n- **ui-metric,ui:** Removed deprecated `MetricList` component, use `MetricGroup` instead.\n- **ui-metric,ui:** Removed deprecated `MetricListItem` component, use `Metric` instead.\n- **ui-link:** Removed deprecated `variant` prop, use `color` ('link' or ’link-inverse') instead.\n- **ui-link:** Removed deprecated `linkRef` prop, use `elementRef` instead.\n- **ui-flex:** Removed deprecated `shrink` prop, use `shouldShrink` instead.\n- **ui-flex:** Removed deprecated `grow` prop, use `shouldGrow` instead.\n- **ui-flex:** Removed deprecated `visualDebug` prop, use `withVisualDebug` instead.\n- **ui-flex:** Removed deprecated `wrapItems` prop, use `wrap` ('wrap', 'no-wrap' or 'wrap-reverse') instead.\n- **ui-flex:** Removed deprecated `inline` prop, use `display` (‘flex’ or ‘inline-flex’) instead.\n- **ui-file-drop:** Removed deprecated `allowMultiple` prop, use `shouldAllowMultiple` instead.\n- **ui-file-drop:** Removed deprecated `allowRepeatFileSelection` prop, use `shouldAllowRepeats` instead.\n- **ui-file-drop:** Removed deprecated `enablePreview` prop, use `shouldEnablePreview` instead.\n- **ui-file-drop:** Removed deprecated `label` prop, use `renderLabel` instead.\n- **ui-byline:** Removed deprecated `Media` component, use `Byline` instead.\n- **ui-breadcrumb:** Removed deprecated `icon` prop, use `renderIcon` instead.\n- **ui-progress,ui:** Deleted deprecated Progress component, use ProgressBar or ProgressCircle instead.\n- **ui-date-input:** Removed deprecated `label` prop: use `renderLabel` prop instead.\n- **ui-checkbox:** Removed deprecated theme variables: `baseSizeSmall`, `baseSizeMedium`, `baseSizeLarge`. Use\n  `toggleSize` instead.\n- **ui-number-input:** Removed deprecated props: label, required, inline\n- **ui-tabs:** Removed deprecated `onChange` prop: use `onRequestTabChange` instead. Removed deprecated `focus`\n  prop: use `shouldFocusOnRender` instead.\n- **ui-tabs:** Removed deprecated `selectedIndex` prop.\n- **ui-tabs:** Removed deprecated `size` prop, use `maxWidth` instead.\n- **ui-tabs:** Removed deprecated `title` prop: use `renderTitle` instead.\n- **ui-tabs:** [Tabs.Tab and Tabs.Panel] Removed deprecated `selected` prop: use `isSelected` instead. Removed\n  deprecated `disabled` prop: use `isDisabled` instead.\n- **ui-buttons:** Removed deprecated CloseButton prop `children`, use `screenReaderLabel` instead. Removed deprecated\n  CloseButton prop `variant`, use `color` instead.\n- **ui-buttons:** Remove deprecated `DeprecatedButton` component.\n- **ui-buttons:** Removed deprecated `variant` prop. The default value for `color` prop is now `secondary`.\n- **ui-buttons:** Removed deprecated `icon` prop, use `renderIcon` instead.\n- **ui-buttons,ui-toggle-details:** Removed deprecated `fluidWidth` prop, set `display=\"block\"` and `textAlign=\"start\"` instead.\n- **ui-buttons:** removed deprecared `buttonRef` prop from `Button` and `CloseButton`, use `elementRef` instead.\n- **ui-position:** `trackPosition` prop is deprecated, use `shouldTrackPosition` prop instead. `over` prop is\n  depreacted, use `shouldPositionOverTarget` prop instead.\n- **ui-position:** `Position.Target` is deprecated, use Position's `renderTarget` prop instead. `Position.Content` is deprecated, use Position's `children` instead.\n- **ui-position,ui-view:** The \"box-sizing\" and \"z-index\" css properties are now added as inline css on the Content element,\n  might break other rules added in class.\n- **ui-table:** Removed support for deprecated \"mode\" property, since it was deprecated in v7.\n- **ui-list:** Removed `variant` property: use InlineList component for inline lists and isUnstyled boolean prop for unstyled lists. Removed inline delimiter values (pipe, slash and arrow) from `delimiter` property.\n- **ui-pill,ui-responsive:** Removed `text` property: use `children` instead. `Children` is now required. Removed `variant` property: use color instead. Within the new color prop `default` is now `primary` (gray), `primary` has updated to `info` (blue) and `message` is now `alert`.\n- **ui-text:** Removed `error` type for color, use `danger` instead\n- **ui-tooltip:** `tip` property is deprecated (use `renderTip` instead). | `renderTip` property is now required. | `variant` property is deprecated (use `color` instead)\n- **ui-alerts:** Remove deprecated `closeButtonLabel` prop\n- Removed `Decimal` wrapper for decimal.js because it was causing compilation errors with projects using Jest. If you need its functionality we recommend to copy-paste the needed methods from the source code.\n\n# [7.5.0](https://github.com/instructure/instructure-ui/compare/v7.4.4...v7.5.0) (2021-03-22)\n\n### Features\n\n- **ui-tree-browser:** allow tree browser to render before, after nodes ([ca1dfaa](https://github.com/instructure/instructure-ui/commit/ca1dfaa))\n\n## [7.4.4](https://github.com/instructure/instructure-ui/compare/v7.4.3...v7.4.4) (2021-03-12)\n\n### Bug Fixes\n\n- Add CommonJS build to @instructure/ui-themes ([7e99643](https://github.com/instructure/instructure-ui/commit/7e99643))\n\n## [7.4.3](https://github.com/instructure/instructure-ui/compare/v7.4.1...v7.4.3) (2021-03-11)\n\n### Bug Fixes\n\n- fix release script path issue ([ea56688](https://github.com/instructure/instructure-ui/commit/ea5668850fcfb1e82486d8072fef2120222a3d70))\n- fix tagging ([a3e4fbc](https://github.com/instructure/instructure-ui/commit/a3e4fbcd6ed6db7372c2dafd61053f7ac88c1446))\n- **ui-scripts:** add comment on annotated tags ([ac8d075](https://github.com/instructure/instructure-ui/commit/ac8d075206567368290ba8b05d9f5676ac48c647))\n- **ui-scripts:** fix bump tagging and rename prerelease builds from nightly to snapshot ([3473ed5](https://github.com/instructure/instructure-ui/commit/3473ed5a2aa659c92b7a5243e79e619eaab021c7))\n- **ui-scripts:** fix typo ([96d704a](https://github.com/instructure/instructure-ui/commit/96d704aa5aab1ee4dddf279b4a01b0e6c3d9e424))\n\n## [7.4.2](https://github.com/instructure/instructure-ui/compare/v7.4.1...v7.4.2) (2021-03-11)\n\n### Bug Fixes\n\n- fix release script path issue ([ea56688](https://github.com/instructure/instructure-ui/commit/ea56688))\n- fix tagging ([a3e4fbc](https://github.com/instructure/instructure-ui/commit/a3e4fbc))\n- **ui-scripts:** add comment on annotated tags ([ac8d075](https://github.com/instructure/instructure-ui/commit/ac8d075))\n- **ui-scripts:** fix bump tagging and rename prerelease builds from nightly to snapshot ([3473ed5](https://github.com/instructure/instructure-ui/commit/3473ed5))\n- **ui-scripts:** fix typo ([96d704a](https://github.com/instructure/instructure-ui/commit/96d704a))\n\n## [7.4.1](https://github.com/instructure/instructure-ui/compare/v7.4.0...v7.4.1) (2021-03-04)\n\n### Bug Fixes\n\n- **all:** Fix package imports, now everything can be imported; fix test:all in main package.json ([2f11024](https://github.com/instructure/instructure-ui/commit/2f11024))\n- **ui-docs-plugin:** fix favicon ([1ede99f](https://github.com/instructure/instructure-ui/commit/1ede99f))\n\n# [7.4.0](https://github.com/instructure/instructure-ui/compare/v7.3.5...v7.4.0) (2021-02-01)\n\n### Bug Fixes\n\n- fix release script ([e5b7e1f](https://github.com/instructure/instructure-ui/commit/e5b7e1f))\n- fix review issues ([33ee9d8](https://github.com/instructure/instructure-ui/commit/33ee9d8))\n- fix review issues ([fe349c7](https://github.com/instructure/instructure-ui/commit/fe349c7))\n- fix typo ([9aeced9](https://github.com/instructure/instructure-ui/commit/9aeced9))\n- **ui-scripts:** fix ui-scripts config for deploy-docs-via-github ([14bae47](https://github.com/instructure/instructure-ui/commit/14bae47))\n\n### Features\n\n- **ui-icons:** add new icons and update old ones ([4b524b3](https://github.com/instructure/instructure-ui/commit/4b524b3))\n\n## [7.3.5](https://github.com/instructure/instructure-ui/compare/v7.3.2...v7.3.5) (2021-01-21)\n\n### Bug Fixes\n\n- **browserslist-config-instui:** fix broken tests caused by IE11 support removal ([965cf1b](https://github.com/instructure/instructure-ui/commit/965cf1b))\n- **browserslist-config-instui:** remove IE from supported browserslist ([09c0888](https://github.com/instructure/instructure-ui/commit/09c0888))\n- **esm:** don't mark commonjs as esm ([957c7cd](https://github.com/instructure/instructure-ui/commit/957c7cd))\n- **esm:** fix rebasing artifacts ([a791afe](https://github.com/instructure/instructure-ui/commit/a791afe))\n- **esm:** improve esm support ([b9184cc](https://github.com/instructure/instructure-ui/commit/b9184cc))\n- **esm:** remove packaging-test/ ([1bfb15f](https://github.com/instructure/instructure-ui/commit/1bfb15f))\n- **esm:** rewrite specify-commonjs-format in js ([005905e](https://github.com/instructure/instructure-ui/commit/005905e))\n- **esm:** specify \"exports\" in package manifests ([6007684](https://github.com/instructure/instructure-ui/commit/6007684))\n- **esm:** upgrade babel ([173a310](https://github.com/instructure/instructure-ui/commit/173a310))\n- **esm:** validate esm packaging ([687ea0e](https://github.com/instructure/instructure-ui/commit/687ea0e))\n- **ui-modal:** fix modal resetting contents when size is changed to/from fullscreen ([397c2b8](https://github.com/instructure/instructure-ui/commit/397c2b8))\n\n## [7.3.4](https://github.com/instructure/instructure-ui/compare/v7.3.2...v7.3.4) (2021-01-14)\n\n### Bug Fixes\n\n- **browserslist-config-instui:** fix broken tests caused by IE11 support removal ([1ecf80b](https://github.com/instructure/instructure-ui/commit/1ecf80b))\n- **browserslist-config-instui:** remove IE from supported browserslist ([09c0888](https://github.com/instructure/instructure-ui/commit/09c0888))\n- **esm:** don't mark commonjs as esm ([957c7cd](https://github.com/instructure/instructure-ui/commit/957c7cd))\n- **esm:** fix rebasing artifacts ([a791afe](https://github.com/instructure/instructure-ui/commit/a791afe))\n- **esm:** improve esm support ([b9184cc](https://github.com/instructure/instructure-ui/commit/b9184cc))\n- **esm:** remove packaging-test/ ([1bfb15f](https://github.com/instructure/instructure-ui/commit/1bfb15f))\n- **esm:** rewrite specify-commonjs-format in js ([005905e](https://github.com/instructure/instructure-ui/commit/005905e))\n- **esm:** specify \"exports\" in package manifests ([6007684](https://github.com/instructure/instructure-ui/commit/6007684))\n- **esm:** upgrade babel ([173a310](https://github.com/instructure/instructure-ui/commit/173a310))\n- **esm:** validate esm packaging ([687ea0e](https://github.com/instructure/instructure-ui/commit/687ea0e))\n\n## [7.3.3](https://github.com/instructure/instructure-ui/compare/v7.3.2...v7.3.3) (2021-01-13)\n\n### Bug Fixes\n\n- **browserslist-config-instui:** remove IE from supported browserslist ([09c0888](https://github.com/instructure/instructure-ui/commit/09c0888))\n- **esm:** don't mark commonjs as esm ([957c7cd](https://github.com/instructure/instructure-ui/commit/957c7cd))\n- **esm:** fix rebasing artifacts ([a791afe](https://github.com/instructure/instructure-ui/commit/a791afe))\n- **esm:** improve esm support ([b9184cc](https://github.com/instructure/instructure-ui/commit/b9184cc))\n- **esm:** remove packaging-test/ ([1bfb15f](https://github.com/instructure/instructure-ui/commit/1bfb15f))\n- **esm:** rewrite specify-commonjs-format in js ([005905e](https://github.com/instructure/instructure-ui/commit/005905e))\n- **esm:** specify \"exports\" in package manifests ([6007684](https://github.com/instructure/instructure-ui/commit/6007684))\n- **esm:** upgrade babel ([173a310](https://github.com/instructure/instructure-ui/commit/173a310))\n- **esm:** validate esm packaging ([687ea0e](https://github.com/instructure/instructure-ui/commit/687ea0e))\n\n## [7.3.2](https://github.com/instructure/instructure-ui/compare/v7.3.1...v7.3.2) (2020-12-10)\n\n### Bug Fixes\n\n- **ui-a11y-utils:** don't hide elements with aria-live ([440fbd5](https://github.com/instructure/instructure-ui/commit/440fbd5))\n\n## [7.3.1](https://github.com/instructure/instructure-ui/compare/v7.3.0...v7.3.1) (2020-11-30)\n\n**Note:** Version bump only for package instructure-ui\n\n# [7.3.0](https://github.com/instructure/instructure-ui/compare/v7.2.4...v7.3.0) (2020-10-26)\n\n### Features\n\n- **ui-icons:** add calculator-desmos icon to the project ([df9bb2b](https://github.com/instructure/instructure-ui/commit/df9bb2b))\n\n## [7.2.4](https://github.com/instructure/instructure-ui/compare/v7.2.0...v7.2.4) (2020-10-09)\n\n**Note:** Version bump only for package instructure-ui\n\n## [7.2.3](https://github.com/instructure/instructure-ui/compare/v7.2.0...v7.2.3) (2020-10-08)\n\n**Note:** Version bump only for package instructure-ui\n\n## [7.2.2](https://github.com/instructure/instructure-ui/compare/v7.2.0...v7.2.2) (2020-10-08)\n\n**Note:** Version bump only for package instructure-ui\n\n## [7.2.1](https://github.com/instructure/instructure-ui/compare/v7.2.0...v7.2.1) (2020-10-07)\n\n**Note:** Version bump only for package instructure-ui\n\n# [7.2.0](https://github.com/instructure/instructure-ui/compare/v7.1.4...v7.2.0) (2020-09-23)\n\n### Features\n\n- **ui-icons:** add new icons: compass, line-reader, notepad, protactor, review-screen, ruler ([ea218ca](https://github.com/instructure/instructure-ui/commit/ea218ca))\n\n## [7.1.4](https://github.com/instructure/instructure-ui/compare/v7.1.3...v7.1.4) (2020-09-09)\n\n### Bug Fixes\n\n- **ui-simple-select:** add missing event args ([ab18a17](https://github.com/instructure/instructure-ui/commit/ab18a17))\n\n## [7.1.3](https://github.com/instructure/instructure-ui/compare/v7.1.2...v7.1.3) (2020-08-10)\n\n### Bug Fixes\n\n- **ui-docs-plugin:** make sure utilities are categorized properly ([9dd6118](https://github.com/instructure/instructure-ui/commit/9dd6118))\n- **ui-options:** Don't let words overflow in Options component ([dbb6dfe](https://github.com/instructure/instructure-ui/commit/dbb6dfe))\n\n## [7.1.2](https://github.com/instructure/instructure-ui/compare/v7.1.1...v7.1.2) (2020-07-17)\n\n**Note:** Version bump only for package instructure-ui\n\n## [7.1.1](https://github.com/instructure/instructure-ui/compare/v7.1.0...v7.1.1) (2020-07-01)\n\n**Note:** Version bump only for package instructure-ui\n\n# [7.1.0](https://github.com/instructure/instructure-ui/compare/v7.0.0...v7.1.0) (2020-06-25)\n\n### Features\n\n- **ui-table:** allow valid values for ColHeader scope prop ([3133e55](https://github.com/instructure/instructure-ui/commit/3133e55))\n- **ui-tree-browser:** allow specifying a different icon for each item ([ea98f06](https://github.com/instructure/instructure-ui/commit/ea98f06))\n\n# [7.0.0](https://github.com/instructure/instructure-ui/compare/v6.26.0...v7.0.0) (2020-05-27)\n\n> **Note:** For instructions on upgrading to version 7.0.0 and more information about breaking changes, see [the upgrade guide](#v7-upgrade-guide).\n\n### Bug Fixes\n\n- **docs,ui-toggle-details:** update under the hood props + a couple README prop ([ccbb0b2](https://github.com/instructure/instructure-ui/commit/ccbb0b2))\n- **ui-code-editor:** make it work as a controlled component ([586de21](https://github.com/instructure/instructure-ui/commit/586de21))\n- **ui-docs-client:** Make sidebar search not wrap ([6015661](https://github.com/instructure/instructure-ui/commit/6015661))\n- **ui-list:** fix style collisions in the docs for list and inline list ([0d1b29a](https://github.com/instructure/instructure-ui/commit/0d1b29a))\n- **ui-popover:** reduce tooltip flickering ([461d3fe](https://github.com/instructure/instructure-ui/commit/461d3fe))\n- **ui-position:** account for offsetTop discrepency in firefox ([c46c4d1](https://github.com/instructure/instructure-ui/commit/c46c4d1))\n- **ui-range-input:** patch CSS for legacy Edge ([d7372fe](https://github.com/instructure/instructure-ui/commit/d7372fe))\n- **ui-react-utils:** ensure ComponentIdentifier renders in the docs ([044b9f3](https://github.com/instructure/instructure-ui/commit/044b9f3))\n- **ui-testable:** fixes for createSuper being undefined ([ce73f32](https://github.com/instructure/instructure-ui/commit/ce73f32))\n- **ui-theme-tokens,ui-token-scripts:** fix ui-token-scripts build ([e2e7105](https://github.com/instructure/instructure-ui/commit/e2e7105))\n\n### chore\n\n- bump minimum react version to 16.8.0 ([7a96f00](https://github.com/instructure/instructure-ui/commit/7a96f00))\n- remove references to React 15 ([4bb2426](https://github.com/instructure/instructure-ui/commit/4bb2426))\n- remove canvas-ams-theme ([91f1336](https://github.com/instructure/instructure-ui/commit/91f1336))\n- **ui-component-examples,ui-theme-tokens:** switch component examples loader to cjs ([3abd6ca](https://github.com/instructure/instructure-ui/commit/3abd6ca))\n- **ui-react-utils:** remove react-lifecycles-compat polyfill ([aa698ae](https://github.com/instructure/instructure-ui/commit/aa698ae))\n- **ui-themeable:** remove support for IE11 ([bf6f5f7](https://github.com/instructure/instructure-ui/commit/bf6f5f7))\n\n### Code Refactoring\n\n- decouple theme properties from ui-themeable ([d5a8827](https://github.com/instructure/instructure-ui/commit/d5a8827))\n\n### Features\n\n- remove 'experimental' tag along with '\\_\\_dangerouslyIgnore...' ([92bf753](https://github.com/instructure/instructure-ui/commit/92bf753))\n- **docs:** Newsletter for version 7 release ([86ed6d3](https://github.com/instructure/instructure-ui/commit/86ed6d3))\n- **ui-breadcrumb:** Add responsive breadcrumb docs ([3ab5566](https://github.com/instructure/instructure-ui/commit/3ab5566))\n- **ui-codemods:** read consumer config for prettier if it exists when applying codemods ([e38cbf9](https://github.com/instructure/instructure-ui/commit/e38cbf9))\n- **ui-docs-client:** add a ToggleBlockquote to be used internally for upgrade guides ([0e87dc9](https://github.com/instructure/instructure-ui/commit/0e87dc9))\n- **ui-docs-client:** Docs/homepage refresh ([ee4957b](https://github.com/instructure/instructure-ui/commit/ee4957b))\n- **ui-icons:** add \"sort\" icon ([3a76f0b](https://github.com/instructure/instructure-ui/commit/3a76f0b))\n- **ui-icons:** added margin to 'add' and 'x' icons ([c7632c4](https://github.com/instructure/instructure-ui/commit/c7632c4))\n- **ui-scripts:** Add flags to ui-test to opt out of linting and coverage ([d4ea03e](https://github.com/instructure/instructure-ui/commit/d4ea03e))\n- **ui-tabs:** Responsive tabs ([df2c642](https://github.com/instructure/instructure-ui/commit/df2c642))\n- **ui-text-area:** update deprecated lifecycle ([7e13cb3](https://github.com/instructure/instructure-ui/commit/7e13cb3))\n\n### BREAKING CHANGES\n\n- - Removed the `canvas-ams-theme` package. Use `canvas-theme` instead.\n\nChange-Id: I077f6b8cbbef9ee12e5904fb4c9dc4b48409acbb\nReviewed-on: https://gerrit.instructure.com/c/instructure-ui/+/237960\nTested-by: Service Cloud Jenkins <svc.cloudjenkins@instructure.com>\nReviewed-by: Steve Jensen <sejensen@instructure.com>\nQA-Review: Daniel Sasaki <dsasaki@instructure.com>\nProduct-Review: Steve Jensen <sejensen@instructure.com>\nVisual-Regression-Test: Steve Jensen <sejensen@instructure.com>\n\n- **ui-react-utils:** - removed lifecycle polyfill from ui-react-utils\n\nTEST PLAN:\n\n- No regressions to Expandable, Focusable, Transition,\n  or Playground\n- ui-react-utils should no longer export or document\n  polyfill\n\nChange-Id: Ib714de4dc2a4ef048af2f43f272bcb8a2e545a5c\nReviewed-on: https://gerrit.instructure.com/c/instructure-ui/+/237790\nTested-by: Service Cloud Jenkins <svc.cloudjenkins@instructure.com>\nReviewed-by: Chris Guerrero <cguerrero@instructure.com>\nProduct-Review: Ken Meleta <kmeleta@instructure.com>\nQA-Review: Daniel Sasaki <dsasaki@instructure.com>\nVisual-Regression-Test: Ken Meleta <kmeleta@instructure.com>\n\n- - Minimum react and react-dom version raised to 16.8.0\n\nTEST PLAN:\n\n- no regressions in docs app\n- homepage should note the react version change\n- automated tests should pass\n\nChange-Id: I7cd9dd6423fb9524e0a1a0dd490caeee3a2c2c17\nReviewed-on: https://gerrit.instructure.com/c/instructure-ui/+/237727\nTested-by: Service Cloud Jenkins <svc.cloudjenkins@instructure.com>\nReviewed-by: Chris Guerrero <cguerrero@instructure.com>\nProduct-Review: Steve Jensen <sejensen@instructure.com>\nQA-Review: Daniel Sasaki <dsasaki@instructure.com>\nVisual-Regression-Test: Ken Meleta <kmeleta@instructure.com>\n\n- **ui-component-examples,ui-theme-tokens:** - renderPage and renderExample are no longer supplied by the webpack\n  component-examples-loader\n\nChange-Id: I5c632274264d7c934abc86f41399b8a7cda23e26\nReviewed-on: https://gerrit.instructure.com/c/instructure-ui/+/236873\nTested-by: Service Cloud Jenkins <svc.cloudjenkins@instructure.com>\nReviewed-by: Ken Meleta <kmeleta@instructure.com>\nProduct-Review: Ken Meleta <kmeleta@instructure.com>\nQA-Review: Daniel Sasaki <dsasaki@instructure.com>\nVisual-Regression-Test: Steve Jensen <sejensen@instructure.com>\n\n- Dropping support for React 15.\n\nTEST PLAN:\n\n- yarn dev/yarn start should work\n- yarn test/test:watch should work\n- there should be no mention of react 15 in code\n- there should be nothing depending on react 15\n  or reactDOM 15\n\nChange-Id: I2c054c986421014ffe15f0402e14bd2725cbc267\nReviewed-on: https://gerrit.instructure.com/c/instructure-ui/+/229009\nTested-by: Service Cloud Jenkins <svc.cloudjenkins@instructure.com>\nQA-Review: Daniel Sasaki <dsasaki@instructure.com>\nVisual-Regression-Test: Ken Meleta <kmeleta@instructure.com>\nReviewed-by: Steve Jensen <sejensen@instructure.com>\nProduct-Review: Steve Jensen <sejensen@instructure.com>\n\n- - Changed arguments for `ui-token-scripts` commands\n\n* Changed structure of `ui-token-scripts` configuration file\n\nChange-Id: I33213d2350f9ce07c157a6ad3f8cd2e6bccb14e9\nReviewed-on: https://gerrit.instructure.com/c/instructure-ui/+/236552\nReviewed-by: Steve Jensen <sejensen@instructure.com>\nProduct-Review: Steve Jensen <sejensen@instructure.com>\nTested-by: Service Cloud Jenkins <svc.cloudjenkins@instructure.com>\nQA-Review: Daniel Sasaki <dsasaki@instructure.com>\nVisual-Regression-Test: Steve Jensen <sejensen@instructure.com>\n\n- **ui-code-editor:** CodeEditor is now controlled-only.\n\nTEST PLAN:\n\n- playground examples should work as before in docs\n- automated tests should pass\n- in dev environment, no react lifecycles warnings should\n  show in console\n\nChange-Id: I68398d56447af2a03c9db51bee5cce96f1fe5bd2\nReviewed-on: https://gerrit.instructure.com/c/instructure-ui/+/224132\nTested-by: Service Cloud Jenkins <svc.cloudjenkins@instructure.com>\nReviewed-by: Chris Hart <chart@instructure.com>\nVisual-Regression-Test: Ken Meleta <kmeleta@instructure.com>\nProduct-Review: Chris Hart <chart@instructure.com>\nQA-Review: Daniel Sasaki <dsasaki@instructure.com>\n\n- **ui-themeable:** - Removed support for IE11 by eliminating custom properties polyfill\n\n* Removed `scopeStylesToNode`, `scopeCssText`, and `customPropertiesSupported`\n  utility helpers.\n\nChange-Id: I41de82b6167f1aa9f25d87ddc279e5d3c5f0b413\nReviewed-on: https://gerrit.instructure.com/c/instructure-ui/+/235818\nTested-by: Service Cloud Jenkins <svc.cloudjenkins@instructure.com>\nReviewed-by: Steve Jensen <sejensen@instructure.com>\nProduct-Review: Steve Jensen <sejensen@instructure.com>\nQA-Review: Daniel Sasaki <dsasaki@instructure.com>\nVisual-Regression-Test: Chris Guerrero <cguerrero@instructure.com>\n\n# [6.26.0](https://github.com/instructure/instructure-ui/compare/v6.25.0...v6.26.0) (2020-04-30)\n\n### Features\n\n- **instui-config:** finish adding codemod configs for universal package ([142d52b](https://github.com/instructure/instructure-ui/commit/142d52b))\n- **ui-file-drop:** add a height prop ([4fc0c4a](https://github.com/instructure/instructure-ui/commit/4fc0c4a))\n\n# [6.25.0](https://github.com/instructure/instructure-ui/compare/v6.24.0...v6.25.0) (2020-04-27)\n\n### Bug Fixes\n\n- **instui-config:** publish import codemod configs to npm ([93fc574](https://github.com/instructure/instructure-ui/commit/93fc574))\n\n### Features\n\n- **instui-cli,instui-config,ui-codemods,ui-upgrade-scripts:** allow option to migrate to universal ([2090d6c](https://github.com/instructure/instructure-ui/commit/2090d6c))\n- **instui-config,ui:** add a universal export package ([9e74450](https://github.com/instructure/instructure-ui/commit/9e74450))\n\n# [6.24.0](https://github.com/instructure/instructure-ui/compare/v6.23.0...v6.24.0) (2020-04-14)\n\n### Bug Fixes\n\n- **ui-drawer-layout:** Fix no styles applied on root ([689780a](https://github.com/instructure/instructure-ui/commit/689780a))\n- **ui-view:** optimize View in test and prod ([3d4ea25](https://github.com/instructure/instructure-ui/commit/3d4ea25))\n\n### Features\n\n- **instui-cli,instui-config:** add a default parser configuration file ([c25bb88](https://github.com/instructure/instructure-ui/commit/c25bb88))\n\n# [6.23.0](https://github.com/instructure/instructure-ui/compare/v6.22.0...v6.23.0) (2020-04-02)\n\n### Bug Fixes\n\n- **ui-buttons:** fix canvas custom theming for primary Button text ([7672ee9](https://github.com/instructure/instructure-ui/commit/7672ee9))\n- **ui-buttons:** fix issue with button theme overrides ([4022c95](https://github.com/instructure/instructure-ui/commit/4022c95))\n- **ui-docs-client,ui-modal:** modalbody using undefined theme var ([66e0a16](https://github.com/instructure/instructure-ui/commit/66e0a16))\n- **ui-tabs:** correct mis-named theme variable for Tabs.Panel ([35ce38b](https://github.com/instructure/instructure-ui/commit/35ce38b))\n\n### Features\n\n- **instui-config,canvas-ams-theme,ui-themes,ui-view:** add canvas-ams-theme ([f31849f](https://github.com/instructure/instructure-ui/commit/f31849f))\n- **instui-config,ui-codemods,ui-scripts,ui-upgrade-scripts:** named imports for codemods ([a7db548](https://github.com/instructure/instructure-ui/commit/a7db548))\n- **ui-docs-client:** update deprecated components still in use ([4543717](https://github.com/instructure/instructure-ui/commit/4543717))\n- **ui-icons:** add-folder, add-media and record icons ([c1c7d67](https://github.com/instructure/instructure-ui/commit/c1c7d67))\n- **ui-select,ui-text-input:** allow size attr on Select/TextInput ([025a564](https://github.com/instructure/instructure-ui/commit/025a564))\n- **ui-simple-select,ui-table:** update select in sortable tables ([36e8b19](https://github.com/instructure/instructure-ui/commit/36e8b19))\n\n# [6.22.0](https://github.com/instructure/instructure-ui/compare/v6.21.0...v6.22.0) (2020-03-16)\n\n### Bug Fixes\n\n- **ui-date-input:** allow passthrough props in DateInput ([7228baa](https://github.com/instructure/instructure-ui/commit/7228baa))\n- **ui-popover:** allow tooltip to manage its focus region ([8391f4f](https://github.com/instructure/instructure-ui/commit/8391f4f))\n- **ui-tag:** show cut off letter descenders ([b4cad27](https://github.com/instructure/instructure-ui/commit/b4cad27))\n- **ui-time-select:** make TimeSelect test less brittle ([42a90c7](https://github.com/instructure/instructure-ui/commit/42a90c7))\n\n### Features\n\n- **canvas-theme,ui-docs-client:** theme color docs enhancements ([69a1938](https://github.com/instructure/instructure-ui/commit/69a1938))\n- **ui-docs-client:** add Google analytics to docs app ([748c1e2](https://github.com/instructure/instructure-ui/commit/748c1e2))\n- **ui-docs-client:** ensure button upgrade examples render 'canvas theme' ([4d68de9](https://github.com/instructure/instructure-ui/commit/4d68de9))\n- **ui-menu:** restore support for mountNode ([b53ec24](https://github.com/instructure/instructure-ui/commit/b53ec24))\n- **ui-select:** allow override of autocomplete attr in Select ([41e09ac](https://github.com/instructure/instructure-ui/commit/41e09ac))\n- **ui-select,ui-simple-select:** add mountNode prop to Select ([a8b60a6](https://github.com/instructure/instructure-ui/commit/a8b60a6))\n- **ui-time-select:** add TimeSelect component ([1dfa39b](https://github.com/instructure/instructure-ui/commit/1dfa39b))\n\n# [6.21.0](https://github.com/instructure/instructure-ui/compare/v6.20.0...v6.21.0) (2020-02-26)\n\n### Bug Fixes\n\n- **ui-breadcrumb:** ensure Breakcrumb.Link icon + renderIcon props work ([14e5f1c](https://github.com/instructure/instructure-ui/commit/14e5f1c))\n- **ui-navigation:** fix position/transition of Nav expand/collapse button ([c18dcab](https://github.com/instructure/instructure-ui/commit/c18dcab))\n\n### Features\n\n- **ui-heading:** Accept multiple font families ([da12bb8](https://github.com/instructure/instructure-ui/commit/da12bb8))\n- **ui-select:** Add a SimpleSelect component ([a7ed234](https://github.com/instructure/instructure-ui/commit/a7ed234))\n- **ui-themeable:** use hash instead of randomly generated component id when styles are null ([62ac665](https://github.com/instructure/instructure-ui/commit/62ac665))\n\n# [6.20.0](https://github.com/instructure/instructure-ui/compare/v6.19.0...v6.20.0) (2020-02-13)\n\n### Bug Fixes\n\n- **ui-themeable:** check JSDOM environment ([5ef3244](https://github.com/instructure/instructure-ui/commit/5ef3244))\n\n### Features\n\n- **ui-docs-client:** update deprecated lifecycle in Playground ([9c6888f](https://github.com/instructure/instructure-ui/commit/9c6888f))\n- **ui-motion:** update deprecated lifeycles from ui-motion ([9d0593e](https://github.com/instructure/instructure-ui/commit/9d0593e))\n- **ui-text-input:** Add shouldNotWrap property ([cca1201](https://github.com/instructure/instructure-ui/commit/cca1201))\n- **ui-themeable:** allow theme adapter to map a single old value to multiple new values ([8b5bb3f](https://github.com/instructure/instructure-ui/commit/8b5bb3f))\n\n# [6.19.0](https://github.com/instructure/instructure-ui/compare/v6.18.0...v6.19.0) (2020-02-11)\n\n### Bug Fixes\n\n- **ui-expandable:** replace componentWillReceiveProps ([d59f529](https://github.com/instructure/instructure-ui/commit/d59f529))\n- **ui-select:** ensure Select.Group imports .Option ([8dc609f](https://github.com/instructure/instructure-ui/commit/8dc609f))\n\n### Features\n\n- undeprecate disabled and readOnly in inputs ([79cf68f](https://github.com/instructure/instructure-ui/commit/79cf68f))\n- **instructure-theme:** add instructure-theme ([df088ec](https://github.com/instructure/instructure-ui/commit/df088ec))\n- **instui-cli,instui-config,ui-upgrade-scripts:** eliminate parser errors when running codemods ([0430c6b](https://github.com/instructure/instructure-ui/commit/0430c6b))\n- **ui-docs-client:** use updated Button throughout docs/components ([9f0be81](https://github.com/instructure/instructure-ui/commit/9f0be81))\n- **ui-link:** un-deprecate disabled in Link ([a8df168](https://github.com/instructure/instructure-ui/commit/a8df168))\n\n# [6.18.0](https://github.com/instructure/instructure-ui/compare/v6.17.0...v6.18.0) (2020-02-04)\n\n### Bug Fixes\n\n- **ui-flex:** adopt more children types ([1f2ac25](https://github.com/instructure/instructure-ui/commit/1f2ac25))\n- **ui-menu:** update Popover import to new package align updated props ([77176a7](https://github.com/instructure/instructure-ui/commit/77176a7))\n- **ui-pill:** update TruncateText import to new package ([8957e76](https://github.com/instructure/instructure-ui/commit/8957e76))\n- **ui-responsive:** responsive rendering fixes ([93627a6](https://github.com/instructure/instructure-ui/commit/93627a6))\n- **ui-table:** loosen caption prop ([97cf3e7](https://github.com/instructure/instructure-ui/commit/97cf3e7))\n\n### Features\n\n- **instui-config,ui-buttons,ui-react-utils:** un-deprecate disabled and readOnly in button ([8041bbf](https://github.com/instructure/instructure-ui/commit/8041bbf))\n- **instui-config,ui-buttons,ui-themeable:** upgrade Button ([ed73df1](https://github.com/instructure/instructure-ui/commit/ed73df1))\n- **ui-buttons:** Add ToggleButton component ([4e25cfc](https://github.com/instructure/instructure-ui/commit/4e25cfc))\n- **ui-buttons:** Update CloseButton to use upgraded Button props ([365e0ac](https://github.com/instructure/instructure-ui/commit/365e0ac))\n- **ui-react-utils,ui-scripts,ui-webpack-config:** env variable to omit deprecation warnings ([6cc3193](https://github.com/instructure/instructure-ui/commit/6cc3193))\n\n# [6.17.0](https://github.com/instructure/instructure-ui/compare/v6.16.0...v6.17.0) (2020-01-22)\n\n### Bug Fixes\n\n- Update Package READMEs and align deprecation statements ([8f892e4](https://github.com/instructure/instructure-ui/commit/8f892e4))\n- **docs:** Update MIT License link ([13a9dff](https://github.com/instructure/instructure-ui/commit/13a9dff))\n- **ui-billboard,ui-dialog,ui-expandable,ui-options,ui-text-input,ui-tooltip:** devDep audit ([c1f0dc0](https://github.com/instructure/instructure-ui/commit/c1f0dc0))\n- **ui-forms:** add back the export of CheckboxFacade and ToggleFacade ([e5dc547](https://github.com/instructure/instructure-ui/commit/e5dc547))\n- **ui-karma-config:** Stop eating top-level test suite errors ([7324d35](https://github.com/instructure/instructure-ui/commit/7324d35))\n- **ui-number-input:** add type=\"button\" to buttons ([5f66aff](https://github.com/instructure/instructure-ui/commit/5f66aff))\n- **ui-table:** sort arrow should not change place based on cell alignment ([f1e0c29](https://github.com/instructure/instructure-ui/commit/f1e0c29))\n- **ui-test-utils:** prevent test sandbox initialization in production and development ([80d9bc1](https://github.com/instructure/instructure-ui/commit/80d9bc1))\n\n### Features\n\n- **babel-plugin-transform-imports:** allow imports that are not at the root level of src ([d239362](https://github.com/instructure/instructure-ui/commit/d239362))\n- **template-app:** update import paths to new packages ([bd78d0b](https://github.com/instructure/instructure-ui/commit/bd78d0b))\n- **ui-babel-preset:** allow for specifying additional import transforms ([908c8d5](https://github.com/instructure/instructure-ui/commit/908c8d5))\n- **ui-breadcrumb,ui-link,ui-elements:** address Links underlining ([388b8cc](https://github.com/instructure/instructure-ui/commit/388b8cc))\n- **ui-docs-client:** allow for embedding code inline with markdown ([aea7989](https://github.com/instructure/instructure-ui/commit/aea7989))\n- **ui-editable:** use IconButton internally for edit button ([8031721](https://github.com/instructure/instructure-ui/commit/8031721))\n- **ui-forms:** export old Select subcomponents ([ecbcbf6](https://github.com/instructure/instructure-ui/commit/ecbcbf6))\n- **ui-icons:** add 'audio-off' icon ([8f5030c](https://github.com/instructure/instructure-ui/commit/8f5030c))\n- **ui-icons:** add comments-off and comments-on icons ([650a42a](https://github.com/instructure/instructure-ui/commit/650a42a))\n- **ui-overlays:** update deprecated lifecycles in Overlay ([dddda64](https://github.com/instructure/instructure-ui/commit/dddda64))\n- **ui-pagination:** use IconButton internally for the \"previous/next\" ([a0075e1](https://github.com/instructure/instructure-ui/commit/a0075e1))\n- **ui-svg-images:** add `auto` height/width ([abf52f1](https://github.com/instructure/instructure-ui/commit/abf52f1))\n- **ui-toggle-details:** use IconButton internally for the toggle btn ([f1679c4](https://github.com/instructure/instructure-ui/commit/f1679c4))\n\n### Performance Improvements\n\n- **ui-responsive:** responsive performance enhancements ([5096c00](https://github.com/instructure/instructure-ui/commit/5096c00))\n\n# [6.16.0](https://github.com/instructure/instructure-ui/compare/v6.15.0...v6.16.0) (2019-12-13)\n\n### Bug Fixes\n\n- **ui-a11y-utils:** fix ui-a11y-utils dependencies ([d431666](https://github.com/instructure/instructure-ui/commit/d431666))\n- **ui-docs-client:** remove unnecessary import of ScreenReaderContent ([07d453b](https://github.com/instructure/instructure-ui/commit/07d453b))\n- **ui-modal:** update deprecated lifecycles in modal ([eaa0c9d](https://github.com/instructure/instructure-ui/commit/eaa0c9d))\n- **ui-tooltip:** uncontrolled example broken ([9d19413](https://github.com/instructure/instructure-ui/commit/9d19413))\n\n### Features\n\n- **instui-cli,ui-scripts,ui-template-scripts:** add a new ui-template-scripts package ([e3669ba](https://github.com/instructure/instructure-ui/commit/e3669ba))\n- **instui-cli,ui-upgrade-scripts:** add a new ui-upgrade-scripts package ([f5067ee](https://github.com/instructure/instructure-ui/commit/f5067ee))\n- **ui-badge:** add ui-badge package ([8de4dae](https://github.com/instructure/instructure-ui/commit/8de4dae))\n- **ui-buttons:** add a CondensedButton component ([e807b1c](https://github.com/instructure/instructure-ui/commit/e807b1c))\n- **ui-buttons:** add an IconButton component ([e170d95](https://github.com/instructure/instructure-ui/commit/e170d95))\n- **ui-byline,ui-layout:** add ui-byline package ([4be733d](https://github.com/instructure/instructure-ui/commit/4be733d))\n- **ui-checkbox:** add ui-checkbox package ([94840fa](https://github.com/instructure/instructure-ui/commit/94840fa))\n- **ui-docs-client:** make content within docs pages navigable via linking ([595f155](https://github.com/instructure/instructure-ui/commit/595f155))\n- **ui-docs-client:** updates to compileMarkdown for id generation ([832f7b2](https://github.com/instructure/instructure-ui/commit/832f7b2))\n- **ui-drawer-layout:** add ui-drawer-layout package ([2c59227](https://github.com/instructure/instructure-ui/commit/2c59227))\n- **ui-elements:** add isWithinText prop to ui-element Link ([9d0ee8e](https://github.com/instructure/instructure-ui/commit/9d0ee8e))\n- **ui-elements,ui-truncate-text:** add ui-truncate-text package ([75500f9](https://github.com/instructure/instructure-ui/commit/75500f9))\n- **ui-expandable:** add ui-expandable package ([6e5bfd3](https://github.com/instructure/instructure-ui/commit/6e5bfd3))\n- **ui-forms,ui-radio-input:** add ui-radio-input package ([151edd9](https://github.com/instructure/instructure-ui/commit/151edd9))\n- **ui-forms,ui-text-area:** add ui-text-area package ([e116712](https://github.com/instructure/instructure-ui/commit/e116712))\n- **ui-navigation:** remove experimental pill from AppNav ([e460042](https://github.com/instructure/instructure-ui/commit/e460042))\n- **ui-range-input:** ui-range-input package ([48c2786](https://github.com/instructure/instructure-ui/commit/48c2786))\n- **ui-responsive:** add ui-responsive package ([13616d2](https://github.com/instructure/instructure-ui/commit/13616d2))\n- **ui-spinner:** ui-spinner and design updates ([c80c40c](https://github.com/instructure/instructure-ui/commit/c80c40c))\n- **ui-themeable:** update deprecated lifecycles in themeable ([a581b70](https://github.com/instructure/instructure-ui/commit/a581b70))\n- **ui-tray:** ui-tray package ([07d7399](https://github.com/instructure/instructure-ui/commit/07d7399))\n\n# [6.15.0](https://github.com/instructure/instructure-ui/compare/v6.14.0...v6.15.0) (2019-11-18)\n\n### Bug Fixes\n\n- **ui-dom-utils:** prevent recursive textNode checks ([c06a7f9](https://github.com/instructure/instructure-ui/commit/c06a7f9))\n- **ui-elements:** remove redundant TruncateText test ([ea222d3](https://github.com/instructure/instructure-ui/commit/ea222d3))\n- **ui-focusable:** fix edge case with getSnapshotBeforeUpdate ([895d131](https://github.com/instructure/instructure-ui/commit/895d131))\n- **ui-react-utils:** fix deprecated util functions in production ([1c09675](https://github.com/instructure/instructure-ui/commit/1c09675))\n- **ui-react-utils:** omit children from passthroughProps ([c0e9cff](https://github.com/instructure/instructure-ui/commit/c0e9cff))\n- **ui-select:** prevent cursor for uneditable selects ([2e2540a](https://github.com/instructure/instructure-ui/commit/2e2540a))\n- **ui-tooltip:** update Tooltip dependency ([98a1617](https://github.com/instructure/instructure-ui/commit/98a1617))\n- **ui-view:** allow View to use native browser focus ([7686f1b](https://github.com/instructure/instructure-ui/commit/7686f1b))\n\n### Features\n\n- ensure all packages have build script for types ([4891dc4](https://github.com/instructure/instructure-ui/commit/4891dc4))\n- Move React to a peer dependency ([9648ca3](https://github.com/instructure/instructure-ui/commit/9648ca3))\n- **instui-cli,template-component:** add react as a peer dep when generating components ([b8ca302](https://github.com/instructure/instructure-ui/commit/b8ca302))\n- **template-component:** include types in component generation template ([ae9ce15](https://github.com/instructure/instructure-ui/commit/ae9ce15))\n- **ui-a11y-content:** remove experimental flag from ui-a11y-content package ([ce96006](https://github.com/instructure/instructure-ui/commit/ce96006))\n- **ui-a11y-utils,ui-dialog:** add ui-a11y-utils and ui-dialog ([c88cf8e](https://github.com/instructure/instructure-ui/commit/c88cf8e))\n- **ui-alerts:** update deprecated lifeycles in Alert ([aac0930](https://github.com/instructure/instructure-ui/commit/aac0930))\n- **ui-alerts,Alert:** make aria-atomic configurable ([502b3d9](https://github.com/instructure/instructure-ui/commit/502b3d9))\n- **ui-avatar:** make ui-avatar backwards compatible ([c94255d](https://github.com/instructure/instructure-ui/commit/c94255d))\n- **ui-buttons:** add a BaseButton component ([dbb83cd](https://github.com/instructure/instructure-ui/commit/dbb83cd))\n- **ui-calendar:** reduce calendar test noise ([b5fea9b](https://github.com/instructure/instructure-ui/commit/b5fea9b))\n- **ui-docs-client:** Add first InstUI Insider content ([acc4744](https://github.com/instructure/instructure-ui/commit/acc4744))\n- **ui-docs-client,ui-elements:** ensure ui-docs-client is using Table from ui-table ([5788fce](https://github.com/instructure/instructure-ui/commit/5788fce))\n- **ui-file-drop:** make ui-file-drop backwards compatible ([0534ca2](https://github.com/instructure/instructure-ui/commit/0534ca2))\n- **ui-flex,ui-layout:** make ui-flex backwards compatible ([c11cc6b](https://github.com/instructure/instructure-ui/commit/c11cc6b))\n- **ui-focusable:** update deprecated lifecycles in Focusable ([696c998](https://github.com/instructure/instructure-ui/commit/696c998))\n- **ui-grid:** add ui-grid package ([3921f32](https://github.com/instructure/instructure-ui/commit/3921f32))\n- **ui-heading:** make ui-heading backwards compatible ([c4f9541](https://github.com/instructure/instructure-ui/commit/c4f9541))\n- **ui-icons-build,ui-icons:** fix icon build and add studio, certified ([90d01f4](https://github.com/instructure/instructure-ui/commit/90d01f4))\n- **ui-img:** make ui-img backwards compatible ([ff7d2b6](https://github.com/instructure/instructure-ui/commit/ff7d2b6))\n- **ui-link:** Make ui-link/Link backwards compatible ([3e62c49](https://github.com/instructure/instructure-ui/commit/3e62c49))\n- **ui-list:** add ui-list package ([7c867af](https://github.com/instructure/instructure-ui/commit/7c867af))\n- **ui-metric:** add ui-metric package ([d4b6dd3](https://github.com/instructure/instructure-ui/commit/d4b6dd3))\n- **ui-modal:** add ui-modal package ([a9c5cee](https://github.com/instructure/instructure-ui/commit/a9c5cee))\n- **ui-overlays,ui-tooltip:** expose positionTarget prop on Tooltip ([6c1a545](https://github.com/instructure/instructure-ui/commit/6c1a545))\n- **ui-pill:** make ui-pill backwards compatible ([480eeb7](https://github.com/instructure/instructure-ui/commit/480eeb7))\n- **ui-popover:** make ui-popover backwards compatible ([d9437ae](https://github.com/instructure/instructure-ui/commit/d9437ae))\n- **ui-position:** make ui-position backwards compatible ([24e90d1](https://github.com/instructure/instructure-ui/commit/24e90d1))\n- **ui-progress:** add ui-progress package ([4dfcf4a](https://github.com/instructure/instructure-ui/commit/4dfcf4a))\n- **ui-rating:** add ui-rating package ([3fa4129](https://github.com/instructure/instructure-ui/commit/3fa4129))\n- **ui-react-utils:** allow for completely custom message in deprecatePropValues ([9a86beb](https://github.com/instructure/instructure-ui/commit/9a86beb))\n- **ui-react-utils:** update deprecated lifecycles in decorators ([87295bf](https://github.com/instructure/instructure-ui/commit/87295bf))\n- **ui-tag:** ui-tag package ([dbf87ca](https://github.com/instructure/instructure-ui/commit/dbf87ca))\n- **ui-text:** make ui-text backwards compatible ([7aabd6a](https://github.com/instructure/instructure-ui/commit/7aabd6a))\n- **ui-text-input:** make ui-text-input backwards compatible ([b9d889d](https://github.com/instructure/instructure-ui/commit/b9d889d))\n- **ui-themeable:** allow components to specify a theme adapter ([8be3d42](https://github.com/instructure/instructure-ui/commit/8be3d42))\n- **ui-tooltip:** make ui-tooltip backwards compatible ([7608e7c](https://github.com/instructure/instructure-ui/commit/7608e7c))\n- **ui-tooltip:** update tooltip callback naming ([2b26d54](https://github.com/instructure/instructure-ui/commit/2b26d54))\n- **ui-view:** Make ui-view backwards-compatible ([7dd2a2f](https://github.com/instructure/instructure-ui/commit/7dd2a2f))\n- **ui-view:** move ContextView to ui-view package ([4601b4a](https://github.com/instructure/instructure-ui/commit/4601b4a))\n\n### Performance Improvements\n\n- **ui-tooltip:** remove Focusable from Tooltip ([83aa0c9](https://github.com/instructure/instructure-ui/commit/83aa0c9))\n\n# [6.14.0](https://github.com/instructure/instructure-ui/compare/v6.13.0...v6.14.0) (2019-10-14)\n\n### Bug Fixes\n\n- **instui-config:** fix typos in propName codemod config ([81f1975](https://github.com/instructure/instructure-ui/commit/81f1975))\n- **ui-elements:** fix TruncateText's componentDidUpdate logic ([5055515](https://github.com/instructure/instructure-ui/commit/5055515))\n- **ui-file-drop,ui-pill:** update babel ([a7a8489](https://github.com/instructure/instructure-ui/commit/a7a8489))\n- **ui-react-utils:** fix production errors for decorator functions ([f5da64c](https://github.com/instructure/instructure-ui/commit/f5da64c))\n- **ui-table:** ignore falsy children in Table.Row ([dae5db6](https://github.com/instructure/instructure-ui/commit/dae5db6))\n\n### Features\n\n- **ui-file-drop:** add ui-file-drop package ([b275521](https://github.com/instructure/instructure-ui/commit/b275521))\n- **ui-heading:** add ui-heading package ([b681432](https://github.com/instructure/instructure-ui/commit/b681432))\n- **ui-link:** add ui-link package ([fa75902](https://github.com/instructure/instructure-ui/commit/fa75902))\n- **ui-position:** add ui-position package ([5511a88](https://github.com/instructure/instructure-ui/commit/5511a88))\n- **ui-tooltip:** add ui-tooltip package ([2e88e8a](https://github.com/instructure/instructure-ui/commit/2e88e8a))\n\n### Performance Improvements\n\n- **ui-react-utils:** make dev-only decorators really noops in prod ([f2f4865](https://github.com/instructure/instructure-ui/commit/f2f4865))\n- **ui-testable:** make ui-testable have no cost in prod ([5ab79fa](https://github.com/instructure/instructure-ui/commit/5ab79fa))\n- **ui-view:** don't call verifySpanMargin in prod mode ([60e0c2f](https://github.com/instructure/instructure-ui/commit/60e0c2f))\n\n# [6.13.0](https://github.com/instructure/instructure-ui/compare/v6.12.0...v6.13.0) (2019-09-24)\n\n### Bug Fixes\n\n- **instui-config:** fix v7 codemod paths ([918d38f](https://github.com/instructure/instructure-ui/commit/918d38f))\n- **ui-focusable:** fix focus race condition with label / checkbox ([54da3ed](https://github.com/instructure/instructure-ui/commit/54da3ed))\n- **ui-scripts:** follow-up fix to g/209544 ([bc6945b](https://github.com/instructure/instructure-ui/commit/bc6945b))\n\n### Features\n\n- **ui-elements:** allow TruncateText to force truncation of hidden text ([66bbf82](https://github.com/instructure/instructure-ui/commit/66bbf82))\n- **ui-elements,ui-pill:** add ui-pill package for the Pill Component ([4a71024](https://github.com/instructure/instructure-ui/commit/4a71024))\n- **ui-react-utils:** add hack decorator ([1351477](https://github.com/instructure/instructure-ui/commit/1351477))\n\n### Performance Improvements\n\n- **console:** help terser dead-code-eliminate console funcs ([323c469](https://github.com/instructure/instructure-ui/commit/323c469))\n\n# [6.12.0](https://github.com/instructure/instructure-ui/compare/v6.11.0...v6.12.0) (2019-09-17)\n\n### Bug Fixes\n\n- **ui-utils:** export isEdge from the root of @instructure/ui-utils ([b97f3fe](https://github.com/instructure/instructure-ui/commit/b97f3fe))\n\n### Features\n\n- **ui-babel-preset:** add support for javascript optional chaining ([e56d64b](https://github.com/instructure/instructure-ui/commit/e56d64b))\n\n# [6.11.0](https://github.com/instructure/instructure-ui/compare/v6.10.0...v6.11.0) (2019-09-16)\n\n### Bug Fixes\n\n- **instui-cli:** fix incorrect spacing for dependencies when generating package ([b1bbfe9](https://github.com/instructure/instructure-ui/commit/b1bbfe9))\n- **ui-babel-preset:** ensure runtime helper is used for \\_objectSpread ([2eb42d7](https://github.com/instructure/instructure-ui/commit/2eb42d7))\n- **ui-karma-config:** run all tests if one test file fails to load ([a8dab36](https://github.com/instructure/instructure-ui/commit/a8dab36))\n- **ui-layout:** DrawerTray content needs 100% height ([500af47](https://github.com/instructure/instructure-ui/commit/500af47))\n- **ui-overlays:** do not unset duration for modals ([0b304e7](https://github.com/instructure/instructure-ui/commit/0b304e7))\n- **ui-react-utils:** provide correct contextual binding for lifecycle methods in experimental ([9aeeb19](https://github.com/instructure/instructure-ui/commit/9aeeb19))\n- **ui-tabs:** pass id in Tabs onRequestTabChange handler ([6d58611](https://github.com/instructure/instructure-ui/commit/6d58611))\n- **ui-view:** fix border colors in Edge HCM ([091dde3](https://github.com/instructure/instructure-ui/commit/091dde3))\n\n### Features\n\n- **ui-a11y-content,ui-a11y:** add ui-a11y-content package ([cb49c7a](https://github.com/instructure/instructure-ui/commit/cb49c7a))\n- **ui-avatar,ui-elements:** add ui-avatar package for Avatar component ([34a6001](https://github.com/instructure/instructure-ui/commit/34a6001))\n- **ui-elements,ui-img:** add ui-img package for Img Component ([c2e4e7d](https://github.com/instructure/instructure-ui/commit/c2e4e7d))\n- **ui-elements,ui-text:** add ui-text Package for Text Component ([5bdb65a](https://github.com/instructure/instructure-ui/commit/5bdb65a))\n- **ui-flex:** add ui-flex package ([98730ff](https://github.com/instructure/instructure-ui/commit/98730ff))\n- **ui-navigation:** Responsive AppNav ([dd843d0](https://github.com/instructure/instructure-ui/commit/dd843d0))\n- **ui-popover:** Add ui-popover package ([62c1165](https://github.com/instructure/instructure-ui/commit/62c1165))\n- **ui-react-utils:** add flag to suppress experimental warnings ([d30e678](https://github.com/instructure/instructure-ui/commit/d30e678))\n- **ui-react-utils:** pass props in callRenderProp ([042bc84](https://github.com/instructure/instructure-ui/commit/042bc84))\n- **ui-scripts:** enable ui-scripts to post to multiple slack channels ([ee796c2](https://github.com/instructure/instructure-ui/commit/ee796c2))\n- **ui-view:** add ui-view Package for View Component ([7799577](https://github.com/instructure/instructure-ui/commit/7799577))\n- **ui-view:** mark ui-view as experimental ([6b805fa](https://github.com/instructure/instructure-ui/commit/6b805fa))\n\n### Performance Improvements\n\n- **ui-utils:** stop using bowser for browser detection ([95f1232](https://github.com/instructure/instructure-ui/commit/95f1232))\n\n# [6.10.0](https://github.com/instructure/instructure-ui/compare/v6.9.0...v6.10.0) (2019-08-27)\n\n### Bug Fixes\n\n- **ui-a11y:** prevent errors w/ x-domain iframes in FocusRegion ([83267f1](https://github.com/instructure/instructure-ui/commit/83267f1))\n- **ui-alerts:** fix React warnings emitted from Alert.updateScreenreaderAlert ([c97e64d](https://github.com/instructure/instructure-ui/commit/c97e64d))\n- **ui-docs-plugin:** fix docs in IE11 ([65a875c](https://github.com/instructure/instructure-ui/commit/65a875c))\n- **ui-layout:** Map theme vars to Canvas vars ([7f21fec](https://github.com/instructure/instructure-ui/commit/7f21fec))\n- **ui-pagination:** fix pagination buttons ([be78f69](https://github.com/instructure/instructure-ui/commit/be78f69))\n- **ui-stylesheet,ui-themeable:** error when gt 1 copies of themeable ([b1e8164](https://github.com/instructure/instructure-ui/commit/b1e8164))\n- **ui-table:** add aria-sort attributes to Table header ([eb802f1](https://github.com/instructure/instructure-ui/commit/eb802f1))\n- **ui-tabs:** don't pass through onChange attr ([3e185d1](https://github.com/instructure/instructure-ui/commit/3e185d1))\n- **ui-themeable:** revert the \"newless\" change ([c4ce9ba](https://github.com/instructure/instructure-ui/commit/c4ce9ba))\n\n### Features\n\n- **ui-forms:** disabled/readOnly in FileDrop ([86f323c](https://github.com/instructure/instructure-ui/commit/86f323c))\n\n# [6.9.0](https://github.com/instructure/instructure-ui/compare/v6.8.1...v6.9.0) (2019-08-07)\n\n### Bug Fixes\n\n- **ui-themeable:** make themeable work with real `class`es ([ec0d5b9](https://github.com/instructure/instructure-ui/commit/ec0d5b9))\n\n### Features\n\n- **ui-forms:** add labelPlacement property ([39225ca](https://github.com/instructure/instructure-ui/commit/39225ca))\n\n## [6.8.1](https://github.com/instructure/instructure-ui/compare/v6.8.0...v6.8.1) (2019-08-02)\n\n### Bug Fixes\n\n- **ui-a11y:** convert getElementsByTagName results to Array ([4e7c07a](https://github.com/instructure/instructure-ui/commit/4e7c07a))\n\n# [6.8.0](https://github.com/instructure/instructure-ui/compare/v6.7.0...v6.8.0) (2019-07-31)\n\n### Bug Fixes\n\n- **template-component:** Update template and docs ([c1913e1](https://github.com/instructure/instructure-ui/commit/c1913e1))\n- **ui-a11y,ui-overlays:** fix tray/dialog document click behaviors ([1130a73](https://github.com/instructure/instructure-ui/commit/1130a73))\n- **ui-forms:** keep escape from closing modals when a file selection dialog is open ([321c246](https://github.com/instructure/instructure-ui/commit/321c246))\n- **ui-react-utils:** handle fat arrow functions in callRenderProp ([6e0d0c8](https://github.com/instructure/instructure-ui/commit/6e0d0c8))\n- **ui-select,ui-selectable:** stop event propagation from selectable ([fc75997](https://github.com/instructure/instructure-ui/commit/fc75997))\n- **ui-test-utils:** reset viewport in init/before hook ([f271a5b](https://github.com/instructure/instructure-ui/commit/f271a5b))\n\n### Features\n\n- **browserslist-config-instui,ui-eslint-config:** add browserslist pkg, browser compat linting ([6fcee36](https://github.com/instructure/instructure-ui/commit/6fcee36))\n- **ui-webpack-config:** Add a env var to disable linter failure on warnings ([ace5500](https://github.com/instructure/instructure-ui/commit/ace5500))\n\n# [6.7.0](https://github.com/instructure/instructure-ui/compare/v6.6.0...v6.7.0) (2019-07-15)\n\n### Bug Fixes\n\n- **ui-editable:** move keyUp handler for escape handling ([4d197d3](https://github.com/instructure/instructure-ui/commit/4d197d3))\n\n### Features\n\n- **ui-forms:** allow all children in RadioInputGroup ([d7ca99a](https://github.com/instructure/instructure-ui/commit/d7ca99a))\n- **ui-icons:** add Admin Tools, ePortfolio, Permissions, Sub-Accounts ([7c910ad](https://github.com/instructure/instructure-ui/commit/7c910ad))\n\n# [6.6.0](https://github.com/instructure/instructure-ui/compare/v6.5.0...v6.6.0) (2019-07-03)\n\n### Bug Fixes\n\n- **template-app,template-component,template-package:** remove npmignore files from template packages ([e0b7136](https://github.com/instructure/instructure-ui/commit/e0b7136))\n- **template-app,template-component,template-package,ui-scripts:** rename templates for npm ([1749abd](https://github.com/instructure/instructure-ui/commit/1749abd))\n\n### Features\n\n- **ui-scripts:** retrieve GitHub url from config instead of package.json ([c62b01e](https://github.com/instructure/instructure-ui/commit/c62b01e))\n\n# [6.5.0](https://github.com/instructure/instructure-ui/compare/v6.4.0...v6.5.0) (2019-07-01)\n\n### Bug Fixes\n\n- add missing exports ([10044d4](https://github.com/instructure/instructure-ui/commit/10044d4))\n- **instui-config,ui-tabs:** deprecate focus prop and add shouldFocusOnRender ([6f26701](https://github.com/instructure/instructure-ui/commit/6f26701))\n- **ui-date-input:** align calendar icon ([32c9d9d](https://github.com/instructure/instructure-ui/commit/32c9d9d))\n- **ui-date-input,ui-text-input:** add assistiveText prop to DateInput ([20ed322](https://github.com/instructure/instructure-ui/commit/20ed322))\n- **ui-elements:** replace componentWillReceiveProps logic in TruncateText ([a7fa13d](https://github.com/instructure/instructure-ui/commit/a7fa13d))\n- **ui-number-input:** update NumberInput prop names ([7cad427](https://github.com/instructure/instructure-ui/commit/7cad427))\n- **ui-scripts:** Make fix flag work when no paths are passed to the lint command ([ed0cb15](https://github.com/instructure/instructure-ui/commit/ed0cb15))\n- **ui-select:** scroll logic and example updates ([fd91714](https://github.com/instructure/instructure-ui/commit/fd91714))\n- **ui-tabs:** tabbable content in a tab panel should be tabbable ([4753bd3](https://github.com/instructure/instructure-ui/commit/4753bd3))\n- **ui-tabs:** update canvas theme variables to new variants ([6472a51](https://github.com/instructure/instructure-ui/commit/6472a51))\n- **ui-test-utils:** remove window/document event listener cleanup ([9fb45b3](https://github.com/instructure/instructure-ui/commit/9fb45b3))\n- **ui-text-input:** set line height to prevent truncating descenders ([4cb3666](https://github.com/instructure/instructure-ui/commit/4cb3666))\n- **ui-text-input:** update TextInput prop names ([3aedab8](https://github.com/instructure/instructure-ui/commit/3aedab8))\n\n### Features\n\n- **instui-cli,template-app,ui-scripts:** add an instui starter app ([3f0f00e](https://github.com/instructure/instructure-ui/commit/3f0f00e))\n- **instui-cli,template-component,ui-scripts:** Generate component script ([8b8480e](https://github.com/instructure/instructure-ui/commit/8b8480e))\n- **instui-cli,template-package,ui-scripts:** move generate package script to instui-cli ([69f1613](https://github.com/instructure/instructure-ui/commit/69f1613))\n- **instui-config,ui-date-input:** dateInput change label prop to renderLabel ([a172999](https://github.com/instructure/instructure-ui/commit/a172999))\n- **ui-docs-client:** Add What's New page to docs ([64126d6](https://github.com/instructure/instructure-ui/commit/64126d6))\n- **ui-elements:** Added `wrap` prop to Text ([b17daba](https://github.com/instructure/instructure-ui/commit/b17daba))\n- **ui-icons:** add \"code\" icon ([b330455](https://github.com/instructure/instructure-ui/commit/b330455))\n- **ui-icons:** add text-direction rtl and ltr icons ([3b91145](https://github.com/instructure/instructure-ui/commit/3b91145))\n- **ui-navigation:** appNav component ([8f2d874](https://github.com/instructure/instructure-ui/commit/8f2d874))\n- **ui-scripts:** allow open sandbox script to function in monorepo without repo name or username ([919d966](https://github.com/instructure/instructure-ui/commit/919d966))\n- **ui-scripts:** expand codemod extensions to accept .jsx ([e217bb2](https://github.com/instructure/instructure-ui/commit/e217bb2))\n\n# [6.4.0](https://github.com/instructure/instructure-ui/compare/v6.3.0...v6.4.0) (2019-06-13)\n\n### Bug Fixes\n\n- **ui-breadcrumb:** separator color ([e0c7fe0](https://github.com/instructure/instructure-ui/commit/e0c7fe0))\n- **ui-component-examples:** prevent OOM when generating View examples ([df5f505](https://github.com/instructure/instructure-ui/commit/df5f505))\n- **ui-component-examples:** support components w/ no props/values ([4c76e2b](https://github.com/instructure/instructure-ui/commit/4c76e2b))\n- **ui-layout:** pass down elementRef to Flex and Flex.Item ([4dfb941](https://github.com/instructure/instructure-ui/commit/4dfb941))\n\n### Features\n\n- **ui-alerts:** add renderCloseButtonLabel to Alert ([4684530](https://github.com/instructure/instructure-ui/commit/4684530))\n- **ui-eslint-config:** enable react/no-typos rule ([d8fc415](https://github.com/instructure/instructure-ui/commit/d8fc415))\n- **ui-forms,ui-selectable:** deprecate ui-forms select ([1f7b53d](https://github.com/instructure/instructure-ui/commit/1f7b53d))\n- **ui-icons:** add closed-captioning icon ([58444ee](https://github.com/instructure/instructure-ui/commit/58444ee))\n- **ui-icons:** add miscellaneous 'table' icons to ui-icons ([8ec7a8b](https://github.com/instructure/instructure-ui/commit/8ec7a8b))\n- **ui-icons:** update solid version of 'Dashboard' and 'Inbox' icons ([33a8b4c](https://github.com/instructure/instructure-ui/commit/33a8b4c))\n- **ui-icons:** update svg exports for misc icons ([319abb7](https://github.com/instructure/instructure-ui/commit/319abb7))\n- **ui-layout:** Add focus styles to View ([2dd401c](https://github.com/instructure/instructure-ui/commit/2dd401c))\n- **ui-scripts:** add open-sandbox script ([093076a](https://github.com/instructure/instructure-ui/commit/093076a))\n- **ui-scripts:** addition of a monorepo open sandbox command ([7fd349d](https://github.com/instructure/instructure-ui/commit/7fd349d))\n- **ui-select:** add controlled select ([634ab1a](https://github.com/instructure/instructure-ui/commit/634ab1a))\n\n# [6.3.0](https://github.com/instructure/instructure-ui/compare/v6.2.0...v6.3.0) (2019-05-28)\n\n### Bug Fixes\n\n- **ui-a11y:** dialogs with non focusable children should contain focus when shouldContainFocus ([f72a179](https://github.com/instructure/instructure-ui/commit/f72a179))\n- **ui-elements:** Change scoping of Link color ([09028b8](https://github.com/instructure/instructure-ui/commit/09028b8))\n- **ui-elements:** fix typo in componentWillUnmount ([093c47e](https://github.com/instructure/instructure-ui/commit/093c47e))\n- **ui-portal:** remove ui-testable from Portal ([9421d63](https://github.com/instructure/instructure-ui/commit/9421d63))\n- **ui-test-utils:** prevent test pollution related failures ([626bd7a](https://github.com/instructure/instructure-ui/commit/626bd7a))\n- **ui-themeable:** Fix polyfill class selector ([0527709](https://github.com/instructure/instructure-ui/commit/0527709))\n\n### Features\n\n- **ui-icons:** update existing text-subscript icon per design ([fea49f4](https://github.com/instructure/instructure-ui/commit/fea49f4))\n- **ui-layout:** add functional colors as background values for View ([18938fa](https://github.com/instructure/instructure-ui/commit/18938fa))\n- **ui-options:** add Options component ([c0df653](https://github.com/instructure/instructure-ui/commit/c0df653))\n\n# [6.2.0](https://github.com/instructure/instructure-ui/compare/v6.1.0...v6.2.0) (2019-05-13)\n\n### Bug Fixes\n\n- **ui-docs-client:** escape regexp chars in icon search term ([00b3ef9](https://github.com/instructure/instructure-ui/commit/00b3ef9))\n- **ui-elements:** don’t set type=button on any non-button <Link>s ([67084ae](https://github.com/instructure/instructure-ui/commit/67084ae))\n- **ui-forms:** use renderTitle prop on Spinner ([dce5248](https://github.com/instructure/instructure-ui/commit/dce5248))\n\n### Features\n\n- **ui-breadcrumb,ui-elements:** remove default as='button' on Link ([c23e859](https://github.com/instructure/instructure-ui/commit/c23e859))\n- **ui-elements:** add renderTitle prop to Spinner component ([6b66b89](https://github.com/instructure/instructure-ui/commit/6b66b89))\n- **ui-elements,ui-svg-images:** adds alert color to Text and InlineSVG components ([118ba53](https://github.com/instructure/instructure-ui/commit/118ba53))\n- **ui-portal:** Use built-in React 16 Portal ([1e334e3](https://github.com/instructure/instructure-ui/commit/1e334e3))\n\n# [6.1.0](https://github.com/instructure/instructure-ui/compare/v6.0.0...v6.1.0) (2019-05-09)\n\n### Bug Fixes\n\n- **instui-config,ui-forms:** deprecate DateInput from ui-forms ([d02c7ea](https://github.com/instructure/instructure-ui/commit/d02c7ea))\n- **ui-docs-client,ui-docs-plugin:** update icon import paths ([5a3eda2](https://github.com/instructure/instructure-ui/commit/5a3eda2))\n- **ui-prop-types:** Update childrenOrValue error message ([b36f61a](https://github.com/instructure/instructure-ui/commit/b36f61a))\n- **ui-scripts:** fix tags for patch releases ([a479911](https://github.com/instructure/instructure-ui/commit/a479911))\n- **ui-tabs:** Selected tab animations ([1313023](https://github.com/instructure/instructure-ui/commit/1313023))\n\n### Features\n\n- **ui-form-field:** add input container ref to FormField ([16bebbf](https://github.com/instructure/instructure-ui/commit/16bebbf))\n- **ui-icons:** add new bullet-list-(option) icons to icon library ([c2433af](https://github.com/instructure/instructure-ui/commit/c2433af))\n\n# [6.0.0](https://github.com/instructure/instructure-ui/compare/v5.52.3...v6.0.0) (2019-05-03)\n\n### Bug Fixes\n\n- **instui-cli:** don't use yarn to run jscodeshift ([992e250](https://github.com/instructure/instructure-ui/commit/992e250))\n- **instui-cli,ui-codemods:** codemod paths should work when cli is globally installed ([0948a76](https://github.com/instructure/instructure-ui/commit/0948a76))\n- **instui-cli,ui-codemods,ui-scripts:** require uncached version of configs ([7130c12](https://github.com/instructure/instructure-ui/commit/7130c12))\n- **ui-docs-client:** fix search icon import path ([7390556](https://github.com/instructure/instructure-ui/commit/7390556))\n- **ui-layout:** position should account for documentElement offset ([701b08e](https://github.com/instructure/instructure-ui/commit/701b08e))\n- **ui-utils:** ensure 'getActiveElement' is using the instui 'contains' ([26f7d98](https://github.com/instructure/instructure-ui/commit/26f7d98))\n\n### Features\n\n- remove deprecated packages/props ([1d8813c](https://github.com/instructure/instructure-ui/commit/1d8813c))\n- **babel-plugin-themeable-styles:** deprecate themeable config ([f3228bc](https://github.com/instructure/instructure-ui/commit/f3228bc))\n- **canvas-theme,canvas-high-contrast-theme:** separate canvas theme packages ([ef2e1d0](https://github.com/instructure/instructure-ui/commit/ef2e1d0))\n- **instui-cli,instui-config,ui-codemods:** add upgrade command ([a805ed6](https://github.com/instructure/instructure-ui/commit/a805ed6))\n- **instui-cli,instui-config,ui-scripts:** Allow upgrade to specific version ([55c3c16](https://github.com/instructure/instructure-ui/commit/55c3c16))\n- **instui-config,ui-codemods:** configure codemod updates for simple prop values ([4049122](https://github.com/instructure/instructure-ui/commit/4049122))\n- **instui-config,ui-forms:** add deprecation + codemod for old TextInput to TextInputControlled ([eb83528](https://github.com/instructure/instructure-ui/commit/eb83528))\n- **ui-babel-preset:** transform member imports to full paths ([d02cc45](https://github.com/instructure/instructure-ui/commit/d02cc45))\n- **ui-dom-utils,ui-react-utils,ui-color-utils:** new utils packages ([03e8ee2](https://github.com/instructure/instructure-ui/commit/03e8ee2))\n\n### Performance Improvements\n\n- **ui-icons,ui-icons-build:** remove default exports for React icons ([95195ee](https://github.com/instructure/instructure-ui/commit/95195ee))\n\n### BREAKING CHANGES\n\n- **ui-core:** entire package has been removed\n- **ui-elements:** ContextBox has been removed\n- **ui-testbed:** entire package has been removed\n- **ui-forms:** NumberInput has been removed\n- **ui-container:** entire package has been removed\n- **ui-menu:** MenuItemFlyout has been removed\n- **ui-forms:** FormField & FormFieldGroup have been removed\n- **ui-svg-images:** height and width props removed from SVGIcon\n- **ui-utils:** Decimal has been removed\n- **ui-overlays:** applicationElement, closeButtonLabel, closeButtonRef, closeButtonVariant props removed from Tray (as well as dep warnings from InstUI 3)\n- **ui-overlays:** applicationElement, closeButtonLabel, closeButtonRef props removed from Popover (as well as dep warnings from InstUI 3)\n- **ui-overlays:** applicationElement, closeButtonLabel, closeButtonRef props removed from Modal (as well as dep warnings from InstUI 3)\n- **ui-overlays:** fullScreen prop removed from Mask\n- **ui-menu:** active prop removed from MenuItem\n- **ui-menu:** title, labelledBy and controls props removed from Menu\n- **ui-a11y:** applicationElement prop removed from Dialog\n- **ui-code-editor:** code prop removed from CodeEditor\n- **ui-layout:** size prop removed from View\n- **ui-elements:** ellipsis prop removed from Link\n- **ui-overlays:** size prop removed from Tooltip, switched variant so the inverse Tooltip is what a consumer gets out of the box, default (light has to be explicitly set)\n- **ui-alerts:** 3.0 deprecations removed from Alert\n- **ui-elements:** 3.0 deprecations removed from Table, prop values from Heading, ListItem\n- **ui-portal:** 3.0 deprecations removed from Portal\n- **ui-component-examples:** should not be referencing a size prop for Tooltip\n- **ui-utils:** deprecated util has updated messaging\n- **scripts:** update component and package template dependancy from '^5' to '^6'\n- **ui-forms, ui-icons, ui-overlays, ui-utils:** remove 'config' folder as they now reside in their own package\n- **ui-themeable:** added warning in dev env when using react version < 15\n- All package peerDependencies updated to remove support for React v0.14\n- **ui-utils:** deprecated utils removed\n- **ui-themes:** remove deprecated canvas-a11y theme\n- removed /components and /utils directories, add codemods to update imports\n\n## [5.52.3](https://github.com/instructure/instructure-ui/compare/v5.52.2...v5.52.3) (2019-04-25)\n\n### Bug Fixes\n\n- **ui-layout:** position should account for documentElement offset ([f70bde6](https://github.com/instructure/instructure-ui/commit/f70bde6))\n\n## [5.52.2](https://github.com/instructure/instructure-ui/compare/v5.52.1...v5.52.2) (2019-04-17)\n\n### Bug Fixes\n\n- **ui-calendar,ui-date-input,ui-table:** align week labels in center ([2ec0d82](https://github.com/instructure/instructure-ui/commit/2ec0d82))\n- **ui-date-input:** improve onRequestValidateDate documentation ([faa04db](https://github.com/instructure/instructure-ui/commit/faa04db))\n- **ui-elements:** fix role for Rating so it reads correctly for SR ([8b3a4c0](https://github.com/instructure/instructure-ui/commit/8b3a4c0))\n- **ui-elements:** MetricsList/MetricsListItem allow data attributes to be passed thru ([319188c](https://github.com/instructure/instructure-ui/commit/319188c))\n- **ui-form-field:** allow data attributes to be passed thru FormField ([05ecfd5](https://github.com/instructure/instructure-ui/commit/05ecfd5))\n- **ui-utils:** allow to prop on elements that allow href ([208fa09](https://github.com/instructure/instructure-ui/commit/208fa09))\n\n### Performance Improvements\n\n- **console:** fix production error/warning stripping ([f03d6e6](https://github.com/instructure/instructure-ui/commit/f03d6e6))\n\n## [5.52.1](https://github.com/instructure/instructure-ui/compare/v5.52.0...v5.52.1) (2019-04-08)\n\n### Bug Fixes\n\n- **ui-scripts:** remove DEBUG var for babel transpile ([e8cd217](https://github.com/instructure/instructure-ui/commit/e8cd217))\n- **ui-table:** deprecate prop `mode` ([d9282c1](https://github.com/instructure/instructure-ui/commit/d9282c1))\n- **ui-text-input:** readOnly input should not look disabled ([1c13287](https://github.com/instructure/instructure-ui/commit/1c13287))\n\n# [5.52.0](https://github.com/instructure/instructure-ui/compare/v5.51.1...v5.52.0) (2019-04-03)\n\n### Bug Fixes\n\n- **ui-scripts:** resolve promise for gerritbot review ([23a7123](https://github.com/instructure/instructure-ui/commit/23a7123))\n- **ui-table:** use flex on sortable button ([f03eeb1](https://github.com/instructure/instructure-ui/commit/f03eeb1))\n\n### Features\n\n- **console:** remove console statements in prod env ([603c738](https://github.com/instructure/instructure-ui/commit/603c738))\n- **ui-scripts:** ui-build --modules option ([0be81cc](https://github.com/instructure/instructure-ui/commit/0be81cc))\n\n## [5.51.1](https://github.com/instructure/instructure-ui/compare/v5.51.0...v5.51.1) (2019-03-30)\n\n### Bug Fixes\n\n- **ui-elements,ui-layout:** prevent prop warnings due to defaults ([5a7128d](https://github.com/instructure/instructure-ui/commit/5a7128d))\n\n# [5.51.0](https://github.com/instructure/instructure-ui/compare/v5.50.0...v5.51.0) (2019-03-29)\n\n### Bug Fixes\n\n- **ui-forms:** fix too much recursion error ([08dedf3](https://github.com/instructure/instructure-ui/commit/08dedf3))\n- **ui-menu:** prevent menu from focusing single item ([6d8ac37](https://github.com/instructure/instructure-ui/commit/6d8ac37))\n\n### Features\n\n- **ui-scripts:** post gerrit reviews from publish script ([b63ec87](https://github.com/instructure/instructure-ui/commit/b63ec87))\n- **ui-table:** make table responsive ([1ec9a2b](https://github.com/instructure/instructure-ui/commit/1ec9a2b))\n- **ui-utils:** add React's render stack to console messages ([4226153](https://github.com/instructure/instructure-ui/commit/4226153))\n\n# [5.50.0](https://github.com/instructure/instructure-ui/compare/v5.49.0...v5.50.0) (2019-03-28)\n\n### Bug Fixes\n\n- **ui-core:** update menu ui-core/config ([04dc453](https://github.com/instructure/instructure-ui/commit/04dc453))\n- **ui-forms:** allow Select to render without inline mountNode ([44e9176](https://github.com/instructure/instructure-ui/commit/44e9176))\n- **ui-forms:** prevent select from closing prematurely in IE ([785c9dd](https://github.com/instructure/instructure-ui/commit/785c9dd))\n- **ui-forms:** remove explicit mountNode in Select ([8542b79](https://github.com/instructure/instructure-ui/commit/8542b79))\n- **ui-overlays:** deprecate size prop for Tooltip ([07fddac](https://github.com/instructure/instructure-ui/commit/07fddac))\n- **ui-scripts:** CSS changes should auto-reload with yarn dev ([071a1a9](https://github.com/instructure/instructure-ui/commit/071a1a9))\n- **ui-scripts:** split DEBUG env variable ([0b0033e](https://github.com/instructure/instructure-ui/commit/0b0033e))\n\n### Features\n\n- **ui-billboard:** allow node and function for message prop ([88ebd37](https://github.com/instructure/instructure-ui/commit/88ebd37))\n- **ui-text-input:** Add flex layout ([6613d27](https://github.com/instructure/instructure-ui/commit/6613d27))\n\n# [5.49.0](https://github.com/instructure/instructure-ui/compare/v5.48.0...v5.49.0) (2019-03-22)\n\n### Bug Fixes\n\n- **ui-a11y:** convert NodeList to Array in ScreenReaderFocusRegion ([ab482a6](https://github.com/instructure/instructure-ui/commit/ab482a6))\n- **ui-a11y:** prevent focus from escaping dialog ([899dd5e](https://github.com/instructure/instructure-ui/commit/899dd5e))\n- **ui-component-examples:** improve loadtime for storybook ([679b37d](https://github.com/instructure/instructure-ui/commit/679b37d))\n- **ui-menu:** always focus the entire menu when opened ([9bec477](https://github.com/instructure/instructure-ui/commit/9bec477))\n- **ui-scripts:** don't update x-package deps when bumping versions ([5550000](https://github.com/instructure/instructure-ui/commit/5550000))\n- **ui-tabs:** update Tabs sub-directories to support dot notation naming convention ([6bb2616](https://github.com/instructure/instructure-ui/commit/6bb2616))\n- **ui-test-utils:** better error message when sinon sandbox is undef ([19d65df](https://github.com/instructure/instructure-ui/commit/19d65df))\n- **ui-test-utils:** preserve built-in behavior of chai contain method ([a7b266e](https://github.com/instructure/instructure-ui/commit/a7b266e))\n- **ui-themeable:** prevent setting a component theme to an empty object ([04d8bc2](https://github.com/instructure/instructure-ui/commit/04d8bc2))\n\n### Features\n\n- **ui-calendar,ui-focusable:** a Calendar component ([7a4f96e](https://github.com/instructure/instructure-ui/commit/7a4f96e))\n- **ui-date-input:** A controlled DateInput ([e558771](https://github.com/instructure/instructure-ui/commit/e558771))\n- **ui-scripts:** read dotenv file from project root ([6886dcb](https://github.com/instructure/instructure-ui/commit/6886dcb))\n- **ui-test-utils:** add unmount util ([4d508be](https://github.com/instructure/instructure-ui/commit/4d508be))\n\n# [5.48.0](https://github.com/instructure/instructure-ui/compare/v5.47.0...v5.48.0) (2019-03-18)\n\n### Bug Fixes\n\n- **ui-prop-types:** require prop-types >= 15.7 ([30c105a](https://github.com/instructure/instructure-ui/commit/30c105a))\n\n### Features\n\n- **ui-component-examples,ui-test-utils:** add parameters to example config ([19e4cfd](https://github.com/instructure/instructure-ui/commit/19e4cfd))\n- **ui-table:** add controlled table ([20f39f9](https://github.com/instructure/instructure-ui/commit/20f39f9))\n\n# [5.47.0](https://github.com/instructure/instructure-ui/compare/v5.46.1...v5.47.0) (2019-03-15)\n\n### Bug Fixes\n\n- **ui-utils:** updates to CustomPropTypes.Children ([4679cbb](https://github.com/instructure/instructure-ui/commit/4679cbb))\n\n### Features\n\n- **ui-selectable:** add Selectable component ([de742b4](https://github.com/instructure/instructure-ui/commit/de742b4))\n- **ui-tabs:** new Tabs component ([b8fe295](https://github.com/instructure/instructure-ui/commit/b8fe295))\n- **ui-test-utils:** add a few more test helpers ([386a867](https://github.com/instructure/instructure-ui/commit/386a867))\n\n## [5.46.1](https://github.com/instructure/instructure-ui/compare/v5.46.0...v5.46.1) (2019-03-13)\n\n### Bug Fixes\n\n- **ui-icons:** add missing unpublish icon ([de613be](https://github.com/instructure/instructure-ui/commit/de613be))\n\n# [5.46.0](https://github.com/instructure/instructure-ui/compare/v5.45.1...v5.46.0) (2019-03-12)\n\n### Bug Fixes\n\n- **ui-scripts:** include merged tags for bump and RCs ([62c3dbe](https://github.com/instructure/instructure-ui/commit/62c3dbe))\n\n### Features\n\n- **ui-text-input:** prepend/append content ([183d589](https://github.com/instructure/instructure-ui/commit/183d589))\n\n## [5.45.1](https://github.com/instructure/instructure-ui/compare/v5.45.0...v5.45.1) (2019-03-12)\n\n**Note:** Version bump only for package instructure-ui\n\n# [5.45.0](https://github.com/instructure/instructure-ui/compare/v5.44.0...v5.45.0) (2019-03-11)\n\n### Bug Fixes\n\n- fix yarn test --scope ([92ba95e](https://github.com/instructure/instructure-ui/commit/92ba95e))\n- **ui-babel-preset:** load themeable config ([b5b8397](https://github.com/instructure/instructure-ui/commit/b5b8397))\n- **ui-forms:** prevent \"duplicate adjacent keys\" react warning ([1cf778f](https://github.com/instructure/instructure-ui/commit/1cf778f))\n- **ui-scripts:** disable git reset for RC releases ([e02cf7a](https://github.com/instructure/instructure-ui/commit/e02cf7a))\n- **ui-scripts:** move working directory check ([174e2d1](https://github.com/instructure/instructure-ui/commit/174e2d1))\n- **ui-scripts:** update repo package version for RCs ([0573f5c](https://github.com/instructure/instructure-ui/commit/0573f5c))\n- **ui-scripts:** use correct version in post-publish for RCs ([fa1c985](https://github.com/instructure/instructure-ui/commit/fa1c985))\n- **ui-scripts,ui-test-utils:** make sure test teardown always runs ([be84200](https://github.com/instructure/instructure-ui/commit/be84200))\n- **ui-text-input:** fix layout with inline and width props ([0a8dfea](https://github.com/instructure/instructure-ui/commit/0a8dfea))\n- **ui-webpack-config:** add missing dependency ([234d7cd](https://github.com/instructure/instructure-ui/commit/234d7cd))\n\n### Features\n\n- A ui-prop-types package ([0fbc609](https://github.com/instructure/instructure-ui/commit/0fbc609))\n- **ui-eslint-config:** remove async test rule ([607b878](https://github.com/instructure/instructure-ui/commit/607b878))\n- **ui-karma-config,ui-scripts:** --randomize test order flag ([dee991c](https://github.com/instructure/instructure-ui/commit/dee991c))\n- **ui-menu:** Fix roles on menu item group items for NVDA/JAWS ([76de5d0](https://github.com/instructure/instructure-ui/commit/76de5d0))\n- **ui-postcss-config:** minify the css we publish to npm ([9aa49dc](https://github.com/instructure/instructure-ui/commit/9aa49dc))\n- **ui-scripts,ui-test-utils:** move jsdom to ui-scripts ([9d1f063](https://github.com/instructure/instructure-ui/commit/9d1f063))\n- **ui-test-utils:** add aliases for finding by text, label ([14fdb9e](https://github.com/instructure/instructure-ui/commit/14fdb9e))\n\n### Performance Improvements\n\n- **ui-babel-preset:** don't add polyfills to js we publish to npm ([2d2e859](https://github.com/instructure/instructure-ui/commit/2d2e859))\n\n# [5.44.0](https://github.com/instructure/instructure-ui/compare/v5.43.0...v5.44.0) (2019-03-01)\n\n### Bug Fixes\n\n- **ui-scripts:** fix publish and post-publish ([1d863e3](https://github.com/instructure/instructure-ui/commit/1d863e3))\n\n### Features\n\n- **ui-buttons,ui-elements,ui-themes:** underline the Link component by default ([9a90a7f](https://github.com/instructure/instructure-ui/commit/9a90a7f))\n- **ui-forms,ui-test-utils:** add locators, assertions, typeIn helper ([7d36c3d](https://github.com/instructure/instructure-ui/commit/7d36c3d))\n- **ui-layout:** Add overflow props to View ([d0d779f](https://github.com/instructure/instructure-ui/commit/d0d779f))\n- **ui-text-input:** add controlled TextInput ([a372757](https://github.com/instructure/instructure-ui/commit/a372757))\n\n# [5.43.0](https://github.com/instructure/instructure-ui/compare/v5.42.0...v5.43.0) (2019-02-27)\n\n### Bug Fixes\n\n- **jenkins:** SSH directory doesn’t have access on post merge ([907b123](https://github.com/instructure/instructure-ui/commit/907b123))\n- **postcss-themeable-styles,ui-buttons:** add missing Button theme variables ([ac626ec](https://github.com/instructure/instructure-ui/commit/ac626ec))\n- **ui-buttons:** scope Button styles more tightly to HTML ([92f044f](https://github.com/instructure/instructure-ui/commit/92f044f))\n\n### Features\n\n- **ui-component-examples:** add a new examples generator ([eefb1e7](https://github.com/instructure/instructure-ui/commit/eefb1e7))\n- **ui-overlays:** add overflow property to Modal ([614933c](https://github.com/instructure/instructure-ui/commit/614933c))\n- **ui-test-utils:** add a11y test generator util ([16240d8](https://github.com/instructure/instructure-ui/commit/16240d8))\n\n<a name=\"5.42.0\"></a>\n\n# [5.42.0](https://github.com/instructure/instructure-ui/compare/v5.41.1...v5.42.0) (2019-02-15)\n\n### Bug Fixes\n\n- generate:component should work w/ an existing package ([54be01b](https://github.com/instructure/instructure-ui/commit/54be01b))\n- **ui-elements:** remove relative position from Link ([cd96e4c](https://github.com/instructure/instructure-ui/commit/cd96e4c))\n- **ui-postcss-config:** use requires to prevent missing deps ([d6735a4](https://github.com/instructure/instructure-ui/commit/d6735a4))\n\n### Features\n\n- **ui-overlays:** deprecate small, medium tooltip - remove shadow ([0be0008](https://github.com/instructure/instructure-ui/commit/0be0008))\n- **ui-scripts:** add examples and server scripts ([e229eef](https://github.com/instructure/instructure-ui/commit/e229eef))\n- **ui-scripts,ui-test-utils:** add a --mocha option to ui-test ([bd37e2b](https://github.com/instructure/instructure-ui/commit/bd37e2b))\n\n### Performance Improvements\n\n- **babel-plugin-themeable-styles:** speed up babel transpile ([2df2a22](https://github.com/instructure/instructure-ui/commit/2df2a22))\n\n<a name=\"5.41.1\"></a>\n\n## [5.41.1](https://github.com/instructure/instructure-ui/compare/v5.41.0...v5.41.1) (2019-01-30)\n\n### Bug Fixes\n\n- **docs-app:** fix codepen links ([1f8a56f](https://github.com/instructure/instructure-ui/commit/1f8a56f))\n- **ui-babel-preset:** add missing babel-plugin-macros dep ([9e97e77](https://github.com/instructure/instructure-ui/commit/9e97e77))\n- **ui-scripts:** switch to npm publish from yarn ([f22c2b2](https://github.com/instructure/instructure-ui/commit/f22c2b2))\n\n<a name=\"5.41.0\"></a>\n\n# [5.41.0](https://github.com/instructure/instructure-ui/compare/v5.40.0...v5.41.0) (2019-01-29)\n\n### Bug Fixes\n\n- **cz-lerna-changelog:** add missing dependency ([4352282](https://github.com/instructure/instructure-ui/commit/4352282))\n- **ui-editable,ui-forms:** select blurs when it shouldn't ([65563e8](https://github.com/instructure/instructure-ui/commit/65563e8))\n- **ui-elements:** Make Link work with TruncateText ([5f49edc](https://github.com/instructure/instructure-ui/commit/5f49edc))\n- **ui-elements:** remove gradiant from HCM progress ([00d5b7b](https://github.com/instructure/instructure-ui/commit/00d5b7b))\n- **ui-focusable:** Focusable should retain focus ([2891d8c](https://github.com/instructure/instructure-ui/commit/2891d8c))\n- **ui-form-field:** design alignment with form helper/error text ([9e7de74](https://github.com/instructure/instructure-ui/commit/9e7de74))\n- **ui-forms:** fix enablePreview prop on FileDrop ([3c44424](https://github.com/instructure/instructure-ui/commit/3c44424))\n- **ui-forms:** prevent multiple onChange events from controlled selects ([cef91d7](https://github.com/instructure/instructure-ui/commit/cef91d7))\n- **ui-number-input:** use a large font when size=\"large\" ([5f00619](https://github.com/instructure/instructure-ui/commit/5f00619))\n\n### Features\n\n- **ui-editable:** add \"inline\" prop to InPlaceEdit ([5caedc1](https://github.com/instructure/instructure-ui/commit/5caedc1))\n- **ui-overlays:** allow support for icons alongside close button in inverse variant ([932a468](https://github.com/instructure/instructure-ui/commit/932a468))\n\n<a name=\"5.40.0\"></a>\n\n# [5.40.0](https://github.com/instructure/instructure-ui/compare/v5.39.0...v5.40.0) (2019-01-15)\n\n### Bug Fixes\n\n- **ui-forms:** pass NumberInput props to input ([4b61a84](https://github.com/instructure/instructure-ui/commit/4b61a84))\n- **ui-overlays:** ensure null can be passed as children to Modal ([80d7483](https://github.com/instructure/instructure-ui/commit/80d7483))\n- **ui-test-utils:** use MutationObserver shim ([2b0128c](https://github.com/instructure/instructure-ui/commit/2b0128c))\n\n### Features\n\n- **ui-presets:** check if version is published already ([57b8e8f](https://github.com/instructure/instructure-ui/commit/57b8e8f))\n\n<a name=\"5.39.0\"></a>\n\n# [5.39.0](https://github.com/instructure/instructure-ui/compare/v5.38.0...v5.39.0) (2019-01-11)\n\n### Bug Fixes\n\n- **docs-app:** add missing changelog in docs ([7c18ccd](https://github.com/instructure/instructure-ui/commit/7c18ccd))\n- **NumberInput:** display '0' passed as a number ([4935f95](https://github.com/instructure/instructure-ui/commit/4935f95))\n- **ui-forms:** fix disabled opacity for select options ([66101a6](https://github.com/instructure/instructure-ui/commit/66101a6))\n- **ui-overlays:** prevent ModalBody focus when scrollable ([a1fafa5](https://github.com/instructure/instructure-ui/commit/a1fafa5))\n- **ui-overlays:** set Modal transition to 0s for IE11 ([7a669e5](https://github.com/instructure/instructure-ui/commit/7a669e5))\n- **ui-pagination:** Fix hidden label text layout ([4b15da4](https://github.com/instructure/instructure-ui/commit/4b15da4))\n\n### Features\n\n- **ui-billboard:** use link color for billboard message ([d0049db](https://github.com/instructure/instructure-ui/commit/d0049db))\n- **ui-decorator:** add a ui-decorator package/util ([8179186](https://github.com/instructure/instructure-ui/commit/8179186))\n- **ui-overlays:** add inverse variant to modal ([d0f6332](https://github.com/instructure/instructure-ui/commit/d0f6332))\n- **ui-test-utils:** add MutationObserver, setImmediate shims ([97adeba](https://github.com/instructure/instructure-ui/commit/97adeba))\n- **uid:** Add a uid package/util ([279bcda](https://github.com/instructure/instructure-ui/commit/279bcda))\n\n<a name=\"5.38.0\"></a>\n\n# [5.38.0](https://github.com/instructure/instructure-ui/compare/v5.37.0...v5.38.0) (2019-01-04)\n\n### Bug Fixes\n\n- **ui-a11y,ui-test-utils:** handle iframes with inaccessible documents ([f155829](https://github.com/instructure/instructure-ui/commit/f155829))\n- **ui-form-field:** ensure legend is the first child of fieldset ([1bd67a5](https://github.com/instructure/instructure-ui/commit/1bd67a5))\n- **ui-forms:** use pointer cursor for toggle ([75d00d2](https://github.com/instructure/instructure-ui/commit/75d00d2))\n- **ui-overlays:** remove border-radius from fullscreen modal ([552ab68](https://github.com/instructure/instructure-ui/commit/552ab68))\n- **ui-overlays:** stop Modal inheriting parent font color ([68eb293](https://github.com/instructure/instructure-ui/commit/68eb293))\n- **ui-test-utils:** logic that determines visibility is incorrect ([f0d59b1](https://github.com/instructure/instructure-ui/commit/f0d59b1))\n\n### Features\n\n- **media-capture:** Update type for returned file ([6238b6f](https://github.com/instructure/instructure-ui/commit/6238b6f))\n- **ui-docs-client:** use Button in docs nav ([36bd57e](https://github.com/instructure/instructure-ui/commit/36bd57e))\n- **ui-icons:** update lti sketch file with existing integrations icon ([85a8e49](https://github.com/instructure/instructure-ui/commit/85a8e49))\n- **ui-layout:** allow node to be passed to Media description ([2987cd3](https://github.com/instructure/instructure-ui/commit/2987cd3))\n- **ui-overlays:** add a 'regular' size tray option ([396b9ad](https://github.com/instructure/instructure-ui/commit/396b9ad))\n- **ui-tree-browser:** allow item thumbnails in TreeBrowser ([a1ec11b](https://github.com/instructure/instructure-ui/commit/a1ec11b))\n\n<a name=\"5.37.0\"></a>\n\n# [5.37.0](https://github.com/instructure/instructure-ui/compare/v5.36.0...v5.37.0) (2018-12-18)\n\n### Bug Fixes\n\n- **ui-a11y,ui-overlays:** shift+tab shouldn't skip Popover trigger ([8838a11](https://github.com/instructure/instructure-ui/commit/8838a11))\n- **ui-billboard:** fix margin + href/onClick alignment issues ([181746a](https://github.com/instructure/instructure-ui/commit/181746a))\n- **ui-docs-client,ui-docs-plugin:** fix ES path in usage examples ([2bd2baa](https://github.com/instructure/instructure-ui/commit/2bd2baa))\n- **ui-elements:** truncateText should handle the empty string ([ff2f69d](https://github.com/instructure/instructure-ui/commit/ff2f69d))\n- **ui-elements:** update focus styles to use outline ([1b044d3](https://github.com/instructure/instructure-ui/commit/1b044d3))\n- **ui-forms:** eliminate unnecessary console warnings in Select ([9d9c3de](https://github.com/instructure/instructure-ui/commit/9d9c3de))\n- **ui-forms:** fix the closeOnSelect prop in Select ([2b6b5f4](https://github.com/instructure/instructure-ui/commit/2b6b5f4))\n- **ui-layout:** add default max-width to View styles ([019557b](https://github.com/instructure/instructure-ui/commit/019557b))\n\n### Features\n\n- **ui-elements:** add layout prop to Table ([976a2f7](https://github.com/instructure/instructure-ui/commit/976a2f7))\n- **ui-icons:** add 'duplicate' icon ([b79ddb5](https://github.com/instructure/instructure-ui/commit/b79ddb5))\n\n<a name=\"5.36.0\"></a>\n\n# [5.36.0](https://github.com/instructure/instructure-ui/compare/v5.35.0...v5.36.0) (2018-12-12)\n\n### Bug Fixes\n\n- **ui-a11y:** Fix opening non kb focusable dialog from another dialog ([cf3af9a](https://github.com/instructure/instructure-ui/commit/cf3af9a))\n- **ui-elements:** fix delimeter in HC mode - IE11/EDGE ([9af87dc](https://github.com/instructure/instructure-ui/commit/9af87dc))\n- **ui-elements,ui-overlays:** Focus state for truncated Pill ([a5d5b1b](https://github.com/instructure/instructure-ui/commit/a5d5b1b))\n- **ui-number-input:** add missing dotfiles ([372eea9](https://github.com/instructure/instructure-ui/commit/372eea9))\n- **ui-overlays,ui-a11y:** fix Popover with inline content ([6ec67ad](https://github.com/instructure/instructure-ui/commit/6ec67ad))\n\n### Features\n\n- **ui-forms:** display dashed line around FileDrop component in default state ([9c9181d](https://github.com/instructure/instructure-ui/commit/9c9181d))\n- **ui-presets,ui-test-utils:** add karma viewport plugin ([138a2f8](https://github.com/instructure/instructure-ui/commit/138a2f8))\n\n<a name=\"5.35.0\"></a>\n\n# [5.35.0](https://github.com/instructure/instructure-ui/compare/v5.34.0...v5.35.0) (2018-12-06)\n\n### Bug Fixes\n\n- **ui-a11y:** hide iframe content from screenreaders when outside of focus region ([573ef9d](https://github.com/instructure/instructure-ui/commit/573ef9d))\n- **ui-buttons,ui-elements,ui-forms:** remove aria-disabled for input components ([512fb92](https://github.com/instructure/instructure-ui/commit/512fb92))\n- **ui-elements:** fix focus outline for ellipsis Links ([7365c3c](https://github.com/instructure/instructure-ui/commit/7365c3c))\n- **ui-form-field:** add missing files to ui-form-field package ([ace6c0e](https://github.com/instructure/instructure-ui/commit/ace6c0e))\n- **ui-forms:** fix focus outline for fixed-width TextArea ([dad6e65](https://github.com/instructure/instructure-ui/commit/dad6e65))\n- **ui-forms:** focus lost with RadioInputGroup in Dialog ([73f7fb8](https://github.com/instructure/instructure-ui/commit/73f7fb8))\n- **ui-forms:** include select option groups in onChange ([f45c04b](https://github.com/instructure/instructure-ui/commit/f45c04b))\n- **ui-forms:** prevent disabled and readonly selects from expanding ([b9c3586](https://github.com/instructure/instructure-ui/commit/b9c3586))\n- **ui-forms:** prevent select arrow icon shrinking ([e47af0b](https://github.com/instructure/instructure-ui/commit/e47af0b))\n- **ui-forms:** TextArea overflow and focus ring updates ([4157ea9](https://github.com/instructure/instructure-ui/commit/4157ea9))\n- **ui-layout:** margin warning shouldn't apply to flexed elements ([854f3a3](https://github.com/instructure/instructure-ui/commit/854f3a3))\n- **ui-layout:** position miscalculates offset with body margin ([bb16787](https://github.com/instructure/instructure-ui/commit/bb16787))\n- **ui-overlays:** simplify Modal to rely solely on open prop in place of state ([a52ceaf](https://github.com/instructure/instructure-ui/commit/a52ceaf))\n- **ui-tabs,ui-utils:** allow null children in TabList ([496fceb](https://github.com/instructure/instructure-ui/commit/496fceb))\n- **ui-test-utils:** handle React 16 uncaught errors ([7fd8bec](https://github.com/instructure/instructure-ui/commit/7fd8bec))\n- **ui-testable:** look up the DOM node inside the timeout ([e212f64](https://github.com/instructure/instructure-ui/commit/e212f64))\n\n### Features\n\n- **debounce,ui-utils:** add debounce package ([862294b](https://github.com/instructure/instructure-ui/commit/862294b))\n- **ui-buttons,ui-elements,ui-themes:** update link color for standard theme ([78a18fa](https://github.com/instructure/instructure-ui/commit/78a18fa)), closes [#2578](https://github.com/instructure/instructure-ui/issues/2578)\n- **ui-editable,ui-elements:** In place edit ([d98d6b4](https://github.com/instructure/instructure-ui/commit/d98d6b4))\n- **ui-number-input:** add controlled NumberInput ([0d71026](https://github.com/instructure/instructure-ui/commit/0d71026))\n- **ui-test-utils:** add findParent, findParents utils ([1d5aeb7](https://github.com/instructure/instructure-ui/commit/1d5aeb7))\n- **ui-test-utils:** add selector to query failure messages ([e77358e](https://github.com/instructure/instructure-ui/commit/e77358e))\n- **ui-test-utils:** support Sizzle selectors ([65481ff](https://github.com/instructure/instructure-ui/commit/65481ff))\n\n<a name=\"5.34.0\"></a>\n\n# [5.34.0](https://github.com/instructure/instructure-ui/compare/v5.33.0...v5.34.0) (2018-11-20)\n\n### Bug Fixes\n\n- **ui-forms:** SelectSingle capitalization ([c740561](https://github.com/instructure/instructure-ui/commit/c740561))\n\n### Features\n\n- **ui-elements:** copy focusable styles to link ([36e76e9](https://github.com/instructure/instructure-ui/commit/36e76e9))\n- **ui-focusable:** update focus outline to 2px ([962e689](https://github.com/instructure/instructure-ui/commit/962e689))\n- **ui-forms:** copy focusable styles to numberinput ([e865a02](https://github.com/instructure/instructure-ui/commit/e865a02))\n- **ui-forms:** update focus styles for Select ([3d6912b](https://github.com/instructure/instructure-ui/commit/3d6912b))\n- **ui-icons:** add new icons ([4a83f6b](https://github.com/instructure/instructure-ui/commit/4a83f6b))\n- **ui-tree-browser:** update TreeBrowser styles ([3c8bc94](https://github.com/instructure/instructure-ui/commit/3c8bc94))\n- **ui-tree-browser:** use outlined icons for TreeBrowser ([5d89c38](https://github.com/instructure/instructure-ui/commit/5d89c38))\n\n<a name=\"5.33.0\"></a>\n\n# [5.33.0](https://github.com/instructure/instructure-ui/compare/v5.32.0...v5.33.0) (2018-11-14)\n\n### Bug Fixes\n\n- **ui-elements:** increase maxWidth of Pill ([ce94e5f](https://github.com/instructure/instructure-ui/commit/ce94e5f))\n- **ui-forms:** fix aria-checked on checkbox ([42351cc](https://github.com/instructure/instructure-ui/commit/42351cc))\n- **ui-layout:** FlexItems width fix ([b161d96](https://github.com/instructure/instructure-ui/commit/b161d96))\n- **ui-test-utils:** locator find/findAll return component root ([5866235](https://github.com/instructure/instructure-ui/commit/5866235))\n- **ui-test-utils:** update clickable requirement ([ef9d12d](https://github.com/instructure/instructure-ui/commit/ef9d12d))\n\n### Features\n\n- **media-capture:** Allow MediaCapture to work without a webcam ([1fd0ba7](https://github.com/instructure/instructure-ui/commit/1fd0ba7))\n- **ui-forms:** update TextArea focus styles ([19ae400](https://github.com/instructure/instructure-ui/commit/19ae400))\n- **ui-forms:** update TextInput focus styles ([8acc504](https://github.com/instructure/instructure-ui/commit/8acc504))\n- **ui-layout:** add omitViewProps function to View ([55556a4](https://github.com/instructure/instructure-ui/commit/55556a4))\n- **ui-overlays:** add test fixture for Popover, Tooltip, Position ([aea476a](https://github.com/instructure/instructure-ui/commit/aea476a))\n- **ui-presets:** Use major version for x-package deps ([47b793b](https://github.com/instructure/instructure-ui/commit/47b793b))\n- **ui-test-utils:** add tabbable, clickable helpers ([2fbe6c2](https://github.com/instructure/instructure-ui/commit/2fbe6c2))\n\n### Performance Improvements\n\n- **ui-overlays:** fix ref in Mask to work w/shallowCompare ([0a0a706](https://github.com/instructure/instructure-ui/commit/0a0a706))\n\n<a name=\"5.32.0\"></a>\n\n# [5.32.0](https://github.com/instructure/instructure-ui/compare/v5.31.0...v5.32.0) (2018-10-31)\n\n### Bug Fixes\n\n- **ui-i18n:** fix moment-timezone double import ([b2662a0](https://github.com/instructure/instructure-ui/commit/b2662a0))\n- **ui-test-utils:** fix event firing ([3852beb](https://github.com/instructure/instructure-ui/commit/3852beb))\n\n### Features\n\n- **ui-buttons:** update tests to run on React 16 ([8c3b7c8](https://github.com/instructure/instructure-ui/commit/8c3b7c8))\n- **ui-forms:** allow SingleSelect to accept arbitrary typed input ([8e324c8](https://github.com/instructure/instructure-ui/commit/8e324c8))\n- **ui-icons:** add filter icon to iconography ([5f8162e](https://github.com/instructure/instructure-ui/commit/5f8162e))\n- **ui-navigation:** update tests to run on React 16 ([9ea84f2](https://github.com/instructure/instructure-ui/commit/9ea84f2))\n\n### Performance Improvements\n\n- **ui-overlays:** improve perf of <Modal> ([dc1085f](https://github.com/instructure/instructure-ui/commit/dc1085f))\n- **ui-overlays:** improve perf of <Tray> ([7b4e622](https://github.com/instructure/instructure-ui/commit/7b4e622))\n- **ui-themeable:** avoid a forEach loop when possible ([3273839](https://github.com/instructure/instructure-ui/commit/3273839))\n- **ui-utils:** simplify getClassList since all browsers we support have classList API ([d388c04](https://github.com/instructure/instructure-ui/commit/d388c04))\n\n<a name=\"5.31.0\"></a>\n\n# [5.31.0](https://github.com/instructure/instructure-ui/compare/v5.30.0...v5.31.0) (2018-10-26)\n\n### Bug Fixes\n\n- **media-capture:** esc key propagation for device inputs ([ea04778](https://github.com/instructure/instructure-ui/commit/ea04778))\n- **ui-a11y:** fix focus trapping for Dialog ([945b74c](https://github.com/instructure/instructure-ui/commit/945b74c))\n- **ui-elements:** Link role, type, tabIndex ([f42ab3b](https://github.com/instructure/instructure-ui/commit/f42ab3b))\n- **ui-focusable:** fix display property ([08a0bd5](https://github.com/instructure/instructure-ui/commit/08a0bd5))\n- **ui-forms:** DateInput should reset given an empty value ([b2130f8](https://github.com/instructure/instructure-ui/commit/b2130f8))\n- **ui-forms:** fix autogrow + resize interaction ([b65fdcd](https://github.com/instructure/instructure-ui/commit/b65fdcd))\n- **ui-layout,ui-overlays,ui-portal:** prevent error when Portal DOM node is not defined ([ad29d11](https://github.com/instructure/instructure-ui/commit/ad29d11))\n- **ui-presets:** fix publish-packages script ([1cca5af](https://github.com/instructure/instructure-ui/commit/1cca5af))\n- **ui-test-utils:** .focus helper should programmatically focus ([36abbd6](https://github.com/instructure/instructure-ui/commit/36abbd6))\n- **ui-test-utils:** add tests for components that render null ([e684860](https://github.com/instructure/instructure-ui/commit/e684860))\n- **ui-test-utils:** filter in query instead of after ([50ae1c5](https://github.com/instructure/instructure-ui/commit/50ae1c5))\n- **ui-test-utils:** fix setContext method ([6834f87](https://github.com/instructure/instructure-ui/commit/6834f87))\n- **ui-test-utils,ui-testbed:** queries should work with SVG elements ([a25f720](https://github.com/instructure/instructure-ui/commit/a25f720))\n\n### Features\n\n- **ui-billboard:** update tests to run on React 16 ([a9b7912](https://github.com/instructure/instructure-ui/commit/a9b7912))\n- **ui-breadcrumb:** update tests to run on React 16 ([02e9900](https://github.com/instructure/instructure-ui/commit/02e9900))\n- **ui-layout,View:** add light option to background prop ([764a372](https://github.com/instructure/instructure-ui/commit/764a372))\n- **ui-presets:** add warning for non-async tests ([00033a3](https://github.com/instructure/instructure-ui/commit/00033a3))\n- **ui-presets:** upgrade eslint ([a1dcf1f](https://github.com/instructure/instructure-ui/commit/a1dcf1f))\n- **ui-svg-images:** update tests to run on React 16 ([0f4e40a](https://github.com/instructure/instructure-ui/commit/0f4e40a))\n- **ui-test-utils:** add spy on Event.preventDefault, focusable selector ([1e68a42](https://github.com/instructure/instructure-ui/commit/1e68a42))\n\n### Reverts\n\n- WIP(\\*): adding Accessibility documentation to the docs ([f082fa4](https://github.com/instructure/instructure-ui/commit/f082fa4))\n\n<a name=\"5.30.0\"></a>\n\n# [5.30.0](https://github.com/instructure/instructure-ui/compare/v5.29.0...v5.30.0) (2018-09-27)\n\n### Bug Fixes\n\n- **ui-portal:** ui-testable should be a dependency ([64117ad](https://github.com/instructure/instructure-ui/commit/64117ad))\n- **ui-portal,ui-test-utils:** return a DOM node from getComponentRoot ([2903d29](https://github.com/instructure/instructure-ui/commit/2903d29))\n\n### Features\n\n- **ui-test-utils:** add hasClass helper to test utils ([72c21ad](https://github.com/instructure/instructure-ui/commit/72c21ad))\n- **ui-test-utils:** add utils for making custom queries ([7ca0da9](https://github.com/instructure/instructure-ui/commit/7ca0da9))\n\n<a name=\"5.29.0\"></a>\n\n# [5.29.0](https://github.com/instructure/instructure-ui/compare/v5.28.1...v5.29.0) (2018-09-26)\n\n### Bug Fixes\n\n- **generate-examples:** add npmignore ([80e54cb](https://github.com/instructure/instructure-ui/commit/80e54cb))\n- **ui-elements,ui-utils:** prevent TruncateText from rendering hidden text ([b489a32](https://github.com/instructure/instructure-ui/commit/b489a32))\n- **ui-portal,ui-test-utils:** fix empty selectors for testable.findAll ([1ced426](https://github.com/instructure/instructure-ui/commit/1ced426))\n- **ui-test-utils:** clear themeable stylesheet between tests ([215f075](https://github.com/instructure/instructure-ui/commit/215f075))\n- **ui-test-utils:** expectEmpty should work with testable.findAll ([3cf77f9](https://github.com/instructure/instructure-ui/commit/3cf77f9))\n- **ui-test-utils:** fix findAll by label ([bbb3a8b](https://github.com/instructure/instructure-ui/commit/bbb3a8b))\n- **ui-test-utils:** fix query by attribute ([b6ba1ad](https://github.com/instructure/instructure-ui/commit/b6ba1ad))\n- **ui-test-utils:** fix query by text/contents ([5f1cf80](https://github.com/instructure/instructure-ui/commit/5f1cf80))\n- **ui-test-utils:** fix testable component matches ([255fef7](https://github.com/instructure/instructure-ui/commit/255fef7))\n\n### Features\n\n- **ui-breadcrumb:** add icon support ([aab8e8c](https://github.com/instructure/instructure-ui/commit/aab8e8c))\n- **ui-test-utils:** Add a ui-test-utils package ([1e9f4ec](https://github.com/instructure/instructure-ui/commit/1e9f4ec))\n- **ui-test-utils:** add helpers to get tag, computedStyle ([b456764](https://github.com/instructure/instructure-ui/commit/b456764))\n\n<a name=\"5.28.1\"></a>\n\n## [5.28.1](https://github.com/instructure/instructure-ui/compare/v5.28.0...v5.28.1) (2018-09-18)\n\n### Bug Fixes\n\n- **ui-breadcrumb:** vertical alignment ([699416a](https://github.com/instructure/instructure-ui/commit/699416a))\n- **ui-forms:** fix asyncronous Select option highlighting ([5638ccb](https://github.com/instructure/instructure-ui/commit/5638ccb))\n- **ui-forms:** Fix time input in DateTimeInput ([372d8ff](https://github.com/instructure/instructure-ui/commit/372d8ff))\n\n<a name=\"5.28.0\"></a>\n\n# [5.28.0](https://github.com/instructure/instructure-ui/compare/v5.27.0...v5.28.0) (2018-09-13)\n\n### Bug Fixes\n\n- **ui-elements:** escape HTML strings used in TruncateText measurements ([3c7d7a7](https://github.com/instructure/instructure-ui/commit/3c7d7a7))\n- **ui-forms:** Render selected option when not exist in options ([c821efa](https://github.com/instructure/instructure-ui/commit/c821efa))\n- **ui-forms:** Update DateTimeInput when changing locale or timezone ([524307d](https://github.com/instructure/instructure-ui/commit/524307d))\n\n### Features\n\n- **ui-overlays:** add constrain to Modal ([3392939](https://github.com/instructure/instructure-ui/commit/3392939))\n- **ui-tree-browser:** add selection styling to TreeBrowser ([4643c66](https://github.com/instructure/instructure-ui/commit/4643c66))\n\n<a name=\"5.27.0\"></a>\n\n# [5.27.0](https://github.com/instructure/instructure-ui/compare/v5.26.0...v5.27.0) (2018-09-10)\n\n### Bug Fixes\n\n- **pkg-utils:** downgrade lerna to fix the release script ([7bfc540](https://github.com/instructure/instructure-ui/commit/7bfc540))\n- **ui-buttons:** no role=\"button\" for buttons ([be78aac](https://github.com/instructure/instructure-ui/commit/be78aac))\n\n### Features\n\n- **docs-examples,generate-examples:** autogenerate component examples ([b50fae5](https://github.com/instructure/instructure-ui/commit/b50fae5))\n\n<a name=\"5.26.0\"></a>\n\n# [5.26.0](https://github.com/instructure/instructure-ui/compare/v5.25.0...v5.26.0) (2018-09-06)\n\n### Bug Fixes\n\n- **ui-a11y:** evaluate functional liveRegion prop in ScreenReaderFocusRegion ([3425bf7](https://github.com/instructure/instructure-ui/commit/3425bf7))\n- **ui-a11y:** remove aria-hidden before node is removed ([112f9ba](https://github.com/instructure/instructure-ui/commit/112f9ba))\n- **ui-forms:** invalid aria attributes when closed ([410f1a9](https://github.com/instructure/instructure-ui/commit/410f1a9))\n- **ui-forms:** Update input when selected options updated ([128e3dd](https://github.com/instructure/instructure-ui/commit/128e3dd))\n- **ui-layout:** improve vertical margin warning on View ([9c4fb19](https://github.com/instructure/instructure-ui/commit/9c4fb19))\n- **ui-menu,ui-overlays:** Remove aria-expanded from Menu ([2ea110d](https://github.com/instructure/instructure-ui/commit/2ea110d))\n- **ui-presets:** don't write incorrect npmrc files ([0528899](https://github.com/instructure/instructure-ui/commit/0528899))\n- **ui-presets:** pass args to karma ([5cbeb21](https://github.com/instructure/instructure-ui/commit/5cbeb21))\n\n### Features\n\n- **ui-axe-check:** Add axe-core wrapper utility ([3264318](https://github.com/instructure/instructure-ui/commit/3264318))\n- **ui-docs-client:** add figure/guideline for do/don't section ([b253910](https://github.com/instructure/instructure-ui/commit/b253910))\n- **ui-menu,ui-overlays:** add constrain prop to tooltip and menu ([98797aa](https://github.com/instructure/instructure-ui/commit/98797aa))\n- **ui-presets:** Add --no-headless flag for karma ([be4b0c0](https://github.com/instructure/instructure-ui/commit/be4b0c0))\n\n<a name=\"5.25.0\"></a>\n\n# [5.25.0](https://github.com/instructure/instructure-ui/compare/v5.24.0...v5.25.0) (2018-08-24)\n\n### Bug Fixes\n\n- **ui-breadcrumb:** Implement WebAIM recommendations ([4e3ec0e](https://github.com/instructure/instructure-ui/commit/4e3ec0e))\n- **ui-buttons,ui-elements:** Fix Safari focus issue ([7825b13](https://github.com/instructure/instructure-ui/commit/7825b13))\n- **ui-forms:** do not clear input when receiving new options ([e4ca8ca](https://github.com/instructure/instructure-ui/commit/e4ca8ca))\n- **ui-forms:** fix select expand/collapse click events ([3d3bcc1](https://github.com/instructure/instructure-ui/commit/3d3bcc1))\n- **ui-forms:** RangeInput needs min-width ([d1118d1](https://github.com/instructure/instructure-ui/commit/d1118d1))\n- **ui-forms,ui-layout:** add constrain prop to select ([25bfc2e](https://github.com/instructure/instructure-ui/commit/25bfc2e))\n- **ui-layout:** account for stretch positioning in constrain logic ([d21ac1c](https://github.com/instructure/instructure-ui/commit/d21ac1c))\n\n### Features\n\n- **ui-pagination:** Add tooltips to Pagination ([0df511b](https://github.com/instructure/instructure-ui/commit/0df511b))\n\n### Performance Improvements\n\n- **babel-plugin-themeable-styles,ui-themeable:** more small perf improvements ([cf51ab9](https://github.com/instructure/instructure-ui/commit/cf51ab9))\n\n<a name=\"5.24.0\"></a>\n\n# [5.24.0](https://github.com/instructure/instructure-ui/compare/v5.23.0...v5.24.0) (2018-08-08)\n\n### Bug Fixes\n\n- **ui-docs-client,ui-themeable:** always apply theme when component updates ([a9f7d74](https://github.com/instructure/instructure-ui/commit/a9f7d74))\n- **ui-elements:** add aria attributes to Rating ([9b859ba](https://github.com/instructure/instructure-ui/commit/9b859ba))\n- **ui-elements:** remove relative import ([d0a184e](https://github.com/instructure/instructure-ui/commit/d0a184e))\n- **ui-forms:** clear out DateInput when passed an empty value ([0b8bbcb](https://github.com/instructure/instructure-ui/commit/0b8bbcb))\n- **ui-layout:** Make Flex ignore null children ([c49ec3d](https://github.com/instructure/instructure-ui/commit/c49ec3d))\n- **ui-presets:** trim command results ([eeb62c0](https://github.com/instructure/instructure-ui/commit/eeb62c0))\n- **ui-themeable,ui-themes,ui-utils:** remove immutable variable ([5b6178e](https://github.com/instructure/instructure-ui/commit/5b6178e))\n\n### Features\n\n- **ui-buttons:** add cursor prop to Button ([b47fbb5](https://github.com/instructure/instructure-ui/commit/b47fbb5))\n- **ui-elements:** add warning and message variants to pill ([7665242](https://github.com/instructure/instructure-ui/commit/7665242))\n\n### Performance Improvements\n\n- get babel helpers from 'babel-runtime' instead of inlining them ([1472658](https://github.com/instructure/instructure-ui/commit/1472658))\n- **ui-presets:** add babel constant elements transform ([a62f424](https://github.com/instructure/instructure-ui/commit/a62f424))\n\n<a name=\"5.23.0\"></a>\n\n# [5.23.0](https://github.com/instructure/instructure-ui/compare/v5.22.0...v5.23.0) (2018-08-03)\n\n### Bug Fixes\n\n- **docs-app:** fix codepens ([4c755f5](https://github.com/instructure/instructure-ui/commit/4c755f5))\n- **ui-buttons,ui-elements:** Fix event target ([8e29910](https://github.com/instructure/instructure-ui/commit/8e29910))\n- **ui-presets:** fix bump script ([14e6668](https://github.com/instructure/instructure-ui/commit/14e6668))\n\n### Features\n\n- **ui-elements:** handle Pill overflow with Tooltip ([64d75d1](https://github.com/instructure/instructure-ui/commit/64d75d1))\n- **ui-media-player:** Add SourceChooser to VideoPlayerControls ([44fdb71](https://github.com/instructure/instructure-ui/commit/44fdb71))\n- **ui-presets:** add an install-react script ([d4e87fe](https://github.com/instructure/instructure-ui/commit/d4e87fe))\n- **ui-presets:** Allow files passed to ui-test --lint ([47c1e5c](https://github.com/instructure/instructure-ui/commit/47c1e5c))\n- **ui-presets:** better cross platform support for scripts ([9343a7e](https://github.com/instructure/instructure-ui/commit/9343a7e))\n- **ui-presets:** run tests with react 15 and 16 ([148fe88](https://github.com/instructure/instructure-ui/commit/148fe88))\n- **ui-tree-browser:** improve aria support ([bad6cc9](https://github.com/instructure/instructure-ui/commit/bad6cc9))\n\n### Performance Improvements\n\n- **ui-buttons,ui-tabs:** a couple more small perf improvements ([2b00c1b](https://github.com/instructure/instructure-ui/commit/2b00c1b))\n\n<a name=\"5.22.0\"></a>\n\n# [5.22.0](https://github.com/instructure/instructure-ui/compare/v5.21.0...v5.22.0) (2018-07-27)\n\n### Bug Fixes\n\n- move React/ReactDOM back to peerDependencies ([99e9458](https://github.com/instructure/instructure-ui/commit/99e9458))\n- **docs:** add id to README ([d3a43d4](https://github.com/instructure/instructure-ui/commit/d3a43d4))\n- **ui-elements:** prevent invalid props error for Text ([1452a12](https://github.com/instructure/instructure-ui/commit/1452a12))\n- **ui-themeable,ui-themes:** fix theme.use({ accessible: true }) ([fe07a3a](https://github.com/instructure/instructure-ui/commit/fe07a3a))\n\n### Features\n\n- **ui-presets:** Separate out node test from karma ([01aea24](https://github.com/instructure/instructure-ui/commit/01aea24))\n\n### Performance Improvements\n\n- **ui-buttons:** speed up <Button>s ([54d7c71](https://github.com/instructure/instructure-ui/commit/54d7c71))\n- **ui-elements:** speed up <Text> ([6fff58b](https://github.com/instructure/instructure-ui/commit/6fff58b))\n- **ui-forms:** don't even render options <ul> when not open ([e3fa113](https://github.com/instructure/instructure-ui/commit/e3fa113))\n- **ui-i18n:** cache the default \"dir\" lookup ([ac746a8](https://github.com/instructure/instructure-ui/commit/ac746a8))\n- **ui-layout:** avoid View::verifySpanMargin check in prod ([b0c2691](https://github.com/instructure/instructure-ui/commit/b0c2691))\n- **ui-utils:** a faster uid() ([d0fc68e](https://github.com/instructure/instructure-ui/commit/d0fc68e))\n- **ui-utils:** speed up pickProps and omitProps ([e286ef6](https://github.com/instructure/instructure-ui/commit/e286ef6))\n\n<a name=\"5.21.0\"></a>\n\n# [5.21.0](https://github.com/instructure/instructure-ui/compare/v5.20.1...v5.21.0) (2018-07-25)\n\n### Bug Fixes\n\n- add React,React-DOM 16 to dependencies ([d49430f](https://github.com/instructure/instructure-ui/commit/d49430f))\n- fix typo in \\`build:examples\\` script ([e0f9772](https://github.com/instructure/instructure-ui/commit/e0f9772))\n- **ui-a11y:** remove role presentation on PresentationContent ([0c777a0](https://github.com/instructure/instructure-ui/commit/0c777a0))\n- **ui-buttons:** prevent error on null child in Button component ([5681198](https://github.com/instructure/instructure-ui/commit/5681198))\n- **ui-docs-plugin:** fix docs build w/ docker ([565147e](https://github.com/instructure/instructure-ui/commit/565147e))\n- **ui-elements,ui-focusable,ui-navigation:** docs app fixes ([fe4f121](https://github.com/instructure/instructure-ui/commit/fe4f121))\n- **ui-forms:** prevent scroll jumping with long textareas ([61d7a2e](https://github.com/instructure/instructure-ui/commit/61d7a2e))\n- **ui-layout:** fix position constrain logic ([656d7c1](https://github.com/instructure/instructure-ui/commit/656d7c1))\n- **ui-motion:** apply aria-hidden to transition content when transitioned out ([ca818c1](https://github.com/instructure/instructure-ui/commit/ca818c1))\n\n### Features\n\n- **ui-alerts,ui-icons:** update/add icons, update icons within alerts ([da0c3f6](https://github.com/instructure/instructure-ui/commit/da0c3f6))\n- **ui-elements,ui-themes:** add link decoration brand variable to canvas theme ([e88ca27](https://github.com/instructure/instructure-ui/commit/e88ca27))\n- **ui-overlays:** make label prop required for overlay ([3fdd14c](https://github.com/instructure/instructure-ui/commit/3fdd14c))\n\n### Performance Improvements\n\n- **ui-buttons:** avoid work just to show a warning in production ([0f2cbe9](https://github.com/instructure/instructure-ui/commit/0f2cbe9))\n- **ui-themeable:** avoid doing work per-instance ([9b2a84c](https://github.com/instructure/instructure-ui/commit/9b2a84c))\n- **ui-themeable:** only run the code that adds \"dir\" to <html> once ([954ab88](https://github.com/instructure/instructure-ui/commit/954ab88))\n- **ui-utils:** use a constant array in omitProps to avoid garbage ([6b5d868](https://github.com/instructure/instructure-ui/commit/6b5d868))\n\n<a name=\"5.20.1\"></a>\n\n## [5.20.1](https://github.com/instructure/instructure-ui/compare/v5.20.0...v5.20.1) (2018-07-18)\n\n### Bug Fixes\n\n- **ui-presets:** more release script updates ([387808c](https://github.com/instructure/instructure-ui/commit/387808c))\n- **ui-utils:** fix recent change of `DeprecatedComponent` ([c7dd5d7](https://github.com/instructure/instructure-ui/commit/c7dd5d7))\n- **ui-utils,ui-themeable:** fix bug applying high-contrast theme ([f42b126](https://github.com/instructure/instructure-ui/commit/f42b126))\n\n<a name=\"5.20.0\"></a>\n\n# [5.20.0](https://github.com/instructure/instructure-ui/compare/v5.19.0...v5.20.0) (2018-07-17)\n\n### Bug Fixes\n\n- **docker,ui-presets:** fix a few bugs with the post-publish script ([c75f5cc](https://github.com/instructure/instructure-ui/commit/c75f5cc))\n- **ui-a11y:** resolve issues with multiple focus regions in FF and Safari ([a6cc584](https://github.com/instructure/instructure-ui/commit/a6cc584))\n- **ui-elements:** Improve circle Progress for SRs ([76c6ecb](https://github.com/instructure/instructure-ui/commit/76c6ecb))\n\n### Features\n\n- **ui-elements:** add constrain prop to Img ([d2911a2](https://github.com/instructure/instructure-ui/commit/d2911a2))\n- **ui-presets:** Include changelogs in rc packages ([edd1873](https://github.com/instructure/instructure-ui/commit/edd1873))\n\n<a name=\"5.19.0\"></a>\n\n# [5.19.0](https://github.com/instructure/instructure-ui/compare/v5.18.0...v5.19.0) (2018-07-12)\n\n### Bug Fixes\n\n- **babel-plugin-themeable-styles,ui-presets:** add hashPrefix to CSS classes ([3e0d269](https://github.com/instructure/instructure-ui/commit/3e0d269))\n- **docs,ui-docs-client:** make menu closed by default ([2f5b14f](https://github.com/instructure/instructure-ui/commit/2f5b14f))\n- **ui-a11y:** dismiss FocusRegion even when source event's default is prevented ([babd1fc](https://github.com/instructure/instructure-ui/commit/babd1fc))\n- **ui-forms:** stop JAWS always reading the first option ([b41bd4f](https://github.com/instructure/instructure-ui/commit/b41bd4f))\n- **ui-presets:** quiet down some noisy output ([09c2789](https://github.com/instructure/instructure-ui/commit/09c2789))\n- **ui-presets:** remove no-verify for bump commit ([b7a6be1](https://github.com/instructure/instructure-ui/commit/b7a6be1))\n\n### Features\n\n- **ui-a11y,ui-focusable:** add Focusable component ([555bb30](https://github.com/instructure/instructure-ui/commit/555bb30))\n- **ui-icons-build,ui-icons:** add es modules version of ui-icons ([b6b8de5](https://github.com/instructure/instructure-ui/commit/b6b8de5))\n- **ui-media-player:** Add Volume to VideoPlayerControls ([762242e](https://github.com/instructure/instructure-ui/commit/762242e))\n\n### Performance Improvements\n\n- **ui-forms,ui-utils:** use 'fast-deep-equal' instead of 'deep-equal' ([7732ff3](https://github.com/instructure/instructure-ui/commit/7732ff3))\n- **ui-themeable:** some things to make themeable faster ([fc0a269](https://github.com/instructure/instructure-ui/commit/fc0a269))\n- **ui-utils:** improve perf of `DeprecatedComponent` in prod ([66888e5](https://github.com/instructure/instructure-ui/commit/66888e5))\n\n<a name=\"5.18.0\"></a>\n\n# [5.18.0](https://github.com/instructure/instructure-ui/compare/v5.17.0...v5.18.0) (2018-07-09)\n\n### Bug Fixes\n\n- **ui-presets:** add git user and email ([f210506](https://github.com/instructure/instructure-ui/commit/f210506))\n\n### Features\n\n- **ui-presets:** move .env variables into package.json for ui-scripts ([5e97982](https://github.com/instructure/instructure-ui/commit/5e97982))\n\n<a name=\"5.17.0\"></a>\n\n# [5.17.0](https://github.com/instructure/instructure-ui/compare/v5.16.0...v5.17.0) (2018-07-06)\n\n### Features\n\n- **ui-icons:** add calculator icon ([df2f9ce](https://github.com/instructure/instructure-ui/commit/df2f9ce))\n\n<a name=\"5.16.0\"></a>\n\n# [5.16.0](https://github.com/instructure/instructure-ui/compare/v5.15.0...v5.16.0) (2018-07-06)\n\n### Bug Fixes\n\n- **ui-layout,ui-motion,ui-overlays:** theme prop should work w/ Portal ([2c20181](https://github.com/instructure/instructure-ui/commit/2c20181))\n- **ui-pagination:** fix perf for lots of pages ([40e18e9](https://github.com/instructure/instructure-ui/commit/40e18e9))\n\n### Features\n\n- **ui-code-editor:** add bash language type to code editor ([5fba1f9](https://github.com/instructure/instructure-ui/commit/5fba1f9))\n- **ui-icons:** add check-mark-indeterminate icon ([886e700](https://github.com/instructure/instructure-ui/commit/886e700))\n- **ui-icons:** add quiz-title and quiz-instructions icon ([6cf0691](https://github.com/instructure/instructure-ui/commit/6cf0691))\n\n<a name=\"5.15.0\"></a>\n\n# [5.15.0](https://github.com/instructure/instructure-ui/compare/v5.14.0...v5.15.0) (2018-06-28)\n\n### Bug Fixes\n\n- **ui-a11y,ui-overlays:** Improve KO navigation for Popover ([8d547ce](https://github.com/instructure/instructure-ui/commit/8d547ce))\n- **ui-presets:** don't PSA for release candidates ([7cf8648](https://github.com/instructure/instructure-ui/commit/7cf8648))\n\n### Features\n\n- **ui-forms:** add screenreader announcements to Select ([0ccfc36](https://github.com/instructure/instructure-ui/commit/0ccfc36))\n\n<a name=\"5.14.0\"></a>\n\n# [5.14.0](https://github.com/instructure/instructure-ui/compare/v5.13.1...v5.14.0) (2018-06-28)\n\n### Bug Fixes\n\n- **cz-lerna-changelog:** ensure changeID is the last element of commit msg ([fe64e52](https://github.com/instructure/instructure-ui/commit/fe64e52))\n- **ui-forms:** [NumberInput](#NumberInput) don't strip trailing zeros ([9ddfeb8](https://github.com/instructure/instructure-ui/commit/9ddfeb8))\n- **ui-a11y:** use unique ids for [FocusRegion](#FocusRegion), [Dialog](#Dialog) ([f4fccb9](https://github.com/instructure/instructure-ui/commit/f4fccb9))\n- **ui-presets:** fix post publish script ([693a7a4](https://github.com/instructure/instructure-ui/commit/693a7a4))\n- **ui-pagination:** make default ArrowIcon for [Pagination](#Pagination) small ([e8d5a95](https://github.com/instructure/instructure-ui/commit/e8d5a95))\n\n### Features\n\n- **ui-forms:** add indeterminate state to [Checkbox](#Checkbox) ([8752390](https://github.com/instructure/instructure-ui/commit/8752390))\n- **ui-svg-images:** add color property to [InlineSVG](#InlineSVG) ([596b9c6](https://github.com/instructure/instructure-ui/commit/596b9c6))\n\n<a name=\"5.13.1\"></a>\n\n## [5.13.1](https://github.com/instructure/instructure-ui/compare/v5.13.0...v5.13.1) (2018-06-22)\n\n### Bug Fixes\n\n- **ui-a11y:** absolutely position offscreen content at top ([f0d6305](https://github.com/instructure/instructure-ui/commit/f0d6305))\n- **ui-a11y:** dialog should return focus on blur ([f7eb47e](https://github.com/instructure/instructure-ui/commit/f7eb47e))\n- **ui-forms:** accept zero for decimal places in [NumberInput](#NumberInput) ([d4cdd6b](https://github.com/instructure/instructure-ui/commit/d4cdd6b))\n- **ui-forms:** don't use window.event in [NumberInput](#NumberInput) ([943a0c9](https://github.com/instructure/instructure-ui/commit/943a0c9))\n- **ui-forms:** handle min={0} and max={0} props in [NumberInput](#NumberInput) ([5b09754](https://github.com/instructure/instructure-ui/commit/5b09754))\n- **ui-forms:** [NumberInput](#NumberInput) onChange w/ updated precision ([fa33d06](https://github.com/instructure/instructure-ui/commit/fa33d06))\n- **ui-forms:** fix inline input and label alignment in [Select](#Select) ([a696dcc](https://github.com/instructure/instructure-ui/commit/a696dcc))\n- **ui-forms:** [Select](#Select) should return focus to input on close ([0baa76f](https://github.com/instructure/instructure-ui/commit/0baa76f))\n- **ui-layout:** [Position](#Position), absolutely position offscreen content ([8c85b25](https://github.com/instructure/instructure-ui/commit/8c85b25))\n\n<a name=\"5.13.0\"></a>\n\n# [5.13.0](https://github.com/instructure/instructure-ui/compare/v5.12.0...v5.13.0) (2018-06-16)\n\n### Bug Fixes\n\n- **cz-lerna-changelog:** pass in config for footer prefix ([9822f1f](https://github.com/instructure/instructure-ui/commit/9822f1f))\n- **karma:** Improve plugin support inside monorepos ([94d0d2a](https://github.com/instructure/instructure-ui/commit/94d0d2a))\n- **NumberInput:** fix controlled component ([1ec816a](https://github.com/instructure/instructure-ui/commit/1ec816a))\n- **Tag:** pass down elementRef ([ccb7a11](https://github.com/instructure/instructure-ui/commit/ccb7a11))\n- **ui-forms:** fix aria-selected values on Select options ([d84098a](https://github.com/instructure/instructure-ui/commit/d84098a))\n- **ui-forms:** Select input shouldn't be wrapped w/label ([4c6e6c1](https://github.com/instructure/instructure-ui/commit/4c6e6c1))\n- **ui-forms,RangeInput:** focus styles for Edge 16 up ([bbdf9e6](https://github.com/instructure/instructure-ui/commit/bbdf9e6))\n- **ui-i18n:** Fix leading zero decimal parsing ([3224dc8](https://github.com/instructure/instructure-ui/commit/3224dc8))\n- **ui-layout:** Make body scrollTop attribute consistent for positioning ([55e5ed2](https://github.com/instructure/instructure-ui/commit/55e5ed2))\n- **ui-presets:** catch error w/ no issues ([0443262](https://github.com/instructure/instructure-ui/commit/0443262))\n- **ui-presets:** include version in slack message ([c762e86](https://github.com/instructure/instructure-ui/commit/c762e86))\n- **ui-presets:** only run deploy after a stable release ([387501c](https://github.com/instructure/instructure-ui/commit/387501c))\n- **ui-presets:** release script changes for Jenkins ([511ddb3](https://github.com/instructure/instructure-ui/commit/511ddb3))\n\n### Features\n\n- **cz-lerna-changelog,ui-presets:** add lerna changelog package ([f7592eb](https://github.com/instructure/instructure-ui/commit/f7592eb))\n- **ui-buttons,Button:** Add circle-default variant ([addb97c](https://github.com/instructure/instructure-ui/commit/addb97c))\n- **ui-elements,Link:** Add icon prop to Link ([8953edb](https://github.com/instructure/instructure-ui/commit/8953edb))\n- **ui-media-player:** Add FullScreenButton to ([2ba3722](https://github.com/instructure/instructure-ui/commit/2ba3722))\n\n<a name=\"5.12.0\"></a>\n\n# [5.12.0](https://github.com/instructure/instructure-ui/compare/v5.11.0...v5.12.0) (2018-06-11)\n\n### Bug Fixes\n\n- **ui-i18n,Decimal:** fix toLocaleString ([b32e06c](https://github.com/instructure/instructure-ui/commit/b32e06c))\n- **ui-elements:** Fix lineHeight default in TruncateText ([cbbf35f](https://github.com/instructure/instructure-ui/commit/cbbf35f))\n- **ui-forms,Select:** Change selected option when Select children update ([5dc9391](https://github.com/instructure/instructure-ui/commit/5dc9391))\n- **ui-presets:** Always pass an npm tag to publish ([da06936](https://github.com/instructure/instructure-ui/commit/da06936))\n- **ui-presets:** Remove meta data from pre-release versions ([ecc8d1c](https://github.com/instructure/instructure-ui/commit/ecc8d1c))\n- **ui-tabs:** add min-width so long string doesn't break layout ([a0a9981](https://github.com/instructure/instructure-ui/commit/a0a9981))\n\n### Features\n\n- **ui-buttons,Button:** Add icon prop ([3e63ef7](https://github.com/instructure/instructure-ui/commit/3e63ef7))\n- **ui-buttons,Button:** Responsive button docs ([4f52006](https://github.com/instructure/instructure-ui/commit/4f52006))\n- **ui-presets:** Add ui-scripts for release and publish ([1e7409f](https://github.com/instructure/instructure-ui/commit/1e7409f))\n\n<a name=\"5.11.0\"></a>\n\n# [5.11.0](https://github.com/instructure/instructure-ui/compare/v5.10.0...v5.11.0) (2018-06-06)\n\n### Bug Fixes\n\n- **docs:** Add Object.values polyfill to fix IE11 ([af17ebd](https://github.com/instructure/instructure-ui/commit/af17ebd))\n- **inputs:** remove negative z-index from radio and checkbox inputs ([b49249b](https://github.com/instructure/instructure-ui/commit/b49249b))\n- **Locale:** use documentElement.lang prior to window.navigator for defaults ([2ea6603](https://github.com/instructure/instructure-ui/commit/2ea6603))\n- **ui-core,codemod:** add import from ui-core to ui-alerts for Alert ([6e524f5](https://github.com/instructure/instructure-ui/commit/6e524f5))\n- **ui-docs-client:** Update usage examples for commonjs imports ([b8ef639](https://github.com/instructure/instructure-ui/commit/b8ef639))\n- **ui-forms:** Fix selected option matching in SelectSingle ([193da1f](https://github.com/instructure/instructure-ui/commit/193da1f))\n- **ui-pagination:** Change focus only when necessary ([fc5642f](https://github.com/instructure/instructure-ui/commit/fc5642f))\n- **ui-utils:** fix console.warn.apply(undefined) ([e7dc6ad](https://github.com/instructure/instructure-ui/commit/e7dc6ad))\n\n### Features\n\n- **config-loader:** Add a config-loader package ([832ff12](https://github.com/instructure/instructure-ui/commit/832ff12))\n- **release:** Add a post-release script to update Jira ([eb3642d](https://github.com/instructure/instructure-ui/commit/eb3642d))\n- **ui-elements,Badge:** RTL support start center/end center placement ([175f25c](https://github.com/instructure/instructure-ui/commit/175f25c))\n- **ui-elements,Progress:** RTL support for ProgressBar with visible val ([5756a8e](https://github.com/instructure/instructure-ui/commit/5756a8e))\n- **ui-elements,Tag:** RTL support for the inline variant ([953f870](https://github.com/instructure/instructure-ui/commit/953f870))\n- **ui-forms:** Rtl support for Checkbox toggle variant ([1de3e0a](https://github.com/instructure/instructure-ui/commit/1de3e0a))\n- **ui-forms:** Rtl support for select ([f0732d4](https://github.com/instructure/instructure-ui/commit/f0732d4))\n- **ui-forms,RangeInput:** ensure the min max values switch when \"rtl\" ([5bdc70a](https://github.com/instructure/instructure-ui/commit/5bdc70a))\n- **ui-i18n,docs:** ApplyTextDirection child func/position docs ([248c7e6](https://github.com/instructure/instructure-ui/commit/248c7e6))\n- **ui-layout:** Rtl support for DrawerLayout ([fdeee39](https://github.com/instructure/instructure-ui/commit/fdeee39))\n- **ui-layout,Media:** RTL support for Media ([1b8790a](https://github.com/instructure/instructure-ui/commit/1b8790a))\n- **ui-media-player:** Adopt Legacy Context API ([7416dd4](https://github.com/instructure/instructure-ui/commit/7416dd4))\n- **ui-media-player,media-capture:** Rtl support for VideoPlayer ([bbe0f60](https://github.com/instructure/instructure-ui/commit/bbe0f60))\n- **ui-navigation,Navigation:** RTL support for nav toggle action ([dca378d](https://github.com/instructure/instructure-ui/commit/dca378d))\n- **ui-overlays:** Mirror Popover placement for rtl ([046ec0c](https://github.com/instructure/instructure-ui/commit/046ec0c))\n- **ui-presets:** Add stylelint rules for bidrectional text support ([b58ea17](https://github.com/instructure/instructure-ui/commit/b58ea17))\n- **ui-toggle-details:** ToggleGroup component ([d828826](https://github.com/instructure/instructure-ui/commit/d828826))\n\n<a name=\"5.10.0\"></a>\n\n# [5.10.0](https://github.com/instructure/instructure-ui/compare/v5.9.0...v5.10.0) (2018-05-23)\n\n### Bug Fixes\n\n- **docs:** Fix codepens ([0e70c81](https://github.com/instructure/instructure-ui/commit/0e70c81))\n- **eslint-plugin-instructure-ui:** Add publishConfig ([ac4640c](https://github.com/instructure/instructure-ui/commit/ac4640c))\n- **NumberInput:** formatValueOnRender prop ([e734b8a](https://github.com/instructure/instructure-ui/commit/e734b8a))\n- **scripts:** Fix generate:component script ([24f5e21](https://github.com/instructure/instructure-ui/commit/24f5e21))\n\n### Features\n\n- **scripts:** Update generate:component template to reflect new pattern ([69a10ce](https://github.com/instructure/instructure-ui/commit/69a10ce))\n- **ui-forms,RadioInputGroup:** let toggle support inline layout ([ca611da](https://github.com/instructure/instructure-ui/commit/ca611da))\n- **ui-i18n:** ApplyDirection and bidirectional components ([06f052b](https://github.com/instructure/instructure-ui/commit/06f052b))\n\n<a name=\"5.9.0\"></a>\n\n# [5.9.0](https://github.com/instructure/instructure-ui/compare/v5.8.1...v5.9.0) (2018-05-21)\n\n### Bug Fixes\n\n- **build:** Add scripts, cname, and update env vars ([576a6ca](https://github.com/instructure/instructure-ui/commit/576a6ca))\n- **Decimal:** allow in progress negative numbers ([fab4a48](https://github.com/instructure/instructure-ui/commit/fab4a48))\n- **docs:** Fix broken component examples in ie11 ([ea091ab](https://github.com/instructure/instructure-ui/commit/ea091ab))\n- **scripts:** fix bump script ([64f1eef](https://github.com/instructure/instructure-ui/commit/64f1eef))\n- **ui-a11y:** focus manager does not steal focus on document click ([0d59b0b](https://github.com/instructure/instructure-ui/commit/0d59b0b))\n- **ui-a11y:** IE11 compatibility fix ([1a03ff1](https://github.com/instructure/instructure-ui/commit/1a03ff1))\n- **ui-alerts,Alert:** remove flex rule on contents ([240ba81](https://github.com/instructure/instructure-ui/commit/240ba81))\n- **ui-pagination,Pagination:** Manage focus ([b0a3364](https://github.com/instructure/instructure-ui/commit/b0a3364))\n\n### Features\n\n- **ui-alerts,Alert:** make aria-live configurable ([8689784](https://github.com/instructure/instructure-ui/commit/8689784))\n- **ui-code-editor:** support yaml/yml formats ([2ffc130](https://github.com/instructure/instructure-ui/commit/2ffc130))\n- **ui-docs-client:** prop to showMenu by default ([7fb0fd5](https://github.com/instructure/instructure-ui/commit/7fb0fd5))\n- **ui-elements,List:** add line delimiters for vertical lists ([9cba13d](https://github.com/instructure/instructure-ui/commit/9cba13d))\n- **ui-elements,ListItem:** Add padding prop to ListItem ([5d866a2](https://github.com/instructure/instructure-ui/commit/5d866a2))\n- **ui-icons:** Adds closed captioning and full screen icons ([57a0abb](https://github.com/instructure/instructure-ui/commit/57a0abb))\n- **ui-icons,ui-icons-build,ui-svg-images:** RTL for icon build ([f5f40f6](https://github.com/instructure/instructure-ui/commit/f5f40f6))\n- **ui-media-player:** Add ui-media-player package ([fb5689e](https://github.com/instructure/instructure-ui/commit/fb5689e))\n- **ui-toggle-details,ToggleDetails:** allow full-width summary ([fa39e0f](https://github.com/instructure/instructure-ui/commit/fa39e0f))\n\n<a name=\"5.8.1\"></a>\n\n## [5.8.1](https://github.com/instructure/instructure-ui/compare/v5.8.0...v5.8.1) (2018-05-11)\n\n### Bug Fixes\n\n- Set a default text direction to fix broken bidirectional styles ([77f6aed](https://github.com/instructure/instructure-ui/commit/77f6aed))\n\n<a name=\"5.8.0\"></a>\n\n# [5.8.0](https://github.com/instructure/instructure-ui/compare/v5.7.0...v5.8.0) (2018-05-11)\n\n### Bug Fixes\n\n- **build:** Fixes so that the release script doesn't fail ([72eca18](https://github.com/instructure/instructure-ui/commit/72eca18))\n- **ui-docs-plugin:** handle missing icons config ([3168132](https://github.com/instructure/instructure-ui/commit/3168132))\n\n### Features\n\n- **storybook,RTLaddon:** add a RTL button for switching storybook examp ([2b9e0dd](https://github.com/instructure/instructure-ui/commit/2b9e0dd))\n- **ToggleDetails:** Add focus and focused ([d80db8a](https://github.com/instructure/instructure-ui/commit/d80db8a))\n- **ui-elements:** Add a TruncateText component ([86ee847](https://github.com/instructure/instructure-ui/commit/86ee847))\n- **ui-presets:** Webpack loading for gif and otf ([ffa0fa4](https://github.com/instructure/instructure-ui/commit/ffa0fa4))\n\n<a name=\"5.7.0\"></a>\n\n# [5.7.0](https://github.com/instructure/instructure-ui/compare/v5.6.0...v5.7.0) (2018-05-07)\n\n### Bug Fixes\n\n- **release:** Fix auto-release script ([f2b99d3](https://github.com/instructure/instructure-ui/commit/f2b99d3))\n- **ui-overlays,Popover:** Pass down stacking/z-index to ContextView/View ([a2a39ef](https://github.com/instructure/instructure-ui/commit/a2a39ef))\n\n### Features\n\n- **ui-docs-client:** Add RTL toggle to Playground ([21a0a34](https://github.com/instructure/instructure-ui/commit/21a0a34))\n\n<a name=\"5.6.0\"></a>\n\n# [5.6.0](https://github.com/instructure/instructure-ui/compare/v5.5.0...v5.6.0) (2018-05-04)\n\n### Bug Fixes\n\n- **ui-utils:** Remove relative package imports ([b8fd970](https://github.com/instructure/instructure-ui/commit/b8fd970))\n\n### Features\n\n- **ui-presets:** Add an eslint rule to prevent relative package imports ([d23b53d](https://github.com/instructure/instructure-ui/commit/d23b53d))\n\n<a name=\"5.5.0\"></a>\n\n# [5.5.0](https://github.com/instructure/instructure-ui/compare/v5.4.0...v5.5.0) (2018-04-26)\n\n### Bug Fixes\n\n- **media-capture:** Update the FileSave submit button to prevent default ([fd47f2a](https://github.com/instructure/instructure-ui/commit/fd47f2a))\n- **ui-docs-client:** Fix source code path ([7c23cac](https://github.com/instructure/instructure-ui/commit/7c23cac))\n- **ui-docs-client:** Use resource displayName instead of name for usage ([8357c5c](https://github.com/instructure/instructure-ui/commit/8357c5c))\n- **ui-forms:** Preserve [FileDrop](#FileDrop) event during onDrop ([e45b70d](https://github.com/instructure/instructure-ui/commit/e45b70d))\n- **ui-i18n:** Fix moment version dependency ([b6289c2](https://github.com/instructure/instructure-ui/commit/b6289c2))\n- **ui-overlays:** Fix a11y issues in Tooltip and Popover ([352b8ca](https://github.com/instructure/instructure-ui/commit/352b8ca))\n\n### Features\n\n- **ui-forms,DateInput:** Add support for disabled days ([c1067ad](https://github.com/instructure/instructure-ui/commit/c1067ad))\n- **ui-icons,IconX:** Updated IconX to be a little smaller ([1bdcd86](https://github.com/instructure/instructure-ui/commit/1bdcd86))\n- **ui-layout,View:** Add style prop white list (incl backgroundImage) ([d8a35ab](https://github.com/instructure/instructure-ui/commit/d8a35ab))\n- **ui-overlays,Tray:** Replace timeout with requestAnimationFrame ([ddd9096](https://github.com/instructure/instructure-ui/commit/ddd9096))\n- **ui-presets,eslint:** Add no-undefined eslint rule ([ff896ea](https://github.com/instructure/instructure-ui/commit/ff896ea))\n\n<a name=\"5.4.0\"></a>\n\n# [5.4.0](https://github.com/instructure/instructure-ui/compare/v5.3.1...v5.4.0) (2018-04-25)\n\n### Bug Fixes\n\n- **ui-a11y:** Update Focus Region to focus on next tick ([eef1df2](https://github.com/instructure/instructure-ui/commit/eef1df2))\n- **ui-forms:** Only render checkmark when checked ([592d533](https://github.com/instructure/instructure-ui/commit/592d533))\n- **ui-forms,DateInput:** set newState to textInputValue vs raw ([dd16c75](https://github.com/instructure/instructure-ui/commit/dd16c75))\n- **ui-i18n:** Fix moment's version to >= 2.20 for toISOString(keepOffset ([5103a81](https://github.com/instructure/instructure-ui/commit/5103a81))\n- **ui-themes:** Make high-contrast theme backwards compatible with < 5.3 ([28b75ef](https://github.com/instructure/instructure-ui/commit/28b75ef))\n\n### Features\n\n- **build:** Add no semi lint rule until we can add prettier config ([cd97004](https://github.com/instructure/instructure-ui/commit/cd97004))\n- **ui-layout:** Add View and ContextView components ([497ccd5](https://github.com/instructure/instructure-ui/commit/497ccd5))\n\n### Performance Improvements\n\n- **ui-elements:** async avatar loading ([0501ae2](https://github.com/instructure/instructure-ui/commit/0501ae2))\n\n<a name=\"5.3.1\"></a>\n\n## [5.3.1](https://github.com/instructure/instructure-ui/compare/v5.3.0...v5.3.1) (2018-04-24)\n\n### Bug Fixes\n\n- **ui-themes:** Should be backwards compatible with <= 5.3 components ([6f44e11](https://github.com/instructure/instructure-ui/commit/6f44e11))\n\n<a name=\"5.3.0\"></a>\n\n# [5.3.0](https://github.com/instructure/instructure-ui/compare/v5.2.0...v5.3.0) (2018-04-20)\n\n### Bug Fixes\n\n- **ui-alerts:** Fix an issue where removing screenreader alerts could fail ([4fac6e6](https://github.com/instructure/instructure-ui/commit/4fac6e6))\n- **ui-docs-client:** Update GithubCorner styles ([57ddbec](https://github.com/instructure/instructure-ui/commit/57ddbec))\n- **ui-icons,IconAssignment:** Assignment should show for line & solid ([fbfcf59](https://github.com/instructure/instructure-ui/commit/fbfcf59))\n- **ui-utils,getFontSize:** Improve performance ([702c923](https://github.com/instructure/instructure-ui/commit/702c923))\n\n### Features\n\n- **build:** Add visual diff scripts ([792d958](https://github.com/instructure/instructure-ui/commit/792d958))\n- **build:** Generate Sketch assets from component examples ([33f88ae](https://github.com/instructure/instructure-ui/commit/33f88ae))\n- **ui-forms:** allow persistent options in MultipleSelect ([ffc5946](https://github.com/instructure/instructure-ui/commit/ffc5946))\n- **ui-icons:** import codemod config ([3b96226](https://github.com/instructure/instructure-ui/commit/3b96226))\n- **ui-navigation:** new Navigation/NavigationItem component ([29da924](https://github.com/instructure/instructure-ui/commit/29da924))\n\n<a name=\"5.2.0\"></a>\n\n# [5.2.0](https://github.com/instructure/instructure-ui/compare/v5.1.1...v5.2.0) (2018-04-06)\n\n### Bug Fixes\n\n- **ui-forms:** Fix warning issue in [DateTimeInput](#DateTimeInput) ([1704c53](https://github.com/instructure/instructure-ui/commit/1704c53))\n- **ui-i18n:** Fix [DateTime](#DateTime). Should use moment-timezone. ([c78de61](https://github.com/instructure/instructure-ui/commit/c78de61))\n- **ui-tabs:** Fix [TabList](#TabList) support for nodes as title ([eb33479](https://github.com/instructure/instructure-ui/commit/eb33479))\n\n### Features\n\n- **ui-billboard:** Size icons in [Billboard](#Billboard) with [SVGIcon](#SVGIcon) size prop ([11d3bfe](https://github.com/instructure/instructure-ui/commit/11d3bfe))\n- **ui-forms:** Add readOnly to ui-forms components ([f494d0d](https://github.com/instructure/instructure-ui/commit/f494d0d))\n\n<a name=\"5.1.1\"></a>\n\n## [5.1.1](https://github.com/instructure/instructure-ui/compare/v5.1.0...v5.1.1) (2018-04-05)\n\n### Bug Fixes\n\n- **ui-utils:** Generated element ids can't start with a number ([c6e159e](https://github.com/instructure/instructure-ui/commit/c6e159e))\n\n<a name=\"5.1.0\"></a>\n\n# [5.1.0](https://github.com/instructure/instructure-ui/compare/v5.0.1...v5.1.0) (2018-04-04)\n\n### Deprecations\n\n#### **ui-menu: Deprecate MenuItemFlyout ([dc82765](https://github.com/instructure/instructure-ui/commit/dc82765))**\n\nDon't panic. You can still create menu fly-outs. In order to simplify the component\nAPI, the `MenuItemFlyout` component has been consolidated with `Menu`.\n\nTo create fly-out menus moving forward you can replace `MenuItemFlyout` with `Menu`.\n\nSee the updated [Menu](#Menu) documentation for examples.\n\n### Bug Fixes\n\n- **ui-forms:** remove 0.01em top padding ([14a5675](https://github.com/instructure/instructure-ui/commit/14a5675))\n- **ui-code-editor:** CodeEditor content should update when value changes ([eb7ecdd](https://github.com/instructure/instructure-ui/commit/eb7ecdd))\n- **ui-toggle-details:** iconColor should be themeable ([14e6577](https://github.com/instructure/instructure-ui/commit/14e6577))\n\n### Features\n\n- **DateTimeInput:** new DateTimeInput component ([2aaf29b](https://github.com/instructure/instructure-ui/commit/2aaf29b))\n\n### Performance Improvements\n\n- **ui-utils:** Replace shortid with nanoid ([5d0a93e](https://github.com/instructure/instructure-ui/commit/5d0a93e))\n\n<a name=\"5.0.1\"></a>\n\n## [5.0.1](https://github.com/instructure/instructure-ui/compare/v5.0.0...v5.0.1) (2018-04-02)\n\n### Bug Fixes\n\n- Add missing dependencies ([d66826b](https://github.com/instructure/instructure-ui/commit/d66826b))\n\n<a name=\"5.0.0\"></a>\n\n# [5.0.0](https://github.com/instructure/instructure-ui/compare/v4.8.0...v5.0.0) (2018-03-29)\n\n### Upgrade Guide\n\nThe easiest way to upgrade is to run `yarn upgrade --scope @instructure`. Once you've done this, make sure\nyou check the 'BREAKING CHANGES' section below so that you can make those changes as necessary.\n\nAfter upgrading you should see deprecation warnings in dev and test environments that will help you prepare\nfor future releases (or check out the 'Deprecations' section below). The [ui-codemods](#ui-codemods) scripts\nshould make it easy to update your import/require statements to get rid of a lot of the warnings. Note: you'll\nneed to update your package.json file manually to add the new packages.\n\nNote though, that it's not necessary to upgrade everything at once. Depending on the size of your application\nyou may want to upgrade a package (or component) at a time. This is a major release, but in this case\nit's safe to do that.\n\n### Release Highlights\n\n#### **Breaking up is hard to do: Goodbye, `ui-core`!**\n\nWe have broken `ui-core` into smaller packages like [ui-breadcrumb](#ui-breadcrumb), [ui-buttons](#ui-buttons),\nand [ui-container](#ui-container). This change is intended to make consuming Instructure UI components easier by\nallowing applications to only import and update the packages they need. You're welcome.\n\n#### **...and hello, `ui-icons`!**\n\nThis release brings Instructure's [SVG icon library](#iconography) into Instructure UI. Icons can now be imported\nfrom the [ui-icons](#ui-icons) package. We have also added a [ui-svg-images](#ui-svg-images) package, with components for\nhandling [inline SVGs](#InlineSVG) and [SVG icons](#SVGIcon).\n\n#### **A [Responsive 🕶🎸](#Responsive) component ([abe0cb3](https://github.com/instructure/instructure-ui/commit/abe0cb3))**\n\nIf this release has a rock star, it's the [Responsive](#Responsive) component. It will swagger into\nyour application wearing shades, rock the greatest guitar solo you've ever heard, and basically\nsolve every responsive front-end problem ever. The true \"one ring to rule them all\" of responsive\ndevelopment, Responsive allows you to -- _wait for it_ -- choose between element queries and\nmedia queries, specify your own breakpoints, and conditionally render content at those breakpoints.\nEnjoy.\n\n#### **Add RFC generator and docs ([64d6368](https://github.com/instructure/instructure-ui/commit/64d6368))**\n\nRFC stands for _Request for Comment_ and reflects our new process for contributing to Instructure\nUI. An RFC is a markdown document that describes the purpose of the proposed change or addition,\nincluding the API, props and theme variables. RFC documents are committed to Instructure UI\nand iterated on by the contributor and the UI Development team. Once the RFC is approved and merged\nto master, development can begin. Take a look at the [RFC for the Flex component](#FlexRFC), for\nan example, or create your own by running `yarn generate:rfc` in your local repository.\n\n#### **A media-capture Package**\n\nThis package was contributed recently for use in the [Arc video platform](https://www.arcmedia.com/) and includes a native [VideoPlayer](#VideoPlayer) as well as a [MediaCapture](#MediaCapture) component for recording and uploading videos.\n\n#### **Add [Flex](#Flex) component ([7f702ac](https://github.com/instructure/instructure-ui/commit/7f702ac))**\n\nFeeling like [Grid](#Grid) is just overkill for a simple column layout? Struggling to line up icons,\nbuttons, and text? Thinking of just giving up and quietly using `<table>`? Well, you're in for a\n[real treat](#Flex), my friend.\n\n#### **Add screen reader only variant to [Alert](#Alert)**\n\n[Alert](#Alert) now has a `screenReaderOnly` property. When set to `true`, the alert should only be\nvisible to screen readers.\n\n#### **Add experimental flag and decorator ([9bbcbab](https://github.com/instructure/instructure-ui/commit/9bbcbab))**\n\nThis feature allows component developers to indicate that their component uses JS or CSS features\nthat are not fully supported by all browsers, or that the component is still in experimentation mode\nand the API may change. Putting `experimental: true` in the YAML front matter\nof a doc will render a [Pill](#Pill) with the text 'Experimental' before the page heading in the\ndocumentation. A console warning will also display in dev environments.\n\n#### **Add [Img](#Img) cover property ([edcc5ce](https://github.com/instructure/instructure-ui/commit/edcc5ce))**\n\nCSS's `object-fit: cover` comes to the [Img](#Img) component, with polyfill support for IE11. When\nthe new `cover` prop is `true`, Img fills the full width and height of its containing element, while\nmaintaining the aspect ratio of the source image. Great for full-page or section background images.\n\n#### **Update [Select](#Select) to use non-native options dropdown ([c291a38](https://github.com/instructure/instructure-ui/commit/c291a38))**\n\nWe have combined Autocomplete and [Select](#Select) into a single, amazing component. No more ugly\nbrowser-styled select options! With this change, Select moves to the new [ui-forms](#ui-forms) package. The\noriginal Select and Autocomplete components in `ui-core` are now deprecated and will be removed in a\nfuture release. We've also fixed a bunch of accessibility bugs in the process, so upgrade as soon\nas you can!\n\n### Deprecations\n\n#### **applicationElement ([ee7d1e9](https://github.com/instructure/instructure-ui/commit/ee7d1e9))**\n\nRemember when you used to have to pass in an `applicationElement` prop to [Moda](#Modal), [Popover](#Popover),\nand [Tray](#Tray)?\n\nForget about it. You no longer have to supply an `applicationElement` prop because it's all done automagically 🎩.\n\n#### **ui-core Deprecations**\n\nNearly all components in ui-core have been deprecated in the 5.0.0 release and have been moved into separate,\nsmaller packages. As you upgrade, you can run a [ui-codemod](#ui-codemods) script to update the import/require\nstatements in your code, or check the `config/imports.config.json` file in the ui-core package to see where\nthings have moved. Also note that if you upgrade the `ui-core` package, you'll see deprecation warnings\nin dev and test environments that will also tell you what the new package is for each component. Note: you'll\nneed to update your package.json file manually to add the new packages.\n\n#### **PopoverMenu ([893f628](https://github.com/instructure/instructure-ui/commit/893f6289d2bb9ca0dee0327b0e75759e7d5dc074))**\n\nSpeaking of `ui-core`... `PopoverMenu` will remain in ui-core _but_ it does not make the move to the new `ui-menu` package on its own, PopoverMenu functionality has now been consolidated into [Menu](#Menu). By assigning a node to the `trigger` prop it will create a menu from the triggering element (ie: <Button>).\n\n#### **Close Buttons**\n\nThe `closeButtonLabel` prop is deprecated in [Modal](#Modal), [Tray](#Tray), and [Popover](#Popover). To migrate\nto the new versions of these components, render a [CloseButton](#CloseButton) as a child (see the examples in the\ndocumentation for implementation details). This change should give consuming applications more control over the\nlayout of the content.\n\n#### **Icon width and height**\n\nThe `width` and `height` props have been deprecated in the [SVGIcon](#SVGIcon) component. Going forward, you\ncan use the `size` prop instead. This should make the icons sizes more consistent across the consuming application.\n\n### BREAKING CHANGES\n\n- **ui-forms:** [MetricsList](#MetricsList) text alignment is now a prop instead of a theme variable\n- **ui-motion,ui-alerts:** - The [Transition](#Transition).duration and [Alert](#Alert).transitionDuration static\n  attributes have been removed. These values are now distributed\n  via a duration theme variable located in\n  `ui-themes/lib/canvas/base/transition.js`\n- **ui-presets:** Themes have to be imported in a `mocha.config.js` file for mocha/jsdom tests\n- **ui-forms:** [DateInput](#DateInput) onDateChange prop arguments have changed and the\n  invalidDateMessage prop is now required.\n- **ui-forms:** [RadioInputGroup](#RadioInputGroup) onChange prop arguments have changed\n- **ui-a11y:** FocusManager is no longer exported as a singleton. You now need to import and create a new instance. Ex:\n  `const myFocusManager = new FocusManager()`\n- **ui-tabs:** [TabList](#TabList) deprecated `accordion` variant is removed. Use the [ToggleDetails](#ToggleDetails)\n  component instead.\n- **ui-utils:** Usage of [CustomPropTypes](#CustomPropTypes) will need to be updated for\n  the types that have been split out into [LayoutPropTypes](#LayoutPropTypes), [I18nPropTypes](#I18I18nPropTypes),\n  [FormPropTypes](#FormPropTypes), and [ThemeablePropTypes](#ThemeablePropTypes)\n\n### Bug Fixes\n\n- **docs:** Prevent console warnings in docs app ([e4729ec](https://github.com/instructure/instructure-ui/commit/e4729ec))\n- **media-capture:** Do not trigger device dialog on finished ([5cdc70f](https://github.com/instructure/instructure-ui/commit/5cdc70f))\n- **media-capture:** User-friendly device names on Firefox\n- **scripts:** Fix release script for pre-releases ([03d11a4](https://github.com/instructure/instructure-ui/commit/03d11a4))\n- **scripts:** Add babel and postcss config to package template\n- **ui-a11y:** [focusManager](#focusManager) should handle multiple dialogs ([9722dbe](https://github.com/instructure/instructure-ui/commit/9722dbe))\n- **ui-alerts:** add min-width to [Alert](#Alert) so flex items don't collapse ([9861c9b](https://github.com/instructure/instructure-ui/commit/9861c9b))\n- **ui-buttons:** Fix icon centering with as=div [Button](#Button) ([659f3a4](https://github.com/instructure/instructure-ui/commit/659f3a4))\n- **ui-buttons:** Fix inverse link [Button](#Button) :focus outline ([b9abdb0](https://github.com/instructure/instructure-ui/commit/b9abdb0))\n- **ui-buttons:** [Button](#Button) Fire onClick with href prop ([f7c22c9](https://github.com/instructure/instructure-ui/commit/f7c22c9))\n- **ui-elements:** rename Image component to [Img](#Img) ([668479f](https://github.com/instructure/instructure-ui/commit/668479f))\n- **ui-elements:** Fix high contrast mode for [ProgressBar](#ProgressBar) ([2aed758](https://github.com/instructure/instructure-ui/commit/2aed758))\n- **ui-elements:** trim whitespace in [Avatar](#Avatar) makeInitialsFromName ([212e92a](https://github.com/instructure/instructure-ui/commit/212e92a))\n- **ui-elements:** deprecate [Heading](#Heading) color prop ([74b86e0](https://github.com/instructure/instructure-ui/commit/74b86e0))\n- **ui-elements:** fix [Image](#Image) display property ([a72961c](https://github.com/instructure/instructure-ui/commit/a72961c))\n- **ui-elements:** Make [Spinner](#Spinner) look better in IE11 ([081f7a0](https://github.com/instructure/instructure-ui/commit/081f7a0))\n- **ui-elements:** Disabled [Tag](#Tag) should not be keyboard focusable ([6bb66bc](https://github.com/instructure/instructure-ui/commit/6bb66bc))\n- **ui-elements:** allow node prop type for [MetricsList](#MetricsList) label and value props ([ffaaeea](https://github.com/instructure/instructure-ui/commit/ffaaeea))\n- **ui-forms:** Resolve [Select](#Select) a11y issues ([a66a03c](https://github.com/instructure/instructure-ui/commit/a66a03c))\n- **ui-forms:** [Select](#Select) doesn't expand with Space key ([866709f](https://github.com/instructure/instructure-ui/commit/866709f))\n- **ui-forms:** Fix [TextArea](#TextArea) resizing when text is deleted ([682d336](https://github.com/instructure/instructure-ui/commit/682d336))\n- **ui-forms:** [TextInput](#TextInput) not reading [Tooltip](#Tooltip) id ([5d6adee](https://github.com/instructure/instructure-ui/commit/5d6adee))\n- **ui-forms:** increase CSS specificity for [NumberInput](#NumberInput),[TimeInput](#TimeInput) ([a6b08b3](https://github.com/instructure/instructure-ui/commit/a6b08b3))\n- **ui-forms:** [RadioInputGroup](#RadioInputGroup) should pass event to onChange cb ([4268eec](https://github.com/instructure/instructure-ui/commit/4268eec))\n  ([74fa7eb](https://github.com/instructure/instructure-ui/commit/74fa7eb))\n- **ui-forms:** Allow [Select](#Select) selectedOption to be cleared ([2aa2b94](https://github.com/instructure/instructure-ui/commit/2aa2b94))\n- **ui-forms:** Ensure [Select](#Select) resets results on close ([b26c8b3](https://github.com/instructure/instructure-ui/commit/b26c8b3))\n- **ui-forms:** Fix [Select](#Select) component onChange handlers ([c6ef9fc](https://github.com/instructure/instructure-ui/commit/c6ef9fc))\n- **ui-forms:** Prevent value change of disabled controlled [Select](#Select) ([525a4e4](https://github.com/instructure/instructure-ui/commit/525a4e4))\n- **ui-forms:** [TextArea](#TextArea) should shrink when cleared ([3320d9d](https://github.com/instructure/instructure-ui/commit/3320d9d))\n- **ui-icons:** Add Sketch template file ([42a5c3f](https://github.com/instructure/instructure-ui/commit/42a5c3f))\n- **ui-layout:** Fix [Position](#Position) constraint logic ([9763ef3](https://github.com/instructure/instructure-ui/commit/9763ef3))\n- **ui-layout:** Fix [Position](#Position) getOffsetParents in IE11 ([15797b5](https://github.com/instructure/instructure-ui/commit/15797b5))\n- **ui-layout:** [Position](#Position) should handle transformed/relative position parents ([26bc897](https://github.com/instructure/instructure-ui/commit/26bc897))\n- **media-capture:** Utilize ts-ebml to get duration and cues headers in ([8aadc43](https://github.com/instructure/instructure-ui/commit/8aadc43))\n- **ui-menu:** Remove transition from :focus ring on [Menu](#Menu) ([cba89db](https://github.com/instructure/instructure-ui/commit/cba89db))\n- **ui-menu:** Resolve issues with [Menu](#Menu) inside [Modal](#Modal) ([c6f3c18](https://github.com/instructure/instructure-ui/commit/c6f3c18))\n- **ui-presets:** Remove cycle in dependency graph ([352a58b](https://github.com/instructure/instructure-ui/commit/352a58b))\n- **ui-presets:** Remove unnecessary dependency ([943bab4](https://github.com/instructure/instructure-ui/commit/943bab4))\n- **ui-testbed:** update CSS to disable transitions ([fa75264](https://github.com/instructure/instructure-ui/commit/fa75264))\n- **ui-svg-images:** fix [InlineSVG](#InlineSVG) example size ([0369e7e](https://github.com/instructure/instructure-ui/commit/0369e7e))\n- **ui-svg-images:** Fix size prop for [SVGIcon](#SVGIcon) ([2ef69e9](https://github.com/instructure/instructure-ui/commit/2ef69e9))\n\n### Features\n\n- **build:** Add RFC generator and docs ([64d6368](https://github.com/instructure/instructure-ui/commit/64d6368))\n- **build:** Add copyright notice eslint plugin ([0153907](https://github.com/instructure/instructure-ui/commit/0153907))\n- **media-capture:** add feature detection for [MediaCapture](#MediaCapture) ([c7450f6](https://github.com/instructure/instructure-ui/commit/c7450f6))\n- **media-capture:** Add [MediaCapture](#MediaCapture), [VideoPlayer](#VideoPlayer) ([39ebb9e](https://github.com/instructure/instructure-ui/commit/39ebb9e))\n- **media-capture:** [VideoPlayer](#VideoPlayer) playback onCanPlay handler ([c00de06](https://github.com/instructure/instructure-ui/commit/c00de06))\n- **scripts:** Add ability to specify a package to generate:component ([1a890ee](https://github.com/instructure/instructure-ui/commit/1a890ee))\n- **ui-a11y:** add ui-a11y package ([e913843](https://github.com/instructure/instructure-ui/commit/e913843))\n- **ui-a11y:** add a [FocusRegion](#FocusRegion) component ([f395fd8](https://github.com/instructure/instructure-ui/commit/f395fd8))\n- **ui-a11y:** Add [FocusRegionManager](#FocusRegionManager), [FocusRegion](#FocusRegion) utilities ([d14eaa0](https://github.com/instructure/instructure-ui/commit/d14eaa0))\n- **ui-a11y:** add hasVisibleChildren ([bf31684](https://github.com/instructure/instructure-ui/commit/bf31684))\n- **ui-alerts:** Add a ui-alerts package ([d078984](https://github.com/instructure/instructure-ui/commit/d078984))\n- **ui-alerts:** Add screen reader only variant to [Alert](#Alert) ([d764e94](https://github.com/instructure/instructure-ui/commit/d764e94))\n- **ui-billboard:** Add ui-billboard package ([4272911](https://github.com/instructure/instructure-ui/commit/4272911))\n- **ui-breadcrumb:** Add ui-breadcrumb package ([b990973](https://github.com/instructure/instructure-ui/commit/b990973))\n- **ui-buttons:** Add a ui-buttons package ([21bde2f](https://github.com/instructure/instructure-ui/commit/21bde2f))\n- **ui-code-editor:** Add ui-code-editor package ([7d6bd1c](https://github.com/instructure/instructure-ui/commit/7d6bd1c))\n- **ui-container:** Add a ui-container package ([b90aade](https://github.com/instructure/instructure-ui/commit/b90aade))\n- **ui-docs-plugin,ui-utils:** Add experimental flag and decorator ([9bbcbab](https://github.com/instructure/instructure-ui/commit/9bbcbab))\n- **ui-elements:** Add a ui-elements package ([12483d7](https://github.com/instructure/instructure-ui/commit/12483d7))\n- **ui-elements:** add [Img](#Img) component ([9d0cb9e](https://github.com/instructure/instructure-ui/commit/9d0cb9e))\n- **ui-elements:** Deprecate colors for [Heading](#Heading) ([26cc418](https://github.com/instructure/instructure-ui/commit/26cc418))\n- **ui-elements:** Add [Img](#Img) cover property ([edcc5ce](https://github.com/instructure/instructure-ui/commit/edcc5ce))\n- **ui-elements:** Add [Rating](#Rating) to ui-elements package ([77eaa11](https://github.com/instructure/instructure-ui/commit/77eaa11))\n- **ui-forms:** Add ui-forms package ([ca6b694](https://github.com/instructure/instructure-ui/commit/ca6b694))\n- **ui-forms:** Update [NumberInput](#NumberInput) i18n solution ([572bb3a](https://github.com/instructure/instructure-ui/commit/572bb3a))\n- **ui-forms:** [Checkbox](#Checkbox) Update checkmark icon and border ([e75b0e6](https://github.com/instructure/instructure-ui/commit/e75b0e6))\n- **ui-forms:** Update [Select](#Select) to use non-native options dropdown ([c291a38](https://github.com/instructure/instructure-ui/commit/c291a38))\n- **ui-forms:** [TextArea](#TextArea) maxHeight should accept ems, rems ([8817c07](https://github.com/instructure/instructure-ui/commit/8817c07))\n- **ui-i18n:** Adding ui-i18n package ([823f89a](https://github.com/instructure/instructure-ui/commit/823f89a))\n- **ui-icons:** Add icons (from instructure-icons) as a new package ([8c3b3f0](https://github.com/instructure/instructure-ui/commit/8c3b3f0))\n- **ui-icons:** add share and video-camera icons ([5c7a3fb](https://github.com/instructure/instructure-ui/commit/5c7a3fb))\n- **ui-icons:** add progress icon ([0f4207b](https://github.com/instructure/instructure-ui/commit/0f4207b))\n- **ui-layout:** Add ui-layout package ([c461644](https://github.com/instructure/instructure-ui/commit/c461644))\n- **ui-layout:** A [Responsive](#Responsive) component ([abe0cb3](https://github.com/instructure/instructure-ui/commit/abe0cb3))\n- **ui-layout:** A [DrawerLayout](#DrawerLayout) component ([1cfb7b5](https://github.com/instructure/instructure-ui/commit/1cfb7b5))\n- **ui-layout:** Add [Flex](#Flex) component ([7f702ac](https://github.com/instructure/instructure-ui/commit/7f702ac))\n- **ui-menu:** Add ui-menu package ([7a7fb35](https://github.com/instructure/instructure-ui/commit/7a7fb35))\n- **ui-motion:** Add ui-motion package ([638c6a9](https://github.com/instructure/instructure-ui/commit/638c6a9))\n- **ui-overlays:** Add a ui-overlays package ([c9762a4](https://github.com/instructure/instructure-ui/commit/c9762a4))\n- **ui-overlays:** [Tray](#Tray),[Modal](#Modal) Deprecate closeButtonLabel and closeButtonRef ([85a76b8](https://github.com/instructure/instructure-ui/commit/85a76b8))\n- **ui-overlays,ui-i18n:** Add RTL language support to [Tray](#Tray) ([3309bcb](https://github.com/instructure/instructure-ui/commit/3309bcb))\n- **ui-overlays:** deprecate applicationElement prop ([ee7d1e9](https://github.com/instructure/instructure-ui/commit/ee7d1e9))\n- **ui-pages:** Add [Pages](#Pages) component ([6fda3e3](https://github.com/instructure/instructure-ui/commit/6fda3e3))\n- **ui-pagination:** Add ui-pagination package ([ef3ee97](https://github.com/instructure/instructure-ui/commit/ef3ee97))\n- **ui-portal:** Add ui-portal package ([d4ed6db](https://github.com/instructure/instructure-ui/commit/d4ed6db))\n- **ui-presets,ui-core:** Add support for node test environments ([5d3a452](https://github.com/instructure/instructure-ui/commit/5d3a452))\n- **ui-svg-images:** Add ui-svg-images, remove instructure-icons imports ([6201628](https://github.com/instructure/instructure-ui/commit/6201628))\n- **ui-svg-images:** Add [SVGIcon](#SVGIcon) size prop, deprecate height/width ([24501ea](https://github.com/instructure/instructure-ui/commit/24501ea))\n- **ui-svg-images:** Add `inline` prop to [SVGIcon](#SVGIcon) and [InlineSVG](#InlineSVG) ([72fe27f](https://github.com/instructure/instructure-ui/commit/72fe27f))\n- **ui-tabs:** Add ui-tabs package ([7b984c7](https://github.com/instructure/instructure-ui/commit/7b984c7))\n- **ui-themeable:** Add [ApplyTheme](#ApplyTheme) to ui-themeable package\n- **ui-themeable:** Add shorthandPropType ([066d1f0](https://github.com/instructure/instructure-ui/commit/066d1f0))\n  ([c69644c](https://github.com/instructure/instructure-ui/commit/c69644c))\n- **ui-toggle-details:** Add ui-toggle-details package ([6b606de](https://github.com/instructure/instructure-ui/commit/6b606de))\n- **ui-tree-browser:** Add ui-tree-browser package ([1c59c1f](https://github.com/instructure/instructure-ui/commit/1c59c1f))\n- **ui-utils:** Split up CustomPropTypes ([25fb0e0](https://github.com/instructure/instructure-ui/commit/25fb0e0))\n\n<a name=\"4.8.0\"></a>\n\n# [4.8.0](https://github.com/instructure/instructure-ui/compare/v4.7.3...v4.8.0) (2018-03-26)\n\n### Bug Fixes\n\n- **ui-buttons:** Button href prop should work with onClick ([b2a78bb](https://github.com/instructure/instructure-ui/commit/b2a78bb))\n\n### Features\n\n- **ui-overlay,ui-i18n:** add RTL language support to Tray ([92679d7](https://github.com/instructure/instructure-ui/commit/92679d7))\n\n<a name=\"4.7.3\"></a>\n\n## [4.7.3](https://github.com/instructure/instructure-ui/compare/v4.7.2...v4.7.3) (2018-03-06)\n\n### Bug Fixes\n\n- **FileDrop:** Fix positioning of the inner native file input element ([3664ccb](https://github.com/instructure/instructure-ui/commit/3664ccb))\n\n<a name=\"4.7.2\"></a>\n\n## [4.7.2](https://github.com/instructure/instructure-ui/compare/v4.7.1...v4.7.2) (2018-02-14)\n\n### Bug Fixes\n\n- **ListItem:** stop :not selector selecting everything ([8209b8c](https://github.com/instructure/instructure-ui/commit/8209b8c))\n\n<a name=\"4.7.1\"></a>\n\n## [4.7.1](https://github.com/instructure/instructure-ui/compare/v4.7.0...v4.7.1) (2018-01-25)\n\n### Bug Fixes\n\n- **ui-menu:** Pass href prop down to ElementType ([e876404](https://github.com/instructure/instructure-ui/commit/e876404))\n\n<a name=\"4.7.0\"></a>\n\n# [4.7.0](https://github.com/instructure/instructure-ui/compare/v4.6.0...v4.7.0) (2018-01-24)\n\n### Bug Fixes\n\n- **babel-plugin-transform-class-display-name:** Add empty statement ([92473b3](https://github.com/instructure/instructure-ui/commit/92473b3))\n- **Button:** fix icon alignment for small/large circle variant ([2853f53](https://github.com/instructure/instructure-ui/commit/2853f53))\n- **Button,TreeBrowser:** Focus outline on focus only w/ MS Edge ([30ee7b2](https://github.com/instructure/instructure-ui/commit/30ee7b2))\n- **DateInput:** fire onDateChange when transitioning to/from empty ([9765f55](https://github.com/instructure/instructure-ui/commit/9765f55))\n- **MetricsList:** fix alignment for edge ([58333cd](https://github.com/instructure/instructure-ui/commit/58333cd))\n- **MetricsList:** Vertically align MetricsListItems ([b666c09](https://github.com/instructure/instructure-ui/commit/b666c09))\n- **Popover:** adds alignArrow prop to Popover ([46414dc](https://github.com/instructure/instructure-ui/commit/46414dc))\n- **TimeInput:** allow disabled prop to pass down ([6e9f444](https://github.com/instructure/instructure-ui/commit/6e9f444))\n\n### Features\n\n- **List:** Add itemSpacing prop ([36cf537](https://github.com/instructure/instructure-ui/commit/36cf537))\n\n<a name=\"4.6.0\"></a>\n\n# [4.6.0](https://github.com/instructure/instructure-ui/compare/v4.5.0...v4.6.0) (2018-01-03)\n\n### Bug Fixes\n\n- **List:** don't render delimiter when delimiter=none unless it's inline ([3e81b1f](https://github.com/instructure/instructure-ui/commit/3e81b1f))\n- **List:** ignore falsy children ([cb7a45c](https://github.com/instructure/instructure-ui/commit/cb7a45c)), closes [/github.com/facebook/react/issues/2956#issuecomment-338041943](https://github.com//github.com/facebook/react/issues/2956/issues/issuecomment-338041943)\n\n### Features\n\n- **build:** Support a beta release branch ([b9b187c](https://github.com/instructure/instructure-ui/commit/b9b187c))\n- **Button:** Handle text color for :hover/:focus ([8c77678](https://github.com/instructure/instructure-ui/commit/8c77678))\n- **PopoverMenu:** re-export MenuItem, etc. for simplicity ([52ecc4c](https://github.com/instructure/instructure-ui/commit/52ecc4c))\n- **postcss:** Add config option to opt into nesting instead of nested ([5443bbb](https://github.com/instructure/instructure-ui/commit/5443bbb))\n\n<a name=\"4.5.0\"></a>\n\n# [4.5.0](https://github.com/instructure/instructure-ui/compare/v4.4.1...v4.5.0) (2017-12-19)\n\n### Bug Fixes\n\n- **CloseButton:** remove inline size to allow size prop to work correctl ([0c01510](https://github.com/instructure/instructure-ui/commit/0c01510))\n- **DateInput:** Allow text input when component is controlled ([05e0112](https://github.com/instructure/instructure-ui/commit/05e0112))\n- **FormFieldLayout:** fix inline input issues ([35ca6bb](https://github.com/instructure/instructure-ui/commit/35ca6bb))\n- **ui-codemods:** Update Typography to Text ([ff9d596](https://github.com/instructure/instructure-ui/commit/ff9d596))\n- **ui-docs-plugin:** Pass down config to loaders correctly ([62f01f6](https://github.com/instructure/instructure-ui/commit/62f01f6))\n- **ui-presets:** Remove unnecessary dependency that's causing issues dow ([a55b8b3](https://github.com/instructure/instructure-ui/commit/a55b8b3))\n\n### Features\n\n- **List:** Updates variant prop. Adds delimiter prop. ([7b29a44](https://github.com/instructure/instructure-ui/commit/7b29a44))\n\n<a name=\"4.4.1\"></a>\n\n## [4.4.1](https://github.com/instructure/instructure-ui/compare/v4.4.0...v4.4.1) (2017-12-14)\n\n### Bug Fixes\n\n- **ui-docs-plugin:** Pass down config to loaders correctly ([deabfc4](https://github.com/instructure/instructure-ui/commit/deabfc4))\n- **ui-presets:** Remove unnecessary dependency that's causing issues dow ([bd2d81e](https://github.com/instructure/instructure-ui/commit/bd2d81e))\n\n<a name=\"4.4.0\"></a>\n\n# [4.4.0](https://github.com/instructure/instructure-ui/compare/v4.3.0...v4.4.0) (2017-12-13)\n\n### Bug Fixes\n\n- **Avatar:** trim whitespace in makeInitialsFromName ([4317939](https://github.com/instructure/instructure-ui/commit/4317939))\n- **docs:** Add missing docs app dependency ([fea9a70](https://github.com/instructure/instructure-ui/commit/fea9a70))\n- **TextArea:** shrink when cleared ([0b45287](https://github.com/instructure/instructure-ui/commit/0b45287))\n\n### Features\n\n- **ui-presets,ui-core:** Add support for node test environments + tweaks for quizzes ([dc7a484](https://github.com/instructure/instructure-ui/commit/dc7a484))\n\n<a name=\"4.3.0\"></a>\n\n# [4.3.0](https://github.com/instructure/instructure-ui/compare/v4.2.0...v4.3.0) (2017-12-11)\n\n### Bug Fixes\n\n- **Alert:** close button focus overlapping edge of container ([aeb2130](https://github.com/instructure/instructure-ui/commit/aeb2130))\n- **Alert:** Convert border values to theme vars ([273c86e](https://github.com/instructure/instructure-ui/commit/273c86e))\n- **Autocomplete:** fix controlled behavior ([8af7d62](https://github.com/instructure/instructure-ui/commit/8af7d62))\n- **browser:** fix accessing style when it's undefined in Position ([806a861](https://github.com/instructure/instructure-ui/commit/806a861))\n- **build:** Always ask for the release tag ([e01629c](https://github.com/instructure/instructure-ui/commit/e01629c))\n- **build:** Use correct format for release (git) tags ([c9ec4df](https://github.com/instructure/instructure-ui/commit/c9ec4df))\n- **Checkbox:** Update disabled/readonly checkboxes to not be tabbable ([8b37729](https://github.com/instructure/instructure-ui/commit/8b37729))\n- **ContextBox:** Position close button correctly in dialog example ([7c0e846](https://github.com/instructure/instructure-ui/commit/7c0e846))\n- **DateInput:** fix controlled component version ([af6208e](https://github.com/instructure/instructure-ui/commit/af6208e))\n- **DateInput:** Link messages to inputs for SR ([fe8f2bc](https://github.com/instructure/instructure-ui/commit/fe8f2bc))\n- **DateInput:** Prevent inputRef from getting called multiple times ([1dbd960](https://github.com/instructure/instructure-ui/commit/1dbd960))\n- **FileDrop:** allow extensions without leading dot ([9a155e9](https://github.com/instructure/instructure-ui/commit/9a155e9))\n- **Grid:** Make GridCols equal-width by default ([cb8e5d3](https://github.com/instructure/instructure-ui/commit/cb8e5d3))\n- **Link:** fix inverse focus for a11y ([c98a4af](https://github.com/instructure/instructure-ui/commit/c98a4af))\n- **List:** remove ellipsis styles from pipe variant ([390a60a](https://github.com/instructure/instructure-ui/commit/390a60a))\n- **Mask:** Make full-screen Mask work in Safari ([029f467](https://github.com/instructure/instructure-ui/commit/029f467))\n- **Menu:** Long menu item alignment is off ([3cfc435](https://github.com/instructure/instructure-ui/commit/3cfc435))\n- **Menu,MenuItem,PopoverMenu:** Fix VO double select on radio,checkbox ([28b733b](https://github.com/instructure/instructure-ui/commit/28b733b))\n- **NumberInput:** add sv locale ([40c6cb7](https://github.com/instructure/instructure-ui/commit/40c6cb7))\n- **NumberInput:** extend `disabled` styling to the arrow container ([d3ac1d4](https://github.com/instructure/instructure-ui/commit/d3ac1d4))\n- **Popover:** Popover onDismiss callback never fired ([28d236c](https://github.com/instructure/instructure-ui/commit/28d236c))\n- **RadioInput:** Disabled/read-only radios selectable in Safari ([5fbba2c](https://github.com/instructure/instructure-ui/commit/5fbba2c))\n- **RadioInput,Checkbox:** Move inputs outside label elements ([7531488](https://github.com/instructure/instructure-ui/commit/7531488))\n- **release:** Run tests only once for a release ([c3710fb](https://github.com/instructure/instructure-ui/commit/c3710fb))\n- **Select:** Make arrowColor theme variable work ([3731899](https://github.com/instructure/instructure-ui/commit/3731899))\n- **Spinner:** adjust large spinner animation ([36d9ea6](https://github.com/instructure/instructure-ui/commit/36d9ea6))\n- **Tag:** Tag components render wrong title value ([88b9bf1](https://github.com/instructure/instructure-ui/commit/88b9bf1))\n- **ToggleDetails:** Fix filled variant in IE11 ([f1970d1](https://github.com/instructure/instructure-ui/commit/f1970d1))\n- **Tooltip:** Move focus on single tab press with tooltip ([dd7d4d0](https://github.com/instructure/instructure-ui/commit/dd7d4d0))\n- **ui-core:** Audit/add missing Canvas variables ([a9cefe9](https://github.com/instructure/instructure-ui/commit/a9cefe9))\n- **ui-core:** Fix canvas-high-contrast component themes ([c577019](https://github.com/instructure/instructure-ui/commit/c577019))\n- **ui-docs-client:** Codepen links are missing some globals ([9e620e2](https://github.com/instructure/instructure-ui/commit/9e620e2))\n- **ui-docs-plugin:** misc fixes ([aff7b27](https://github.com/instructure/instructure-ui/commit/aff7b27))\n- **ui-presets:** Build CSS with webpack in dev/debug mode ([d3083be](https://github.com/instructure/instructure-ui/commit/d3083be))\n- **ui-presets:** Don't remove width/height from SVG tags ([639f620](https://github.com/instructure/instructure-ui/commit/639f620))\n\n### Features\n\n- **build:** Default release script to HEAD commit ([f96b34a](https://github.com/instructure/instructure-ui/commit/f96b34a))\n- **build:** Use headless chrome ([39339fd](https://github.com/instructure/instructure-ui/commit/39339fd))\n- **ContextBox,Container:** Moving border from ContextBox to Container ([8bf314a](https://github.com/instructure/instructure-ui/commit/8bf314a))\n- **FileDrop:** Add support for validation messages ([37a9106](https://github.com/instructure/instructure-ui/commit/37a9106))\n- **FormField:** Add prop to allow left aligned FormField label ([089833a](https://github.com/instructure/instructure-ui/commit/089833a))\n- **Menu:** Add focus state ([b5f4069](https://github.com/instructure/instructure-ui/commit/b5f4069))\n- **Menu:** Focus first menu item when menu only has one item ([d03d1f2](https://github.com/instructure/instructure-ui/commit/d03d1f2))\n- **TextInput:** add textAlign variant to support `center` ([53843e1](https://github.com/instructure/instructure-ui/commit/53843e1))\n- **ui-core:** Move moment dependency to ui-utils ([0d12a6a](https://github.com/instructure/instructure-ui/commit/0d12a6a))\n- **ui-presets:** Add build and test scripts ([6921a48](https://github.com/instructure/instructure-ui/commit/6921a48))\n- **ui-themes:** Add canvas-high-contrast theme ([e6cd8e8](https://github.com/instructure/instructure-ui/commit/e6cd8e8))\n- **ui-utils:** Add a uid helper ([c9cc6c3](https://github.com/instructure/instructure-ui/commit/c9cc6c3))\n- **ui-utils:** Addition of utils needed for the layout component ([501ada3](https://github.com/instructure/instructure-ui/commit/501ada3))\n\n<a name=\"4.2.0\"></a>\n\n# [4.2.0](https://github.com/instructure/instructure-ui/compare/4.1.0...4.2.0) (2017-12-08)\n\n### Features\n\n- **button:** remove focus on disabled buttons ([863e055](https://github.com/instructure/instructure-ui/commit/863e055))\n\n<a name=\"4.1.0\"></a>\n\n# [4.1.0](https://github.com/instructure/instructure-ui/compare/4.0.1...4.1.0) (2017-11-29)\n\n### Bug Fixes\n\n- **Tag:** Focus state hidden in IE11 ([22d5d5c](https://github.com/instructure/instructure-ui/commit/22d5d5c))\n- **ui-docs-client:** Codepen links are missing some globals ([0a3f30c](https://github.com/instructure/instructure-ui/commit/0a3f30c))\n\n### Features\n\n- **Tag:** inline variant ([7ad7f7a](https://github.com/instructure/instructure-ui/commit/7ad7f7a))\n\n<a name=\"4.0.1\"></a>\n\n## [4.0.1](https://github.com/instructure/instructure-ui/compare/v4.0.0...v4.0.1) (2017-11-17)\n\n### Bug Fixes\n\n- **Mask:** Fullscreen modal footer hidden on iPad ([ebb76d5](https://github.com/instructure/instructure-ui/commit/ebb76d5))\n- **ui-codemods:** add lib to imports path for ui-themes and ui-themeable ([973cf9b](https://github.com/instructure/instructure-ui/commit/973cf9b))\n\n<a name=\"4.0.0\"></a>\n\n# [4.0.0](https://github.com/instructure/instructure-ui/compare/v3.3.1...v4.0.0) (2017-10-13)\n\nThe two major themes of the 4.0 release are mono-repo and documentation!\n\n### Mono-repo\n\nIn 4.0 we've split the `instructure-ui` library into a bunch of smaller libraries\nand we're publishing them all as separate modules to NPM.\n\nThis should make it easier to upgrade going forward. (e.g you can upgrade to a\npatch or minor release of [@instructure/ui-core](#ui-core) without upgrading\n[@instructure/ui-themeable](#ui-themeable)).\n\nUnfortunately this also means that paths for imports will have to change when applying\nthis upgrade.\n\nHowever, the codemod script provided by [@instructure/ui-codemods](#ui-codemods)\nshould help with that, and you can see what paths have changed in the `ui-core/config/imports.config.json` file.\n\n### Documentation\n\nThe [@instructure/ui-docs-plugin](#ui-docs-plugin) module has gotten an overhaul and now supports\n[JSDoc](http://usejsdoc.org/) and generates documentation from any file format that\nsupports JS style code blocks, in addition to markdown.\n\nAll of the utilities, and packages have been documented, so finding your way\naround the libraries and seeing how they fit together should be a lot easier.\n\n### Bug Fixes\n\n- **Alert:** Announce live region content in the docs ([493440a](https://github.com/instructure/instructure-ui/commit/493440a))\n- **Autocomplete:** add calls for onInputChange ([33ad3cb](https://github.com/instructure/instructure-ui/commit/33ad3cb))\n- **Autocomplete,Codepen:** Codepen examples should render ([36ef124](https://github.com/instructure/instructure-ui/commit/36ef124))\n- **Autocomplete,Menu,Dialog:** Prevent esc from closing Dialog ([284eeed](https://github.com/instructure/instructure-ui/commit/284eeed))\n- **Avatar:** include canvas theme generator ([dc27b6a](https://github.com/instructure/instructure-ui/commit/dc27b6a))\n- **build:** ignore lib directories ([cb56606](https://github.com/instructure/instructure-ui/commit/cb56606))\n- **build:** Use local version of yarn for scripts ([fcf7732](https://github.com/instructure/instructure-ui/commit/fcf7732))\n- **build:** use relative paths for entries so that app rebuilds in dev ([f60d94d](https://github.com/instructure/instructure-ui/commit/f60d94d))\n- **Button:** Correct fluidWidth Button heights ([5ede261](https://github.com/instructure/instructure-ui/commit/5ede261))\n- **CheckboxGroup,RadioInputGroup:** Link messages to inputs for SR ([fba6550](https://github.com/instructure/instructure-ui/commit/fba6550))\n- **documentation:** Examples should have valid URLs for hrefs ([18eeaa4](https://github.com/instructure/instructure-ui/commit/18eeaa4))\n- **FileDrop:** make input sibling of label ([d892cff](https://github.com/instructure/instructure-ui/commit/d892cff))\n- **Forms:** fix css placeholder color ([7c63393](https://github.com/instructure/instructure-ui/commit/7c63393))\n- **Forms:** Update size prop ([95ecfd2](https://github.com/instructure/instructure-ui/commit/95ecfd2))\n- **Grid:** width and offset not working ([1a2fa45](https://github.com/instructure/instructure-ui/commit/1a2fa45))\n- **Grid:** GridCol with width=\"auto\" should not shrink ([ae82286](https://github.com/instructure/instructure-ui/commit/ae82286))\n- **Mask:** Prevent mask from calling onDismiss when defaultPrevented ([4f42ad0](https://github.com/instructure/instructure-ui/commit/4f42ad0))\n- **Mask:** Update Mask example text ([77deb7e](https://github.com/instructure/instructure-ui/commit/77deb7e))\n- **Modal:** Modify modal to dismiss for Mask click instead of document ([64f6816](https://github.com/instructure/instructure-ui/commit/64f6816))\n- **ToggleDetails:** Fix fluidWidth prop / updates ([de9ef24](https://github.com/instructure/instructure-ui/commit/de9ef24))\n- **ui-docs-client:** Fix navigation issues ([193399e](https://github.com/instructure/instructure-ui/commit/193399e))\n- **ui-docs-client:** Make version link to changelog ([581fca4](https://github.com/instructure/instructure-ui/commit/581fca4))\n\n### Features\n\n- **Autocomplete:** implement value getter ([1a8a730](https://github.com/instructure/instructure-ui/commit/1a8a730))\n- **ui-codemods:** Adding codemod for updating imports ([f4907cb](https://github.com/instructure/instructure-ui/commit/f4907cb))\n- **build:** Monorepo second pass ([5fae316](https://github.com/instructure/instructure-ui/commit/5fae316))\n- **build:** Monorepo, yarn workspaces and Lerna setup ([edd71af](https://github.com/instructure/instructure-ui/commit/edd71af))\n- **DateInput:** Add conversion status as part of onDateChange ([1ecb819](https://github.com/instructure/instructure-ui/commit/1ecb819))\n- **Forms:** Update component font sizes ([13f77c6](https://github.com/instructure/instructure-ui/commit/13f77c6))\n- **List:** Remove margin from unstyled list item ([0e39d75](https://github.com/instructure/instructure-ui/commit/0e39d75))\n- **ToggleDetails:** add controllable behavior ([f767b50](https://github.com/instructure/instructure-ui/commit/f767b50))\n- **ui-docs-plugin:** Doc comment blocks in all file types & JSdocs ([6189147](https://github.com/instructure/instructure-ui/commit/6189147))\n- **ui-docs-plugin:** Integrate react-axe in dev mode ([6a29682](https://github.com/instructure/instructure-ui/commit/6a29682))\n- **ui-utils:** Add jsdocs for util functions ([c6b5834](https://github.com/instructure/instructure-ui/commit/c6b5834))\n\n### BREAKING CHANGES\n\n- **Autocomplete,Codepen:** JS examples will need to include a call to render and will need to\n  include `render: false` as front matter inside the code block\n- **ui-docs-plugin:** Inverse examples will need to include `inverse: true` as front matter inside\n  the code block\n- **Typography,Text:** Typography component is renamed to Text, so\n  imports/requires will need to be updated (it's added to the codemod\n  config in ui-core)\n- **Forms:** The font size of the components will have increased\n- **Forms:** Font-sizes for `large` and `small`\n  simple RadioInputs and Checkboxes have changed. In\n  particular, Checkbox toggles have gone from using the\n  same font-size for every size to changing the\n  font-size based on the `size` prop (to be\n  consistent with other InstUI components).\n- **List:** ListItem with `unstyled` variant won't have margins.\n- **build:** Imports of instructure-ui/babel/, instructure-ui/lib/themeable and\n  instructure-ui/lib/themes will need to be updated\n- **build:** Imports of instructure-ui and ui-docs packages will\n  need to be updated to use the new packages: @instructure/ui-core, @instructure/ui-codemods, @instructure/ui-config\n- **build:** Imports of ui-docs will need to be updated to: @instructure/ui-docs-plugin, @instructure/ui-docs-client\n- **Autocomplete:** onInputChange prop now has a new argument providing the\n  value and the event argument is now nullable\n- **ToggleDetails:** expanded prop now means ToggleDetails is controlled\n  and defaultExpanded prop fills the same job expanded did previously\n\n<a name=\"3.4.0\"></a>\n\n# [3.4.0](https://github.com/instructure/instructure-ui/compare/v3.3.1...v3.4.0) (2017-09-12)\n\n### Bug Fixes\n\n- **babel:** Warn on unlocatable css imports ([c6d82fc](https://github.com/instructure/instructure-ui/commit/c6d82fc))\n\n### Features\n\n- **themeing:** Allow ignoring certain files ([c24e4bc](https://github.com/instructure/instructure-ui/commit/c24e4bc))\n\n<a name=\"3.3.1\"></a>\n\n## [3.3.1](https://github.com/instructure/instructure-ui/compare/v3.3.0...v3.3.1) (2017-09-11)\n\n### Bug Fixes\n\n- **Autocomplete:** Autocomplete clears text on select ([143ce14](https://github.com/instructure/instructure-ui/commit/143ce14))\n- **Container:** add missing prop-type ([946604d](https://github.com/instructure/instructure-ui/commit/946604d))\n- **DateInput:** Fix multiple setState calls via input ref function ([0cce6d7](https://github.com/instructure/instructure-ui/commit/0cce6d7))\n- **file-drop:** Fix dropping the same file twice ([34aa303](https://github.com/instructure/instructure-ui/commit/34aa303))\n- **Modal:** Added fullScreen prop to Mask component ([7ddea42](https://github.com/instructure/instructure-ui/commit/7ddea42))\n- **Modal:** disable page scrolling when fullScreen prop is set ([207780e](https://github.com/instructure/instructure-ui/commit/207780e))\n- **themeable:** Allow multiple themeable components with the same name ([779fc7d](https://github.com/instructure/instructure-ui/commit/779fc7d))\n\n<a name=\"3.3.0\"></a>\n\n# [3.3.0](https://github.com/instructure/instructure-ui/compare/v3.2.0...v3.3.0) (2017-09-06)\n\n### Bug Fixes\n\n- **Alert:** Apply a11y theme to added alerts ([531a4ad](https://github.com/instructure/instructure-ui/commit/531a4ad))\n- **Autocomplete:** add index argument to formatSelectedOption ([a7dfccb](https://github.com/instructure/instructure-ui/commit/a7dfccb))\n- **Autocomplete:** Add more end padding to input ([4496b4a](https://github.com/instructure/instructure-ui/commit/4496b4a))\n- **Checkbox:** Add min-width rule to label ([4e35459](https://github.com/instructure/instructure-ui/commit/4e35459))\n- **ContextBox,Position:** ContextBox positioning is incorrect ([0e44db0](https://github.com/instructure/instructure-ui/commit/0e44db0))\n- **DateInput:** Make popover target the input element ([5ad19e7](https://github.com/instructure/instructure-ui/commit/5ad19e7))\n- **DatePicker:** DatePicker UI improvements ([b0872ce](https://github.com/instructure/instructure-ui/commit/b0872ce))\n- **Modal:** Max-width for Modal content ([af0607c](https://github.com/instructure/instructure-ui/commit/af0607c))\n- **Modal:** positioned content breaks out of Modal ([9ef840a](https://github.com/instructure/instructure-ui/commit/9ef840a))\n- **Popover:** Fix focus trapping to work with Menu ([bfcccf4](https://github.com/instructure/instructure-ui/commit/bfcccf4))\n- **Popover,Dialog:** Prevent Popover jumping to bottom of screen ([426f4ff](https://github.com/instructure/instructure-ui/commit/426f4ff))\n- **Position:** fix out-of-bounds calculation for Position ([9c1aa4b](https://github.com/instructure/instructure-ui/commit/9c1aa4b))\n\n### Features\n\n- **TabList:** Add tabRef prop to TabPanel ([77a8def](https://github.com/instructure/instructure-ui/commit/77a8def))\n\n### Performance Improvements\n\n- **lib/util/time.js:** Don't force all locales to be included in bundle ([6a62bd4](https://github.com/instructure/instructure-ui/commit/6a62bd4))\n\n<a name=\"3.2.0\"></a>\n\n# [3.2.0](https://github.com/instructure/instructure-ui/compare/v3.1.0...v3.2.0) (2017-08-18)\n\n### Bug Fixes\n\n- **Autocomplete:** adds optionsMaxWidth prop to Autocomplete ([f2e0f2f](https://github.com/instructure/instructure-ui/commit/f2e0f2f))\n- **button:** Firefox - Return button needs to be pressed twice ([4a6fe9f](https://github.com/instructure/instructure-ui/commit/4a6fe9f))\n\n### Features\n\n- **autocomplete:** Change autocomplete min-width ([03a7652](https://github.com/instructure/instructure-ui/commit/03a7652))\n\n<a name=\"3.1.0\"></a>\n\n# [3.1.0](https://github.com/instructure/instructure-ui/compare/v3.0.0...v3.1.0) (2017-08-16)\n\n### Bug Fixes\n\n- **autocomplete:** add min-width to autocomplete ([587f074](https://github.com/instructure/instructure-ui/commit/587f074))\n- **build:** release script should run the deploy ([3ed1b20](https://github.com/instructure/instructure-ui/commit/3ed1b20))\n- **codepen:** use the correct format for js_external param ([9398a93](https://github.com/instructure/instructure-ui/commit/9398a93))\n- **NumberInput:** Fix hidden arrows in Firefox ([727609c](https://github.com/instructure/instructure-ui/commit/727609c))\n- **Position:** ContextBox arrow should be correct in example ([4406d57](https://github.com/instructure/instructure-ui/commit/4406d57))\n- **warning:** use console.error instead of throwing errors ([5aa3a7b](https://github.com/instructure/instructure-ui/commit/5aa3a7b))\n\n### Features\n\n- **Checkbox,CheckboxGroup:** Add Readonly to Checkbox values ([a77624f](https://github.com/instructure/instructure-ui/commit/a77624f))\n- **RadioInput:** Allow readonly on radioinput values ([5248571](https://github.com/instructure/instructure-ui/commit/5248571))\n\n<a name=\"3.0.0\"></a>\n\n# [3.0.0](https://github.com/instructure/instructure-ui/compare/v2.5.0...v3.0.0) (2017-08-08)\n\nThis release is all about dialogs. We've made a new [Dialog](#Dialog) component, and\nwe're now using it in [Popover](#Popover), [Modal](#Modal), and [Tray](#Tray), so\nthat they all get the new functionality and have a consistent API.\n\nWe've also done a lot of property renaming to also help with that consistency and\ndeveloper UX going forward.\n\nNote: We've included a codemod and DEV environment warnings to make it easy to update\nyour code to use the new property names.\n\n### BREAKING CHANGES\n\nTo help with this upgrade, deprecated props should now emit console warnings in DEV\nenvironments. You can also run the codemod to update properties for this release:\n\n```sh\nyarn add @instructure/ui-codemods\n```\n\n```sh\njscodeshift -t node_modules/@instructure/ui-codemods/lib/updatePropNames.js <path> --config=node_modules/@instructure/ui-core/config/propNames.config.json\n```\n\n- **DateInput:** add `value` prop for controlled component support\n- **build:** `themeable.config.js` now required for babel preset.\n- **DateInput, DatePicker:** callback function arguments changed\n- **Table:** deprecated props\n- **Portal, Position, Overlay, Modal, Tray, Popover:** deprecated props\n- **Menu, PopoverMenu:** deprecated props\n- **Tag:** deprecated props\n- **Alert:** deprecated props\n\n### Bug Fixes\n\n- **Autocomplete:** Add z-index to avoid overlap ([a588081](https://github.com/instructure/instructure-ui/commit/a588081))\n- **Autocomplete:** fix duplicate calls to onChange ([856e67b](https://github.com/instructure/instructure-ui/commit/856e67b))\n- **Autocomplete:** Make options menu expand to full input width ([d6dfe87](https://github.com/instructure/instructure-ui/commit/d6dfe87))\n- **Autocomplete:** Resolve VO issues ([e4d4592](https://github.com/instructure/instructure-ui/commit/e4d4592))\n- **Autocomplete:** The options list should close on select ([d672875](https://github.com/instructure/instructure-ui/commit/d672875))\n- **Autocomplete:** visual bug fixes ([27d858b](https://github.com/instructure/instructure-ui/commit/27d858b))\n- **Billboard, omitProp 'padding':** don't allow padding to get styled ([c860d3f](https://github.com/instructure/instructure-ui/commit/c860d3f))\n- **build:** Remove `.js` from theme import in template ([cad860e](https://github.com/instructure/instructure-ui/commit/cad860e))\n- **Button:** buttonRef prop should return the button DOM element ([29474cd](https://github.com/instructure/instructure-ui/commit/29474cd))\n- **Button:** Fix :focus ring issue in Firefox ([430cf7d](https://github.com/instructure/instructure-ui/commit/430cf7d))\n- **Button, fluidWidth:** replace min-height with top/bottom padding ([30b3073](https://github.com/instructure/instructure-ui/commit/30b3073))\n- **Button, omitProp 'padding':** padding was getting passed down through ([c005760](https://github.com/instructure/instructure-ui/commit/c005760))\n- **Checkbox:** Make size prop work for CheckboxFacade ([53523f8](https://github.com/instructure/instructure-ui/commit/53523f8))\n- **DateInput:** Make props align better with controlled and uncontrolled ([712447d](https://github.com/instructure/instructure-ui/commit/712447d))\n- **DateInput, DatePicker:** Provide the event object in the callback arg ([37cd10a](https://github.com/instructure/instructure-ui/commit/37cd10a))\n- **DatePicker:** Fix :focus states in Edge 15 ([ae620ef](https://github.com/instructure/instructure-ui/commit/ae620ef))\n- **dependencies:** Resolve empty styles in transpiled JS ([f79c154](https://github.com/instructure/instructure-ui/commit/f79c154))\n- **Dialog:** Render Dialog example outside aria-hidden region ([3b614db](https://github.com/instructure/instructure-ui/commit/3b614db))\n- **docs:** Upgrade ui-docs to prevent theme conflicts ([db23135](https://github.com/instructure/instructure-ui/commit/db23135))\n- **ensureSingleChild:** Fix ensureSingleChild when child is a string ([f796ca0](https://github.com/instructure/instructure-ui/commit/f796ca0))\n- **FormFieldGroup:** Handle null children ([9b9019a](https://github.com/instructure/instructure-ui/commit/9b9019a))\n- **generate:** Fix the component template for the generate task ([76d86f0](https://github.com/instructure/instructure-ui/commit/76d86f0))\n- **Heading, omitProp 'padding':** don't allow padding to get passed down ([c4dbd6b](https://github.com/instructure/instructure-ui/commit/c4dbd6b))\n- **Image, omitProps 'padding':** keep padding from getting passed down f ([df1c2ec](https://github.com/instructure/instructure-ui/commit/df1c2ec))\n- **lint:** lint errors shouldn't fail build when debugging ([5e21641](https://github.com/instructure/instructure-ui/commit/5e21641))\n- **List, omitProps 'padding':** don't let padding get styled ([9fa375e](https://github.com/instructure/instructure-ui/commit/9fa375e))\n- **Media, omitProps 'padding':** padding should not be a media property ([d966622](https://github.com/instructure/instructure-ui/commit/d966622))\n- **Menu,PopoverMenu:** Menu flyouts should close onSelect ([b8185a0](https://github.com/instructure/instructure-ui/commit/b8185a0))\n- **Pagination, omitProps 'margin/padding':** don't allow margin/padding ([3d27f40](https://github.com/instructure/instructure-ui/commit/3d27f40))\n- **Pill, omitProps 'padding':** dont' allow padding to be added as a pro ([7b8502f](https://github.com/instructure/instructure-ui/commit/7b8502f))\n- **PopoverMenu,MenuItemFlyout:** Only close flyout on ESC press ([a767adf](https://github.com/instructure/instructure-ui/commit/a767adf))\n- **Position:** Fix mountNode prop in rel position container ([c59c339](https://github.com/instructure/instructure-ui/commit/c59c339))\n- **Position:** Negative offsets should work ([7c35e8f](https://github.com/instructure/instructure-ui/commit/7c35e8f))\n- **Table:** Deprecate the tableData prop ([5c9a5f6](https://github.com/instructure/instructure-ui/commit/5c9a5f6))\n- **Table, omitProps 'padding':** don't allow padding to be added as a pr ([67c79e3](https://github.com/instructure/instructure-ui/commit/67c79e3))\n- **Tag, omitProps 'padding':** don't allow padding to be added as a prop ([fcb251c](https://github.com/instructure/instructure-ui/commit/fcb251c))\n- **themeable:** Fix transform-themable with empty css files ([1d05744](https://github.com/instructure/instructure-ui/commit/1d05744))\n- **themeable:** Polyfill Edge 15 until improved css var support ([427a13c](https://github.com/instructure/instructure-ui/commit/427a13c))\n- **TreeBrowser:** Component broken in Edge v15 ([f6aab8b](https://github.com/instructure/instructure-ui/commit/f6aab8b))\n\n### Features\n\n- **Autocomplete:** Adds editable prop to Autocomplete ([15c70d1](https://github.com/instructure/instructure-ui/commit/15c70d1))\n- **Button, Link:** Add inverse link variants to Link and Button ([8b499c5](https://github.com/instructure/instructure-ui/commit/8b499c5))\n- **CloseButton:** Add a CloseButton component ([7475cb2](https://github.com/instructure/instructure-ui/commit/7475cb2))\n- **DateInput:** Return raw input for onDateChange ([9195dd1](https://github.com/instructure/instructure-ui/commit/9195dd1))\n- **Dialog:** Add a Dialog component ([0c197e1](https://github.com/instructure/instructure-ui/commit/0c197e1))\n- **Mask:** Add a Mask component ([5db3aa2](https://github.com/instructure/instructure-ui/commit/5db3aa2))\n- **Popover:** Add Dialog component behavior to Popover ([fcb2b89](https://github.com/instructure/instructure-ui/commit/fcb2b89))\n- **Position:** Add 'stretch', 'constrain' and 'over' props ([6930e83](https://github.com/instructure/instructure-ui/commit/6930e83))\n- **Spinner:** Add x-small Spinner size ([14e49e6](https://github.com/instructure/instructure-ui/commit/14e49e6))\n- **SVGIcon,InlineSVG:** Add icon components and new rotation prop ([02cd4b5](https://github.com/instructure/instructure-ui/commit/02cd4b5))\n- **Modal:** Add Dialog component behavior to Modal ([8597802](https://github.com/instructure/instructure-ui/commit/8597802))\n- **Tray:** Add Dialog component behavior to Tray ([ffd181e](https://github.com/instructure/instructure-ui/commit/ffd181e))\n\n<a name=\"2.5.0\"></a>\n\n# [2.5.0](https://github.com/instructure/instructure-ui/compare/v2.4.0...v2.5.0) (2017-06-20)\n\n### Bug Fixes\n\n- **Autocomplete:** Fix apply a11y theme ([0e6c3b3](https://github.com/instructure/instructure-ui/commit/0e6c3b3))\n- **Autocomplete:** fix typo in autocomplete prop documentation ([ce8bad9](https://github.com/instructure/instructure-ui/commit/ce8bad9))\n- **Container:** Fix Transition issue with children visibility ([0ec49ab](https://github.com/instructure/instructure-ui/commit/0ec49ab))\n- **DateInput:** Preserve time portion of provided value across date selections ([bb46db1](https://github.com/instructure/instructure-ui/commit/bb46db1))\n- **NumberInput:** make arrows work for large numbers ([99b7d70](https://github.com/instructure/instructure-ui/commit/99b7d70))\n- **TextInput:** Handle icons better ([5fc761b](https://github.com/instructure/instructure-ui/commit/5fc761b))\n- **themeable:** CSS variables polyfill shouldn't scope root selectors ([1545a8f](https://github.com/instructure/instructure-ui/commit/1545a8f))\n- **themeable:** IE11 CSS variable polyfill should scope media queries ([1f54b62](https://github.com/instructure/instructure-ui/commit/1f54b62))\n\n### Features\n\n- **Alert:** Add live region support and transitions ([948b00d](https://github.com/instructure/instructure-ui/commit/948b00d))\n- **Autocomplete:** Added 'multiple' feature ([520a005](https://github.com/instructure/instructure-ui/commit/520a005))\n- **Badge:** Support rtl text ([3bce62f](https://github.com/instructure/instructure-ui/commit/3bce62f))\n- **Breadcrumb:** Support rtl text for breadcrumb ([46c9ecf](https://github.com/instructure/instructure-ui/commit/46c9ecf))\n- **Button:** Support rtl text ([6f64f5d](https://github.com/instructure/instructure-ui/commit/6f64f5d))\n- **Checkbox:** Support rtl text in checkbox ([9038f86](https://github.com/instructure/instructure-ui/commit/9038f86))\n- **ContextBox:** Support rtl text in ContextBox ([7747bef](https://github.com/instructure/instructure-ui/commit/7747bef))\n- **Docs, ColorSwatch:** Support rtl text in ColorSwatch ([9237071](https://github.com/instructure/instructure-ui/commit/9237071))\n- **FormField, TextInput:** Support rtl text for text inputs ([c7dbdc2](https://github.com/instructure/instructure-ui/commit/c7dbdc2))\n- **FormFieldLayout:** Support rtl text ([2445616](https://github.com/instructure/instructure-ui/commit/2445616))\n- **GridCol:** Support rtl text in GridCol ([cb687fd](https://github.com/instructure/instructure-ui/commit/cb687fd))\n- **List:** Support rtl text in List ([56b6541](https://github.com/instructure/instructure-ui/commit/56b6541))\n- **Menu:** Support rtl text in Menu ([08b5253](https://github.com/instructure/instructure-ui/commit/08b5253))\n- **Modal:** Support rtl text in modal ([1d340b5](https://github.com/instructure/instructure-ui/commit/1d340b5))\n- **NumberInput:** Support rtl text in NumberInput ([9a9a878](https://github.com/instructure/instructure-ui/commit/9a9a878))\n- **RadioInput:** Support rtl text in RadioInput ([377b150](https://github.com/instructure/instructure-ui/commit/377b150))\n- **Select:** Support rtl text in Select ([7caf740](https://github.com/instructure/instructure-ui/commit/7caf740))\n- **Tag:** Support rtl text in Tag ([ef69bfb](https://github.com/instructure/instructure-ui/commit/ef69bfb))\n- **TextArea:** Support rtl text in TextArea ([cd58264](https://github.com/instructure/instructure-ui/commit/cd58264))\n- **ToggleDetails:** Support rtl in ToggleDetails ([5e8aad4](https://github.com/instructure/instructure-ui/commit/5e8aad4))\n- **TreeBrowser:** a11y navigation improvements ([272c873](https://github.com/instructure/instructure-ui/commit/272c873))\n- **TreeBrowser:** Support rtl text in TreeBrowser ([9e6b91e](https://github.com/instructure/instructure-ui/commit/9e6b91e))\n\n<a name=\"2.4.0\"></a>\n\n# [2.4.0](https://github.com/instructure/instructure-ui/compare/v2.3.0...v2.4.0) (2017-06-12)\n\n### Bug Fixes\n\n- **Badge:** Make it possible to add SR-only text ([4e3737f](https://github.com/instructure/instructure-ui/commit/4e3737f))\n- **DateInput:** add messages to date input ([1d18fc0](https://github.com/instructure/instructure-ui/commit/1d18fc0))\n- **themeable:** Remove all 'ms-' hacks for non-IE browsers ([0a491de](https://github.com/instructure/instructure-ui/commit/0a491de))\n- **NumberInput:** NumberInput bug fix ([ea84a69](https://github.com/instructure/instructure-ui/commit/ea84a69))\n- **themeable:** default theme overrides aren't applied to components ([e58424f](https://github.com/instructure/instructure-ui/commit/e58424f))\n\n### Features\n\n- **Grid:** Forward aria/role attributes on <Grid> components ([04adaea](https://github.com/instructure/instructure-ui/commit/04adaea))\n- **TabList:** Deprecate 'accordion' variant ([30c7a2d](https://github.com/instructure/instructure-ui/commit/30c7a2d))\n- **TimeInput:** Add a TimeInput component ([78201d3](https://github.com/instructure/instructure-ui/commit/78201d3))\n- **TreeBrowser:** Add expanded/defaultExpanded props ([52a6ce1](https://github.com/instructure/instructure-ui/commit/52a6ce1))\n- **Breadcrumb:** Add onClick to BreadcrumbLink ([c6af374](https://github.com/instructure/instructure-ui/commit/c6af374))\n\n<a name=\"2.3.0\"></a>\n\n# [2.3.0](https://github.com/instructure/instructure-ui/compare/v2.2.2...v2.3.0) (2017-06-01)\n\n### Bug Fixes\n\n- **Badge:** Make SVGs display block ([102207f](https://github.com/instructure/instructure-ui/commit/102207f))\n- **codepen examples:** fix codepen example links ([866af50](https://github.com/instructure/instructure-ui/commit/866af50))\n- **DatePicker:** Make DatePicker KO navigable with arrow keys ([059f947](https://github.com/instructure/instructure-ui/commit/059f947))\n- **npm:** Update shrinkwrap file so app compiles again ([0ec660a](https://github.com/instructure/instructure-ui/commit/0ec660a))\n- **NumberInput:** Fixed-width input layout bug ([fa6d9b8](https://github.com/instructure/instructure-ui/commit/fa6d9b8))\n- **NumberInput:** support i18n ([4e814f5](https://github.com/instructure/instructure-ui/commit/4e814f5))\n\n### Features\n\n- **Autocomplete:** Add an Autocomplete component ([d3e0d47](https://github.com/instructure/instructure-ui/commit/d3e0d47))\n- **List:** Add List component ([1ee5c4d](https://github.com/instructure/instructure-ui/commit/1ee5c4d))\n\n<a name=\"2.2.2\"></a>\n\n## [2.2.2](https://github.com/instructure/instructure-ui/compare/v2.2.1...v2.2.2) (2017-05-22)\n\n### Bug Fixes\n\n- **MenuItem:** Prevent onSelect from firing twice ([2c67d78](https://github.com/instructure/instructure-ui/commit/2c67d78))\n\n<a name=\"2.2.1\"></a>\n\n## [2.2.1](https://github.com/instructure/instructure-ui/compare/v2.2.0...v2.2.1) (2017-05-22)\n\n### Bug Fixes\n\n- **Menu:** Prevent UL margin style overrides ([4522876](https://github.com/instructure/instructure-ui/commit/4522876))\n- **ToolTip:** Events on the child of Trigger not being passed through to Popover ([69513b8](https://github.com/instructure/instructure-ui/commit/69513b8))\n- **MenuItem,Button:** should support target=\"\\_blank\" ([99b8544](https://github.com/instructure/instructure-ui/commit/99b8544))\n- **MenuItemFlyout:** Expose ref for flyout content ([5e0622e](https://github.com/instructure/instructure-ui/commit/5e0622e))\n\n<a name=\"2.2.0\"></a>\n\n## [2.2.0](https://github.com/instructure/instructure-ui/compare/v2.1.1...v2.2.0) (2017-05-22)\n\n### Bug Fixes\n\n- **Position:** Fix flaky Position test for Firefox ([8ea348d](https://github.com/instructure/instructure-ui/commit/8ea348d))\n- **Button:** Fix heights and add icon support ([faef77a](https://github.com/instructure/instructure-ui/commit/faef77a))\n- **ToggleDetails:** Fix button type and fluidWidth ([e1da0f4](https://github.com/instructure/instructure-ui/commit/e1da0f4))\n- **Modal:** Fix fullscreen in safari cutting off content ([d1d4ec7](https://github.com/instructure/instructure-ui/commit/d1d4ec7))\n- **containerQuery:** Should support ems ([4a09603](https://github.com/instructure/instructure-ui/commit/4a09603))\n- **sinon-chai:** Use the correct sinon-chai testing assertions ([453a211](https://github.com/instructure/instructure-ui/commit/453a211))\n\n### Features\n\n- **ApplyTheme:** Make accessible themes 'immutable' ([144a4fb](https://github.com/instructure/instructure-ui/commit/144a4fb))\n- **MenuFlyout:** Add MenuFlyout option to Menu ([6ea4f71](https://github.com/instructure/instructure-ui/commit/6ea4f71))\n\n<a name=\"2.1.1\"></a>\n\n## [2.1.1](https://github.com/instructure/instructure-ui/compare/v2.1.0...v2.1.1) (2017-05-18)\n\n### Bug Fixes\n\n- **build:** Fix compilation errors from missing moment-timezone ([501184d](https://github.com/instructure/instructure-ui/commit/501184d))\n\n<a name=\"2.1.0\"></a>\n\n# [2.1.0](https://github.com/instructure/instructure-ui/compare/v2.0.0...v2.1.0) (2017-05-17)\n\n### Bug Fixes\n\n- **Button:** fix display getting overridden ([0409876](https://github.com/instructure/instructure-ui/commit/0409876))\n- **requestAnimationFrame:** requestAnimationFrame util should fall back ([2352de8](https://github.com/instructure/instructure-ui/commit/2352de8))\n- **Tag, Pagination:** fix margin-padding values ([e34eb57](https://github.com/instructure/instructure-ui/commit/e34eb57))\n- **text-align:** Fix text alignment CSS rules for IE ([1c22ba6](https://github.com/instructure/instructure-ui/commit/1c22ba6))\n- **themes:** Provide a way to import accessible themes separately ([7e556df](https://github.com/instructure/instructure-ui/commit/7e556df))\n- **Transition:** Fix Transition component example ([c197cba](https://github.com/instructure/instructure-ui/commit/c197cba))\n\n### Features\n\n- **Badge:** Add Badge component ([3247199](https://github.com/instructure/instructure-ui/commit/3247199))\n- **Button:** add a danger variant ([7d741aa](https://github.com/instructure/instructure-ui/commit/7d741aa))\n- **DatePicker, DateInput:** Add DatePicker and DateInput components ([457dea7](https://github.com/instructure/instructure-ui/commit/457dea7))\n- **NumberInput:** Add a NumberInput component ([c37afdc](https://github.com/instructure/instructure-ui/commit/c37afdc))\n\n<a name=\"2.0.0\"></a>\n\n# [2.0.0](https://github.com/instructure/instructure-ui/compare/v1.4.1...v2.0.0) (2017-05-10)\n\n### Bug Fixes\n\n- **release:** Fix typo in release script ([9850924](https://github.com/instructure/instructure-ui/commit/9850924))\n- **Spinner:** Fix illegal rule console warning ([d0820aa](https://github.com/instructure/instructure-ui/commit/d0820aa))\n- **TabList:** Fix TabList transitions and unmountOnExit ([fcc5961](https://github.com/instructure/instructure-ui/commit/fcc5961))\n- **themes:** Don't depend on import order for themeable components, themes ([10396c8](https://github.com/instructure/instructure-ui/commit/10396c8))\n\n### Dependencies and Build\n\n- Remove UMD output and build scripts ([5d5eb65](https://github.com/instructure/instructure-ui/commit/5d5eb65))\n- Upgrade React to the latest version ([c422be7](https://github.com/instructure/instructure-ui/commit/c422be7))\n\n### API Changes\n\n- **Avatar:** Update the Avatar component API ([56f4eab](https://github.com/instructure/instructure-ui/commit/56f4eab))\n- **Container:** Make `size` property values consistent ([f75465a](https://github.com/instructure/instructure-ui/commit/f75465a))\n- **isBlock:** Replace `isBlock` props with `inline` ([c1dcdff](https://github.com/instructure/instructure-ui/commit/c1dcdff))\n- **ToggleDetails:** Update the ToggleDetails component API ([c8348b5](https://github.com/instructure/instructure-ui/commit/c8348b5))\n- **RTL support:** Replace left/right with start/end ([c855ea1](https://github.com/instructure/instructure-ui/commit/c855ea1))\n- **Grid:** Change breakpoints and media to use 'small', 'medium', etc. ([15f592a](https://github.com/instructure/instructure-ui/commit/15f592a))\n\n### Features\n\n- **Button:** Wrap text when 'isBlock' prop is set ([d8af67d](https://github.com/instructure/instructure-ui/commit/d8af67d))\n- **Pagination:** Add Pagination ([76ee0f0](https://github.com/instructure/instructure-ui/commit/76ee0f0))\n- **Pill:** Add Pill component ([354795c](https://github.com/instructure/instructure-ui/commit/354795c))\n- **RTL support:** Rename placement props ([099795a](https://github.com/instructure/instructure-ui/commit/099795a))\n- **Tag:** Add Tag component ([6a0d804](https://github.com/instructure/instructure-ui/commit/6a0d804))\n\n### Upgrade Guide\n\nWe've introduced some improved API and component changes that are not backwards compatible with previous versions. To help with migrating to 2.x, here is a list of specific areas where changes will be required in order to upgrade.\n\n#### Build and Dependency Updates\n\n- **React 0.14.9 or 15.4.0 is required**\n- **UMD format is no longer supported**\n- **instructure-icons is now a peer dependency**\n\n#### Themes no longer dependent on import order\n\nYou no longer have to call `setDefaultTheme`. If you import just the theme that you need, it will be used as the default (otherwise the first theme imported will be the default).\n\nIf you'd like to add user overrides or toggle on the a11y version, you can do:\n\n```\nimport { canvas } from 'instructure-ui/lib/themes'\ncanvas.use({ accessible: true, overrides: brandVariables })\n```\n\nNote: this also splits out the a11y themes from the base so they can be\nimported separately.\n\nBREAKING CHANGES:\n\n- removed `ApplyTheme.setDefaultTheme`\n- removed `themeable.setDefaultTheme`\n- trigger a11y themes using `theme.use()`\n\n#### `size` prop changes\n\nCamel-case values in `Container` component `margin` and `padding` props will need to be changed to use dashes (for consistency with other components).\n\n<table>\n  <caption> Alert, Avatar, Billboard, Breadcrumb, Button, ContextBox, Heading, Image, Link, Media, Modal, Pill, Progress, Rating, Spinner, Table, TabList</caption>\n  <thead><tr><th>1.x</th><th>2.x</th></tr></thead>\n  <tbody>\n    <tr>\n    <td>\n    'xxxSmall'\n    </td>\n    <td>\n    'xxx-small'\n    </td>\n    </tr>\n    <tr>\n    <td>\n    'xxSmall'\n    </td>\n    <td>\n    'xx-small'\n    </td>\n    </tr>\n    <tr>\n      <td>\n      'xSmall'\n      </td>\n      <td>\n      'x-small'\n      </td>\n    </tr>\n    <tr>\n      <td>\n      'xLarge'\n      </td>\n      <td>\n      'x-large'\n      </td>\n    </tr>\n    <tr>\n      <td>\n      'xxLarge'\n      </td>\n      <td>\n      'xx-large'\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n#### Position API Changes\n\nComponents previously using `left` and `right` for positioning have been updated to use `start` and `end` to better support RTL languages in the future.\n\n<table>\n  <caption>ContextBox, Popover, Position, Tooltip, Tray </caption>\n  <thead><tr><th>1.x</th><th>2.x</th></tr></thead>\n  <tbody>\n    <tr>\n    <td>\n    placement: 'left'\n    </td>\n    <td>\n    placement: 'start'\n    </td>\n    </tr>\n    <tr>\n    <td>\n    placement: 'right'\n    </td>\n    <td>\n    placement: 'end'\n    </td>\n    </tr>\n    <tr>\n    <td>\n    placement: 'middle'\n    </td>\n    <td>\n    placement: 'center'\n    </td>\n    </tr>\n  </tbody>\n</table>\n\n#### `textAlign` prop Values\n\nComponents previously using `left` and `right` for the `textAlign` prop have been updated to use `start` and `end` to better support RTL languages in the future.\n\n<table>\n  <caption>Container, ContextBox, FormField, Grid, GridCol, TabList</caption>\n  <thead><tr><th>1.x</th><th>2.x</th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n      textAlign: 'left'\n      </td>\n      <td>\n      textAlign: 'start'\n      </td>\n    </tr>\n    <tr>\n      <td>\n      textAlign: 'right'\n      </td>\n      <td>\n      textAlign: 'end'\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n#### `isBlock` prop\n\nChanges for consistency in component APIs\n\n<table>\n  <caption>Button, ToggleDetails</caption>\n  <thead><tr><th>1.x</th><th>2.x</th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n      isBlock: true\n      </td>\n      <td>\n      fluidWidth: true\n      </td>\n    </tr>\n  </tbody>\n</table>\n<br/>\n<table>\n  <caption>Checkbox, FormField, FormFieldLayout, Image, RadioInput, Select, TextArea, TextInput, Tooltip, Transition </caption>\n  <thead><tr><th>1.x</th><th>2.x</th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n      isBlock: true\n      </td>\n      <td>\n      inline: false\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n#### `Avatar` Component API\n\nChanges to our `<Avatar>` component:\n\n<table>\n  <thead><tr><th>1.x</th><th>2.x</th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n      userName: 'Sarah'\n      </td>\n      <td>\n      name: 'Sarah'\n      </td>\n    </tr>\n    <tr>\n      <td>\n      userImgUrl: {avatarSquare}\n      </td>\n      <td>\n      src: {avatarSquare}\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n#### `ToggleDetails` Component API\n\nChanges to our `<ToggleDetails>` component:\n\n<table>\n  <thead><tr><th>1.x</th><th>2.x</th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n      isExpanded\n      </td>\n      <td>\n      expanded\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n#### Breakpoint (`startAt`) props\n\nChanges to the allowed values for the `<Grid>` component props, with extension into a few components where we allow breakpoints to be set:\n\n<table>\n  <caption>Grid, FormFieldGroup, RadioInputGroup, CheckboxGroup</caption>\n  <thead><tr><th>1.x</th><th>2.x</th></tr></thead>\n  <tbody>\n    <tr>\n      <td>phone</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <td>tablet</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <td>desktop</td>\n      <td>large</td>\n    </tr>\n    <tr>\n      <td>wide</td>\n      <td>x-large</td>\n    </tr>\n  </tbody>\n</table>\n\n<a name=\"1.4.1\"></a>\n\n## [1.4.1](https://github.com/instructure/instructure-ui/compare/v1.4.0...v1.4.1) (2017-04-14)\n\n<a name=\"1.4.0\"></a>\n\n## [1.4.0](https://github.com/instructure/instructure-ui/compare/v1.3.4...v1.4.0) (2017-04-13)\n\n### Bug Fixes\n\n- **MenuItemGroup:** Prevent errors when MenuItemGroup has only one child ([ec333dc](https://github.com/instructure/instructure-ui/commit/ec333dc))\n- **Modal:** Focus 'Open Modal' button in Modal example when Modal closes ([ee02811](https://github.com/instructure/instructure-ui/commit/ee02811))\n- **Position:** Improve Position component (for PopoverMenu bug fixes) ([3e06a07](https://github.com/instructure/instructure-ui/commit/3e06a07))\n- **Rating:** Rating component should be themeable when `animateFill` pro ([ce17907](https://github.com/instructure/instructure-ui/commit/ce17907))\n\n### Performance Improvements\n\n- **themeable:** Update shouldComponentUpdate for themeable components ([3ad419b](https://github.com/instructure/instructure-ui/commit/3ad419b))\n\n## 1.3.4\n\n#### Upgrade instructure-icons @jstern\n\n#### Prevent normalize.css from breaking the [Button](#Button) component styles @mphillips\n\n## 1.3.3\n\n#### Add option to show on click to [Tooltip](#Tooltip) @sburnett\n\n## 1.3.2\n\n#### Update onItemClick and onCollectionClick return values for [TreeBrowser](#TreeBrowser) @mberns\n\n## 1.3.1\n\n#### Remove PureComponent so that the library still works with React 0.14.8 @jstern\n\n#### Call [PopoverMenu](#PopoverMenu) event handlers after setState @jstern\n\n## 1.3.0\n\n#### Resolve [PopoverMenu](#PopoverMenu) focus issues @sejensen\n\n#### Only render [Portal](#Portal)/[Position](#Position) if it has content @mzabriskie\n\n#### Add a [FileDrop](#FileDrop) component @ddoumecq\n\n#### Update [modern](#modern) theme for [TextArea](#TextArea) @phiett\n\n#### Add a [Container](#Container) component @chart\n\n#### Fix console warnings for invalid placeholder [TextArea](#TextArea) and [TextInput](#TextInput) styles @jsimon\n\n#### Fix IE11 bug with thin line on triangle for [ContextBox](#ContextBox) @phiett\n\n#### Enter key should trigger onClick on [Button](#Button) component for any element @jstern\n\n#### Add ellipsis prop to [Heading](#Heading) component @chart\n\n#### [MetricsList](#MetricsList) read item label before value @cprescott\n\n#### Fix URL to docs in the docs @eschiebel\n\n## 1.2.0\n\n#### Add a `trackPosition` prop to [Position](#Position) component so that positioning can be toggled on/off @mzabriskie\n\n#### Fix [Grid](#Grid) component/remove extra padding on left and right sides @jstern\n\n## 1.1.0\n\n#### Fix \"illegal rule inserted\" console warning @jstern\n\n#### Allow [Billboard](#Billboard) to render as a link if `href` prop is provided @chart\n\n#### Update look of [Avatar](#Avatar) @phiett\n\n#### Update [modern](#modern) theme for [RadioInput](#RadioInput) @phiett\n\n#### Update [modern](#modern) theme for [Checkbox](#Checkbox) @phiett\n\n#### Prevent referencing window at require time @bburgoyne\n\n#### Allow [Billboard](#Billboard) to pass props to button @chart\n\n#### Allow `inverse` close button on [Tray](#Tray) @ctennety\n\n## 1.0.2\n\n#### Do not focus [PopoverMenu](#PopoverMenu) trigger on mount @sejensen\n\n#### Fix `shouldCloseOnOverlayClick` prop for [Modal](#Modal) @mzabriskie\n\n#### Fix [PopoverMenu](#PopoverMenu) bug when MenuItems are triggered by ENTER key press @jstern\n\n## 1.0.1\n\n#### Fix focus state for RadioInput and Checkbox @chart\n\n#### Fix message display for form components at `wide` screens @jstern\n\n#### Fix focus for [Menu](#Menu) component when first item is a MenuItemGroup @sejensen\n\n#### Add [Billboard](#Billboard) component @chart\n\n## 1.0.0\n\n#### Add a [Position](#Position) component @mzabriskie\n\n#### Update design of [Checkbox](#Checkbox) `toggle` variant @chart\n\n#### Fix [Grid](#Grid) component bugs with `spaceAround` and `spaceBetween` props in IE 11 @jstern\n\n#### Update design of [RadioInputGroup](#RadioInputGroup) `toggle` variant @chart\n\n#### Minimize CSS in JS bundles @jbelser\n\n#### Update `modern` design of [Checkbox](#Checkbox) component @andy\n\n#### Fix CSS specificity bug with [Link](#Link) component @jstern\n\n#### Optimize style injection (using [glamor](https://github.com/threepointone/glamor) Stylesheet) @jstern\n\n#### Import themes individually and change the API for setting the default theme. See [theme](#canvas) documentation. @jstern\n\n#### Make box-shadows consistent (use [theme config](#canvas) for shadows) @phiett\n\n#### Add `x-small` size to [Progress](#Progress) component @brinaca\n\n#### Fix margins on [FormFieldLabel](#FormFieldLabel) when there is no visible label text @chart\n\n#### Fix [Link](#Link) component in `a11y` theme @chart\n\n#### Fix alignment of close button on [Alert](#Alert) component @phiett\n\n#### Add `as` prop to (note `tag` and `tagName` props have been removed): @sejensen\n\n- [AccessibleContent](#AccessibleContent)\n- [Button](#Button)\n- [Heading](#Heading)\n- [Link](#Link)\n- [PresentationContent](#PresentationContent)\n- [ScreenReaderContent](#ScreenReaderContent)\n- [Typography](#Typography)\n\n#### Update [Button](#Button) for `modern` theme @andy\n\n#### Add a `buttonRef` prop to the [Button](#Button) component @jstern\n\n#### Replace `style` prop on [Typography](#Typography) component with `fontStyle` @jstern\n\n#### Fix spacing on [Button](#Button) component so that it lines up with TextInput @chart\n\n#### Fix [Progress](#Progress) component VoiceOver bug @cpalmer\n\n#### Add focus management to [Tray](#Tray) @jcorrigan\n\n#### Make onChange handler for [TextArea](#TextArea) consistent with TextInput @jstern\n\n#### Add an index file to the components directory in /dist build output @jstern\n\n#### Add focus ring to a11y theme of [Link](#Link) and [Button](#Button) components\n\n#### Add new color `mediumLighter` to canvas and modern themes @phiett\n\n#### Updates to [Menu](#Menu) component `checkbox` and `radio` item types @sejensen\n\n#### Prevent errors when [Transition](#Transition) steps occur after the component unmounts @jstern\n\n#### Ensure modern theme for [Checkbox](#Checkbox) and [RadioInput](#RadioInput) are brand vs gray @phiett\n\n#### [ToggleDetails](#ToggleDetails) customization updates\n\n#### Change [Checkbox](#Checkbox) and [RadioInput](#RadioInput) to dark vs brand @phiett\n\n#### Fix bugs in [CheckboxGroup](#CheckboxGroup) and [MenuItemGroup](#MenuItemGroup) due to unintentional state modification @sejensen\n\n#### [Popover](#Popover) refactor and bug fixes @mzabriskie\n\n#### Fix [TextArea](#TextArea) ENTER key support and horizontal scroll on FF and IE 11 @jstern\n\n#### Remove three Item limit from [MetricList](#MetricList) @cprescott\n\n#### Replace [Checkbox](#Checkbox) & [RadioInput](#RadioInput) focus states with single outline state @phiett\n\n#### Add `inline` layout option to [FormField](#FormField)/all form components\n\n#### Add `column` layout optino to [FormFieldGroup](#FormFieldGroup), [RadioInputGroup](#RadioInputGroup), [CheckboxGroup](#CheckboxGroup) @jstern, @chart\n\n#### Add `offset` prop to [GridCol](#GridCol) @jstern\n\n#### Make [Tooltip](#Tooltip) default to `default` variant @jstern\n\n#### Remove zIndex props and add them to component themes @jstern\n\n#### Allow any trigger content for [Tooltip](#Tooltip) @jstern\n\n#### Prevent overwriting existing keys @jstern\n\n#### Update color theme variable names @phiett\n\n#### Fix screen reader bugs in [Progress](#Progress) component @phiett\n\n#### Add [TreeBrowser](#TreeBrowser) component @mberns\n\n## 0.18.2\n\n#### Remove babel-polyfill peer dependency (required polyfills are listed in build.config.js)\n\n#### [Modal](#Modal) should focus close button by default\n\n#### Add generateTheme and setDefaultTheme to both [ApplyTheme](#ApplyTheme) and themeable\n\n#### Add Modern theme\n\n#### Fix [Modal](#Modal) scrolling issues in FF\n\n## 0.18.1\n\n#### Upgrade to Webpack 2/bundle size improvements\n\n#### Adjust [Heading](#Heading) component styles\n\n#### Add LatoWeb to font-family to match Canvas\n\n#### [Tray](#Tray) component updates\n\n#### Reduce height of [Progress](#Progress) bars\n\n## 0.18.0\n\n#### Document theme variables for each component\n\n#### Fix [Select](#Select) component disabled state\n\n#### Fix [Button](#Button) component 'circle' variant in Firefox\n\n#### [Heading](#Heading) component updates\n\n#### Fix [Progress](#Progress)\n\n#### Make codepens work for non jsx examples (e.g. [Modal](#Modal))\n\n#### Updates to [Tray](#Tray) component\n\n#### Update [TextArea](#TextArea) and [Select](#Select) focus styles\n\n#### Add a [Canvas theme](#canvas)\n\n#### Add an [accessible theme](#a11y)\n\n#### Add [Media](#Media) component\n\n## 0.17.3\n\n#### Replace CSSTransitionGroup with [Transition](#Transition) component\n\n#### Fix [RadioInput](#RadioInput) and [Checkbox](#Checkbox) focus issues in Safari\n\n#### Remove `max-width` prop from the [Alert](#Alert) component\n\n#### Fix [Transition](#Transition) component `unmountOnExit` prop\n\n#### Add [AccessibleContent](#AccessibleContent) and [PresentationContent](#PresentationContent)\n\n#### Upgrade instructure-icons\n\n#### Update [Progress](#Progress) component styles\n\n#### Add [Tray](#Tray) component\n\n#### Update [Transition](#Transition) component styles\n\n#### Prevent errors in the [Avatar](#Avatar) component when `userName` prop is not provided\n\n## 0.17.2\n\n#### Add option to [RangeInput](#RangeInput) to turn off value display\n\n#### Fix [Popover](#Popover) bug, uninitialized state when show prop is set\n\n#### Define all variables in theme.js for each component\n\n#### Add a dismissable decorator\n\n## 0.17.1\n\n#### Added support for linux in the generate script\n\nSee [commit](https://github.com/instructure/instructure-ui/commit/a9153714552d1dd0f300421de320264140ac4912) for details.\n\n#### Fix for [Table](#Table) component to prevent nested tables from inheriting hover or stripe styling\n\n#### Fix for [TabList](#TabList) component `minimal`, `simple` variants so they no longer break in a flexed container\n\n#### Fix [Modal](#Modal) component footer behavior when there is minimal body content\n\n#### Add `zIndex` prop to the [Overlay](#Overlay) and [Popover](#Popover) components\n\n#### Add custom chai assertion to verify that a dom element exists for testing\n\nSee [commit](https://github.com/instructure/instructure-ui/commit/fcea0dd9ee67d172a5eb04e348fb5caf0b93472d) for details.\n\n## 0.17.0\n\n#### Add a [Breadcrumb](#Breadcrumb) component\n\n#### Prevent Bootstrap or other CSS from interfering with component styles\n\n## 0.16.0\n\n#### Add a [Modal](#Modal) component\n\n#### Add a [Overlay](#Overlay) component\n\n#### Add a [Portal](#Portal) component\n\n#### Add focused getter to the [Button](#Button) component\n\n#### Fix focus state for [Checkbox](#Checkbox) `toggle` variant\n\n#### Fix [RangeInput](#RangeInput) passing `props` to it's input\n\n#### Update to [Button](#Button) design\n\n#### Update to [Select](#Select) don't set disabled attribute\n\n#### Update [Transition](#Transition) component\n\n## 0.15.0\n\n#### Add a [ToggleDetails](#ToggleDetails) component\n\n#### Add a [Table](#Table) component\n\n#### Don't trigger [PopoverMenu](#PopoverMenu) on focus by default\n\n#### Move [Checkbox](#Checkbox) label to the right of the toggle\n\n#### Add a [TextArea](#TextArea) component\n\n#### Updates to font sizes (see [Typography](#Typography) component)\n\n## 0.14.4\n\n#### Add getDisplayName util and use it to determine component type\n\n## 0.14.3\n\n#### Remove umd named define from webpack config\n\n## 0.14.2\n\n#### Add missing type attribute on button elements rendered by the Button component\n\n## 0.14.1\n\n#### Don't bundle babel-polyfill with the library\n\nThis prevents the \"only one instance of babel-polyfill is allowed\" errors.\n\n## 0.14.0\n\n### Breaking changes (code changes required to upgrade)\n\n#### Inject Component CSS into the document\n\nComponents will now inject the required CSS into the document when they are mounted, so importing the CSS dependencies is no longer required. The usage documentation for each component has been updated to reflect this change.\n\n#### Added babel-polyfill as a peer dependency\n\nThe components now require babel-polyfill.\n\n#### Updates to form input components\n\nAll of the form input components now consistently handle focus and validation messages. As a result the `errors` prop is now the `messages` prop for all form inputs.\n\n### New components and bug fixes\n\n#### Add Progress component\n\nSee [documentation and examples](#Progress) for details.\n\n#### Fix Spinner component animation in Firefox\n\nSee [commit](https://github.com/instructure/instructure-ui/commit/f7a0fec6bb95b1baa42e83593a01b50bdab77438) for details.\n\n#### Remove references to the DOM at require time\n\nThis should allow for running tests using instructure-ui components without a browser.\n\n#### Updates to colors and typography\n\nThe global colors have been updated and the required font family is now Lato. A [Typography](#Typography) component has been added.\n\n#### Fix imports of instructure-icons components\n\nIcons are now imported individually to reduce the overall library bundle size.\n\n#### Prevent React warnings by removing invalid props passed down to children\n\n#### Add levels to Heading component\n\nThe [Heading](#Heading) component now supports levels 1-5 (and a reset) and also supports overriding the root\nelement.\n","order":"","relativePath":"CHANGELOG.md","extension":".md","srcPath":"CHANGELOG.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/CHANGELOG.md","packageName":"@instructure/CHANGELOG","requirePath":"@instructure/CHANGELOG","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/CHANGELOG.md').default","esPath":"@instructure/CHANGELOG","id":"CHANGELOG","title":"CHANGELOG"},"CODE_OF_CONDUCT":{"description":"\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n___\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the [project team](uidevs@instructure.com). All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n","title":"Code of Conduct","category":"Getting Started","order":"","relativePath":"CODE_OF_CONDUCT.md","extension":".md","srcPath":"CODE_OF_CONDUCT.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/CODE_OF_CONDUCT.md","packageName":"@instructure/CODE_OF_CONDUCT","requirePath":"@instructure/CODE_OF_CONDUCT","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/CODE_OF_CONDUCT.md').default","esPath":"@instructure/CODE_OF_CONDUCT","id":"CODE_OF_CONDUCT"},"LICENSE":{"description":"\n# The MIT License (MIT)\n\nCopyright (c) 2015 Instructure, Inc.\n\n**Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions.**\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","title":"The MIT License (MIT)","category":"Getting Started","order":9,"relativePath":"LICENSE.md","extension":".md","srcPath":"LICENSE.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/LICENSE.md","packageName":"@instructure/LICENSE","requirePath":"@instructure/LICENSE","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/LICENSE.md').default","esPath":"@instructure/LICENSE","id":"LICENSE"},"instructure-ui":{"description":"\n## Instructure UI\n\n[![MIT License][license-badge]][license]&nbsp;&nbsp;&nbsp;[![Code of Conduct][coc-badge]][coc]\n\nInstructure UI is an open source UI framework and design system for React. Its components are used by millions of learners every day when they use Instructure products like Canvas LMS.\n\n### See our [website](https://instructure.design) for usage, examples and documentation.\n\n## Contributing\n\nBefore contributing please read our [code of conduct](https://instructure.design/#CODE_OF_CONDUCT) and read the [contribution guidelines](https://instructure.design/#contributing).\n\n## React Support\n\nInstructure-UI currently supports 16.8.0 and higher.\n\n## Browser Support\n\nThe last two versions of all modern browsers (Firefox, Safari, Chrome, Edge).\n\n## License\n\n[MIT](#LICENSE)\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","id":"instructure-ui","order":"","relativePath":"README.md","extension":".md","srcPath":"README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/README.md","packageName":"@instructure/README","requirePath":"@instructure/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/README.md').default","esPath":"@instructure/README","title":"instructure-ui"},"accessibility":{"description":"\n## Accessibility\n\nWe aim to make our software accessible to everyone, including those with vision, hearing, cognitive, or motor impairments. Having an accessible design allows people of all abilities to interact with, understand, and navigate our products. This means that components are [Perceivable, Operable, Understandable, and Robust](https://www.w3.org/TR/2016/NOTE-UNDERSTANDING-WCAG20-20161007/intro.html#introduction-fourprincs-head). It’s important for us to design and develop products that support a wide range of needs and experiences.\n\n### Color Contrast\n\nOur [default theme](#canvas) colors meet at least a [3:1](http://www.w3.org/TR/WCAG20-TECHS/G183.html) ratio between foreground and background, and our [high contrast theme](#canvas-high-contrast) colors maintain a minimum [4.5:1](http://www.w3.org/TR/WCAG20-TECHS/G18.html) ratio to ensure we comply with WCAG 2.1 AA contrast requirements. This ensures sufficient color contrast between elements so that users with low vision or color blindness can view and use our components.\n\n### Keyboard Navigation\n\nSome users are unable to use a mouse, and instead navigate through applications using tools such as a keyboard, mouth wand, or eye tracking software. Our components are navigable using these technologies without mouse assistance. Keyboard focus follows the page as an eye would scan it (top to bottom, left to right). We also ensure that focus indication is clear and apparent so users are always aware of where their current keyboard focus is within the page. Our components can be interacted with using [standard keystrokes](https://webaim.org/techniques/keyboard/#testing), so there is no need to learn any new shortcuts.\n\n### Assistive Technologies\n\nOur components are [tested in VoiceOver for Mac, and NVDA/JAWS for Windows](https://www.canvaslms.com/accessibility), which are the highest utilized screenreaders (according to [WebAim’s user survey](https://webaim.org/projects/screenreadersurvey7/)). We utilize many different tools to ensure this compatibility, such as features from the Accessible Rich Internet Applications (WAI-ARIA or ARIA) specification to build functionality that is not available with native HTML, and alternative text for images/icons to ensure all users have the same experience when utilizing our components.\n\n### Web Content Accessibility Guidelines (WCAG)\n\nInstructure-UI targets WCAG 2.1 Level A and Level AA success criteria, and seeks to provide a highly usable experience for everyone.\n\nFor more information, see the following resources:\n\n[WCAG 2.1](https://www.w3.org/TR/WCAG21/)\n\n[ARIA 1.1](https://www.w3.org/TR/wai-aria-1.1/)\n\n### Feedback\n\nIf you notice any issues with the accessibility of our components, please reach out to us by creating a [GitHub](https://github.com/instructure/instructure-ui/issues) issue and help us make it better.\n","title":"Accessibility","category":"Getting Started","order":5,"relativePath":"docs/getting-started/accessibility.md","extension":".md","srcPath":"docs/getting-started/accessibility.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/getting-started/accessibility.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/getting-started/accessibility","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/getting-started/accessibility.md').default","esPath":"@instructure/docs/getting-started/accessibility","id":"accessibility"},"api-guidelines":{"description":"\n## API Guidelines\n\n### Component Properties\n\n- All components should pass through additional props down to the root DOM element using the `passthroughProps` utility. (e.g. `<div {...passthroughProps(this.props)}>`). Note that in addition to allowing only valid DOM node attributes, `passthroughProps` will remove the `className` and `style` props to prevent unexpected style issues. These need to be set explicitly and used with caution. It also removes the `styles` and `makesStyles` properties added by the [withStyle](#withStyle) decorator.\n- Avoid props that could be computed from other props. (e.g. prefer `<Select filter={handleFilter} />` over `<Select shouldFilter filter={handleFilter} />`. Prefer determining whether filtering should happen based on the presence of the `filter` function prop.)\n- Avoid situations where certain prop combinations are not supported. Prefer splitting the component into separate components with fewer props or using `PropTypes.oneOf`.\n- Set default prop values for non-required props when possible.\n\n#### General Naming Conventions\n\n- Component prop names should be camelCase.\n- Avoid the 'default' prop prefix since all components should be controlled only.\n- If the component should allow custom DOM elements, it should provide an `as` prop. (e.g. `<Tag as=\"span\" />` will render an HTML `span` element.)\n- Enum (`PropType.oneOf`) prop values should be kebab-case (dashes) (e.g. `size=\"x-small\"`).\n\n#### Boolean props\n\n- Boolean props should be avoided when possible in favor of `PropTypes.oneOf` (a list of possible values) so that it's easier to extend later on.\n- Avoid Boolean props that are mutually exclusive in favor of `PropTypes.oneOf` or separate components. For example, prefer `<Input interaction=\"disabled\" />` over `<Input disabled />` where the `interaction` prop is `PropTypes.oneOf(['disabled', 'enabled', 'readonly'])`. Note that an input cannot be disabled and readonly, so these are mutually exclusive.\n- Boolean props should begin with `should`/`is`/`does`/`has`/`with`.\n- When possible, default boolean props to `false` so that they can be set to `true` without a value. (e.g. prefer `<Modal isOpen />` over `<Modal isClosed={false} />`)\n\n#### Function props\n\n- Function props that provide custom rendering should be prefixed with `render` (e.g. `renderLabel`, `renderHeader`). These props can be set to `PropTypes.oneOfType([PropTypes.node, PropTypes.func])` for the most flexibility. If your prop only accepts strings and provides text that is only read by screen readers, use the `screenReader` prefix (e.g., `screenReaderLabel`).\n- Function props that handle events should be prefixed with `on` (e.g. `onDismiss`, `onClose`, `onSelect`).\n- Function props that handle DOM events should always pass in the [React SyntheticEvent](https://reactjs.org/docs/events.html) object as the first argument and any meta data about the event as a second argument.\n- Function props that handle DOM events should be chained (e.g. `createChainedFunction(this.props.onFocus, this.handleFocus)`) so that consumers are able to attach their own handlers in addition to the built in handlers.\n- Function [ref](https://reactjs.org/docs/refs-and-the-dom.html) props should have a `Ref` suffix and should describe the element to which it provides a ref (e.g. `inputRef`).\n- All components should provide an `elementRef` prop that will return a ref to the root DOM element.\n\n#### Children\n\n- Prefer child components and composition with JSX vs. complex prop types. (e.g. prefer `<List><List.Item label=\"foo\" /></List>` over `<List items={['foo']} />`)\n- Avoid using internal child components that aren't meant to be exported as part of the public component API. Prefer composition using other publicly available components that can be rendered in isolation or provide public child components.\n- If your component accepts a list of children, make sure it handles `null` children.\n- Child components that can't be used on their own should be exported as static properties on the parent component (e.g. `Table.Row`, `Menu.Item`), so that only one import is required to render the component (e.g. `import Table from '@instructure/ui-tables'`).\n- If the parent component can only be used with specific children that can also be used on their own, it should have the `Group` suffix (e.g. `<RadioGroup><Radio /><Radio /></RadioGroup>`, `<ButtonGroup><Button /><Button /></ButtonGroup>`).\n\n### styles.js Class Names\n\n- In the `styles.js`, use the name of the component in camelCase (e.g. `appNav`) as the key of the root element's style object. Use camelCase for the keys of child elements as well (e.g. `list` and `listItem`).\n- All style object names should be semantic (describe the content, not what it looks like).\n- We make use of the `label` property of [Emotion.js](https://emotion.sh/) so that it gets displayed in the generated class name for easy readability and targetability. We use a naming convention based on [BEM naming convention](#http://getbem.com/naming/):\n  - For the root element, add a label with the name of the component in camelCase \\\n    (e.g. `appNav: { label: 'appNav' }`).\n  - For the child elements, use the double underscore separator to indicate the parent-child relation with the `[rootElementName]__[childName}` format \\\n  - In case you want to indicate variants or modifiers of an element, use the double hyphen separator with the `[elementName]--[modifier]` format \\\n    (e.g. `view--inline-block` or `calendar__navigation--withButtons`).\n\n### Component Theme Variables\n\n- Theme variables should be camelCase, reflecting the corresponding CSS property when possible and prefixed with a semantic descriptor, using the following format: `[variation][state][CSS property]` e.g. (for `<Button color=\"primary\" />`, `primaryHoverBackground`).\n- Theme variables shouldn't include the component name.\n\n### Component Lifecycle methods\n\n- When using `setTimeout`, `requestAnimationFrame`, `MutationObserver`, or similar async functionality in your component, be sure to cancel/clear them in the `componentWillUnmount` lifecycle method.\n\n### Package directory structure and file naming\n\n- React component names, and their source directory names, should be PascalCase.\n- Avoid deeply nesting directories within a package. All components and utilities should be directly under `src`. Prefer splitting into separate packages over sub-directories. Child components can be nested under the parent if they cannot be used on their own.\n- Always provide a named export. (e.g. prefer `export { MyComponent }` vs. `export default MyComponent`)\n- Always import named exports when they are available. (e.g. prefer `import { MyComponent } from 'my-lib'` to `import MyComponent from 'my-lib'`)\n\n### Render Prop Components\n\nSee the [React docs](https://reactjs.org/docs/render-props.html) for information about what a render prop component is.\n\n- Render props component names should have the `-able` or `-ible` suffix to describe the shared behavior they are providing. (e.g. `Focusable`, `Selectable`, `Dismissible`)\n- Render props components should support both `render` and `children` function props.\n- The `render` and `children` function props should be called with an object that provides 'prop getter' functions.\n- 'Prop getter' functions should be named like `get[semantic element]Props()`.\n- DOM events should be added via prop values (using React event handlers) passed in via 'prop getter' functions and not added via `addEventListener`/native events (unless they are added to the document).\n","title":"API Guidelines","category":"Getting Started","order":4,"relativePath":"docs/getting-started/api-guidelines.md","extension":".md","srcPath":"docs/getting-started/api-guidelines.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/getting-started/api-guidelines.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/getting-started/api-guidelines","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/getting-started/api-guidelines.md').default","esPath":"@instructure/docs/getting-started/api-guidelines","id":"api-guidelines"},"contributing":{"description":"\n## Contributing\n\nContributions are welcome! If you want to submit a change you will need to open a pull request on Github. To do so first fork the repository to your own Github account.\n\n### What can you contribute?\n\nIf you found a bug or want to add a minor feature, go ahead! If you'd like to add a new component, or change/add new visuals, please read on.\n\nWe try to keep InstUI easy to use, easy to learn and free from bloat.\nFor this reason we will only add new components if it fits into the current design patterns, and the new component cannot be\nconstructed from the existing ones. For these reasons adding a new component has the following process:\n\n- You should write a document which includes the component description, and the use cases it's meant to be used in.\n- You should make some kind of design sketch that documents the design of the component (e.g. with [Figma](https://www.figma.com/)).\n- Our design team will review and approve this design sketch.\n- If the sketch is OK, you will need to make a pull request (read on for our code guidelines), the InstUI dev team, the design team, and our a11y team will review and merge your contribution.\n\n### Building InstUI from the source\n\nFollow these steps to download and compile Instructure UI on your machine:\n\n1. Install [Git](http://git-scm.com/).\n1. Install [Node >= 12.20](https://nodejs.org/en/)) (we recommend [nvm](https://github.com/creationix/nvm) to manage multiple Node versions).\n1. Install [Yarn >=1.6](https://yarnpkg.com/lang/en/docs/install/)\n1. Clone the repository with `git clone` (If you want to make changes clone the forked repo in your account.)\n1. Run `cd instructure-ui`\n1. Run `yarn`\n1. Run `yarn bootstrap`\n\nRun `yarn run` to list the available commands.\n\n### Running the documentation app\n\n1. Run `yarn start`\n1. Open [http://localhost:8001](http://localhost:8001) in your browser\n\n### Development\n\n1. Run `yarn build:watch` to build all of the packages for a development environment and watch for changes.\n1. Run `yarn dev` to start the dev server to run/develop examples and documentation. You can then visit [http://localhost:8080](http://localhost:8080) in a browser. When you make changes to the source code you should see the page auto-reload.\n1. Run `yarn test:watch --scope @instructure/[package name]` to run the tests for 'package name' and watch for changes.\n1. Run `yarn test` to run all the tests for every package.\n\n## Code guidelines\n\n### Testing\n\nSee the [testing documentation](#testing-components) for details.\n\n### Linters and Code Formatting\n\nLinters are run as part of the build. If you use the Sublime Text, Atom, or VSCode editors, you can set up the following plugins to catch lint and formatting errors earlier.\n\n1. Install the _Linter_ plugin [Sublime](http://sublimelinter.readthedocs.org/en/latest/), [Atom](https://atom.io/packages/linter). Linting is included in VSCode.\n1. Install the _EditorConfig_ plugin [Sublime](https://github.com/sindresorhus/editorconfig-sublime), [Atom](https://github.com/sindresorhus/atom-editorconfig), [VSCode](https://github.com/editorconfig/editorconfig-vscode)\n1. Install the _Eslint_ plugin [Sublime](https://github.com/roadhump/SublimeLinter-eslint), [Atom](https://github.com/AtomLinter/linter-eslint), [VSCode](https://github.com/Microsoft/vscode-eslint)\n1. Install the _Stylelint_ plugin [Sublime](https://github.com/kungfusheep/SublimeLinter-contrib-stylelint), [Atom](https://atom.io/packages/linter-stylelint), [VSCode](https://github.com/shinnn/vscode-stylelint)\n1. Run `yarn` to install the dependencies\n1. Restart your editor\n\n### Documentation\n\nPlease update the documentation and examples with any changes.\n\n- `yarn start` will build the production version of the documentation. You can view it at [http://localhost:8001](http://localhost:8001).\n- All components and utilities should be well documented, including examples.\n- Write documentation inline in code comment blocks. The code and docs should\n  always be in sync.\n\n### Commit Guidelines\n\n1. Run `yarn commit` to commit your changes and follow our commit message format.\n1. Please do not include the output of `yarn build` in your commits.\n\n### Adding a package\n\n1. Run `yarn generate:package` and choose a name for your package (use \"kebab\" case (dashes), e.g. 'my-package').\n1. Add an alias for your package in `packages/__docs__/resolve.js`.\n1. Stop the dev server (if you have it running), and run `yarn dev` to pick up the new package.\n1. Visit [http://localhost:8080](http://localhost:8080) in a browser. You should see your package listed in the docs.\n\n### Adding a component\n\n1. Run `yarn generate:component` and choose a name for your component (use Pascal case: e.g., 'MyComponent').\n1. Choose to create a new package for your component, add it to an existing package, or create the component with no package.\n1. If you created a new package for your component, an export for the component will automatically be added to `packages/[package]/src/components/index.js`. If you're adding your component to an existing package, you will need to add the export manually.\n1. Run `yarn bootstrap` to generate the `es` and `lib` directories for your component.\n1. Add your component to `packages/__docs__/components.js`.\n1. If you created a new package for your component, add an alias for it in `packages/__docs__/resolve.js`.\n1. If you added your component to an existing package, confirm that the component's dependencies are listed in the package's `package.json`.\n1. Stop the dev server (if you have it running), and run `yarn dev` to pick up the new component.\n1. Visit [http://localhost:8080](http://localhost:8080) in a browser. You should see your component listed in the docs.\n1. Start making changes to your component, and watch it update in the browser automatically.\n\n### Accessibility and Internationalization Requirements\n\nAll components should:\n\n1. Be accessible (See the [accessibility requirements](#accessibility) for more information).\n1. Support RTL languages.\n1. Localize all dates, times, numbers and strings (or require localized content passed in via props).\n","title":"Contributing","category":"Getting Started","order":2,"relativePath":"docs/getting-started/contributing.md","extension":".md","srcPath":"docs/getting-started/contributing.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/getting-started/contributing.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/getting-started/contributing","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/getting-started/contributing.md').default","esPath":"@instructure/docs/getting-started/contributing","id":"contributing"},"dev-commands":{"description":"\n## Dev Commands Cheat Sheet\n\nThis is a quick developer reference for common Instructure UI repository commands. All should be run from the repository root. Make sure you run `yarn` first, as many of these commands will require you to have `lerna` dependencies installed before they will work.\n\n| Command                                   | Description                                                                                                                                                                                                                                                                                                                                 |\n| ----------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `yarn bootstrap`                          | Clean all node modules and build output, reinstall dependencies, create fresh build including regenerating design tokens and type declaration files.                                                                                                                                                                                        |\n| `yarn dev`                                | Run a local instance of the documentation app in dev mode. Docs will be served at `http://0.0.0.0:8080`                                                                                                                                                                                                                                     |\n| `yarn start`                              | Run a local instance of the documentation app in production mode. The urls where the docs are being served will be included in the output of this command.                                                                                                                                                                                  |\n| `yarn build`                              | Run the build command for all Instructure UI packages. Similar to bootstrap, but without the cleaning steps, installation of dependencies, and without the token and type generation.                                                                                                                                                       |\n| `yarn build:watch`                        | Identical to `yarn build` but will watch for changes. Note: this command is rarely necessary to use. If you are running `yarn dev`, the docs app will already be watching for any changes for components.                                                                                                                                   |\n| `yarn build --scope <package-name>`       | Identical to `yarn build` but scoped to a single package. For example, to run the command only for the `ui-badge` package, you would do `yarn build --scope @instructure/ui-badge`                                                                                                                                                          |\n| `yarn build:watch --scope <package-name>` | Identical to `yarn build:watch` but scoped to a single package. For example, to run the command only for the `ui-badge` package, you would do `yarn build:watch --scope @instructure/ui-badge`                                                                                                                                              |\n| `yarn test`                               | Run all Instructure UI tests in production mode. Tests will be run in a headless instance of chrome.                                                                                                                                                                                                                                        |\n| `yarn test:watch`                         | Run all Instructure UI tests in dev mode. Tests run this way will actually launch a browser and will also give you the option to debug.                                                                                                                                                                                                     |\n| `yarn test --scope <package-name>`        | Identical to `yarn test` but scoped to a single package. For example, to run the command only for the `ui-avatar` package you would do `yarn test --scope @instructure/ui-avatar`                                                                                                                                                           |\n| `yarn test:watch --scope <package-name>`  | Identical to `yarn test:watch` but scoped to a single package. For example, to run the command only for the `ui-avatar` package you would do `yarn test:watch --scope @instructure/ui-avatar`                                                                                                                                               |\n| `yarn start:examples`                     | Starts a production instance of [storybook](https://storybook.js.org/) with all component examples.                                                                                                                                                                                                                                         |\n| `yarn dev:examples`                       | Starts a dev instance of [storybook](https://storybook.js.org/) with all component examples.                                                                                                                                                                                                                                                |\n| `yarn generate:component`                 | Create an Instructure UI component with all the boilerplate (for styling etc.) taken care of. There are follow up prompts that will allow you to specify if you would like to create the component in an already existing package or create a new package for it.                                                                           |\n| `yarn generate:package`                   | Create an Instructure UI package without a component. This is useful if you are creating a utility package that will contain a JavaScript function/class or a script instead of creating a package that will contain a React component. If you are trying to create a package for a React component, use `yarn generate:component` instead. |\n","title":"Dev Commands Cheat Sheet","category":"Getting Started","order":3,"relativePath":"docs/getting-started/dev-commands.md","extension":".md","srcPath":"docs/getting-started/dev-commands.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/getting-started/dev-commands.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/getting-started/dev-commands","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/getting-started/dev-commands.md').default","esPath":"@instructure/docs/getting-started/dev-commands","id":"dev-commands"},"releases":{"description":"\n> Note: This information is for maintainers\n\n## Releases\n\nEvery commit that has functional changes to the `master` branch constitutes as a release. The release process is the following:\n\n- Make a new `git` branch and push your changes there. Use `yarn commit` to commit changes.\n- When the code you want to add is ready on your branch you should open a pull request to the `master` branch.\n- Wait for the pull request to be reviewed and watch any Github notifications about issues/comments.\n- Run `yarn bump` to increase the version automatically based on the commits.\n\n  - If the code to be merged contains a _breaking change_, it will result in a major version increase.\n  - If the change is _new functionality_, it will result in a minor version increase.\n  - _Bugfixes, performance changes and pure refactorings_ will result in a patch release.\n\n- If the code to be merged contains a _breaking change_, it will result in a major version increase.\n\n- If the change is _new functionality_, it will result in a minor version increase.\n\n- _Bugfixes, performance changes and pure refactorings_ will result in a patch release.\n\n- `git push` the new release commit\n\n- Wait for the review of the release commit\n\n- Rebase and Merge the code into the `master` branch. Github will detect that there is a new version and will update the documentation and publish the new `npm` package.\n\n### Post-release checks\n\n1. Verify that the release was [tagged in Github](https://github.com/instructure/instructure-ui/releases).\n\n1. Verify that the release was published to npm by running `yarn info [package]@[version]`.\n\n1. Verify that the [documentation was updated](https://instructure.design/).\n\n### Patching Older Releases\n\n0. You need to branch off from the **last release commit** of the old version and name it `v<major-version> -maintenance`, if it is non existent. E.g. if you'd like to start v6 maintenance branch:\n\n```\n//checkout the v6.26.0 commit\ngit checkout 35258f25cad1e17e5dbe5dcb4389b5185d709f72\n\n//create new branch from it\ngit checkout -b v6-maintenance\n```\n\n1.  Check out the `v<major-version>-maintenance` branch. E.g. for v6:\n\n```\ngit checkout v6-maintenance\n```\n\n2. Open a branch from the maintenance branch\n3. Commit your changes to the branch with `yarn commit` **_NOTE: you can not make breaking changes. This is only for minor and patch level changes_**\n4. Open a pull request to the maintenance branch\n5. If the reviews and checks succeed, update the version: `yarn bump` and push it to the remote\n6. Wait for the version bump's review\n7. Rebase and Merge the code into the `v<major-version>-maintenance` branch.\n8. If you are working on the one before the latest version (E.g. if the latest version is v8, the following applies to v7 only), you have to release your work to `npm` and deploy the docs to `gh-pages` as well. You have to trigger a github action manually on your branch.\n   - Go to the [project repo](https://github.com/instructure/instructure-ui)\n   - Navigate to actions\n   - From the left menu, click `Release older version to npm and deploy docs to legacy gh-pages.`\n   - In the right side of the page, select the `Run workflow` dropdown and search for the maintenance branch\n   - Run the workflow against the maintenance branch\n   - Congrats. Your work is done here\n9. If you work on an older version, you only have to release to `npm`, no docs deploy needed\n   - Go to the [project repo](https://github.com/instructure/instructure-ui)\n   - Navigate to actions\n   - From the left menu, click `Release older version to npm only.`\n   - In the right side of the page, select the `Run workflow` dropdown and search for the maintenance branch\n   - Run the workflow against the maintenance branch\n   - Congrats. Your work is done here\n","title":"Releases","category":"Getting Started","order":8,"relativePath":"docs/getting-started/releases.md","extension":".md","srcPath":"docs/getting-started/releases.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/getting-started/releases.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/getting-started/releases","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/getting-started/releases.md').default","esPath":"@instructure/docs/getting-started/releases","id":"releases"},"testing-components":{"description":"\n## Testing\n\n### Running Tests Locally\n\n1. Run `yarn test:watch --scope @instructure/[package-name]`.\n1. Edit the tests that were generated for you in `packages/[package-name]/src/components/[ComponentName]/__tests__`.\n1. Watch your tests run in the console.\n\n> For details on how to write component tests, see the [test utilities](#ui-test-utils) documentation.\n\n### Continuous Integration\n\nIn CI, `yarn test` (`yarn ui-test`) is run. This runs the tests headless, without the debugging options enabled.\nThe `yarn test` script also accepts the `--scope` argument if you want to run it for a single package or test file.\n\n### Debugging Tests\n\n1. Run `yarn test:watch --scope [package name from its package.json]`. This command should automatically open up the Chrome browser.\n2. In Chrome click the 'Debug' button at the top of the page (you may have to scroll up).\n3. Open the [Developer tools](https://developers.google.com/web/tools/chrome-devtools/debug/?hl=en) (`Command + Shift + C`).\n4. Now you can add breakpoints in the test code or the component code to debug issues. (`Command + P` in the 'Sources' tab).\n\n### Test Run Options\n\nOptions that can be run with `yarn test`/`yarn test:watch`:\n- `--changed` will run the tests against any package that has changes (since the previous commit, including un-staged changes).\n- `--staged` will run tests against packages that have been staged but not yet committed.\n- `--scope [package name from its package.json (comma delimited)]` will run the tests against a single package.\n- `--path [test file paths (comma delimited)]` will run just the tests in a single test src file.\n- `--browser=Firefox` will run the tests in the Firefox browser.\n- `--browser=Safari` will run the tests in the Safari browser.\n- `--randomize` will run the tests in random order, to help catch interdependent or leaky tests.\n\n### Code Coverage\n\nCode coverage thresholds are configured in `karma.config.js` and code is instrumented\nvia babel config (see [@instructure/ui-babel-preset](#ui-babel-preset)).\nIf coverage numbers go below the configured values, the test run will fail.\nWhen you run `yarn test` (or `yarn test --scope [package name]`) a detailed coverage report is generated in the `coverage/` directory.\n","title":"Testing","category":"Getting Started","order":6,"relativePath":"docs/getting-started/testing-components.md","extension":".md","srcPath":"docs/getting-started/testing-components.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/getting-started/testing-components.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/getting-started/testing-components","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/getting-started/testing-components.md').default","esPath":"@instructure/docs/getting-started/testing-components","id":"testing-components"},"theming-components":{"description":"\n## Themes\n\nFor details on how to theme components, see the [@instructure/emotion](#emotion) documentation.\n\nTo see details on the built-in themes,\nsee the [canvas theme](#canvas), [high contrast canvas theme](#canvas-high-contrast), [instructure theme](#instructure) documentation.\n","title":"Themes","category":"Getting Started","order":7,"relativePath":"docs/getting-started/theming-components.md","extension":".md","srcPath":"docs/getting-started/theming-components.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/getting-started/theming-components.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/getting-started/theming-components","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/getting-started/theming-components.md').default","esPath":"@instructure/docs/getting-started/theming-components","id":"theming-components"},"usage":{"description":"\n## Quick Start\n\nThe following steps will create a starter app configured with Instructure-UI\npresets that is immediately ready for development. Recommended if you are starting from scratch.\n\n### Creating a Starter App\n\nYou can create the starter app using `npx` or by globally installing the `instui-cli`.\n\n#### Using npx\n\n```bash\n$ npx @instructure/instui-cli create app --name MyInstuiApp\n```\n\n#### Globally installing `instui-cli` with `yarn` or `npm`\n\n```bash\n$ yarn global add @instructure/instui-cli\n```\n\nor\n\n```bash\n$ npm install -g @instructure/instui-cli\n```\n\nYou can now create the app using the `instui` command\n\n```bash\ninstui create app --name MyInstuiApp\n```\n\n### Start the Development Server\n\n```bash\n$ cd MyInstuiApp\n```\n\nthen\n\n```bash\n$ yarn\n$ yarn start\n```\n\nor\n\n```bash\n$ npm install\n$ npm start\n```\n\nYour app is running on [http://0.0.0.0:3000](http://0.0.0.0:3000). You can now\nedit `src` files and observe the changes. The app `README` contains more specific\ninformation on available commands and theming.\n\n## Integrating With an Existing Project\n\nBefore using Instructure-UI components, you must first import a theme. All\ncomponents are themeable, and themes control their look and feel. The component\nexamples seen throughout the documentation use the [canvas theme](#canvas) by\ndefault which can be used by adding `@instructure/canvas-theme` to your project\ndependencies:\n\n#### yarn\n\n```bash\n$ yarn add @instructure/canvas-theme\n```\n\n#### npm\n\n```bash\n$ npm install @instructure/canvas-theme\n```\n\nThen, before mounting your application element import the canvas theme:\n\n```javascript\nimport React, { Component } from 'react'\n\nimport { canvas } from '@instructure/ui-themes'\nimport { EmotionThemeProvider } from '@instructure/emotion'\n\nimport { Heading } from '@instructure/ui-heading'\n\nReactDOM.render(\n  <EmotionThemeProvider theme={canvas}>\n    <Heading>\n      Now using Instructure-UI components with default Canvas theme!\n    </Heading>\n  </EmotionThemeProvider>,\n  document.getElementById('app')\n)\n```\n\nIf you want to use the [canvas theme](#canvas) theme as your default with some\ncustomization, you can use [EmotionThemeProvider](#EmotionThemeProvider) to override theme variables\nfor individual components.\n\nFor more advanced customization you can also create your own theme from scratch.\nSee [EmotionThemeProvider](#EmotionThemeProvider) for more complete documentation on this approach.\n\n> Note: Do not use tools with Instructure UI that remove `PropTypes` (for example\n> [babel-plugin-transform-react-remove-prop-types](https://github.com/oliviertassinari/babel-plugin-transform-react-remove-prop-types)).\n> Instructure UI uses `PropTypes` for its internal functionality (e.g. in\n> `ui-react-utils/src/passtroughProps.js`), thus removing them will cause issues.\n","title":"Usage","category":"Getting Started","order":1,"relativePath":"docs/getting-started/usage.md","extension":".md","srcPath":"docs/getting-started/usage.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/getting-started/usage.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/getting-started/usage","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/getting-started/usage.md').default","esPath":"@instructure/docs/getting-started/usage","id":"usage"},"focus-management":{"description":"\n## The Focus Management Problem\n\n### Focus management and dialogs\n\nOne of the most challenging front end problems is focus management, especially when dialogs are involved. Keyboards and assistive technologies have [specific requirements](https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html) to \"trap\" focus within modals, trays, and other UI areas that overlay the page when they have focusable content. Some of these requirements include:\n\n**For keyboard only users**\n\n- When triggered via keyboard, focus should move from the triggering element to the first focusable element within the dialog\n- As the user tabs through focusable elements within the dialog, when they tab from the last focusable element they should be wrapped around to focus once again on the first focusable element\n- When the user presses the escape key or otherwise closes the modal, focus should be returned to the triggering element\n\n**For screen reader users**\n\n- All content outside the overlaying content should be hidden from screen readers\n\n**Mouse and mobile users**\n\n- When a user clicks or touches outside of the dialog area, the dialog should close\n\n### Dialogs that launch dialogs\n\nMeeting all of these requirements is difficult. To make things more complex, a dialog may launch another dialog. For example, a button contained within a `Tray` may launch a `Modal`. Coordinating focus between multiple dialogs in situations like these was the source of much confusion and developer resources.\n\n## Focus Management in Instructure UI\n\n### The Dialog component\n\n[Dialog](#Dialog) is a utility component that helps us to cover all the requirements we discussed in the previous section. `Dialog` doesn't actually render any styles so it is more of a utility component. It is being used under the hood in [Modal](#Modal), [Tray](#Tray), [Popover](#Popover), and more. Let's discuss exactly what `Dialog` is doing in the following `Modal` example.\n\n```js\n---\nrender: false\nexample: true\n---\n\nconst Example = () => {\n  const [isModalOpen, setIsModalOpen] = React.useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setIsModalOpen(true)}>\n        Open modal\n      </Button>\n      <Modal\n        open={isModalOpen}\n        onDismiss={() => setIsModalOpen(false)}\n        size=\"medium\"\n        label=\"Modal Dialog: Hello World\"\n        shouldCloseOnDocumentClick\n      >\n        <Modal.Header>\n          <Heading>Hello from the modal</Heading>\n        </Modal.Header>\n        <Modal.Body>\n          <Flex>\n            <Flex.Item margin=\"none x-small none none\" shouldGrow><TextInput renderLabel=\"Foo\" /></Flex.Item>\n            <Flex.Item margin=\"none none none x-small\" shouldGrow><TextInput renderLabel=\"Bar\" /></Flex.Item>\n          </Flex>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button color=\"primary-inverse\" margin=\"none x-small none none\" onClick={() => setIsModalOpen(false)}>Close</Button>\n          <Button color=\"primary\" type=\"submit\" onClick={() => setIsModalOpen(false)}>Submit</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nrender(<Example />)\n```\n\nObserve that when the modal is opened, the focus moves from the triggering button to the first focusable element within the modal. You can also observe that as you press the tab key on the last focusable element, the focus is moved back to the first focusable element. If you use a screen reader to open the modal, you can only navigate to elements within the modal while it is open. All other elements on the page are hidden. Lastly, you can close the Modal by pressing the escape key, or by clicking outside of the content.\n\nAll of these things are being handled internally by the `Dialog` component. For most consumers, this is as low level as you need to go. `Modal`, `Tray` and `Popover` already ship with `Dialog` built in under the hood. For more custom use cases, you can utilize the `Dialog` component directly and it will integrate seamlessly with the components already listed.\n\n### But how does Dialog work?\n\nIf you're still reading, you are either extremely curious or performing maintenance on Instructure UI itself. As mentioned above, `Dialog` is meant to abstract away these implementation details (and it provides a clean API for doing so). If you have encountered a bug relating to our focus management, however, you may need to gain an understanding of what's happening the next level down. What follows is meant to give you enough information so that you know where to look in the code to track down erroneous behavior.\n\nAt first glance the complex inner workings of `Dialog` might seem overkill. To help us in this discussion, let's go through another example.\n\n```js\n---\nrender: false\nexample: true\n---\n\nconst Example = () => {\n  const [isModalOpen, setIsModalOpen] = React.useState(false)\n  const [isPopoverOpen, setIsPopoverOpen] = React.useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setIsModalOpen(true)}>\n        Open modal\n      </Button>\n      <Modal\n        open={isModalOpen}\n        onDismiss={() => setIsModalOpen(false)}\n        size=\"medium\"\n        label=\"Modal Dialog: Hello World\"\n        shouldCloseOnDocumentClick\n      >\n        <Modal.Header>\n          <Heading>Hello from the modal</Heading>\n        </Modal.Header>\n        <Modal.Body>\n          <View\n            display=\"block\"\n            padding=\"small none\"\n          >\n            Click on the following trigger to expand the popover.\n          </View>\n          <Popover\n            renderTrigger={<Button>Expand me</Button>}\n            isShowingContent={isPopoverOpen}\n            onShowContent={() => setIsPopoverOpen(true)}\n            onHideContent={() => setIsPopoverOpen(false)}\n            on=\"click\"\n            screenReaderLabel=\"Popover Dialog Example\"\n            shouldContainFocus\n            shouldReturnFocus\n            shouldCloseOnDocumentClick\n          >\n            <View padding=\"medium\" display=\"block\" as=\"form\">\n              <FormFieldGroup description=\"Do something\">\n                <TextInput renderLabel=\"Foo\" />\n                <TextInput renderLabel=\"Bar\" />\n              </FormFieldGroup>\n            </View>\n          </Popover>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            margin=\"none x-small none none\"\n            color=\"primary-inverse\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Close\n          </Button>\n          <Button\n            color=\"primary\"\n            type=\"submit\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nrender(<Example />)\n```\n\nWe've modified our first example so that it's a little more complex. Now we need to launch a `Popover` within our open `Modal`. The `Popover` has focusable content so we will need to trap focus as we outlined before. Think about what needs to happen in this situation:\n\n- The code that is scoping the focus on tab press to focusable elements within the open `Modal` needs to be disabled\n- The listeners that are attached to close the `Modal` on escape or a click/touch event outside the `Modal` need to be deactivated (otherwise pressing escape to close the `Popover` would close the `Modal` as well)\n- We now focus the first focusable element in the `Popover` and scope the focus on tab press to focusable elements within the `Popover`\n- We need to adjust what is now hidden in the DOM so that everything outside of the `Popover` is hidden from screen readers (this includes the open `Modal`)\n- We need to attach new event listeners to the `Popover` to detect the escape and click/touch events outside of the `Popover` content\n- When `Popover` is closed, we need to unwind all of these operations for `Popover` and restore them for the open `Modal`\n\nFocus management is interesting because it requires coordination as dialogs are opened and closed (especially when one triggers the other).\n\n### Coordinating focus regions\n\nNow that we have a basic understanding of the complex coordination necessary to manage focus across multiple UI dialogs we can talk about focus regions. A [FocusRegion](#FocusRegion) is what `Dialog` is using under the hood. Each `Dialog` instance is using exactly one instance of `FocusRegion` internally. Every time a `Dialog` is created, we initialize a `FocusRegion` which traps the focus.\n\n`FocusRegion` doesn't know anything about other `FocusRegion` instances. Yet, in the example above we have two `FocusRegion` instances, one for `Popover` and one for `Modal`. As focus moves from the `Modal` to the `Popover` and back to the `Modal` again we need to activate, deactivate, and reactivate the `FocusRegion` for each component.\n\nTo help us keep track of this we use a singleton called [FocusRegionManager](#FocusRegionManager). Every time we create a `FocusRegion`, we register it with the `FocusRegionManager`. `FocusRegionManager` then tracks the order and is able to help us pass focus between regions as necessary.\n\nLet's walk through at a high level what is happening with `FocusRegion` and `FocusRegionManager` in our example:\n\n| What happens in the interface     | What happens in `FocusRegion` and `FocusRegionManager`                                                                                                                                                                                                               |\n| --------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Button is clicked                 |                                                                                                                                                                                                                                                                      |\n| Modal opens                       | Modal's focus region is created and registered with `FocusRegionManager`                                                                                                                                                                                             |\n| Popover trigger button is clicked |                                                                                                                                                                                                                                                                      |\n| Popover is created                | `FocusRegionManager` deactivates Modal's focus region but continues tracking it since it is still mounted. A new focus region for Popover is created and registered with `FocusRegionManager` and is activated.                                                      |\n| Popover is closed                 | `FocusRegionManager` deactivates Popover's focus region and also unregisters it since Popover is now unmounted. As Popover's focus region is unregistered, focus is restored to it's triggering element. `FocusRegionManager` then reactivates Modal's focus region. |\n| Modal is closed                   | `FocusRegionManager` deactivates Modal's focus region and also unregisters it since Modal is now unmounted. As Modal's focus region is unregistered, focus is restored to it's triggering element (which is the original Button we clicked in the first place)       |\n\n### The internal workings of FocusRegion\n\n`FocusRegion` sets up listeners on the document to detect any escape presses to close on escape. It also adds document listeners for clicking in order to detect if there is a click or touch event that is outside of the Dialog area.\n\nBeyond this, `FocusRegion` coordinates with two other internal classes [KeyboardFocusRegion](#KeyboardFocusRegion) and [ScreenReaderFocusRegion](#ScreenReaderFocusRegion).\n\n#### KeyboardFocusRegion\n\nThis is the utility that traps keyboard focus. It scopes the tab press to focusable elements within the dialog and makes sure that when you press tab on the last focusable element, your focus is moved back to the first one. Additionally, `KeyboardFocusRegion` is in charge of returning focus to the triggering element once it is closed.\n\n#### ScreenReaderFocusRegion\n\nThis is the utility that makes sure all elements outside of the `Dialog` receive `aria-hidden=\"true\"`. We want to make sure that when a `Dialog` is open, all other page elements are hidden from screen readers. `ScreenReaderFocusRegion` can also receive a live region which includes elements which should not be hidden.\n","title":"Focus Management","category":"Guides","order":4,"relativePath":"docs/guides/focus-management.md","extension":".md","srcPath":"docs/guides/focus-management.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/guides/focus-management.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/guides/focus-management","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/guides/focus-management.md').default","esPath":"@instructure/docs/guides/focus-management","id":"focus-management"},"themeable-to-emotion-migration-guide":{"description":"\n## Themeable to Emotion Migration Guide for Version 8.0\n\nThe main feature of the Version 8.0 release is the switch of the theming engine. We replaced the in-house `ui-themeable` theming solution with the popular [emotion.js](https://emotion.sh/) library.\n\nWe feel that it is very important that InstUI is easy to use and learn, so we try to use popular, well maintained and well documented open source solutions whenever possible.\n\nThis is why we decided to replace our custom-made theming library (ui-themeable) with a broadly adopted one. The two main candidates were [emotion](https://emotion.sh) and [styled components](https://styled-components.com), we decided to use `emotion`. If you are interested in our detailed reasoning you can read it [here](https://gist.github.com/serikjensen/4ba00b653efac1dbf80543c529adabbc).\n\nIn the v8.0. release we removed `ui-themeable` and its supporting packages from InstUI (see more in [Upgrade Guide for Version 8.0](#v8-upgrade-guide)). We also migrated all our components to use `emotion`, because it was not compatible with the former `ui-themeable`. This is why you'll have to make some changes in your app to adopt the new theming solution:\n\n- replace `ApplyTheme` with `EmotionThemeProvider` and import themes directly instead of registering them\n- if you have your own themeable components, refactor them to use `emotion`\n\n##### Table of Contents\n\n- [The emotion package](#themeable-to-emotion-migration-guide/#the-emotion-package)\n- [Theme handling](#themeable-to-emotion-migration-guide/#theme-handling)\n  - [ApplyTheme to EmotionThemeProvider](#themeable-to-emotion-migration-guide/#theme-handling-applytheme-to-emotionthemeprovider)\n  - [Using the built-in themes](#themeable-to-emotion-migration-guide/#theme-handling-using-the-built-in-themes)\n  - [Using component overrides](#themeable-to-emotion-migration-guide/#theme-handling-using-component-overrides)\n  - [Theme-based overrides](#themeable-to-emotion-migration-guide/#theme-handling-theme-based-overrides)\n  - [Mixed and nested overrides](#themeable-to-emotion-migration-guide/#theme-handling-mixed-and-nested-overrides)\n  - [Local theme variable overrides of components](#themeable-to-emotion-migration-guide/#theme-handling-local-theme-variable-overrides-of-components)\n  - [theme.use() is deprecated](<#themeable-to-emotion-migration-guide/#theme-handling-theme.use()-is-deprecated>)\n- [Migrating your @themeable components](#themeable-to-emotion-migration-guide/#migrating-your-@themeable-components)\n  - [1. Refactor theme.js](#themeable-to-emotion-migration-guide/#migrating-your-@themeable-components-1.-refactor-theme.js)\n  - [2. Create the styles.js file](#themeable-to-emotion-migration-guide/#migrating-your-@themeable-components-2.-create-the-styles.js-file)\n  - [3. Make changes in the component](#themeable-to-emotion-migration-guide/#migrating-your-@themeable-components-3.-make-changes-in-the-component)\n  - [Accessing theme variables in index.js](#themeable-to-emotion-migration-guide/#migrating-your-@themeable-components-accessing-theme-variables-in-index.js)\n  - [Global styles](#themeable-to-emotion-migration-guide/#migrating-your-@themeable-components-global-styles)\n  - [Keyframes](#themeable-to-emotion-migration-guide/#migrating-your-@themeable-components-keyframes)\n  - [An example component using emotion theming](#themeable-to-emotion-migration-guide/#migrating-your-@themeable-components-an-example-component-using-emotion-theming)\n  - [Theme tests](#themeable-to-emotion-migration-guide/#migrating-your-@themeable-components-theme-tests)\n\n## The emotion package\n\nThe `@instructure/emotion` package contains our wrapper and helpers for the emotion theming library. You can find the full documentation [here](#emotion).\n\nJust like [**ui-themeable**](https://legacy.instructure.design/#ui-themeable), **emotion** is used by:\n\n- adding a decorator to our themeable components,\n- mapping the global theme variables to component variables (in the `theme.js` file),\n- applying styles using the component variables (instead of `styles.css` file, now we use a `styles.js` file),\n- and applying themes by wrapping the component in a theme provider component.\n\n```javascript\n---\nembed: true\n---\n<ToggleBlockquote\n  summary=\"Migrating from ui-themeable\"\n>\n  <ToggleBlockquote.Paragraph>\n    The usage is very similar, but migrating will require some refactoring, converting <code>css</code> to <code>js</code> and moving styling logic from the components to the <code>styles.js</code> file.\n  </ToggleBlockquote.Paragraph>\n  <ToggleBlockquote.Paragraph>\n    This guide will explain every step in detail, showing many examples, but <strong>feel free to contact the InstUI team</strong> if you need further help.\n  </ToggleBlockquote.Paragraph>\n</ToggleBlockquote>\n```\n\n## Theme handling\n\nWe made changes in how we apply themes too. You no longer need to register themes and use `ApplyTheme.generateTheme`. Instead, you can directly import them from `@instructure/ui-themes` (or your own themes) and pass them to the theme provider.\n\n#### ApplyTheme to EmotionThemeProvider\n\nThe new theme provider is called `EmotionThemeProvider`, which is our own wrapper component for Emotion's [ThemeProvider](https://emotion.sh/docs/theming#themeprovider-reactcomponenttype).\n\n**You can find detailed information about how it works and how to add theme overrides on the [EmotionThemeProvider](#EmotionThemeProvider) page.**\n\n#### Using the built-in themes\n\n```js\n// before\nReactDOM.render(\n  <ApplyTheme theme={ApplyTheme.generateTheme('instructure')}>\n    <App />\n  </ApplyTheme>,\n  element\n)\n\n// after\nimport { instructure } from '@instructure/ui-themes'\n\nReactDOM.render(\n  <EmotionThemeProvider theme={instructure}>\n    <App />\n  </EmotionThemeProvider>,\n  element\n)\n```\n\n#### Using component overrides\n\nIf you are using global theme overrides for some components, change the structure of the overrides object: wrap them in a \"componentOverrides\" object, and the keys are simply the names of the components:\n\n```jsx\n// before\n<ApplyTheme theme={{\n   [Button.theme]: {\n     smallHeight: '23px'\n   },\n   [TextInput.theme]: {\n     smallHeight: '27px'\n   }\n }\n}>\n  ...\n</ApplyTheme>\n\n\n// after\n<EmotionThemeProvider theme={{\n  componentOverrides: {\n    Button: {\n      smallHeight: '23px'\n    },\n    TextInput: {\n      smallHeight: '27px'\n    }\n  }\n}}>\n  ...\n</EmotionThemeProvider>\n\n```\n\n#### Theme-based overrides\n\nIf you need to, and your app is using multiply themes, you can specify overrides for just one specific theme.\n\n```jsx\n<EmotionThemeProvider\n  theme={{\n    themeOverrides: {\n      canvas: {\n        colors: { backgroundLightest: '#f5f5f5' }\n      },\n      'canvas-high-contrast': {\n        colors: { backgroundLightest: '#ffffff' }\n      }\n    }\n  }}\n>\n  ...\n</EmotionThemeProvider>\n```\n\n#### Mixed and nested overrides\n\nThe `componentOverrides` can also be nested inside `themeOverrides`. This method is helpful if you want to override e.g. the `Alert` component \"**only** in canvas theme\".\n\n```jsx\n<EmotionThemeProvider\n  theme={{\n    themeOverrides: {\n      canvas: {\n        componentOverrides: {\n          Alert: {\n            warningIconBackground: 'deeppink',\n            warningBorderColor: 'deeppink'\n          }\n        }\n      }\n    }\n  }}\n>\n  <Alert variant=\"warning\">\n    My border and icon background should be \"deeppink\" in \"canvas\" theme.\n  </Alert>\n</EmotionThemeProvider>\n```\n\n#### Local theme variable overrides of components\n\nIf you need to tweak just one component locally, you can do so with a component [property](#withStyle/#applying-themes).\n\n**The `theme` prop was renamed to `themeOverride`.**\n\n```jsx\n// before\n<ExampleComponent theme={{ hoverColor: '#eee' }} />\n\n// after\n<ExampleComponent themeOverride={{ hoverColor: '#eee' }} />\n```\n\n**To ease the upgrade process we provide a codemod for this specific case.**\n\nIn order to use the codemod run:\n\n```sh\nnpx @instructure/instui-cli codemod-v8 -t themeOverride\n```\n\nExample usage:\n\n```sh\n#in the root of the project\nnpx @instructure/instui-cli codemod-v8 -t themeOverride -p ./src\n```\n\nTo learn more about the available options and defaults simply run:\n\n```sh\n npx @instructure/instui-cli codemod-v8 --help\n```\n\n#### theme.use() is deprecated\n\nApplying themes with the former `.use()` method of themes (added by ui-themeable) is now deprecated. Wrap your app in `EmotionThemeProvider` instead.\n\n```js\n// before\nimport { canvas, canvasHighContrast } from '@instructure/ui-themes'\nif (localStorage.getItem('mode') === 'highContrast') {\n  canvasHighContrast.use()\n} else {\n  canvas.use()\n}\n\n// after\nimport { canvas, canvasHighContrast } from '@instructure/ui-themes'\n\nReactDOM.render(\n  <EmotionThemeProvider\n    theme={\n      localStorage.getItem('mode') === 'highContrast'\n        ? canvasHighContrast\n        : canvas\n    }\n  >\n    <App />\n  </EmotionThemeProvider>,\n  element\n)\n```\n\nInstead of passing the theme overrides to the `.use()` method, just merge the theme with the global overrides when passing it to the theme provider.\n\n```js\n// before\nimport { theme } from '@instructure/canvas-theme'\ntheme.use({ overrides: { transitions: { duration: '0ms' } } })\n\n// after\nimport { theme } from '@instructure/canvas-theme'\nconst themeOverrides = { transitions: { duration: '0ms' } }\n\nReactDOM.render(\n  <EmotionThemeProvider theme={{ ...theme, ...themeOverrides }}>\n    <App />\n  </EmotionThemeProvider>,\n  element\n)\n```\n\n## Migrating your @themeable components\n\nAll InstUI components were migrated to use Emotion in v8.0, because it is not compatible with our former `ui-themeable`. In case you have any components of your own using the `@themeable` decorator, you'll have to migrate them too to use the new theming solution.\n\nWe tried our best to give detailed guides and examples for the migration steps, but if you need further information, **feel free to contact the InstUI team** on slack or via [GitHub tickets](https://github.com/instructure/instructure-ui).\n\n#### 1. Refactor theme.js\n\nThe `theme.js` needs a small modification. You can see the format convention in our **After** example below.\n\nRename the generator to `generateComponentTheme`. It still receives the theme object, and returns the variables mapped for the component, and the theme-specific styles.\n\nMove the variable map into a `componentVariables` object, and use optional chaining in the theme variables (e.g. colors?.textBrand).\n\nMove the theme specific generators inside the main generator to a `themeSpecificStyle` object with theme keys as props.\n\nMerge the default variable object and `themeSpecificStyle[theme.key]` in the return block with spread operator, with the latter at the end, so it can override the defaults.\n\n**Before:**\n\n```js\n// ui-themeable\n\nexport default function generator({ colors, borders, typography }) {\n  return {\n    color: colors.textBrand,\n    background: colors.backgroundLightest,\n    borderWidthSmall: borders.widthSmall,\n    borderWidthMedium: borders.widthMedium,\n    borderColor: colors.borderMedium,\n    fontFamily: typography.fontFamily,\n    fontWeight: typography.fontWeightBold\n  }\n}\n\ngenerator.canvas = function () {\n  return {\n    primaryColor: 'blue'\n  }\n}\n\ngenerator['canvas-high-contrast'] = function () {\n  return {\n    primaryColor: 'red'\n  }\n}\n```\n\n**After:**\n\n```js\n// emotion\n\n/**\n * Generates the theme object for the component from the theme and provided additional information\n * @param  {Object} theme The actual theme object.\n * @return {Object} The final theme object with the overrides and component variables\n */\nconst generateComponentTheme = (theme) => {\n  // the props of the theme you want to use\n  const { colors, borders, typography, key: themeName } = theme\n\n  // if you need different styling in specific themes,\n  // add them here with the key of the theme\n  const themeSpecificStyle = {\n    'canvas-high-contrast': {\n      primaryColor: 'red'\n    },\n    canvas: {\n      primaryColor: 'blue'\n    }\n  }\n\n  // map the theme variables to component specific style variables,\n  // and use optional chaining (?.)\n  const componentVariables = {\n    color: colors?.textBrand,\n    background: colors?.backgroundLightest,\n    borderWidthSmall: borders?.widthSmall,\n    borderWidthMedium: borders?.widthMedium,\n    borderColor: colors?.borderMedium,\n    fontFamily: typography?.fontFamily,\n    fontWeight: typography?.fontWeightBold\n  }\n\n  // return with the final theme object of the component\n  // with the added theme specific overrides\n  return {\n    ...componentVariables,\n    ...themeSpecificStyle[themeName]\n  }\n}\nexport default generateComponentTheme\n```\n\n#### 2. Create the styles.js file\n\nThe two main advantages of the new approach are that\n\n- we can directly use the component theme variables in the styling _(instead of generating tons of CSS custom properties)_,\n- and we can pass the component props to the generator, so we can handle all prop-based styling here _(instead of adding multiple conditional classes in the `index.js`)_.\n\nMigrating the styling from the `styles.css` to the `styles.js` will need some manual work (or a bit more for complex components). You'll have to convert the css to js, but luckily there are many online [css-to-js transformers](https://transform.tools/css-to-js) that can help.\n\nCreate a `styles.js` file next to the `theme.js`. Write and export a function named `generateStyle`. It receives the `componentTheme` generated by `theme.js`, the component props and a `state` object as arguments. These additional `state` variables can be passed from the component in the `makeStyles` method (see later).\n\nUse the content of the `styles.css` and convert it to css-in-js. Use the passed component variables, props and state where needed. (More info in the [emotion](#emotion) docs.) Use [Emotion's Object Styles documentation](https://emotion.sh/docs/object-styles) or other InstUI components as a reference.\n\n```js\n/**\n * Generates the style object from the theme and provided additional information\n * @param  {Object} componentTheme The theme variable object.\n * @param  {Object} props the props of the component, the style is applied to\n * @param  {Object} state the state of the component, the style is applied to\n * @return {Object} The final style object, which will be used in the component\n */\nconst generateStyle = (componentTheme, props, state) => {\n  const { color } = props\n\n  // optional mappings can be provided based on props\n  const colorStyles = {\n    primary: {\n      color: componentTheme.primaryColor,\n      fontSize: '20px'\n    },\n    info: {\n      color: componentTheme.infoColor\n    }\n  }\n\n  // return with the css you'd like to apply to the component\n  return {\n    componentName: {\n      label: 'componentName',\n      display: 'block',\n      background: componentTheme.background,\n      boxSizing: 'border-box',\n      ...colorStyles[color]\n    },\n    child: {\n      label: 'componentName__child',\n      color: 'green',\n      background: componentTheme.infoColor\n    }\n  }\n}\nexport default generateStyle\n```\n\n#### 3. Make changes in the component\n\nIn the `index.js` of the component, replace the imports, the decorator, and refactor the style handling.\n\n##### 1. jsx\n\nAdd the `/** @jsx jsx */` annotation on top.\n\n```js\n/** @jsx jsx */\nimport { Children, Component } from 'react'\n```\n\n##### 2. imports\n\n- Replace `@instructure/ui-themeable` import with `{ withStyle, jsx }` from `@instructure/emotion`.\n- Replace the `theme` import with component theme generator (`generateComponentTheme`) from `theme.js`.\n- Replace the `styles.css` import with the style generator (`generateStyle`) import from `styles.js`.\n- Don't forget to update the dependencies in `package.json`.\n\n```js\n// before\nimport { themeable } from '@instructure/ui-themeable'\nimport theme from './theme'\nimport styles from './styles.css'\n\n// after\nimport { withStyle, jsx } from '@instructure/emotion'\nimport generateComponentTheme from './theme'\nimport generateStyle from './styles'\n```\n\n**Note:** these utils were moved from `ui-themeable` to the `emotion` package: ThemeablePropValues, ThemeablePropTypes, makeThemeVars, getShorthandPropValue, mirrorShorthandCorners, mirrorShorthandEdges. Update the import where needed. We provided a codemod for these import transformations:\n\n```bash\nnpx @instructure/instui-cli codemod --scope-modifications imports -v 8\n```\n\n##### 3. decorator\n\nReplace `@themeable` decorator with `@withStyle(generateStyle, generateComponentTheme)`, passing the style and theme generators. (If needed, you can pass `null` instead of both, e.g. when there is a stylesheet, but you don't use any theme variables.)\n\n```js\n// before\n@themeable(theme, styles)\nclass ExampleComponent extends Component { ... }\n\n// after\n@withStyle(generateStyle, generateComponentTheme)\nclass ExampleComponent extends Component { ... }\n```\n\n##### 4. props and lifecycle methods\n\nThe props `makeStyles` and `styles` are added by the decorator, so you might run into eslint errors when using them in the component. We recommend adding them to propTypes, and suppressing the eslint errors there.\n\nIn the `componentDidMount` and `componentDidUpdate` methods, call the `makeStyles` method (available on this.props) to generate the styles object, passing the state (or any other object needed).\n\n```js\nstatic propTypes = {\n  // eslint-disable-next-line react/require-default-props\n  makeStyles: PropTypes.func,\n  // eslint-disable-next-line react/require-default-props\n  styles: PropTypes.object,\n  ...\n}\n\ncomponentDidMount() {\n  this.props.makeStyles({ focused: this.state.focused })\n}\n\ncomponentDidUpdate() {\n  this.props.makeStyles({ focused: this.state.focused })\n}\n```\n\n##### 5. render and applying styles\n\nIn the `render` method, use emotion's `css={this.props.styles.componentName}` syntax to add styles. Refactor your code to move all style-related logic to the `styles.js`.\n\n**Before:**\n\n```jsx\n// before in index.js\nrender() {\n  const classes = {\n    [styles.root]: true,\n    [styles[size]]: true,\n    [styles.disabled]: disabled\n  }\n\n  return (\n    <div className={classnames(classes)}>...</div>\n  )\n}\n```\n\n```css\n/* before in styles.css */\n.root {\n  display: block;\n  font-family: var(--fontFamily);\n}\n.small {\n  font-size: 1em;\n}\n.medium {\n  font-size: 1.5em;\n}\n.large {\n  font-size: 2em;\n}\n.disabled {\n  pointer-events: none;\n}\n```\n\n**After:**\n\n```jsx\n// after in index.js\nrender() {\n  return (\n    <div css={styles.componentName}>...</div>\n  )\n}\n```\n\n```js\n// after in styles.js\nconst sizeVariants = {\n  small: { fontSize: '1em' },\n  medium: { fontSize: '1.5em' },\n  large: { fontSize: '2em' }\n}\n\nreturn {\n  componentName: {\n    label: 'componentName',\n    display: 'block',\n    fontFamily: componentTheme.fontFamily,\n    ...sizeVariants[props.size],\n    ...(props.disabled && { pointerEvent: 'none' })\n  }\n}\n```\n\n#### Accessing theme variables in index.js\n\nIf you access theme variables in the `index.js`, you need to pass them through `styles.js`, they are not accessible on the component (on `this.theme`) anymore.\n\nBefore:\n\n```jsx\nrender() {\n  return (\n    <div maxWidth={this.theme.maxWidth}>\n      ...\n    </div>\n  )\n}\n```\n\nAfter:\n\n```js\n// after in styles.js\nreturn {\n  componentName: {\n    label: 'componentName'\n    // ...\n  },\n  maxWidth: componentTheme.maxWidth\n}\n```\n\n```jsx\n// after in index.js\nrender() {\n  return (\n    <div maxWidth={this.props.styles.maxWidth}>\n      ...\n    </div>\n  )\n}\n```\n\n#### Global styles\n\nGlobal styles need to be transformed to the \"emotion way\" too.\n\n**Before:**\n\n```css\n// styles.css\n\n:global {\n  .CodeMirror {\n    height: auto;\n    background: var(--background);\n    // ...\n  }\n}\n```\n\n**After:**\n\nWrite your global styles in the `styles.js` file on a \"globalStyles\" key. You don't have to add labels to global styles.\n\n```js\n// styles.js\n\nreturn {\n  globalStyles: {\n    '.CodeMirror': {\n      height: 'auto',\n      background: componentTheme.background\n      // ...\n    }\n  }\n}\n```\n\nIn the `index.js`, import `Global` from `@instructure/emotion`, which is equivalent to the [Global](https://emotion.sh/docs/globals) component of Emotion.js.\n\nIn the render method, use the `<Global>` component and pass the the \"globalStyles\" as its `styles={}` property.\n\n```jsx\n// index.js\n\nimport { withStyle, jsx, Global } from '@instructure/emotion'\n\n// ...\n\nrender() {\n  const { styles } = this.props\n\n  return (\n    <div css={styles.codeEditor}>\n      <Global styles={styles.globalStyles} />\n      // ...\n    </div>\n  )\n}\n```\n\n#### Keyframes\n\nAnimations are handled with Emotion's [keyframes](https://emotion.sh/docs/keyframes) helper.\n\n**Before:**\n\n```css\n// styles.css\n\n@keyframes pulse {\n  to {\n    transform: scale(1);\n    opacity: 0.9;\n  }\n}\n\n.componentClass {\n  // ...\n  animation-name: pulse;\n}\n```\n\n**After:**\n\nImport `keyframes` from `@instructure/emotion` in the `styles.js` file.\n\nDefine the animation on the top of the page as a `const` and use it in your style object where needed. **Make sure that it is defined outside of the `generateStyle` method, otherwise it is causing problems with style recalculation.**\n\n```js\n// styles.js\n\nimport { keyframes } from '@instructure/emotion'\n\nconst pulseAnimation = keyframes`\n  to {\n    transform: scale(1);\n    opacity: 0.9;\n  }`\n\nconst generateStyle = (componentTheme, props, state) => {\n  // ...\n\n  return {\n    componentClass: {\n      // ...\n      animationName: pulseAnimation\n    }\n  }\n}\n```\n\n#### An example component using emotion theming\n\n```jsx\n/** @jsx jsx */\nimport { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { passthroughProps } from '@instructure/ui-react-utils'\n\nimport { withStyle, jsx } from '@instructure/emotion'\n\nimport generateStyle from './styles'\nimport generateComponentTheme from './theme'\n\n/**\n---\ncategory: components\n---\n**/\n@withStyle(generateStyle, generateComponentTheme)\nclass ExampleComponent extends Component {\n  static propTypes = {\n    // eslint-disable-next-line react/require-default-props\n    makeStyles: PropTypes.func,\n    // eslint-disable-next-line react/require-default-props\n    styles: PropTypes.object,\n    children: PropTypes.node,\n    elementRef: PropTypes.func\n  }\n\n  static defaultProps = {\n    children: null,\n    elementRef: (el) => {}\n  }\n\n  componentDidMount() {\n    this.props.makeStyles()\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.props.makeStyles()\n  }\n\n  render() {\n    const { children, elementRef, styles, ...props } = this.props\n    return (\n      <div\n        {...passthroughProps(props)}\n        ref={elementRef}\n        css={styles.exampleComponent}\n      >\n        <div css={styles.componentName__children}>{children}</div>\n      </div>\n    )\n  }\n}\n\nexport { ExampleComponent }\nexport default ExampleComponent\n```\n\n#### Theme tests\n\nFor components with theme tests, you can use `generateComponentTheme` from `theme.js` to get the theme variables.\n\nImport the themes needed for your test, and pass them to the generator.\n\n```js\nimport { canvas, canvasHighContrast } from '@instructure/ui-themes'\nimport generateComponentTheme from '../theme'\ndescribe('YourComponent.theme', () => {\n  describe('with canvas theme', () => {\n    const variables = generateComponentTheme(canvas)\n\n    describe('default', () => {\n      it('should ensure background color and text color meet 3:1 contrast', () => {\n        expect(contrast(variables.background, variables.color)).to.be.above(3)\n      })\n    })\n  })\n  describe('with the \"canvas-high-contrast\" theme', () => {\n    const variables = generateComponentTheme(canvasHighContrast)\n\n    describe('default', () => {\n      it('should ensure background color and text color meet 4.5:1 contrast', () => {\n        expect(contrast(variables.background, variables.color)).to.be.above(4.5)\n      })\n    })\n  })\n})\n```\n","title":"Themeable to Emotion Migration Guide for Version 8.0","category":"Guides","order":2,"relativePath":"docs/guides/themeable-to-emotion-migration-guide.md","extension":".md","srcPath":"docs/guides/themeable-to-emotion-migration-guide.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/guides/themeable-to-emotion-migration-guide.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/guides/themeable-to-emotion-migration-guide","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/guides/themeable-to-emotion-migration-guide.md').default","esPath":"@instructure/docs/guides/themeable-to-emotion-migration-guide","id":"themeable-to-emotion-migration-guide"},"v8-deprecations":{"description":"\n# Deprecated Utilites, Properties and Components in Version 8.0\n\n```javascript\n---\nembed: true\n---\n<ToggleBlockquote\n  summary=\"Important\"\n>\n  <ToggleBlockquote.Paragraph>\n    The following utilities, properties and components are deprecated in v8, and <strong>will be permanently deleted in v9.0.</strong>\n  </ToggleBlockquote.Paragraph>\n</ToggleBlockquote>\n```\n\nThe tables below show what will be removed and what are they replaced with. We also marked if there are [codemods](#ui-codemods) available.\n\n- [Deprecated Utilities](#v8-deprecations/#deprecated-utilites)\n\n### Deprecated Utilities\n\n| Utility                                 | Substitute                                                                                                                                          |\n| --------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [addResizeListener](#addResizeListener) | Use the native [ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) utility. Example usage: [here](#addResizeListener) |\n","title":"Deprecated Utilites, Properties and Components in Version 8.0","category":"Guides","order":2,"relativePath":"docs/guides/v8-deprecations.md","extension":".md","srcPath":"docs/guides/v8-deprecations.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/guides/v8-deprecations.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/guides/v8-deprecations","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/guides/v8-deprecations.md').default","esPath":"@instructure/docs/guides/v8-deprecations","id":"v8-deprecations"},"v8-upgrade-guide":{"description":"\n# Upgrade Guide for Version 8.0\n\nPlease read this guide carefully if you plan to update your app to this release.\nThe main feature for version 8 is the switch of the theming engine, we replaced the in-house `themeable` theming with the popular [emotion.js](https://emotion.sh/)\n\nWe recommend upgrading your application for each major version gradually, e.g. if you plan to update from 5.x to 8.x, then migrate first to 6.x, then 7.x and finally to version 8.\n\n```javascript\n---\nembed: true\n---\n<ToggleBlockquote\n  summary=\"Why we switched from Themeable to Emotion\"\n>\n  <ToggleBlockquote.Paragraph>\n    We feel that it is very important that InstUI is easy to use and learn. To accomplish this, we try to use well-known open source solutions whenever possible.\n  </ToggleBlockquote.Paragraph>\n  <ToggleBlockquote.Paragraph>\n    The previous, custom made theming solution did not fit into this vision (for its defense it was added when there weren't widely used alternatives)\n    so we decided to switch to a broadly adopted one. The two main candidates were <Link href=\"https://emotion.sh\">emotion.sh</Link> and <Link href=\"https://styled-components.com\">styled components</Link>, we decided to use emotion.\n  </ToggleBlockquote.Paragraph>\n  <ToggleBlockquote.Paragraph>\n    If you are interested in our detailed reasoning you can read it <Link href=\"https://gist.github.com/serikjensen/4ba00b653efac1dbf80543c529adabbc\">here</Link>.\n  </ToggleBlockquote.Paragraph>\n</ToggleBlockquote>\n```\n\n## Before you upgrade to v8.0\n\nThere are a few steps you need to do before you start the migration process. **First, upgrade to the latest v7.x release to be able to follow this guide.**\n\nYou can find the legacy v7 documentation on [legacy.instructure.design](https://legacy.instructure.design).\n\n### Removal of deprecated components and properties\n\nOne of the changes of v8.0. is that we deleted all components and properties marked as `deprecated` in v7. Since these are not backwards compatible anymore, please make sure to update everything.\n\n**We made a list of all the affected components and props on [Deprecated Properties and Components in Version 7.0](https://legacy.instructure.design/#v7-deprecated-props-and-components) page to have a clear overview of the changes, removals, substitutes.** You can also find these changes in our [CHANGELOG](#CHANGELOG).\n\n## Main changes\n\n### Github as the main source code repository\n\nWe have moved the development of the library fully to Github. Please file your bug reports or pull requests [here](https://github.com/instructure/instructure-ui).\n\n### Migrating theming from Themeable to Emotion\n\nWe prepared a detailed guide on how to migrate the theming of your app to emotion: [Themeable to Emotion Migration Guide for Version 8.0](#themeable-to-emotion-migration-guide)\n\n### Removal of themeable-related packages\n\nWith the introduction of the new theming solution, the `ui-themeable` package was deleted. Since themeable was based on CSS styling, there were some other packages that supported themeable, but are no longer needed for the JS-based styling.\n\nWe have removed the following packages:\n\n| Package name                                                                                                           | Reason                            |\n| ---------------------------------------------------------------------------------------------------------------------- | --------------------------------- |\n| [@instructure/ui-themeable](https://www.npmjs.com/package/@instructure/ui-themeable)                                   | Themeable was replaced by emotion |\n| [@instructure/babel-plugin-themeable-styles](https://www.npmjs.com/package/@instructure/babel-plugin-themeable-styles) | Babel plugin used by themeable    |\n| [@instructure/postcss-themeable-styles](https://www.npmjs.com/package/@instructure/postcss-themeable-styles)           | CSS transformer used by themeable |\n| [@instructure/ui-postcss-config](https://www.npmjs.com/package/@instructure/ui-postcss-config)                         | PostCSS config used by themeable  |\n| [@instructure/ui-stylesheet](https://www.npmjs.com/package/@instructure/ui-stylesheet)                                 | Used by themeable                 |\n\n**Note:** In case you need them, the 7.x versions are still on npm, but they will not receive further feature updates.\nYou can still file bugs, and we will likely fix them or submit pull requests if you want to see a new feature in them.\n\n### Other changes\n\n##### Node version\n\nInstUI now needs `node.js` version >12.20 to build.\n\n##### Legacy Context\n\nUpdated React legacy context to the new context API in the components that use it (e.g. `DrawerLayout`).\n\n##### TreeBrowser\n\nNew `TreeBrowser.Node` component for rendering the `renderBeforeItems` and `renderAfterItems` in the `TreeBrowser` (Also available in 7.5.0).\n\n##### Tabs\n\nWe wanted to keep the colors of normal and secondary tabs consistent. In v7.4.1 we made the color of the un-selected tabs the same as the selected ones in the \"secondary\" variant too.\n\nIn v8, the `secondarySelectedColor` theme variable is removed.\n\n##### Checkbox\n\nVisual fix: fixed the error of having no spacing between a single checkbox and its error/info messages.\n\n##### Other\n\n- Upgraded Storybook from 5.2 to 6.1\n- New [legacy.instructure.design](https://legacy.instructure.design) for the documentation of the last major release (v7 in this case)\n- Updated some of our guides (e.g.: [Contributing](#contributing))\n- Development builds are called now `snapshot`\n- Improved a bit on the performance and speed of the [Iconography](#iconography) page\n","title":"Upgrade Guide for Version 8.0","category":"Guides","order":1,"relativePath":"docs/guides/v8-upgrade-guide.md","extension":".md","srcPath":"docs/guides/v8-upgrade-guide.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/guides/v8-upgrade-guide.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/guides/v8-upgrade-guide","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/guides/v8-upgrade-guide.md').default","esPath":"@instructure/docs/guides/v8-upgrade-guide","id":"v8-upgrade-guide"},"ContentAlignment":{"description":"\n## Content Alignment\n* Main content area should center between any sidebar content.\n* Maximum width of `59.25rem` (948px) for main content area to help with readability.\n* Minimum width of `20rem` (320px) for main content. The minimum width corresponds to a desktop browser window set to a width of 1280px and zoomed in at 400%.\n* Padding for content displaying above 480px should be 24px which aligns with the View component setting the padding prop to `medium`.\n* Padding for content displaying below 480px should be 12px which aligns with the View padding prop set to `small`.\n* Main content cannot have two-dimensional scrolling at 320px. If the page reads horizontally, then the content can only scroll vertically and vice versa.\n* Exceptions to the maximum width rule are permitted when the content has a two-dimensional relationship (meaning if the content were to reflow it would lose context). Examples: complex data tables, calendars, and file browsing.\n\n> Note that the limitations of the content area within our documentation do not allow for the example to render using the actual values noted above. However, the example does illustrate the correct concept of how the content should align within the parent container as the browser width grows and shrinks.\n\n### Illustrated Example\n\n```javascript\n---\nembed: true\ntheme: 'canvas'\n---\n<View as=\"div\" minHeight=\"31.25rem\" minWidth=\"16.66rem\">\n  <Flex alignItems=\"stretch\">\n    <Flex.Item>\n      <View as=\"div\" width=\"3.375rem\" height=\"100%\" background=\"primary-inverse\">\n        <ScreenReaderContent>Area to simulate navigation</ScreenReaderContent>\n      </View>\n    </Flex.Item>\n    <Flex.Item shouldGrow>\n      <View as=\"div\" minHeight=\"100%\" withVisualDebug>\n        <View as=\"div\" height=\"3.75rem\" borderWidth=\"small\" padding=\"small\">\n          <Text>Breadcrumb Placeholder</Text>\n        </View>\n        <View as=\"div\" maxWidth=\"39.5rem\" minWidth=\"13.33rem\" overflowY=\"auto\" padding=\"medium\" margin=\"0 auto\" borderWidth=\"medium\" borderColor=\"danger\">\n          <Heading>Main Content Area</Heading>\n          <Text as=\"p\">Let's assume this container is set to a max width specified above.</Text>\n          <Text as=\"p\">As the browser width grows the main content area centers within the allowed space.</Text>\n          <Text as=\"p\">As the browser width shrinks the content area maintains the specified padding and doesn't collapse below the minimum width set.</Text>\n        </View>\n      </View>\n    </Flex.Item>\n  </Flex>\n</View>\n```\n","title":"Content Alignment","category":"Patterns","id":"ContentAlignment","order":"","relativePath":"docs/patterns/ContentAlignment.md","extension":".md","srcPath":"docs/patterns/ContentAlignment.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/patterns/ContentAlignment.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/patterns/ContentAlignment","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/patterns/ContentAlignment.md').default","esPath":"@instructure/docs/patterns/ContentAlignment"},"DestroyAction":{"description":"\n\n## Destroy Action\nUsed to let the user know that the action they are about to take is something that cannot be undone.\n\n\n```js\n---\nrender: false\nexample: true\n---\nconst fpo = lorem.paragraphs(1)\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      size: 'auto'\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(function (state) {\n      return { open: !state.open }\n    })\n  }\n\n  renderCloseButton () {\n    return (\n      <CloseButton\n        placement=\"end\"\n        offset=\"medium\"\n        screenReaderLabel=\"Close\"\n        onClick={this.handleButtonClick}\n      />\n    )\n  }\n\n  render () {\n    return (\n      <div>\n        <IconButton\n          renderIcon={IconTrashLine}\n          onClick={this.handleButtonClick}\n          screenReaderLabel=\"Delete the Assignment\"\n        />\n        <Modal\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          size=\"small\"\n          label=\"Delete\"\n          shouldCloseOnDocumentClick\n        >\n          <Modal.Header>\n            {this.renderCloseButton()}\n            <Heading level=\"h2\">Delete</Heading>\n          </Modal.Header>\n          <Modal.Body padding=\"large medium\">\n            <Text>You are about to delete an active assignment. This will affect 16 students grades.</Text>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleButtonClick}>Cancel</Button>&nbsp;\n            <Button onClick={this.handleButtonClick} color=\"danger\" type=\"submit\">Delete</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use when deleting Users, Accounts, Courses, Etc</Figure.Item>\n    <Figure.Item>Use when navigating away from a page that would cause a loss in changes or data</Figure.Item>\n    <Figure.Item>Use language that specifically describes the destructive nature</Figure.Item>\n    <Figure.Item>Use a confirmation button that describes the action to be taken</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use “Are you sure?” type language</Figure.Item>\n    <Figure.Item>Use red button for other modal actions</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","title":"Destroy Action","category":"Patterns","id":"DestroyAction","order":"","relativePath":"docs/patterns/DestroyAction.md","extension":".md","srcPath":"docs/patterns/DestroyAction.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/patterns/DestroyAction.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/patterns/DestroyAction","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/patterns/DestroyAction.md').default","esPath":"@instructure/docs/patterns/DestroyAction"},"Drilldown":{"description":"\n## Drilldown Menu\n\nThis example shows an accessible implementation of a multi level menu using InstUI components. ([Popover](#Popover), [Menu](#Menu))\nThis component is useful when you want to display large amounts of data in a compact manner and using [Menu.SubMenu](#Menu) would be too cumbersome to use.\n\n```js\n---\nrender: false\nexample: true\n---\n\nconst dataMap = {\n  1: {\n    id: 1,\n    subAccounts: {\n      accounts: [\n        {\n          id: 2,\n          accountName: 'Sub Account 1'\n        },\n        {\n          id: 7,\n          accountName: 'Sub Account 7'\n        }\n      ]\n    }\n  },\n  2: {\n    id: 2,\n    accountName: 'Sub Account 1',\n    parentAccount: 1,\n    subAccounts: {\n      accounts: [\n        {\n          id: 3,\n          accountName: 'Sub Account 2'\n        },\n        {\n          id: 4,\n          accountName: 'Sub Account 3'\n        },\n        {\n          id: 5,\n          accountName: 'Sub Account 4'\n        }\n      ]\n    }\n  },\n  3: {\n    id: 3,\n    accountName: 'Sub Account 2',\n    parentAccount: 2,\n    subAccounts: {\n      accounts: [\n        {\n          id: 6,\n          accountName: 'Sub Account 5'\n        }\n      ]\n    }\n  },\n  4: {\n    id: 4,\n    accountName: 'Sub Account 3',\n    parentAccount: 2,\n    subAccounts: {\n      accounts: []\n    }\n  },\n  5: {\n    id: 5,\n    accountName: 'Sub Account 4',\n    parentAccount: 2,\n    subAccounts: {\n      accounts: []\n    }\n  },\n  6: {\n    id: 6,\n    accountName: 'Sub Account 5',\n    parentAccount: 3,\n    subAccounts: {\n      accounts: []\n    }\n  },\n  7: {\n    id: 7,\n    accountName: 'Sub Account 7',\n    parentAccount: 1,\n    subAccounts: {\n      accounts: []\n    }\n  }\n}\n\nconst useResetState = (initialState) => {\n  const [value, setValue] = React.useState(initialState)\n  React.useEffect(() => {\n    setValue(initialState)\n  }, [initialState])\n\n  return [value, setValue]\n}\n\nconst Example = ({ rootId, onChange = (_id) => {}, data }) => {\n  const [tempAccountId, setTempAccountId] = useResetState(data[rootId].id)\n  const menuRef = React.useRef()\n  const accountObj = {\n    ...data[tempAccountId]\n  }\n  const topLevelAccounts = [accountObj]\n  const hasParentAccount = accountObj?.parentAccount\n  const hasChildAccounts = accountObj?.subAccounts?.accounts.length > 0\n  const childAccounts = accountObj?.subAccounts?.accounts\n\n  const setAccountId = (id) => {\n    setTempAccountId(id)\n    onChange(id)\n\n    menuRef.current.focus()\n  }\n\n  const titleAccounts = topLevelAccounts.filter((a) => a.id && a.accountName)\n\n  const renderBackNavigation = () => {\n    if (hasParentAccount) {\n      const parentName = data[accountObj.parentAccount].accountName\n\n      return (\n        <Menu.Item\n          as=\"div\"\n          onClick={() => {\n            setAccountId(accountObj.parentAccount)\n          }}\n        >\n          <Flex as=\"div\" justifyItems=\"start\">\n            <View margin=\"0 small 0 0\">\n              <IconArrowOpenStartLine />\n            </View>\n            <TruncateText>\n              {parentName || 'Back'}\n            </TruncateText>\n          </Flex>\n        </Menu.Item>\n      )\n    }\n  }\n\n  const renderChildList = () => {\n    return childAccounts\n      ?.concat()\n      .sort((a, b) => {\n        if (a?.accountName > b?.accountName) return 1\n        if (a?.accountName < b?.accountName) return -1\n        return 0\n      })\n      .map((a) => {\n        if (data[a.id] && data[a.id]?.subAccounts?.accounts?.length) {\n          return (\n            <Menu.Item key={a.id} as=\"div\" onClick={() => setAccountId(a.id)}>\n              <Flex as=\"div\" justifyItems=\"space-between\">\n                <TruncateText>{a.accountName}</TruncateText>\n                <View margin=\"0 0 0 small\">\n                  <IconArrowOpenEndLine />\n                </View>\n              </Flex>\n            </Menu.Item>\n          )\n        } else {\n          return (\n            <Menu.Item key={a.id} as=\"div\" onClick={() => {console.log(`Selected account: ${a.accountName}`)}}>\n              <TruncateText>{a.accountName}</TruncateText>\n            </Menu.Item>\n          )\n        }\n      }) || null\n  }\n\n  return (\n    <View as=\"div\">\n      <Popover\n        renderTrigger={\n          <Tooltip\n          renderTip=\"Select user account\"\n          on={['hover', 'focus']}\n          placement=\"top\"\n            >\n            <IconButton screenReaderLabel=\"Select user account\">\n              <IconUserLine />\n            </IconButton>\n          </Tooltip>\n        }\n        shouldRenderOffscreen={false}\n        on=\"click\"\n        placement=\"bottom start\"\n        constrain=\"parent\"\n        offsetY={16}\n      >\n        <Menu\n          menuRef={(ref) => {\n            menuRef.current = ref\n          }}\n          themeOverride={{ minWidth: '24rem' }}\n        >\n          {renderBackNavigation()}\n          {titleAccounts.map((a) => {\n            return (\n              <Menu.Item\n                key={a.id}\n                as=\"div\"\n                onClick={() => setAccountId(a.id)}\n                themeOverride={{labelColor: '#008ee2'}}\n              >\n                <TruncateText>{a.accountName}</TruncateText>\n              </Menu.Item>\n            )\n          })}\n          {(hasParentAccount || titleAccounts.length) &&\n            hasChildAccounts && <Menu.Separator />}\n          {renderChildList()}\n        </Menu>\n      </Popover>\n    </View>\n  )\n}\n\n\nrender(<Example rootId=\"1\" onChange={(selectedId) => console.log(`Selected account: ${dataMap[selectedId].accountName}`)} data={dataMap}/>)\n```\n","title":"Drilldown Menu","category":"Patterns","id":"Drilldown","order":"","relativePath":"docs/patterns/DrilldownMenu.md","extension":".md","srcPath":"docs/patterns/DrilldownMenu.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/patterns/DrilldownMenu.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/patterns/DrilldownMenu","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/patterns/DrilldownMenu.md').default","esPath":"@instructure/docs/patterns/DrilldownMenu"},"Search":{"description":"\n\n## Search\n\nMake use of the following patterns when prompting users for a search query.\n\n### Auto Activated Search\n\nResults are updated in real time as the user keys in the search term.\n\n\n```js\n---\nrender: false\nexample: true\n---\nclass AutoActivatedSearchExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: '',\n      searchQuery: '',\n      isLoading: false,\n      results: []\n    }\n  }\n\n  timeoutId = null\n\n  handleChange = (e, value) => {\n    clearTimeout(this.timeoutId);\n\n    this.setState({\n      value,\n    })\n\n    this.loadResults(value)\n  }\n\n  loadResults = debounce((value) => {\n    if (!value || !value.length) {\n      this.setState({\n        searchQuery: value,\n        isLoading: false,\n        results: []\n      })\n\n      return;\n    }\n\n    this.setState({\n      isLoading: true,\n      searchQuery: value \n    })\n\n    this.timeoutId = setTimeout(() => {\n      const results = this.filterResults(value)\n\n      this.setState({\n        results,\n        isLoading: false\n      })\n    }, 1000)\n  }, 300)\n\n  filterResults = (query) => {\n    if (!query.length) {\n      return []\n    }\n\n    return this.props.dataset.filter(\n      ({label}) => label.toLowerCase().indexOf(query.toLowerCase()) > -1\n    )\n  }\n\n  handleClear = (e) => {\n    e.stopPropagation()\n    this.handleChange(e, \"\")\n    this.inputRef.focus()\n  }\n\n  renderClearButton = () => {\n    if (!this.state.value.length) return;\n\n    return (\n      <IconButton\n          type=\"button\"\n          size=\"small\"\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Clear search\"\n          disabled={this.state.disabled || this.state.readOnly}\n          onClick={this.handleClear}>\n        <IconTroubleLine />\n      </IconButton>\n    )\n  }\n\n  render () {\n    const {\n      results,\n      value,\n      searchQuery,\n      isLoading\n    } = this.state\n\n    return (\n      <View as=\"div\" padding=\"medium\">\n        <form\n           name=\"autoActivatedSearchExample\"\n           autoComplete=\"off\">\n          <TextInput\n            renderLabel={\n              <ScreenReaderContent>Search fruits</ScreenReaderContent>\n            }\n            placeholder=\"Search fruits...\"\n            value={value}\n            onChange={this.handleChange}\n            inputRef={(el) => this.inputRef = el}\n            renderBeforeInput={<IconSearchLine inline={false} />}\n            renderAfterInput={this.renderClearButton()}\n          />\n        </form>\n        <View as=\"div\" padding=\"medium 0\">\n        {isLoading ? (\n          <Flex direction=\"column\" alignItems=\"center\" padding=\"large 0\">\n            <Spinner renderTitle=\"Loading\" />\n          </Flex>\n        ) : results.length ? (\n            <>\n              <View as=\"div\" margin=\"0 0 small\">\n                <Text color=\"secondary\">\n                  {results.length} {results.length > 1 ? 'results ' : 'result '}\n                  for \"{searchQuery}\"\n                </Text>\n              </View>\n              {results.map(({ id, label }) => (\n                <View\n                  key={id}\n                  as=\"div\"\n                  padding=\"small\"\n                  borderWidth=\"small none none none\"\n                >\n                  {label}\n                </View>\n              ))}\n              <Alert\n                liveRegion={() => document.getElementById('flash-messages')}\n                liveRegionPoliteness=\"assertive\"\n                screenReaderOnly\n              >\n                {`${results.length} ${results.length > 1 ? 'results' : 'result '} found`}\n              </Alert>\n            </>\n          ) : (\n            <Flex direction=\"column\" alignItems=\"center\" padding=\"large 0\">\n              <IconSearchLine size=\"medium\" color=\"secondary\" />\n              <View margin=\"small 0 0\">\n                <Text size=\"large\">\n                  { searchQuery.length ?\n                    `No results found for \"${searchQuery}\"` :\n                    \"Start typing to find results\"\n                  }\n                </Text>\n              </View>\n              <Alert\n                liveRegion={() => document.getElementById('flash-messages')}\n                liveRegionPoliteness=\"assertive\"\n                screenReaderOnly\n              >\n                No results found\n              </Alert>\n            </Flex>\n          )}\n        </View>\n      </View>\n    )\n  }\n}\n\nrender(\n  <AutoActivatedSearchExample dataset={[\n    {id: '0', label: 'Apple'},\n    {id: '1', label: 'Banana'},\n    {id: '2', label: 'Cherry'},\n    {id: '3', label: 'Grape'},\n    {id: '4', label: 'Mango'},\n    {id: '5', label: 'Orange'},\n    {id: '6', label: 'Pear'},\n    {id: '7', label: 'Plum'},\n    {id: '8', label: 'Watermelon'},\n  ]} />\n)\n```\n\n#### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>\n      Use a loading spinner or other loading animation in the results area to indicate data is being retrieved\n    </Figure.Item>\n    <Figure.Item>\n      Debounce user input and consider setting a minimum search string length to avoid extraneous requests\n    </Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>\n      Use when long strings of text are needed to find useful results\n    </Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n### Activated Search\n\nResults are updated when a user triggers the search action, via keyboard or\nmouse.\n\n\n```js\n---\nrender: false\nexample: true\n---\nclass ActivatedSearchExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: '',\n      submittedValue: '',\n      results: []\n    }\n  }\n\n  timeoutId = null\n\n  handleChange = (e, value) => this.setState({ value })\n\n  handleClear = (e) => {\n    e.stopPropagation()\n    this.handleChange(e, \"\")\n    this.inputRef.focus()\n  }\n\n  handleSearch = (e) => {\n    const { value } = this.state\n\n    clearTimeout(this.timeoutId);\n\n    if (!value.length) {\n      return\n    }\n\n    this.setState({\n      isLoading: true,\n      submittedValue: value\n    })\n\n    this.timeoutId = setTimeout(() => {\n      const results = this.props.dataset.filter(\n        ({label}) => label.toLowerCase().indexOf(value.toLowerCase()) > -1\n      )\n\n      this.setState({\n        results,\n        isLoading: false\n      })\n    }, 1000)\n  }\n\n  renderClearButton = () => {\n    if (!this.state.value.length) return;\n    \n    return (\n      <IconButton\n          type=\"button\"\n          size=\"small\"\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Clear search\"\n          disabled={this.state.disabled || this.state.readOnly}\n          onClick={this.handleClear}>\n        <IconTroubleLine />\n      </IconButton>\n    )\n  }\n\n  render () {\n    const {\n      results,\n      submittedValue,\n      value,\n      isLoading\n    } = this.state\n\n    return (\n      <View as=\"div\" padding=\"medium\">\n        <form\n           name=\"activatedSearchExample\"\n           onSubmit={this.handleSearch}\n           autoComplete=\"off\">\n          <Flex>\n            <Flex.Item shouldGrow>\n              <TextInput\n                renderLabel={\n                  <ScreenReaderContent>Search fruits</ScreenReaderContent>\n                }\n                placeholder=\"Search fruits...\"\n                value={value}\n                onChange={this.handleChange}\n                inputRef={(el) => this.inputRef = el}\n                renderBeforeInput={<IconSearchLine inline={false} />}\n                renderAfterInput={this.renderClearButton()}\n              />\n            </Flex.Item>\n            <Flex.Item>\n              <Button\n                 color=\"primary\"\n                 margin=\"0 0 0 small\"\n                 onClick={this.handleSearch}>\n                Search\n              </Button>\n            </Flex.Item>\n          </Flex>\n        </form>\n        <View as=\"div\" padding=\"medium 0 0\">\n          {isLoading ? (\n            <Flex direction=\"column\" alignItems=\"center\" padding=\"large 0\">\n              <Spinner renderTitle=\"Loading\" />\n            </Flex>\n          ) : submittedValue.length ? results.length ? (\n            <>\n              <View as=\"div\" margin=\"0 0 small\">\n                <Text color=\"secondary\">\n                  {results.length} {results.length > 1 ? 'results ' : 'result '}\n                  for \"{submittedValue}\"\n                </Text>\n              </View>\n              {results.map(({ id, label }) => (\n                <View\n                  key={id}\n                  as=\"div\"\n                  padding=\"small\"\n                  borderWidth=\"small none none none\"\n                >\n                  {label}\n                </View>\n              ))}\n              <Alert\n                liveRegion={() => document.getElementById('flash-messages')}\n                liveRegionPoliteness=\"assertive\"\n                screenReaderOnly\n              >\n                {`${results.length} ${results.length > 1 ? 'results' : 'result '} found`}\n              </Alert>\n            </>\n          ) : (\n            <>\n              <span>No results found for \"{submittedValue}\".</span>\n              <Alert\n                liveRegion={() => document.getElementById('flash-messages')}\n                liveRegionPoliteness=\"assertive\"\n                screenReaderOnly\n              >\n                No results found\n              </Alert>\n            </>\n          ) : null }\n        </View>\n      </View>\n    )\n  }\n}\n\nrender(\n  <ActivatedSearchExample dataset={[\n    {id: '0', label: 'Apple'},\n    {id: '1', label: 'Banana'},\n    {id: '2', label: 'Cherry'},\n    {id: '3', label: 'Grape'},\n    {id: '4', label: 'Mango'},\n    {id: '5', label: 'Orange'},\n    {id: '6', label: 'Pear'},\n    {id: '7', label: 'Plum'},\n    {id: '8', label: 'Watermelon'},\n  ]} />\n)\n```\n\n#### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>\n      Use a loading spinner or other loading animation in the results area after the “Search” action has been triggered\n    </Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n### Autocomplete Results\n\nSearch performed within an autocomplete is used to populate the form field.\nIf the desired result is not found, no action is ultimately taken with this\npattern. It can be used for a single select, or a multi-select with tags. A\nsearch icon may or may not be used on the left, depending on the context. \n\n```js\n---\nrender: false\nexample: true\n---\n\nclass AutocompleteExample extends React.Component {\n  state = {\n    inputValue: '',\n    isShowingOptions: false,\n    highlightedOptionId: null,\n    selectedOptionId: null,\n    filteredOptions: this.props.dataset,\n    announcement: null\n  }\n\n  getOptionById (queryId) {\n    return this.props.dataset.find(({ id }) => id === queryId)\n  }\n\n  getOptionsChangedMessage (newOptions) {\n    let message = newOptions.length !== this.state.filteredOptions.length\n      ? `${newOptions.length} options available.` // options changed, announce new total\n      : null // options haven't changed, don't announce\n    if (message && newOptions.length > 0) {\n      // options still available\n      if (this.state.highlightedOptionId !== newOptions[0].id) {\n        // highlighted option hasn't been announced\n        const option = this.getOptionById(newOptions[0].id).label\n        message = `${option}. ${message}`\n      }\n    }\n    return message\n  }\n\n  filterOptions = (value) => {\n    return this.props.dataset.filter(option => (\n      option.label.toLowerCase().startsWith(value.toLowerCase())\n    ))\n  }\n\n  matchValue () {\n    const {\n      filteredOptions,\n      inputValue,\n      highlightedOptionId,\n      selectedOptionId\n    } = this.state\n\n    // an option matching user input exists\n    if (filteredOptions.length === 1) {\n      const onlyOption = filteredOptions[0]\n      // automatically select the matching option\n      if (onlyOption.label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: onlyOption.label,\n          selectedOptionId: onlyOption.id,\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n    // allow user to return to empty input and no selection\n    if (inputValue.length === 0) {\n      return { selectedOptionId: null }\n    }\n    // no match found, return selected option label to input\n    if (selectedOptionId) {\n      const selectedOption = this.getOptionById(selectedOptionId)\n      return { inputValue: selectedOption.label }\n    }\n    // input value is from highlighted option, not user input\n    // clear input, reset options\n    if (highlightedOptionId) {\n      if (inputValue === this.getOptionById(highlightedOptionId).label) {\n        return {\n          inputValue: '',\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n  }\n\n  handleShowOptions = (event) => {\n    this.setState(({ filteredOptions }) => ({\n      isShowingOptions: true,\n      announcement: `List expanded. ${filteredOptions.length} options available.`\n    }))\n  }\n\n  handleHideOptions = (event) => {\n    const { selectedOptionId, inputValue } = this.state\n    this.setState({\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      announcement: 'List collapsed.',\n      ...this.matchValue()\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({ highlightedOptionId: null })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const option = this.getOptionById(id)\n    if (!option) return // prevent highlighting of empty option\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? option.label : state.inputValue,\n      announcement: option.label\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    const option = this.getOptionById(id)\n    if (!option) return // prevent selecting of empty option\n    this.setState({\n      selectedOptionId: id,\n      inputValue: option.label,\n      isShowingOptions: false,\n      filteredOptions: this.props.dataset,\n      announcement: `${option.label} selected. List collapsed.`\n    })\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    const newOptions = this.filterOptions(value)\n    this.setState((state) => ({\n      inputValue: value,\n      filteredOptions: newOptions,\n      highlightedOptionId: newOptions.length > 0 ? newOptions[0].id : null,\n      isShowingOptions: true,\n      selectedOptionId: value === '' ? null : state.selectedOptionId,\n      announcement: this.getOptionsChangedMessage(newOptions)\n    }))\n  }\n\n  handleClearInput = (event) => {\n    this.setState({\n      isShowingOptions: false,\n      isLoading: false,\n      highlightedOptionId: null,\n      selectedOptionId: null,\n      selectedOptionLabel: '',\n      filteredOptions: [],\n      announcement: 'List collapsed.',\n      inputValue: ''\n    })\n  }\n\n  renderAfterInput = () => {\n    if (!this.state.inputValue.length) {\n      return null\n    }\n\n    return (\n      <IconButton\n          type=\"button\"\n          size=\"small\"\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Clear search\"\n          onClick={this.handleClearInput}>\n        <IconTroubleLine />\n      </IconButton>\n    )\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions,\n      announcement\n    } = this.state\n\n    return (\n      <View as=\"div\" padding=\"medium\">\n        <Select\n          renderLabel=\"What's your favorite fruit?\"\n          assistiveText=\"Type or use arrow keys to navigate options.\"\n          placeholder=\"Start typing to search...\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          onBlur={this.handleBlur}\n          onInputChange={this.handleInputChange}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n          renderBeforeInput={<IconSearchLine inline={false} />}\n          renderAfterInput={this.renderAfterInput()}\n        >\n          {filteredOptions.length > 0 ? filteredOptions.map((option) => {\n            return (\n              <Select.Option\n                id={option.id}\n                key={option.id}\n                isHighlighted={option.id === highlightedOptionId}\n                isSelected={option.id === selectedOptionId}\n                isDisabled={option.disabled}\n              >\n                {option.label}\n              </Select.Option>\n            )\n          }) : (\n            <Select.Option\n              id=\"empty-option\"\n              key=\"empty-option\"\n            >\n              No results found\n            </Select.Option>\n          )}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </View>\n    )\n  }\n}\n\nrender(\n  <View>\n    <AutocompleteExample dataset={[\n      {id: '0', label: 'Apple'},\n      {id: '1', label: 'Banana'},\n      {id: '2', label: 'Cherry'},\n      {id: '3', label: 'Grape'},\n      {id: '4', label: 'Mango'},\n      {id: '5', label: 'Orange'},\n      {id: '6', label: 'Pear'},\n      {id: '7', label: 'Plum'},\n      {id: '8', label: 'Watermelon'},\n    ]} />\n  </View>\n)\n```\n\n#### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>\n      Provide additional information when no results are found (e.g. \"Sorry, no matches were found”, “No results found”, “User not found”) \n    </Figure.Item>\n    <Figure.Item>\n      Use a loading spinner if autocomplete results are being retrieved asynchronously\n    </Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n### Search Input\n\nUse this reference to see how various states affect how the search input is\nrendered.\n\n\n```js\n---\nrender: false\nexample: true\n---\nclass SearchInputExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      size: 'medium',\n      value: '',\n      disabled: false,\n      readOnly: false,\n      inline: false,\n    }\n  }\n\n  handleChange = (e, value) => this.setState({ value })\n\n  handleClear = (e) => {\n    e.stopPropagation()\n    this.handleChange(e, \"\")\n    this.inputRef.focus()\n  }\n\n  toggleDisabled = (e) => this.setState(({ disabled: !this.state.disabled }))\n  toggleReadOnly = (e) => this.setState(({ readOnly: !this.state.readOnly }))\n  toggleInline = (e) => this.setState(({ inline: !this.state.inline }))\n  toggleSize = (e, value) => this.setState(({ size: value }))\n\n  renderClearButton = () => {\n    if (!this.state.value.length) return;\n    if (this.state.readOnly || this.state.disabled) return;\n\n    return (\n      <IconButton\n          type=\"button\"\n          size=\"small\"\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Clear search\"\n          disabled={this.state.disabled || this.state.readOnly}\n          onClick={this.handleClear}>\n        <IconTroubleLine />\n      </IconButton>\n    )\n  }\n\n  render () {\n    return (\n      <View as=\"div\" padding=\"medium\">\n        <View\n          display=\"block\"\n          margin=\"0 0 medium\"\n          padding=\"0 0 medium\"\n          borderWidth=\"none none small none\"\n        >\n          <TextInput\n            size={this.state.size}\n            renderLabel=\"What are you looking for?\"\n            display={this.state.inline ? 'inline-block' : null}\n            value={this.state.value}\n            onChange={this.handleChange}\n            interaction={this.state.disabled\n              ? 'disabled'\n              : this.state.readOnly ? 'readonly' : 'enabled'\n            }\n            inputRef={(el) => this.inputRef = el}\n            renderBeforeInput={<IconSearchLine inline={false} />}\n            renderAfterInput={this.renderClearButton()}\n          />\n        </View>\n        <FormFieldGroup\n          description=\"TextInput Options\"\n          layout=\"inline\"\n        >\n          <Checkbox\n            checked={this.state.disabled}\n            label=\"Disabled\"\n            onChange={this.toggleDisabled}\n          />\n          <Checkbox\n            checked={this.state.readOnly}\n            label=\"Read-Only\"\n            onChange={this.toggleReadOnly}\n          />\n          <Checkbox\n            checked={this.state.inline}\n            label=\"Inline Display\"\n            onChange={this.toggleInline}\n          />\n          <RadioInputGroup\n            layout=\"columns\"\n            name=\"size\"\n            defaultValue=\"medium\"\n            description={<ScreenReaderContent>Input size</ScreenReaderContent>}\n            onChange={this.toggleSize}\n          >\n            <RadioInput value=\"medium\" label=\"Medium\" />\n            <RadioInput value=\"large\" label=\"Large\" />\n          </RadioInputGroup>\n        </FormFieldGroup>\n      </View>\n    )\n  }\n}\n\nrender(<SearchInputExample />)\n```\n\n#### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>\n      Include an IconButton that clears the current search query\n    </Figure.Item>\n    <Figure.Item>Use the \"trouble\" icon for the clear action</Figure.Item>\n    <Figure.Item>\n      Restore focus to the search input after clearing its value\n    </Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>\n      Show the IconButton when there is no search query, or when the search\n      input is disabled or read-only\n    </Figure.Item>\n    <Figure.Item>Use the \"end\" or \"X\" icons for the clear action</Figure.Item>\n    <Figure.Item>Use a size \"small\" TextInput</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","title":"Search","category":"Patterns","id":"Search","order":"","relativePath":"docs/patterns/Search.md","extension":".md","srcPath":"docs/patterns/Search.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/patterns/Search.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/patterns/Search","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/patterns/Search.md').default","esPath":"@instructure/docs/patterns/Search"},"TimeDate":{"description":"\n### Time input\nThe easiest way to get going with a time input is to use [TimeSelect](#TimeSelect). Should you need more customizability however, you can always configure a [Select](#Select) however you see fit. See that [documentation](#Select) for more examples of configuring a Select. The following example uses [Moment.js](https://momentjs.com/docs/#/parsing/) to demonstrate how you might create a time input in your app.\n\n```js\n---\nrender: false\nexample: true\n---\n\nclass CustomTimeInput extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this._options = this.getOptions()\n\n    this.state = {\n      inputValue: '11:59 PM',\n      filteredOptions: this._options,\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      selectedOptionId: null\n    }  \n  }\n\n  _timeStep = 30\n\n  findOptionById = (queryId) => {\n    return this._options.find(({ id }) => id === queryId)\n  }\n\n  formatDateId = (date) => {\n    // ISO8601 strings may contain a space. Remove any spaces before using the\n    // date as the id.\n    const dateStr = date.toISOString()\n    return dateStr ? dateStr.replace(/\\s/g,'') : null\n  }\n\n  getOptions = () => {\n    const date = currentDateTime()\n    const options = []\n\n    for (let hour = 0; hour < 24; hour++) {\n      for (let minute = 0; minute < 60 / this._timeStep; minute++) {\n        const minutes = minute * this._timeStep\n        date.hour(hour).minute(minutes)\n        // store time options\n        options.push({\n          id: this.formatDateId(date),\n          label: formatTime(date)\n        })\n      }\n    }\n    return options\n  }\n\n  getSelectedOption = () => {\n    const { selectedOptionId } = this.state\n    return this.findOptionById(selectedOptionId)\n  }\n\n  filterOptions = (inputValue) => {\n    return this._options.filter(option => (\n      option.label.toLowerCase().startsWith(inputValue.toLowerCase())\n    ))\n  }\n\n  matchValue = () => {\n    const {\n      inputValue,\n      filteredOptions,\n      highlightedOptionId,\n      selectedOptionId\n    } = this.state\n\n    // an option matching user input exists\n    if (filteredOptions.length === 1) {\n      const onlyOption = filteredOptions[0]\n      // automatically select the matching option\n      if (onlyOption.label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: onlyOption.label,\n          selectedOptionId: onlyOption.id,\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n\n    // no match found, return selected option label to input\n    const selectedOption = this.getSelectedOption()\n\n    if (selectedOption) {\n      return { inputValue: selectedOption.label }\n    }\n    // input value is from highlighted option, not user input\n    if (highlightedOptionId) {\n      if (inputValue === this.findOptionById(highlightedOptionId).label) {\n        return {\n          inputValue: '',\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n  }\n\n  renderOptions () {\n    return this.state.filteredOptions.map((option) => {\n      const { id, label } = option\n      return (\n        <Select.Option\n          id={id}\n          key={id}\n          isHighlighted={id === this.state.highlightedOptionId}\n          isSelected={id === this.state.selectedOptionId}\n        >\n          {label}\n        </Select.Option>\n      )\n    })\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId\n    } = this.state\n\n    return (\n      <Select\n        renderLabel=\"Time\"\n        width=\"20rem\"\n        inputValue={inputValue}\n        isShowingOptions={isShowingOptions}\n        onRequestShowOptions={(event) => {\n          this.setState({ isShowingOptions: true })\n        }}\n        onRequestHideOptions={(event) => {\n          const { selectedOptionId } = this.state\n          const option = this.findOptionById(selectedOptionId)\n\n          this.setState({\n            isShowingOptions: false,\n            highlightedOptionId: null,\n            inputValue: selectedOptionId ? option.label : '',\n            filteredOptions: this.filterOptions(''),\n            ...this.matchValue()\n          })\n        }}\n        onRequestHighlightOption={(event, { id }) => {\n          const { type } = event\n          const option = this.findOptionById(id).label\n\n          this.setState((state) => ({\n            highlightedOptionId: id,\n            inputValue: type === 'keydown' ? option : state.inputValue\n          }))\n        }}\n        onRequestSelectOption={(event, { id }) => {\n          this.setState({\n            isShowingOptions: false,\n            selectedOptionId: id,\n            inputValue: this.findOptionById(id).label,\n            filteredOptions: this.filterOptions('')\n          })\n        }}\n        onInputChange={(event) => {\n          const value = event.target.value\n          const newOptions = this.filterOptions(value)\n\n          this.setState((state) => ({\n            inputValue: value,\n            filteredOptions: newOptions,\n            highlightedOptionId: newOptions.length > 0 ? newOptions[0].id : null,\n            isShowingOptions: true\n          }))\n        }}\n      >\n        {isShowingOptions && this.renderOptions()}\n      </Select>\n    )\n  }\n}\n\n// Utilities\nconst locale = 'en-us'\nconst timezone = 'America/Denver'\n\nconst parseDate = (dateStr) => {\n  return moment.tz(dateStr, [moment.ISO_8601, 'llll', 'LLLL', 'lll', 'LLL', 'll', 'LL', 'l', 'L'], locale, timezone)\n}\n\nconst currentDateTime = () => {\n  return moment().locale(locale).tz(timezone)\n}\n\nconst formatTime = (value) => {\n  const date = parseDate(value)\n  return date.format('LT')\n}\n\nrender(<CustomTimeInput width=\"20rem\" />)\n```\n\n\n### Date and time\n`TimeSelect` can also be used with [DateInput](#DateInput) to create a DateTime component. See the DateInput [documentation](#DateInput) for more information around configuring a DateInput. The following example shows how to compose the two inputs with a [FormFieldGroup](#FormFieldGroup).\n\n> __Note: this is a read only example and will not respond to interaction.__\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass CustomDateTimeInput extends React.Component {\n  render() {\n    return (\n      <FormFieldGroup\n        description=\"Pick a date and time\"\n        colSpacing=\"medium\"\n        rowSpacing=\"small\"\n        layout=\"stacked\"\n        vAlign=\"top\"\n      >\n        <DateInput\n          renderLabel=\"Date\"\n          width=\"20rem\"\n          interaction=\"readonly\"\n          renderWeekdayLabels={[]}\n        />\n        <TimeSelect\n          renderLabel=\"Time\"\n          width=\"20rem\"\n          interaction=\"readonly\"\n        />\n      </FormFieldGroup>\n    )\n  }\n}\n\nrender(<CustomDateTimeInput />)\n```\n","title":"Time and Date Input","category":"Patterns","id":"TimeDate","order":"","relativePath":"docs/patterns/TimeDate.md","extension":".md","srcPath":"docs/patterns/TimeDate.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/patterns/TimeDate.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/patterns/TimeDate","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/patterns/TimeDate.md').default","esPath":"@instructure/docs/patterns/TimeDate"},"UsingIcons":{"description":"\n## Using Icons\n\n### Accessibility\n\nBy default, the icon's `role` is set to `presentation`. However, when the `title` prop is set, the role attribute is set to `img`. Include the `description` prop to further describe the icon.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" margin=\"small\" padding=\"medium\" background=\"primary\">\n  <Text as=\"div\" size=\"large\">I <IconHeartLine color=\"error\" title=\"Love\" /> New York</Text>\n</View>\n```\n\n### Line vs Solid\n\nThe default choice for iconography is the `Line` version. However, when an icon appears on a dark or colored background, the `Solid` version should be used.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" margin=\"small\">\n  <Button margin=\"small\" renderIcon={IconEyeLine}>Preview</Button>\n  <Button color=\"primary\" margin=\"small\" renderIcon={IconEyeSolid}>Preview</Button>\n  <View margin=\"small\" display=\"inline-block\" width=\"20rem\" background=\"primary-inverse\" padding=\"small\" textAlign=\"end\">\n    <IconExpandSolid size=\"small\" />\n  </View>\n</View>\n```\n\n### Changing the Icon Size\n\nBy default, icons are set to a size of 1em, so they will scale to match the font-size of their parent element. To change the size of the icon, use one of the predefined options for the `size` prop. If you need a size that is not offered via the size prop, adjust the font-size on the icon's parent element.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" margin=\"small\" padding=\"medium\" background=\"primary\">\n  <Flex wrap=\"wrap\">\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Heading>I <IconHeartLine /> the size of my parent heading </Heading>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text>I am an <b>x-small</b> icon <IconHeartLine size=\"x-small\" /> overriding my parent font-size.</Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text>I am a <b>small</b> icon <IconHeartLine size=\"small\" /> overriding my parent font-size.</Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text>I am a <b>medium</b> icon <IconHeartLine size=\"medium\" /> overriding my parent font-size.</Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text as=\"div\">I am a <b>large</b> icon <IconHeartLine size=\"large\" /> overriding my parent font-size.</Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text>I am an <b>x-large</b> icon <IconHeartLine size=\"x-large\" /> overriding my parent font-size.</Text>\n    </Flex.Item>\n  </Flex>\n</View>\n```\n\n### Changing the Icon Color\n\nTo change the color of the icon, use one of the predefined options for the `color` prop. By default the icon inherits the color of its parent element. However, it can be changed by setting the icon to one of the theme colors via the color property.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" margin=\"small\" padding=\"medium\" background=\"primary\">\n  <Flex wrap=\"wrap\">\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text color=\"brand\">I am inheriting my parent's color <IconHeartLine /></Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text as=\"div\">My icon should be primary <IconHeartLine color=\"primary\" /></Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text as=\"div\">My icon should be secondary <IconHeartLine color=\"secondary\" /></Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text as=\"div\">My icon should be brand <IconHeartLine color=\"brand\" /></Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text as=\"div\">My icon should be success <IconHeartLine color=\"success\" /></Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text as=\"div\">My icon should be error <IconHeartLine color=\"error\" /></Text>\n    </Flex.Item>\n    <Flex.Item padding=\"small\" shouldGrow>\n      <Text as=\"div\">My icon should be warning <IconHeartLine color=\"warning\" /></Text>\n    </Flex.Item>\n  </Flex>\n</View>\n```\n","title":"Using Icons","category":"Patterns","id":"UsingIcons","order":"","relativePath":"docs/patterns/UsingIcons.md","extension":".md","srcPath":"docs/patterns/UsingIcons.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/docs/patterns/UsingIcons.md","packageName":"@instructure/docs","requirePath":"@instructure/docs/patterns/UsingIcons","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/docs/patterns/UsingIcons.md').default","esPath":"@instructure/docs/patterns/UsingIcons"},"babel-plugin-transform-imports":{"description":"\n## babel-plugin-transform-imports\n\nThis will convert any non-default imports that are referencing the package only to reference the full path to the module instead. For example:\n\n```js\n// a named member import:\nimport { Text } from '@instructure/ui-elements'\n\nwould be converted to\n\n// a named import using the full module path:\nimport { Text } from '@instructure/ui-elements/lib/Text'\n\nNote that any default imports you are currently using will not be transformed:\n\n// a default import using the full path (will not be transformed):\nimport Text from '@instructure/ui-elements/lib/Text'\n```\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA babel plugin made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/babel-plugin-transform-imports\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/babel-plugin-transform-imports.svg\n[npm-url]: https://npmjs.com/package/@instructure/babel-plugin-transform-imports\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/babel-plugin-transform-imports/README.md","extension":".md","srcPath":"packages/babel-plugin-transform-imports/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/babel-plugin-transform-imports/README.md","packageName":"@instructure/babel-plugin-transform-imports","requirePath":"@instructure/babel-plugin-transform-imports/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/babel-plugin-transform-imports/README.md').default","esPath":"@instructure/babel-plugin-transform-imports/README","id":"babel-plugin-transform-imports","title":"babel-plugin-transform-imports"},"browserslist-config-instui":{"description":"\n## browserslist-config-instui\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA shared browserslist config made to work with the Instructure UI components and libraries.\n\n### Installation\n\n```sh\nyarn add @instructure/browserslist-config-instui\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/browserslist-config-instui.svg\n[npm-url]: https://npmjs.com/package/@instructure/browserslist-config-instui\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/browserslist-config-instui/README.md","extension":".md","srcPath":"packages/browserslist-config-instui/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/browserslist-config-instui/README.md","packageName":"@instructure/browserslist-config-instui","requirePath":"@instructure/browserslist-config-instui/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/browserslist-config-instui/README.md').default","esPath":"@instructure/browserslist-config-instui/README","id":"browserslist-config-instui","title":"browserslist-config-instui"},"command-utils":{"description":"\n## command-utils\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA Node CLI utility made by Instructure, Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/command-utils\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/command-utils.svg\n[npm-url]: https://npmjs.com/package/@instructure/command-utils\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/command-utils/README.md","extension":".md","srcPath":"packages/command-utils/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/command-utils/README.md","packageName":"@instructure/command-utils","requirePath":"@instructure/command-utils/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/command-utils/README.md').default","esPath":"@instructure/command-utils/README","id":"command-utils","title":"command-utils"},"config-loader":{"description":"\n## config-loader\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA library to find and load config resource files in JSON (something.json or .somethingrc) or JS (somethingrc.js or something.config.js) or config data from package.json files.\n\n### Installation\n\n```sh\nyarn add --dev @instructure/config-loader\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/config-loader.svg\n[npm-url]: https://npmjs.com/package/@instructure/config-loader\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/config-loader/README.md","extension":".md","srcPath":"packages/config-loader/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/config-loader/README.md","packageName":"@instructure/config-loader","requirePath":"@instructure/config-loader/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/config-loader/README.md').default","esPath":"@instructure/config-loader/README","id":"config-loader","title":"config-loader"},"console":{"description":"\n## console\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA small wrapper for console methods and a babel macro to mark them as pure functions\nso that they can be removed from production bundles.\n\n### Installation\n\n```sh\nyarn add @instructure/console\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/console.svg\n[npm-url]: https://npmjs.com/package/@instructure/console\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/console/README.md","extension":".md","srcPath":"packages/console/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/console/README.md","packageName":"@instructure/console","requirePath":"@instructure/console/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/console/README.md').default","esPath":"@instructure/console/README","id":"console","title":"console"},"cz-lerna-changelog":{"description":"\n## cz-lerna-changelog\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nPrompts for conventional changelog standard in a lerna environment.\n\n### Installation\n\n```sh\nyarn add @instructure/cz-lerna-changelog\n```\n\nAdd the following to your package.json file:\n\n```json\n\"config\": {\n  \"commitizen\": {\n    \"path\": \"./node_modules/@instructure/cz-lerna-changelog\"\n  }\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/cz-lerna-changelog.svg\n[npm-url]: https://npmjs.com/package/@instructure/cz-lerna-changelog\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/cz-lerna-changelog/README.md","extension":".md","srcPath":"packages/cz-lerna-changelog/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/cz-lerna-changelog/README.md","packageName":"@instructure/cz-lerna-changelog","requirePath":"@instructure/cz-lerna-changelog/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/cz-lerna-changelog/README.md').default","esPath":"@instructure/cz-lerna-changelog/README","id":"cz-lerna-changelog","title":"cz-lerna-changelog"},"debounce_README":{"description":"\n## debounce\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA debounce utility based on [lodash.debounce](https://www.npmjs.com/package/lodash.debounce).\n\n### Installation\n\n```sh\nyarn add @instructure/debounce\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/debounce.svg\n[npm-url]: https://npmjs.com/package/@instructure/debounce\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","id":"debounce_README","title":"debounce","order":"","relativePath":"packages/debounce/README.md","extension":".md","srcPath":"packages/debounce/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/debounce/README.md","packageName":"@instructure/debounce","requirePath":"@instructure/debounce/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/debounce/README.md').default","esPath":"@instructure/debounce/README"},"emotion":{"description":"\n## emotion\n\nThe [Emotion design library's](https://emotion.sh/) implementation in Instructure UI.\n\nWith this framework, each UI component can be used in isolation and support multiple themes, including dynamic themes provided at runtime, while still working within a system of components that use a shared global theme.\n\n### Motivation\n\n1. Two-tiered theme variable system: system-wide variables + component level variables. With this variable system, components can be themed, tested, and rendered in isolation from the rest of the system, and we can mitigate issues that may arise with system-wide theme updates.\n\n2. Runtime theme application and definition: to apply user/account level themes without using the CSS cascade.\n\n3. Prevent CSS Cascade bugs: All components should specify variants via props or component level theme variables only (no className or style overrides) with a clear API and should not rely on any external styles.\n\n4. Theme variables should be accessible in JS.\n\n5. All component styles should be scoped to the component.\n\n6. Pre-render/server-side render support (inline critical CSS).\n\n7. Use a popular, well maintained and broadly adopted JS design and theming library that supports runtime theme switching ([Emotion](https://emotion.sh/)).\n\n### Installation\n\n```sh\nyarn add @instructure/emotion\n```\n\n### Usage\n\nMake a component themeable with the [withStyle](#withStyle) decorator. It adds a `makeStyles` function and the generated `styles` object to the decorated Component's props.\n\nImport the style generator (`generateStyle`) from `styles.js` and the component theme generator (`generateComponentTheme`) from `theme.js`, and pass them to the decorator.\n\nCall the `makeStyles` method (available on `this.props`) in the `componentDidMount` and `componentDidUpdate` lifecycle methods to generate the styles object and to keep it properly recalculated on every change.\n\nIn the `render` method, use emotion's `css={this.props.styles.componentName}` syntax to add styles.\n\n```jsx\n// Button/index.js\n\n/** @jsx jsx */\nimport { withStyle, jsx } from '@instructure/emotion'\nimport generateStyle from './styles'\nimport generateComponentTheme from './theme'\n\n@withStyle(generateStyle, generateComponentTheme)\nclass Button extends React.Component {\n  static propTypes = {\n    // eslint-disable-next-line react/require-default-props\n    makeStyles: PropTypes.func,\n    // eslint-disable-next-line react/require-default-props\n    styles: PropTypes.object\n  }\n\n  componentDidMount() {\n    this.props.makeStyles()\n  }\n\n  componentDidUpdate() {\n    this.props.makeStyles()\n  }\n\n  render() {\n    const { propVal1, styles, ...props } = this.props\n\n    return (\n      <button css={styles.button}>\n        <svg css={styles.icon}>...</svg>\n        ...\n      </button>\n    )\n  }\n}\n\nexport { Button }\nexport default Button\n```\n\nThemeable components inject their themed styles into the document when they are mounted.\n\nA themeable component’s theme can be configured by wrapping it in an [EmotionThemeProvider](#EmotionThemeProvider) component, and/or set explicitly via its `themeOverride` prop (see [withStyle](#withStyle/#applying-themes) documentation).\n\n#### EmotionThemeProvider\n\n`EmotionThemeProvider` is a React component, which wraps Emotion's own `ThemeProvider`.\n\nIt accepts a `theme` prop, which should be an Instructure UI theme.\n\nIt can be used in two ways. On the top level, you can provide the theme for the whole application or nested anywhere inside it. You can also provide an object with theme or component theme overrides.\n\n**For detailed usage info and examples, see the [EmotionThemeProvider](#EmotionThemeProvider) documentation page.**\n\n```jsx\nimport Button from './Button'\nimport { EmotionThemeProvider } from '@instructure/emotion'\nimport { canvasHighContrast } from '@instructure/ui-themes'\n\nconst RenderApp = () => {\n  return (\n    <EmotionThemeProvider theme={canvasHighContrast}>\n      <Button />\n    </EmotionThemeProvider>\n  )\n}\n```\n\n### Defining variables\n\nThe themeable component uses the JS variables defined in the `theme.js` file.\n\nFor example, to add a variable for the hover state of a Button component, the theme.js file might contain the following:\n\n```js\n// Button/theme.js\nconst generateComponentTheme = (theme) => {\n  const { colors } = theme\n\n  const componentVariables = {\n    background: colors?.backgroundMedium,\n    color: colors?.textDarkest,\n\n    hoverColor: colors?.textLightest,\n    hoverBackground: colors?.backgroundDarkest\n  }\n\n  return componentVariables\n}\nexport default generateComponentTheme\n```\n\nThe arguments to the generator function are the [global theme variables](#canvas). In the above example, we've defined the default theme for the Button component.\n\nThe purpose of the generator function is to take the global variables and apply them as values to the functional component level variables.\nWhen coming up with names for the component level variables, try to make them describe how they are used in the component (vs describing the variable value).\n\n### Supporting multiple themes\n\nIf we want to make the Button transform the global theme variables differently with another theme, (e.g. [canvas-high-contrast](#canvas-high-contrast)) we can make specific styling for that theme:\n\n```js\n// Button/theme.js\nconst generateComponentTheme = (theme) => {\n  const { colors, key: themeName } = theme\n\n  const themeSpecificStyle = {\n    'canvas-high-contrast': {\n      background: colors.backgroundLightest\n    }\n  }\n\n  const componentVariables = {\n    background: colors?.backgroundMedium,\n    color: colors?.textDarkest,\n\n    hoverColor: colors?.textLightest,\n    hoverBackground: colors?.backgroundDarkest\n  }\n\n  return {\n    ...componentVariables,\n    ...themeSpecificStyle[themeName]\n  }\n}\nexport default generateComponentTheme\n```\n\nThis will override the default Button theme and use the global theme variable `colors.textLightest` for the value of its `background` theme variable instead of `colors.tiara`.\n\nThe rest of the variables will pick up from the default Button theme generator (applying the global theme variables from the `canvas-high-contrast` theme).\n\n### Using theme variables in styles.js\n\nIn the `styles.js` file, the `generateStyle` method receives the theme variable object (`componentTheme`) generated by `theme.js`.\n\nAdd your styling for each element in the component, and give them [labels](https://emotion.sh/docs/labels#gatsby-focus-wrapper) for easy readability and targetability. _Naming convention_: similar to [BEM naming convention](#http://getbem.com/naming/), use the name of the component in camelCase for the root element ('button'), and the double underscore suffix for children ('button\\_\\_icon').\n\nUse [Emotion's Object Styles documentation](https://emotion.sh/docs/object-styles) as a guide to add styles.\n\nNote: Don't worry about scoping your CSS variables (the [emotion](#emotion) library will take care of that for you):\n\n```js\n// Button/styles.js\nconst generateStyle = (componentTheme, props, state) => {\n  return {\n    button: {\n      label: 'button',\n      background: componentTheme.background,\n      color: componentTheme.color,\n\n      '&:hover': {\n        background: componentTheme.hoverBackground,\n        color: componentTheme.hoverColor\n      }\n    },\n    icon: {\n      label: 'button__icon',\n      display: 'inline-block',\n      fill: 'currentColor'\n    }\n  }\n}\nexport default generateStyle\n```\n\nThe `generateStyle` method also automatically receives all the props of the component, so you can add styling based on them:\n\n```js\n// Button/styles.js\nconst generateStyle = (componentTheme, props, state) => {\n  const { display, isDisabled } = props\n\n  const displayVariants = {\n    inline: {\n      display: 'inline-block'\n    },\n    block: {\n      display: 'block',\n      margin: 0\n    },\n    none: {\n      display: 'none'\n    }\n  }\n\n  return {\n    button: {\n      label: 'button',\n      // ...\n      ...(isDisabled && { opacity: 0.5 }),\n      ...displayVariants[display]\n    }\n    // ...\n  }\n}\nexport default generateStyle\n```\n\nYou can also pass additional variables from the component via the `makeStyles` prop. These can be values from the state or from getters, etc.\n\nNote: don't forget to pass them both in `componentDidMount` and `componentDidUpdate` methods!\n\n```js\n// Button/index.js\nclass Button extends React.Component {\n  static propTypes = {\n    // eslint-disable-next-line react/require-default-props\n    makeStyles: PropTypes.func,\n    // eslint-disable-next-line react/require-default-props\n    styles: PropTypes.object\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      focused: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.makeStyles({\n      focused: this.state.focused,\n      someValue: this.someValue\n    })\n  }\n\n  componentDidUpdate() {\n    this.props.makeStyles({\n      focused: this.state.focused,\n      someValue: this.someValue\n    })\n  }\n\n  get someValue() {\n    return 'some value here'\n  }\n\n  render() {\n    // ...\n  }\n}\n\n// Button/styles.js\nconst generateStyle = (componentTheme, props, state) => {\n  const { focused, someValue } = state\n\n  return {\n    button: {\n      label: 'button',\n      // ...\n      ...(someValue === 'not that value' && { display: 'none' }),\n      ...(focused && {\n        borderWidth: '2px',\n        ...(someValue === 'not that value' && { display: 'block' })\n      })\n    }\n    // ...\n  }\n}\nexport default generateStyle\n```\n\n### Using theme variables in JavaScript\n\nSince the variables are defined in JS you can easily pass them through `styles.js` to access in your component JS.\n\n```js\n// Button/styles.js\nconst generateStyle = (componentTheme, props, state) => {\n  return {\n    button: {\n      label: 'button'\n      // ...\n    },\n    maxWidth: componentTheme.maxWidth\n  }\n}\n\n// Button/index.js\nrender() {\n  const { propVal1, styles, ...props } = this.props\n\n  return (\n    <div maxWidth={styles.maxWidth}>\n      ...\n    </div>\n  )\n}\n```\n\n#### Global styles\n\nWrite your global styles in the `styles.js` file on a \"globalStyles\" key. You don't have to add labels to global styles.\n\n```js\n// styles.js\n\nreturn {\n  globalStyles: {\n    '.CodeMirror': {\n      height: 'auto',\n      background: componentTheme.background\n      // ...\n    }\n  }\n}\n```\n\nIn the `index.js`, import `Global` from `@instructure/emotion`, which is equivalent to the [Global](https://emotion.sh/docs/globals) component of Emotion.js.\n\nIn the render method, use the `<Global>` component and pass the the \"globalStyles\" as its `styles={}` property.\n\n```jsx\n// index.js\n\nimport { withStyle, jsx, Global } from '@instructure/emotion'\n\n// ...\n\nrender() {\n  const { styles } = this.props\n\n  return (\n    <div css={styles.codeEditor}>\n      <Global styles={styles.globalStyles} />\n      // ...\n    </div>\n  )\n}\n```\n\n#### Keyframes\n\nAnimations are handled with Emotion's [keyframes](https://emotion.sh/docs/keyframes) helper.\n\nImport `keyframes` from `@instructure/emotion` in the `styles.js` file.\n\nDefine the animation on the top of the page as a `const` and use it in your style object where needed. **Make sure that it is defined outside of the `generateStyle` method, otherwise it is causing problems with style recalculation.**\n\n```js\n// styles.js\n\nimport { keyframes } from '@instructure/emotion'\n\nconst pulseAnimation = keyframes`\n  to {\n    transform: scale(1);\n    opacity: 0.9;\n  }`\n\nconst generateStyle = (componentTheme, props, state) => {\n  // ...\n\n  return {\n    componentClass: {\n      // ...\n      animationName: pulseAnimation\n    }\n  }\n}\n```\n\n#### Writing theme tests\n\nFor components with theme tests, you can use `generateComponentTheme` from `theme.js` to get the theme variables.\n\nImport the themes needed for your test, and pass them to the generator.\n\n```js\nimport { canvas, canvasHighContrast } from '@instructure/ui-themes'\nimport generateComponentTheme from '../theme'\n\ndescribe('YourComponent.theme', () => {\n  describe('with canvas theme', () => {\n    const variables = generateComponentTheme(canvas)\n\n    describe('default', () => {\n      it('should ensure background color and text color meet 3:1 contrast', () => {\n        expect(contrast(variables.background, variables.color)).to.be.above(3)\n      })\n    })\n  })\n  describe('with the \"canvas-high-contrast\" theme', () => {\n    const variables = generateComponentTheme(canvasHighContrast)\n\n    describe('default', () => {\n      it('should ensure background color and text color meet 4.5:1 contrast', () => {\n        expect(contrast(variables.background, variables.color)).to.be.above(4.5)\n      })\n    })\n  })\n})\n```\n\n[![npm][npm]][npm-url]\n\n[![build-status][build-status]][build-status-url]\n\n[![MIT License][license-badge]][license]\n\n[![Code of Conduct][coc-badge]][coc]\n\nA UI component library made by Instructure Inc.\n\n### Installation\n\n```sh\n\nyarn add @instructure/emotion\n\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/emotion.svg\n[npm-url]: https://npmjs.com/package/@instructure/emotion\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/emotion/README.md","extension":".md","srcPath":"packages/emotion/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/emotion/README.md","packageName":"@instructure/emotion","requirePath":"@instructure/emotion/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/emotion/README.md').default","esPath":"@instructure/emotion/README","id":"emotion","title":"emotion"},"eslint-plugin-instructure-ui":{"description":"\n## eslint-plugin-instructure-ui\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nAn eslint configuration for Instructure UI.\n\n### Installation\n\nInstall eslint\n\n```sh\nyarn add eslint --dev\n```\n\n```sh\nyarn add eslint-plugin-instructure-ui --dev\n```\n\n### Configuration\n\nUse our preset to get reasonable defaults:\n\n```json\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:instructure-ui/recommended\"\n  ]\n```\n\nIf you do not use a preset you will need to specify individual rules and add extra configuration.\n\nAdd \"instructure-ui\" to the plugins section.\n\n```json\n{\n  \"plugins\": [\n    \"instructure-ui\"\n  ]\n}\n```\n\nEnable the rules that you would like to use.\n\n```json\n  \"rules\": {\n    \"inst/no-relative-package-imports\": \"error\"\n  }\n```\n\n[npm]: https://img.shields.io/npm/v/eslint-plugin-instructure-ui.svg\n[npm-url]: https://npmjs.com/package/eslint-plugin-instructure-ui\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/eslint-plugin-instructure-ui/README.md","extension":".md","srcPath":"packages/eslint-plugin-instructure-ui/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/eslint-plugin-instructure-ui/README.md","packageName":"@instructure/eslint-plugin-instructure-ui","requirePath":"@instructure/eslint-plugin-instructure-ui/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/eslint-plugin-instructure-ui/README.md').default","esPath":"@instructure/eslint-plugin-instructure-ui/README","id":"eslint-plugin-instructure-ui","title":"eslint-plugin-instructure-ui"},"instui-cli":{"description":"\n## instui-cli\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA cli for working with Instructure UI packages.\n\n#### Using npx\n\n```bash\n$ npx @instructure/instui-cli create app --name MyInstuiApp\n```\n\n#### Globally installing `instui-cli` with `yarn` or `npm`\n\n```bash\n$ yarn global add @instructure/instui-cli\n```\n\nor\n\n```bash\n$ npm install -g @instructure/instui-cli\n```\n\nYou now have access to `instui` commands\n\n```bash\ninstui create app --name MyInstuiApp\n```\n\n### Available commands\n\n- **create app** | Create a starter app with all Instructure UI presets configured (webpack, babel, etc). Similar to create react app.\n- **create component** | Create an Instructure UI component.\n- **create package** | Create an Instructure UI package.\n- **upgrade** | Upgrades instructure-ui in a designated repository to the latest stable version including upgrading packages and applying codemods.\n- **upgrade-packages** | Upgrade instructure-ui packages to the latest stable version.\n- **codemod** | Apply instructure-ui codemods to source at a specified path.\n- **codemod-v8** | Apply instructure-ui v8 codemods to source at a specified path.\n\n### Documentation\n\nFor more documentation on available options and parameters for individual commands do:\n\n```sh\ninstui <command> --help\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/instui-cli.svg\n[npm-url]: https://npmjs.com/package/@instructure/instui-cli\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/instui-cli/README.md","extension":".md","srcPath":"packages/instui-cli/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/instui-cli/README.md","packageName":"@instructure/instui-cli","requirePath":"@instructure/instui-cli/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/instui-cli/README.md').default","esPath":"@instructure/instui-cli/README","id":"instui-cli","title":"instui-cli"},"instui-config":{"description":"\n## instui-config\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA package containing Instructure UI specific configuration data for operations\nsuch as upgrades and codemod scripts.\n\n### Installation\n\n```sh\nyarn add @instructure/instui-config\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/instui-config.svg\n[npm-url]: https://npmjs.com/package/@instructure/instui-config\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/instui-config/README.md","extension":".md","srcPath":"packages/instui-config/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/instui-config/README.md","packageName":"@instructure/instui-config","requirePath":"@instructure/instui-config/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/instui-config/README.md').default","esPath":"@instructure/instui-config/README","id":"instui-config","title":"instui-config"},"pkg-utils":{"description":"\n## pkg-utils\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nUtilities for managing node packages in a mono-repo using yarn workspaces.\n\n### Installation\n\n```sh\nyarn add @instructure/pkg-utils\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/pkg-utils.svg\n[npm-url]: https://npmjs.com/package/@instructure/pkg-utils\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/pkg-utils/README.md","extension":".md","srcPath":"packages/pkg-utils/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/pkg-utils/README.md","packageName":"@instructure/pkg-utils","requirePath":"@instructure/pkg-utils/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/pkg-utils/README.md').default","esPath":"@instructure/pkg-utils/README","id":"pkg-utils","title":"pkg-utils"},"ui":{"description":"\n## ui\n\n[![npm][npm]][npm-url]\n[![build-status][build-status]][build-status-url]\n[![MIT License][license-badge]][license]\n[![Code of Conduct][coc-badge]][coc]\n\nA meta package exporting all UI components made by Instructure Inc.\n\n### Components\n\nThe `ui` package contains the following:\n\n- AccessibleContent\n- Alert\n- All ui-icons\n- ApplyLocale\n- ApplyTextDirection\n- AppNav\n- Avatar\n- Badge\n- Billboard\n- Breadcrumb\n- Button\n- Byline\n- Calendar\n- Checkbox\n- CheckboxGroup\n- CloseButton\n- CodeEditor\n- CondensedButton\n- ContextView\n- DateInput\n- Dialog\n- DrawerLayout\n- Editable\n- FileDrop\n- Flex\n- Focusable\n- FormField\n- FormFieldGroup\n- FormFieldLabel\n- FormFieldLayout\n- FormFieldMessage\n- FormFieldMessages\n- Grid\n- Heading\n- IconButton\n- Img\n- InlineList\n- InlineSVG\n- InPlaceEdit\n- Link\n- List\n- Mask\n- Menu\n- Metric\n- MetricGroup\n- Modal\n- Navigation\n- NumberInput\n- Options\n- Overlay\n- Pages\n- Pagination\n- Pill\n- Popover\n- Portal\n- Position\n- PresentationContent\n- ProgressBar\n- ProgressCircle\n- RadioInput\n- RadioInputGroup\n- RangeInput\n- Rating\n- Responsive\n- ScreenReaderContent\n- Select\n- Selectable\n- Spinner\n- SVGIcon\n- Tab\n- Table\n- Tag\n- Text\n- TextArea\n- TextInput\n- TimeSelect\n- ToggleButton\n- ToggleDetails\n- ToggleGroup\n- Tooltip\n- Transition\n- Tray\n- TreeBrowser\n- TruncateText\n- View\n\n### Installation\n\n```sh\nyarn add @instructure/ui\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui/README.md","extension":".md","srcPath":"packages/ui/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui/README.md","packageName":"@instructure/ui","requirePath":"@instructure/ui/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui/README.md').default","esPath":"@instructure/ui/README","id":"ui","title":"ui"},"ui-a11y-content":{"description":"\n## ui-a11y-content\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nUtility components that help provide a good experience for users who navigate the web with a screen reader or keyboard.\n\n### Components\nThe `ui-a11y-content` package contains the following components:\n- [AccessibleContent](#AccessibleContent)\n- [PresentationContent](#PresentationContent)\n- [ScreenReaderContent](#ScreenReaderContent)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-a11y-content\n```\n\n### Usage\n``` jsx\n---\nexample: false\n---\n<AccessibleContent\n  alt=\"Alternative text for a screen reader only\"\n>\n  <Text>\n    Presentational content goes here\n  </Text>\n</AccessibleContent>\n```\n\n``` jsx\n---\nexample: false\n---\n<PresentationContent>\n  <Text>\n    Presentational content here\n  </Text>\n</PresentationContent>\n```\n\n``` jsx\n---\nexample: false\n---\n<ScreenReaderContent>\n  This content is not visible.\n</ScreenReaderContent>\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-a11y-content.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-a11y-content\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-a11y-content/README.md","extension":".md","srcPath":"packages/ui-a11y-content/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-content/README.md","packageName":"@instructure/ui-a11y-content","requirePath":"@instructure/ui-a11y-content/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-content/README.md').default","esPath":"@instructure/ui-a11y-content/README","id":"ui-a11y-content","title":"ui-a11y-content"},"ui-a11y-utils":{"description":"\n## ui-a11y-utils\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA collection of utilities for managing focus and screen reader behavior\n\n### Utilities\nThe `ui-a11y-utils` package contains the following utilities:\n- [FocusRegion](#FocusRegion)\n- [KeyboardFocusRegion](#KeyboardFocusRegion)\n- [ScreenReaderFocusRegion](#ScreenReaderFocusRegion)\n- [FocusRegionManager](#FocusRegionManager)\n- [scopeTab](#scopeTab)\n- [hasVisibleChildren](#hasVisibleChildren)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-a11y-utils\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-a11y-utils.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-a11y-utils\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-a11y-utils/README.md","extension":".md","srcPath":"packages/ui-a11y-utils/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-utils/README.md","packageName":"@instructure/ui-a11y-utils","requirePath":"@instructure/ui-a11y-utils/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-utils/README.md').default","esPath":"@instructure/ui-a11y-utils/README","id":"ui-a11y-utils","title":"ui-a11y-utils"},"ui-alerts":{"description":"\n## ui-alerts\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nAn alert component.\n\n### Components\nThe `ui-alerts` package contains the following:\n- [Alert](#Alert)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-alerts\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Alert } from '@instructure/ui-alerts'\n\nconst MyAlert = function () {\n  return (\n    <Alert>Hello alert</Alert>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-alerts.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-alerts\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-alerts/README.md","extension":".md","srcPath":"packages/ui-alerts/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-alerts/README.md","packageName":"@instructure/ui-alerts","requirePath":"@instructure/ui-alerts/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-alerts/README.md').default","esPath":"@instructure/ui-alerts/README","id":"ui-alerts","title":"ui-alerts"},"ui-avatar":{"description":"\n## ui-avatar\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nAn image or letters that represents a user.\n\n\n\n### Components\nThe `ui-avatar` package contains the following:\n- [Avatar](#Avatar)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-avatar\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Avatar } from '@instructure/ui-avatar'\n\nconst MyAvatar = () => {\n  return (\n    <Avatar\n      name=\"Kyle Montgomery\"\n      src={avatarSquare}\n      shape=\"rectangle\"\n      margin=\"0 small 0 0\"\n    />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-avatar.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-avatar\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-avatar/README.md","extension":".md","srcPath":"packages/ui-avatar/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-avatar/README.md","packageName":"@instructure/ui-avatar","requirePath":"@instructure/ui-avatar/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-avatar/README.md').default","esPath":"@instructure/ui-avatar/README","id":"ui-avatar","title":"ui-avatar"},"ui-axe-check":{"description":"\n## ui-axe-check\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA wrapper around the [axe-core](https://axe-core.org/) accessibility testing tool.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-axe-check\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-axe-check.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-axe-check\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-axe-check/README.md","extension":".md","srcPath":"packages/ui-axe-check/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-axe-check/README.md","packageName":"@instructure/ui-axe-check","requirePath":"@instructure/ui-axe-check/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-axe-check/README.md').default","esPath":"@instructure/ui-axe-check/README","id":"ui-axe-check","title":"ui-axe-check"},"ui-babel-preset":{"description":"\n## ui-babel-preset\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA UI component library made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-babel-preset\n```\n\n### Usage\n\nIn your .babelrc file:\n\n```json\n{\n  \"presets\": [\"@instructure/ui-babel-preset\"]\n}\n```\n\nTo pass in more options, you can make your own preset:\n\n```js\n/* babelrc.js */\nmodule.exports = {\n  presets: [[ require('@instructure/ui-babel-preset'), {\n    coverage: true,\n    esModules: true,\n    removeConsole: false,\n    transformImports: false\n  }]]\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-babel-preset.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-babel-preset\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-babel-preset/README.md","extension":".md","srcPath":"packages/ui-babel-preset/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-babel-preset/README.md","packageName":"@instructure/ui-babel-preset","requirePath":"@instructure/ui-babel-preset/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-babel-preset/README.md').default","esPath":"@instructure/ui-babel-preset/README","id":"ui-babel-preset","title":"ui-babel-preset"},"ui-badge":{"description":"\n## ui-badge\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA badge component.\n\n### Components\nThe `ui-badge` package contains the following:\n- [Badge](#Badge)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-badge\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Badge } from '@instructure/ui-badge'\n\nconst MyBadge = () => {\n  return (\n    <Badge count={99}>\n      <Button>Edits</Button>\n    </Badge>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-badge.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-badge\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-badge/README.md","extension":".md","srcPath":"packages/ui-badge/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-badge/README.md","packageName":"@instructure/ui-badge","requirePath":"@instructure/ui-badge/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-badge/README.md').default","esPath":"@instructure/ui-badge/README","id":"ui-badge","title":"ui-badge"},"ui-billboard":{"description":"\n## ui-billboard\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA billboard component for empty states, 404 pages, redirects, etc.\n\n\n### Components\nThe `ui-billboard` package contains the following:\n- [Billboard](#Billboard)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-billboard\n```\n\n### Usage\n\n```js\n---\nexample: false\n---\nimport React from 'react'\nimport { Billboard } from '@instructure/ui-billboard'\n\nconst MyBillboard = () => {\n  return (\n    <Billboard\n      size=\"medium\"\n      heading=\"Well, this is awkward.\"\n      message=\"Think there should be something here?\"\n      hero={<Img src={placeholderImage(900, 500)} />} />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-billboard.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-billboard\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-billboard/README.md","extension":".md","srcPath":"packages/ui-billboard/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-billboard/README.md","packageName":"@instructure/ui-billboard","requirePath":"@instructure/ui-billboard/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-billboard/README.md').default","esPath":"@instructure/ui-billboard/README","id":"ui-billboard","title":"ui-billboard"},"ui-breadcrumb":{"description":"\n## ui-breadcrumb\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA breadcrumb component.\n\n### Components\nThe `ui-breadcrumb` package contains the following:\n- [Breadcrumb](#Breadcrumb)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-breadcrumb\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Breadcrumb } from '@instructure/ui-breadcrumb'\n\nconst MyBreadcrumb = () => {\n  return (\n    <Breadcrumb label=\"You are here\">\n      <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">Course A</Breadcrumb.Link>\n      <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">Modules</Breadcrumb.Link>\n      <Breadcrumb.Link>A Great Module</Breadcrumb.Link>\n    </Breadcrumb>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-breadcrumb.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-breadcrumb\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-breadcrumb/README.md","extension":".md","srcPath":"packages/ui-breadcrumb/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-breadcrumb/README.md","packageName":"@instructure/ui-breadcrumb","requirePath":"@instructure/ui-breadcrumb/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-breadcrumb/README.md').default","esPath":"@instructure/ui-breadcrumb/README","id":"ui-breadcrumb","title":"ui-breadcrumb"},"ui-buttons":{"description":"\n## ui-buttons\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nAccessible button components.\n\n### Components\nThe `ui-buttons` package contains the following:\n- [Button](#Button)\n- [CloseButton](#CloseButton)\n- [CondensedButton](#CondensedButton)\n- [IconButton](#IconButton)\n- [ToggleButton](#ToggleButton)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-buttons\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Button } from '@instructure/ui-buttons'\n\nconst MyButton = function () {\n  return (\n    <Button>Hello button</Button>\n  )\n}\n```\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-buttons.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-buttons\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-buttons/README.md","extension":".md","srcPath":"packages/ui-buttons/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/README.md","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/README.md').default","esPath":"@instructure/ui-buttons/README","id":"ui-buttons","title":"ui-buttons"},"ui-byline":{"description":"\n## ui-byline\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA byline component.\n\n### Components\n\nThe `ui-byline` package contains the following:\n\n- [Byline](#Byline)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-byline\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Byline } from '@instructure/ui-byline'\n\nconst MyByline = () => {\n  return (\n    <Byline description={lorem.sentence()}>\n      <Avatar name=\"Julia Childer\" />\n    </Byline>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-byline.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-byline\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-byline/README.md","extension":".md","srcPath":"packages/ui-byline/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-byline/README.md","packageName":"@instructure/ui-byline","requirePath":"@instructure/ui-byline/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-byline/README.md').default","esPath":"@instructure/ui-byline/README","id":"ui-byline","title":"ui-byline"},"ui-calendar":{"description":"\n## ui-calendar\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA calendar component\n\n### Components\nThe `ui-calendar` package contains the following:\n- [Calendar](#Calendar)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-calendar\n```\n\n### Usage\nFor detailed usage and documentation, see [Calendar](#Calendar).\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-calendar.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-calendar\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-calendar/README.md","extension":".md","srcPath":"packages/ui-calendar/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-calendar/README.md","packageName":"@instructure/ui-calendar","requirePath":"@instructure/ui-calendar/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-calendar/README.md').default","esPath":"@instructure/ui-calendar/README","id":"ui-calendar","title":"ui-calendar"},"ui-checkbox":{"description":"\n## ui-checkbox\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA styled HTML input type=\"checkbox\" component.\n\n### Components\nThe `ui-checkbox` package contains the following:\n- [Checkbox](#Checkbox)\n- [CheckboxGroup](#CheckboxGroup)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-checkbox\n```\n\n### Usage\n```js\nimport React from 'react'\nimport { Checkbox } from '@instructure/ui-checkbox'\n\nconst MyCheckbox = () => {\n  return (\n     <Checkbox label=\"Turn on Features for all Participants\" value=\"on\" />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-checkbox.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-checkbox\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-checkbox/README.md","extension":".md","srcPath":"packages/ui-checkbox/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-checkbox/README.md","packageName":"@instructure/ui-checkbox","requirePath":"@instructure/ui-checkbox/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-checkbox/README.md').default","esPath":"@instructure/ui-checkbox/README","id":"ui-checkbox","title":"ui-checkbox"},"ui-code-editor":{"description":"\n## ui-code-editor\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA code editor component.\n\n### Components\nThe `ui-code-editor` package contains the following:\n- [CodeEditor](#CodeEditor)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-code-editor\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { CodeEditor } from '@instructure/ui-code-editor'\n\nconst MyCodeEditor = () => {\n  return (\n    <CodeEditor\n      label='code editor'\n      defaultValue='{\"foo\": \"bar\"}'\n      language='javascript'\n      readOnly\n    />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-code-editor.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-code-editor\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-code-editor/README.md","extension":".md","srcPath":"packages/ui-code-editor/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-code-editor/README.md","packageName":"@instructure/ui-code-editor","requirePath":"@instructure/ui-code-editor/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-code-editor/README.md').default","esPath":"@instructure/ui-code-editor/README","id":"ui-code-editor","title":"ui-code-editor"},"ui-codemods":{"description":"\n## ui-codemods\n\nThe ui-codemods should make it easier to deal with API changes when upgrading Instructure UI libraries.\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Installation\n\nThe codemod scripts can be installed via the following command:\n```sh\nyarn add @instructure/ui-codemods\n```\n\nThe configuration files are located in the [instui-config](#instui-config) package.\nThis can be installed via the following command:\n```sh\nyarn add @instructure/instui-config\n```\n\n### Executing Codemods Using instui-cli\n\nAll available codemods can also be executed using the [instui-cli](#instui-cli) `instui codemod` command. See [instui-cli](#instui-cli) for more detailed documentation.\n\n### Updating Deprecated Props\n\nThis codemod helps you update your project by renaming `props` that have had names changed (e.g., `onReady` => `onOpen`).\n\n```sh\njscodeshift -t node_modules/@instructure/ui-codemods/lib/updatePropNames.js <path> --config=node_modules/@instructure/instui-config/codemod-configs/v<version number ex. 5 or 6>/propNames.config.json\n```\n\n### Updating Package Imports\n\nThis codemod helps you update your project by renaming `imports` that have changed (e.g., `instructure-ui` => `@instructure/<package name>`).\n\n```sh\njscodeshift -t node_modules/@instructure/ui-codemods/lib/updateImports.js <path> --config=node_modules/@instructure/instui-config/codemod-configs/v<version number ex. 5 or 6>/imports.config.json\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-codemods.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-codemods\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-codemods/README.md","extension":".md","srcPath":"packages/ui-codemods/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-codemods/README.md","packageName":"@instructure/ui-codemods","requirePath":"@instructure/ui-codemods/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-codemods/README.md').default","esPath":"@instructure/ui-codemods/README","id":"ui-codemods","title":"ui-codemods"},"ui-color-utils":{"description":"\n## ui-color-utils\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA color utility library made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-color-utils\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-color-utils.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-color-utils\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-color-utils/README.md","extension":".md","srcPath":"packages/ui-color-utils/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-color-utils/README.md","packageName":"@instructure/ui-color-utils","requirePath":"@instructure/ui-color-utils/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-color-utils/README.md').default","esPath":"@instructure/ui-color-utils/README","id":"ui-color-utils","title":"ui-color-utils"},"ui-component-examples":{"description":"\n## ui-component-examples\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA utility for automatically generating component examples.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-component-examples\n```\n\n### Usage\n\n#### Using the webpack loader\n\nFor convenience, this package contains a webpack loader which can be used\nto load example configuration files. In the loader, each configuration file is\npassed to the `generateComponentExamples` function to generate examples.\n\nIn your webpack.config.js:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        include: [/\\.examples\\.js/],\n        use: ['component-examples-loader', 'babel-loader']\n      }\n    ]\n  }\n}\n```\n\n> Note: As of version 7, the component examples loader does not include default functions for `renderPage` and `renderExample`. These should be provided in the client of the consumer.\n\n#### Calling the `generateComponentExamples` function directly\n\nThe `generateComponentExamples` function can be called directly as follows:\n\n```js\nimport { generateComponentExamples } from '@instructure/ui-component-examples'\n\nconst result = generateComponentExamples(config)\n```\n\nGiven a configuration object, `generateComponentExamples` returns an array of generated examples:\n\n##### Parameters\n\n| Param  | Type     | Default     | Description                                                              |\n| ------ | -------- | ----------- | ------------------------------------------------------------------------ |\n| config | `Object` | `undefined` | the generator config object. See `config` section below for more details |\n\n##### Returns\n\n| Type    | Description                                                                                                      |\n| ------- | ---------------------------------------------------------------------------------------------------------------- |\n| `Array` | array of examples broken into sections and pages if configured to do so. See `examples` section for more details |\n\n##### Example config\n\n```js\nexport default {\n  sectionProp: 'variant',\n  maxExamplesPerPage: 50,\n  maxExamples: 200,\n  excludeProps: [],\n  propValues: {\n    variant: ['circular', 'rectangular'],\n    placement: ['top', 'bottom', 'start', 'end'],\n    children: [null, <button>hello</button>, <a href=\"#\">world</a>]\n  },\n  getComponentProps: (props) => ({\n    size: props.variant === 'circular' ? 'large' : 'small'\n  }),\n  getExampleProps: (props) => ({\n    height: props.placement === 'top' ? '50rem' : '10rem'\n  }),\n  getParameters: ({ examples, index }) => {\n    return { delay: 200, viewports: [320, 1200] }\n  }\n}\n```\n\n**The `config` is an object that sets the configuration for the example generation. It has the following properties:**\n\n### sectionProp\n\nA string value used to divide the resulting examples into sections. It should correspond to an enumerated prop in the `Component`\n\n| Type     | Default     |\n| -------- | ----------- |\n| `string` | `undefined` |\n\n### maxExamplesPerPage\n\nSpecifies the max number of examples that can exist in a single page within a section\n\n| Type                   | Default |\n| ---------------------- | ------- |\n| `number` or `function` | `null`  |\n\nexample:\n\n```js\n// providing a number\nmaxExamplesPerPage: 50\n\n// providing a function\nmaxExamplesPerPage: (sectionName) => (sectionName === 'inverse' ? 20 : 50)\n```\n\n##### Parameters\n\n| Param       | Type     | Default     | Description                             |\n| ----------- | -------- | ----------- | --------------------------------------- |\n| sectionName | `string` | `undefined` | the name of the current example section |\n\n##### Returns\n\n| Type     | Description                                       |\n| -------- | ------------------------------------------------- |\n| `number` | a number specifying the maximum examples per page |\n\n### maxExamples\n\nSpecifies the total max number of examples\n\n| Type     | Default |\n| -------- | ------- |\n| `number` | `500`   |\n\n### propValues\n\nAn object with keys that correspond to the component props. Each key has a corresponding\nvalue array. This array contains possible values for that prop.\n\n| Type                                                        | Default     |\n| ----------------------------------------------------------- | ----------- |\n| `object` of keys corresponding to arrays of possible values | `undefined` |\n\nexample:\n\n```js\npropValues: {\n variant: ['circular', 'rectangular'],\n placement: ['top', 'bottom', 'start', 'end'],\n children: [null, <button>hello</button>, <a href=\"#\">world</a>]\n}\n```\n\n### excludeProps\n\nProp keys to exclude from `propValues`. Useful when generating `propValues` with code.\n\n| Type               | Default |\n| ------------------ | ------- |\n| `array of Strings` | `[]`    |\n\nexample:\n\n```js\nexcludeProps: ['readOnly', 'disabled']\n```\n\n### getComponentProps\n\nA function called with the prop combination for the current example. It returns an object\nof props that will be passed into the `renderExample` function as `componentProps`.\n\n| Type       | Default     |\n| ---------- | ----------- |\n| `function` | `undefined` |\n\nexample:\n\n```js\ngetComponentProps: (props) => ({\n  // Change the size prop passed to the component based on the value of\n  // `variant` in the current prop combination\n  size: props.variant === 'circular' ? 'large' : 'small'\n})\n```\n\n##### Parameters\n\n| Param | Type     | Default     | Description                                  |\n| ----- | -------- | ----------- | -------------------------------------------- |\n| props | `Object` | `undefined` | the prop combination for the current example |\n\n##### Returns\n\n| Type     | Description                                                                            |\n| -------- | -------------------------------------------------------------------------------------- |\n| `Object` | a props object that will be passed to the `renderExample` function as `componentProps` |\n\n### getExampleProps\n\nA function called with the prop combination for the current example. It returns an object\nof props that will be passed into the `renderExample` function as `exampleProps`.\n\n| Type       | Default     |\n| ---------- | ----------- |\n| `function` | `undefined` |\n\nexample:\n\n```js\ngetExampleProps: (props) => ({\n  // Change the height prop passed to the example based on the value of\n  // `placement` in the current prop combination\n  height: props.placement === 'top' ? '50rem' : '10rem'\n})\n```\n\n##### Parameters\n\n| Param | Type     | Default     | Description                                  |\n| ----- | -------- | ----------- | -------------------------------------------- |\n| props | `Object` | `undefined` | the prop combination for the current example |\n\n##### Returns\n\n| Type     | Description                                                                          |\n| -------- | ------------------------------------------------------------------------------------ |\n| `Object` | a props object that will be passed to the `renderExample` function as `exampleProps` |\n\n### getParameters\n\nA function called with the examples and index for the current page of examples. It returns an object\nof parameters/meta data for that page of examples (e.g. to be passed in to a visual regression tool like chromatic).\n\n| Type       | Default     |\n| ---------- | ----------- |\n| `function` | `undefined` |\n\nexample:\n\n```js\ngetParameters: ({ examples, index }) => ({\n  // add a delay for the first page of examples only:\n  return index === 1 ? { delay: 200 } : {}\n})\n```\n\n##### Parameters\n\n| Param | Type     | Default     | Description                                |\n| ----- | -------- | ----------- | ------------------------------------------ |\n| props | `Object` | `undefined` | the examples and index of the current page |\n\n##### Returns\n\n| Type     | Description                                                                  |\n| -------- | ---------------------------------------------------------------------------- |\n| `Object` | a parameters object with delay and viewport sizes configuration for the page |\n\n### filter\n\nA function to filter `propValues`, returns `boolean`. If it returns `true` the combination\nis not generated.\n\n| Type       | Default     |\n| ---------- | ----------- |\n| `function` | `undefined` |\n\nexample:\n\n```js\nfilter: (props) => {\n  return (\n    props.type !== 'button' ||\n    (props.textAlign === 'center' && props.display !== 'block')\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-component-examples.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-component-examples\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-component-examples/README.md","extension":".md","srcPath":"packages/ui-component-examples/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-component-examples/README.md","packageName":"@instructure/ui-component-examples","requirePath":"@instructure/ui-component-examples/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-component-examples/README.md').default","esPath":"@instructure/ui-component-examples/README","id":"ui-component-examples","title":"ui-component-examples"},"ui-date-input":{"description":"\n## ui-date-input\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA date input component.\n\n### Components\nThe `ui-date-input` package contains the following:\n- [DateInput](#DateInput)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-date-input\n```\n\n### Usage\nFor detailed usage and documentation, see [DateInput](#DateInput).\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-date-input.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-date-input\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-date-input/README.md","extension":".md","srcPath":"packages/ui-date-input/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-date-input/README.md","packageName":"@instructure/ui-date-input","requirePath":"@instructure/ui-date-input/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-date-input/README.md').default","esPath":"@instructure/ui-date-input/README","id":"ui-date-input","title":"ui-date-input"},"ui-decorator":{"description":"\n## ui-decorator\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA utility to wrap (decorates) a React component class adding functionality.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-decorator\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-decorator.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-decorator\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-decorator/README.md","extension":".md","srcPath":"packages/ui-decorator/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-decorator/README.md","packageName":"@instructure/ui-decorator","requirePath":"@instructure/ui-decorator/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-decorator/README.md').default","esPath":"@instructure/ui-decorator/README","id":"ui-decorator","title":"ui-decorator"},"ui-dialog":{"description":"\n## ui-dialog\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA utility component for managing keyboard accessibility and screen reader behavior.\n\n### Components\nThe `ui-dialog` package contains the following:\n- [Dialog](#Dialog)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-dialog\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Dialog } from '@instructure/ui-dialog'\n\nconst MyDialog = () => {\n  return (\n    <Dialog open={this.state.open}>\n      Hello world\n    </Dialog>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-dialog.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-dialog\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-dialog/README.md","extension":".md","srcPath":"packages/ui-dialog/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dialog/README.md","packageName":"@instructure/ui-dialog","requirePath":"@instructure/ui-dialog/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dialog/README.md').default","esPath":"@instructure/ui-dialog/README","id":"ui-dialog","title":"ui-dialog"},"ui-dom-utils":{"description":"\n## ui-dom-utils\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA DOM utility library made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-dom-utils\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-dom-utils.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-dom-utils\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-dom-utils/README.md","extension":".md","srcPath":"packages/ui-dom-utils/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/README.md","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/README.md').default","esPath":"@instructure/ui-dom-utils/README","id":"ui-dom-utils","title":"ui-dom-utils"},"ui-drawer-layout":{"description":"\n## ui-drawer-layout\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA main-content-plus-tray layout component\n\n\n### Components\nThe `ui-drawer-layout` package contains the following:\n- [DrawerLayout](#DrawerLayout)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-drawer-layout\n```\n\n### Usage\n```js\nimport React from 'react'\nimport { DrawerLayout } from '@instructure/ui-drawer-layout'\n\nconst MyLayout = () => {\n  return (\n    <DrawerLayout>\n      <DrawerLayout.Tray>Hello from layout tray</DrawerLayout.Tray>\n      <DrawerLayout.Content>Hello from layout content</DrawerLayout.Content>\n    </DrawerLayout>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-drawer-layout.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-drawer-layout\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-drawer-layout/README.md","extension":".md","srcPath":"packages/ui-drawer-layout/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drawer-layout/README.md","packageName":"@instructure/ui-drawer-layout","requirePath":"@instructure/ui-drawer-layout/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-drawer-layout/README.md').default","esPath":"@instructure/ui-drawer-layout/README","id":"ui-drawer-layout","title":"ui-drawer-layout"},"ui-editable":{"description":"\n## ui-editable\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nSupports in-place editing of content.\n\n### Components\nThe `ui-editable` packages contains the following:\n- [Editable](#Editable)\n- [InPlaceEdit](#InPlaceEdit)\n\n### Installation\n```sh\nyarn add @instructure/ui-editable\n```\n\n### Usage\nFor detailed usage and documentation, see [Editable](#Editable).\n\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-editable.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-editable\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-editable/README.md","extension":".md","srcPath":"packages/ui-editable/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-editable/README.md","packageName":"@instructure/ui-editable","requirePath":"@instructure/ui-editable/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-editable/README.md').default","esPath":"@instructure/ui-editable/README","id":"ui-editable","title":"ui-editable"},"ui-eslint-config":{"description":"\n## ui-eslint-config\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA shared eslint config made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-eslint-config\n```\n\n### Usage\n\nIn your eslint config file:\n\n```js\n/* .eslintrc.js */\nmodule.exports = require('@instructure/ui-eslint-config')\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-eslint-config.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-eslint-config\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-eslint-config/README.md","extension":".md","srcPath":"packages/ui-eslint-config/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-eslint-config/README.md","packageName":"@instructure/ui-eslint-config","requirePath":"@instructure/ui-eslint-config/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-eslint-config/README.md').default","esPath":"@instructure/ui-eslint-config/README","id":"ui-eslint-config","title":"ui-eslint-config"},"ui-expandable":{"description":"\n## ui-expandable\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA utility component for show/hide functionality.\n\n### Utilities\nThe `ui-expandable` package contains the following utilities:\n- [Expandable](#Expandable)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-expandable\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-expandable.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-expandable\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-expandable/README.md","extension":".md","srcPath":"packages/ui-expandable/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-expandable/README.md","packageName":"@instructure/ui-expandable","requirePath":"@instructure/ui-expandable/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-expandable/README.md').default","esPath":"@instructure/ui-expandable/README","id":"ui-expandable","title":"ui-expandable"},"ui-file-drop":{"description":"\n## ui-file-drop\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nFileDrop is a flexible facade for an HTML file input.\n\n\n### Components\nThe `ui-file-drop` package contains the following:\n- [FileDrop](#FileDrop)\n\n### Installation\n```sh\nyarn add @instructure/ui-file-drop\n```\n\n### Usage\nFor detailed usage and documentation, see [FileDrop](#FileDrop).\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-file-drop.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-file-drop\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-file-drop/README.md","extension":".md","srcPath":"packages/ui-file-drop/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-file-drop/README.md","packageName":"@instructure/ui-file-drop","requirePath":"@instructure/ui-file-drop/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-file-drop/README.md').default","esPath":"@instructure/ui-file-drop/README","id":"ui-file-drop","title":"ui-file-drop"},"ui-flex":{"description":"\n## ui-flex\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nFlex is a component that makes it easy to align content using flexbox CSS.\n\n### Components\nThe `ui-flex` package contains the following:\n- [Flex](#Flex)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-flex\n```\n### Usage\nFor detailed usage and documentation, see [Flex](#Flex).\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-flex.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-flex\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-flex/README.md","extension":".md","srcPath":"packages/ui-flex/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-flex/README.md","packageName":"@instructure/ui-flex","requirePath":"@instructure/ui-flex/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-flex/README.md').default","esPath":"@instructure/ui-flex/README","id":"ui-flex","title":"ui-flex"},"ui-focusable":{"description":"\n## ui-focusable\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA utility used to identify when an element receives focus.\n\n### Components\n\nThe `ui-focusable` package contains the following:\n\n- [Focusable](#Focusable)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-focusable\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-focusable.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-focusable\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-focusable/README.md","extension":".md","srcPath":"packages/ui-focusable/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-focusable/README.md","packageName":"@instructure/ui-focusable","requirePath":"@instructure/ui-focusable/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-focusable/README.md').default","esPath":"@instructure/ui-focusable/README","id":"ui-focusable","title":"ui-focusable"},"ui-form-field":{"description":"\n## ui-form-field\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nForm layout components.\n### Components\nThe `ui-form-field` package contains the following:\n- [FormField](#FormField)\n- [FormFieldGroup](#FormFieldGroup)\n- [FormFieldLabel](#FormFieldLabel)\n- [FormFieldLayout](#FormFieldLayout)\n- [FormFieldMessage](#FormFieldMessage)\n- [FormFieldMessages](#FormFieldMessages)\n  \n\n### Installation\n\n```sh\nyarn add @instructure/ui-form-field\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { FormField } from '@instructure/ui-form-field'\n\nconst MyFormField = () => {\n  return (\n    <FormField label=\"Label\" layout=\"inline\">\n      ...\n    </FormField>\n  )\n}\n```\nFor detailed usage and documentation, see individual components.\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-form-field.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-form-field\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-form-field/README.md","extension":".md","srcPath":"packages/ui-form-field/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/README.md","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/README.md').default","esPath":"@instructure/ui-form-field/README","id":"ui-form-field","title":"ui-form-field"},"ui-grid":{"description":"\n## ui-grid\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA grid component.\n\n### Components\n- [Grid](#Grid)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-grid\n```\n\n### Usage\nFor detailed usage and documentation, see [Grid](#Grid).\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-grid.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-grid\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-grid/README.md","extension":".md","srcPath":"packages/ui-grid/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-grid/README.md","packageName":"@instructure/ui-grid","requirePath":"@instructure/ui-grid/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-grid/README.md').default","esPath":"@instructure/ui-grid/README","id":"ui-grid","title":"ui-grid"},"ui-heading":{"description":"\n## ui-heading\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nHeading is a component for creating typographic headings.\n\n### Components\nThe `ui-heading` package contains the following:\n- [Heading](#Heading)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-heading\n```\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Heading } from '@instructure/ui-heading'\n\nconst MyHeading = () => {\n  return (\n    <Heading>I am a heading!</Heading>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-heading.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-heading\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-heading/README.md","extension":".md","srcPath":"packages/ui-heading/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-heading/README.md","packageName":"@instructure/ui-heading","requirePath":"@instructure/ui-heading/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-heading/README.md').default","esPath":"@instructure/ui-heading/README","id":"ui-heading","title":"ui-heading"},"ui-i18n":{"description":"\n## ui-i18n\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nHelper components and utilities for internationalization.\n\n### Components\nThe `ui-i18n` package contains the following:\n- [ApplyLocale](#ApplyLocale)\n- [ApplyTextDirection](#ApplyTextDirection)\n\n### Utilities\nThe `ui-i18n` package contains the following utilities:\n- [bidirectional](#bidirectional)\n- [DateTime](#DateTime)\n- [Decimal](#Decimal)\n- [Locale](#Locale)\n\n### Installation\n\n```sh\nyarn add --dev @instructure/ui-i18n\n```\n\n### Usage\nFor detailed usage and documentation, see individual components and utilities.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-i18n.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-i18n\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-i18n/README.md","extension":".md","srcPath":"packages/ui-i18n/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/README.md","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/README.md').default","esPath":"@instructure/ui-i18n/README","id":"ui-i18n","title":"ui-i18n"},"ui-icons":{"description":"\n## ui-icons\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Installation\n\n```sh\nyarn add @instructure/ui-icons\n```\n\n### Usage\n\nTo use the React components:\n\n```js\nimport { IconAddLine } from '@instructure/ui-icons'\n\nconst MyComponent = () => {\n  return <IconAdd />\n}\n```\n\n### Adding and Modifying Icons\n\n- Use dashes in the name of the .svg files (e.g `calendar-month`).\n  Use the same name for the \"line\" and \"solid\" variants, and save them in the respective folder, e.g. `Solid/calendar-month` and `Line/calendar-month`.\n\n- Copy the new icon files in the `/svg/Solid` and `/svg/Line` directories.\n\n- Run `yarn export:icons` from the repository root directory to generate the SVG files.\n\n- Run `yarn && yarn bootstrap`.\n\n- Finally, run `yarn dev` from the repository root directory to start the local server and check the generated output.\n\n- Verify icons display correctly by checking under `iconography` in the main nav\n\n### Guidelines for Drawing Icons\n\n- Draw your icons on the 1920 x 1920 art-boards.\n\n- Before you flatten shapes or vectorize strokes as described below, make a hidden copy of the original paths off\n  to the side so that you can more easily come back and make changes later.\n\n- Flatten your shapes.\n\n- Export strokes to vector.\n\n- Don’t use borders on vectors, especially not inside/outside borders which aren’t supported in SVG. Do not use clipping paths.\n\n- Make sure none of the paths go outside of the art-board. If so, the glyph in the icon font will be misaligned.\n  Draw inside the lines.\n\n- Fill the space edge-to-edge as much as possible. The build process will add margins as needed.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-icons.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-icons\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-icons/README.md","extension":".md","srcPath":"packages/ui-icons/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-icons/README.md","packageName":"@instructure/ui-icons","requirePath":"@instructure/ui-icons/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-icons/README.md').default","esPath":"@instructure/ui-icons/README","id":"ui-icons","title":"ui-icons"},"ui-icons-build":{"description":"\n## ui-icons-build\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nBuild scripts to generate icon sets from source SVG files for multiple platforms (web, iOS, Android).\n\n### Installation\n\n```sh\nyarn add --dev @instructure/ui-icons-build\n```\n\n### Supported formats:\n\n- Accessible React components for each icon/variant\n- SVG files optimized for the web with configurable bounding boxes/margins\n- Icon font\n\n## Requirements\n\n- Node >= 8\n- Mac OSX\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-icons-build.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-icons-build\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-icons-build/README.md","extension":".md","srcPath":"packages/ui-icons-build/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-icons-build/README.md","packageName":"@instructure/ui-icons-build","requirePath":"@instructure/ui-icons-build/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-icons-build/README.md').default","esPath":"@instructure/ui-icons-build/README","id":"ui-icons-build","title":"ui-icons-build"},"ui-img":{"description":"\n## ui-img\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nAn accessible image component.\n\n\n### Components\nThe `ui-img` package contains the following:\n- [Img](#Img)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-img\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Img } from '@instructure/ui-img'\n\nconst MyImg = () => {\n  return (\n    <Img src={placeholderImage(250, 350)} alt=\"A Placeholder Image\" />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-img.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-img\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-img/README.md","extension":".md","srcPath":"packages/ui-img/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-img/README.md","packageName":"@instructure/ui-img","requirePath":"@instructure/ui-img/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-img/README.md').default","esPath":"@instructure/ui-img/README","id":"ui-img","title":"ui-img"},"ui-karma-config":{"description":"\n## ui-karma-config\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA shared karma config made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-karma-config\n```\n\n### Usage\n\nIn your Karma config file:\n\n```javascript\n/* karma.config.js */\nconst path = require('path')\n\nmodule.exports = require('@instructure/ui-karma-config')({\n  bundle: './tests.bundle.js',\n  coverageThreshold: {\n    global: {\n      lines: 91\n    },\n    each: {\n      lines: 50\n    }\n  },\n  coverageDirectory: path.join(__dirname, '/coverage')\n})\n```\n\nIn your `tests.bundle.js` file:\n\n```javascript\n/* tests.bundle.js */\n\n// import anything else you want to include before the tests here\n\n// import the tests:\nrequire('ui-tests-loader!')\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-karma-config.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-karma-config\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-karma-config/README.md","extension":".md","srcPath":"packages/ui-karma-config/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-karma-config/README.md","packageName":"@instructure/ui-karma-config","requirePath":"@instructure/ui-karma-config/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-karma-config/README.md').default","esPath":"@instructure/ui-karma-config/README","id":"ui-karma-config","title":"ui-karma-config"},"ui-link":{"description":"\n## ui-link\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA styled HTML link component\n\n### Components\nThe `ui-link` package contains the following:\n- [Link](#Link)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-link\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Link } from '@instructure/ui-link'\n\nconst MyLink = () => {\n  return (\n    <Text>This is <Link href=\"http://instructure.design\">a link</Link>!</Text>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-link.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-link\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-link/README.md","extension":".md","srcPath":"packages/ui-link/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-link/README.md","packageName":"@instructure/ui-link","requirePath":"@instructure/ui-link/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-link/README.md').default","esPath":"@instructure/ui-link/README","id":"ui-link","title":"ui-link"},"ui-list":{"description":"\n## ui-list\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nComponents for displaying vertical or horizontal lists.\n\n\n### Components\nThe `ui-list` package contains the following:\n- [InlineList](#InlineList)\n- [List](#List)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-list\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { List } from '@instructure/ui-list'\n\nconst MyList = () => {\n  return (\n    <List>\n      <List.Item>List Item One</List.Item>\n      <List.Item>List Item Two</List.Item>\n      <List.Item>List Item Three</List.Item>\n    </List>\n  )\n}\n```\n```js\nimport React from 'react'\nimport { InlineList } from '@instructure/ui-list'\n\nconst MyList = () => {\n  return (\n    <InlineList>\n      <InlineList.Item>List Item One</InlineList.Item>\n      <InlineList.Item>List Item Two</InlineList.Item>\n      <InlineList.Item>List Item Three</InlineList.Item>\n    </InlineList>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-list.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-list\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-list/README.md","extension":".md","srcPath":"packages/ui-list/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-list/README.md","packageName":"@instructure/ui-list","requirePath":"@instructure/ui-list/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-list/README.md').default","esPath":"@instructure/ui-list/README","id":"ui-list","title":"ui-list"},"ui-menu":{"description":"\n## ui-menu\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA dropdown menu component.\n\n### Components\nThe `ui-menu` package contains the following:\n- [Menu](#Menu)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-menu\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Menu } from '@instructure/ui-menu'\n\nconst MyMenu = () => {\n  return (\n    <Menu>\n      <Menu.Item value=\"foo\">Foo</Menu.Item>\n      <Menu.Item value=\"bar\">Bar</Menu.Item>\n    </Menu>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-menu.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-menu\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-menu/README.md","extension":".md","srcPath":"packages/ui-menu/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-menu/README.md","packageName":"@instructure/ui-menu","requirePath":"@instructure/ui-menu/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-menu/README.md').default","esPath":"@instructure/ui-menu/README","id":"ui-menu","title":"ui-menu"},"ui-metric":{"description":"\n## ui-metric\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA UI component for displaying Metrics.\n\n### Components\n\nThe `ui-metric` package contains the following:\n\n- [Metric](#Metric)\n- [MetricGroup](#MetricGroup)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-metric\n```\n\n### Usage\n\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Metric } from '@instructure/ui-metric'\n\nconst MyMetric = () => {\n  return (\n    <Metric label=\"Grade\" value=\"80%\" />\n  )\n}\n```\n\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { MetricGroup } from '@instructure/ui-metric'\n\nconst MyGroup = () => {\n  return (\n    <MetricGroup>\n      <Metric label=\"Grade\" value=\"80%\" />\n      <Metric label=\"Late\" value=\"4\" />\n      <Metric label=\"Missing\" value=\"2\" />\n    </MetricGroup>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-metric.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-metric\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-metric/README.md","extension":".md","srcPath":"packages/ui-metric/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-metric/README.md","packageName":"@instructure/ui-metric","requirePath":"@instructure/ui-metric/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-metric/README.md').default","esPath":"@instructure/ui-metric/README","id":"ui-metric","title":"ui-metric"},"ui-modal":{"description":"\n## ui-modal\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA component for displaying content in a dialog overlay.\n\n### Components\nThe `ui-modal` package contains the following:\n- [Modal](#Modal)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-modal\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Modal } from '@instructure/ui-modal'\n\nconst MyModal = () => {\n  return (\n    <Modal>\n      <Modal.Header>\n        My Modal\n      </Modal.Header>\n      <Modal.Content>\n        Hello world\n      </Modal.Content>\n    </Modal>\n  )\n}\n```\nFor detailed usage and documentation, see Modal examples.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-modal.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-modal\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-modal/README.md","extension":".md","srcPath":"packages/ui-modal/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-modal/README.md","packageName":"@instructure/ui-modal","requirePath":"@instructure/ui-modal/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-modal/README.md').default","esPath":"@instructure/ui-modal/README","id":"ui-modal","title":"ui-modal"},"ui-motion":{"description":"\n## ui-motion\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Components\nThe `ui-motion` package contains the following:\n- [Transition](#Transition)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-motion\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Heading } from '@instructure/ui-elements'\nimport { Transition } from '@instructure/ui-motion'\n\nconst HeadingWithTransition = () => {\n  return (\n    <Transition transitionOnMount in>\n      <Heading>Hi there!</Heading>\n    </Transition>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-motion.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-motion\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-motion/README.md","extension":".md","srcPath":"packages/ui-motion/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-motion/README.md","packageName":"@instructure/ui-motion","requirePath":"@instructure/ui-motion/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-motion/README.md').default","esPath":"@instructure/ui-motion/README","id":"ui-motion","title":"ui-motion"},"ui-navigation":{"description":"\n## ui-navigation\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nMain and application level navigational components.\n\n### Components\nThe `ui-navigation` package contains the following:\n- [Navigation](#Navigation)\n- [AppNav](#AppNav)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-navigation\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Navigation } from '@instructure/ui-navigation'\nimport { Avatar } from '@instructure/ui-avatar'\n\nconst MyNavigation = () => {\n  return (\n    <Navigation label=\"My Navigation\">\n      <Navigation.Item\n        icon={<Avatar name=\"Joel Andrews\" size=\"x-small\" />}\n        label=\"My Account\"\n        href=\"http://example.com\"\n      />\n    </Navigation>\n  )\n}\n```\nFor detailed usage and documentation, see individual component examples.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-navigation.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-navigation\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-navigation/README.md","extension":".md","srcPath":"packages/ui-navigation/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-navigation/README.md","packageName":"@instructure/ui-navigation","requirePath":"@instructure/ui-navigation/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-navigation/README.md').default","esPath":"@instructure/ui-navigation/README","id":"ui-navigation","title":"ui-navigation"},"ui-number-input":{"description":"\n## ui-number-input\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA low-level controlled number input component that only handles rendering. All behavior (stepping, number\nparsing, localization, etc.) should be handled by a wrapper component.\n\n### Components\n- [NumberInput](#NumberInput)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-number-input\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { NumberInput } from '@instructure/ui-number-input'\n\nconst MyNumber = () => {\n  return (\n    <NumberInput\n      label=\"...\"\n      onChange={...}\n      onDecrement={...}\n      onIncrement={...}\n      value={...}\n    />\n  )\n}\n```\n\nFor detailed usage and documentation, see NumberInput examples.\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-number-input.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-number-input\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-number-input/README.md","extension":".md","srcPath":"packages/ui-number-input/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-number-input/README.md","packageName":"@instructure/ui-number-input","requirePath":"@instructure/ui-number-input/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-number-input/README.md').default","esPath":"@instructure/ui-number-input/README","id":"ui-number-input","title":"ui-number-input"},"ui-options":{"description":"\n## ui-options\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA view-only component for composing interactive lists and menus.\n\n### Components\nThe `ui-options` package contains the following:\n- [Options](#Options)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-options\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Options } from '@instructure/ui-options'\n\nconst MyOptions = () => {\n  return (\n    <Options>\n      <Options.Item>Option one</Options.Item>\n      <Options.Item>Option two</Options.Item>\n    </Options>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-options.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-options\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-options/README.md","extension":".md","srcPath":"packages/ui-options/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-options/README.md","packageName":"@instructure/ui-options","requirePath":"@instructure/ui-options/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-options/README.md').default","esPath":"@instructure/ui-options/README","id":"ui-options","title":"ui-options"},"ui-overlays":{"description":"\n## ui-overlays\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n\n### Components\nThe `ui-overlays` package contains the following:\n- [Mask](#Mask)\n- [Overlay](#Overlay)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-overlays\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Mask } from '@instructure/ui-overlays'\n\nconst MyMask = () => {\n  return (\n    <Mask>\n      <Text>Hello mask</Text>\n    </Mask>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-overlays.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-overlays\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-overlays/README.md","extension":".md","srcPath":"packages/ui-overlays/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-overlays/README.md","packageName":"@instructure/ui-overlays","requirePath":"@instructure/ui-overlays/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-overlays/README.md').default","esPath":"@instructure/ui-overlays/README","id":"ui-overlays","title":"ui-overlays"},"ui-pages":{"description":"\n## ui-pages\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Components\nThe `ui-pages` package contains the following:\n- [Pages](#Pages)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-pages\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Pages } from '@instructure/ui-pages'\n\nconst MyPages = () => {\n  return (\n    <Pages activePageIndex={1}>\n      <Pages.Page>\n        Page One\n      </Pages.Page>\n      <Pages.Page>\n        Page Two\n      </Pages.Page>\n    </Pages>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-pages.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-pages\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-pages/README.md","extension":".md","srcPath":"packages/ui-pages/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pages/README.md","packageName":"@instructure/ui-pages","requirePath":"@instructure/ui-pages/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pages/README.md').default","esPath":"@instructure/ui-pages/README","id":"ui-pages","title":"ui-pages"},"ui-pagination":{"description":"\n## ui-pagination\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Components\nThe `ui-pagination` package contains the following:\n- [Pagination](#Pagination)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-pagination\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Pagination } from '@instructure/ui-pagination'\n\nconst MyPagination = () => {\n  return (\n    <Pagination>\n      <Pagination.Page current>1</Pagination.Page>\n      <Pagination.Page>2</Pagination.Page>\n      <Pagination.Page>3</Pagination.Page>\n    </Pagination>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-pagination.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-pagination\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-pagination/README.md","extension":".md","srcPath":"packages/ui-pagination/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pagination/README.md","packageName":"@instructure/ui-pagination","requirePath":"@instructure/ui-pagination/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pagination/README.md').default","esPath":"@instructure/ui-pagination/README","id":"ui-pagination","title":"ui-pagination"},"ui-pill":{"description":"\n## ui-pill\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nUse Pills to communicate concise status with an identifiable color and supportive text.\n\n### Components\nThe `ui-pill` package contains the following:\n- [Pill](#Pill)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-pill\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Pill } from '@instructure/ui-pill'\n\nconst MyPill = () => {\n  return (\n    <Pill\n      color=\"info\"\n      margin=\"x-small\"\n    >\n      Draft\n    </Pill>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-pill.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-pill\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-pill/README.md","extension":".md","srcPath":"packages/ui-pill/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pill/README.md","packageName":"@instructure/ui-pill","requirePath":"@instructure/ui-pill/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pill/README.md').default","esPath":"@instructure/ui-pill/README","id":"ui-pill","title":"ui-pill"},"ui-polyfill-loader":{"description":"\n## babel-polyfill-loader\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA [webpack](https://www.npmjs.com/package/webpack) loader that generates a\ncustomized polyfill\n### Installation\n\n```sh\nyarn add --dev @instructure/ui-polyfill-loader\n```\n\n### Usage\nAdd a .polyfillrc (in JSON or YAML format) or a polyfill.config.js file to your project:\n\n```json\n{\n  [\n    \"es6.object.assign\",\n    \"es6.array.find\",\n    \"es6.array.find-index\",\n    \"es6.array.from\",\n    \"es6.string.starts-with\",\n    \"es7.array.includes\",\n    \"es6.symbol\"\n  ]\n}\n```\n\nSee the [core-js README](https://github.com/zloirock/core-js#custom-build-from-external-scripts) for more options.\n\nAdd an entry to your webpack config:\n\n```js\nentry: {\n  polyfill: '@instructure/ui-polyfill-loader!'\n}\n```\n\nOr require the loader in your project:\n\n```js\nrequire('@instructure/ui-polyfill-loader!')\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-polyfill-loader.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-polyfill-loader\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-polyfill-loader/README.md","extension":".md","srcPath":"packages/ui-polyfill-loader/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-polyfill-loader/README.md","packageName":"@instructure/ui-polyfill-loader","requirePath":"@instructure/ui-polyfill-loader/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-polyfill-loader/README.md').default","esPath":"@instructure/ui-polyfill-loader/README","id":"ui-polyfill-loader","title":"ui-polyfill-loader"},"ui-popover":{"description":"\n## ui-popover\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA component for hiding or showing content based on user interaction.\n\n### Components\nThe `ui-popover` package contains the following:\n- [Popover](#Popover)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-popover\n```\n\n### Usage\nFor detailed usage and documentation, see [Popover](#Popover).\n\n```js\nimport React from 'react'\nimport { Popover } from '@instructure/ui-popover'\n\nconst MyPopover = () => {\n  return (\n    <Popover\n      on=\"click\"\n      renderTrigger={<button>Click me!</button>}\n    >\n      Hello world\n    </Popover>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-popover.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-popover\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-popover/README.md","extension":".md","srcPath":"packages/ui-popover/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-popover/README.md","packageName":"@instructure/ui-popover","requirePath":"@instructure/ui-popover/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-popover/README.md').default","esPath":"@instructure/ui-popover/README","id":"ui-popover","title":"ui-popover"},"ui-portal":{"description":"\n## ui-portal\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n\n### Components\nThe `ui-portal` package contains the following:\n- [Portal](#Portal)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-portal\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Portal } from '@instructure/ui-portal'\n\nconst MyPortal = () => {\n  return (\n    <Portal open>\n      <Text>Hello from Portal</Text>\n    </Portal>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-portal.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-portal\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-portal/README.md","extension":".md","srcPath":"packages/ui-portal/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-portal/README.md","packageName":"@instructure/ui-portal","requirePath":"@instructure/ui-portal/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-portal/README.md').default","esPath":"@instructure/ui-portal/README","id":"ui-portal","title":"ui-portal"},"ui-position":{"description":"\n## ui-position\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA component for positioning content with respect to a designated target.\n\n### Components\nThe `ui-position` package contains the following:\n- [Position](#Position)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-position\n```\n\n### Usage\nFor detailed usage and documentation, see [Position](#Position).\n\n```js\nimport React from 'react'\nimport { Position } from '@instructure/ui-position'\n\nconst MyPosition = () => {\n  return (\n    <Position renderTarget={<div>Target</div>}>\n      Hello world\n    </Position>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-position.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-position\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-position/README.md","extension":".md","srcPath":"packages/ui-position/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-position/README.md","packageName":"@instructure/ui-position","requirePath":"@instructure/ui-position/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-position/README.md').default","esPath":"@instructure/ui-position/README","id":"ui-position","title":"ui-position"},"ui-progress":{"description":"\n## ui-progress\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA styled HTML 'progress' element\n\n### Components\n\nThe `ui-progress` package contains the following:\n\n- [ProgressBar](#ProgressBar)\n- [ProgressCircle](#ProgressCircle)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-progress\n```\n\n### Usage\n\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { ProgressBar } from '@instructure/ui-progress'\n\nconst MyProgress = () => {\n  return (\n    <ProgressBar\n      screenReaderLabel=\"Loading completion\"\n      valueNow={40}\n      valueMax={60}\n    />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-progress.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-progress\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-progress/README.md","extension":".md","srcPath":"packages/ui-progress/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-progress/README.md","packageName":"@instructure/ui-progress","requirePath":"@instructure/ui-progress/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-progress/README.md').default","esPath":"@instructure/ui-progress/README","id":"ui-progress","title":"ui-progress"},"ui-prop-types":{"description":"\n## ui-prop-types\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA collection of custom prop type validators.\n\n### Functions\nThe `ui-prop-types` package contains the following:\n- [children](#children)\n- [childrenOrValue](#childrenOrValue)\n- [controllable](#controllable)\n- [cursor](#cursor)\n- [element](#element)\n- [makeRequirable](#makeRequirable)\n- [xor](#xor)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-prop-types\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Children, controllable } from '@instructure/ui-prop-types'\n\nclass MyComponent extends React.Component {\n  static propTypes = {\n    children: Children.oneOf([SomeOtherComponent, AnotherComponent])\n    selected: controllable(PropTypes.bool, 'onSelect'),\n    onSelect: PropTypes.func\n  }\n  ...\n}\n```\n\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-prop-types.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-prop-types\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-prop-types/README.md","extension":".md","srcPath":"packages/ui-prop-types/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-prop-types/README.md","packageName":"@instructure/ui-prop-types","requirePath":"@instructure/ui-prop-types/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-prop-types/README.md').default","esPath":"@instructure/ui-prop-types/README","id":"ui-prop-types","title":"ui-prop-types"},"ui-radio-input":{"description":"\n## ui-radio-input\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA styled HTML input type=\"radio\" element\n\n### Components\nThe `ui-radio-input` package contains the following:\n- [RadioInput](#RadioInput)\n- [RadioInputGroup](#RadioInputGroup)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-radio-input\n```\n\n### Usage\n```js\nimport React from 'react'\nimport { RadioInput } from '@instrucutre/ui-radio-input'\n\nconst MyRadioInput = () => {\n  return (\n    <RadioInput\n      label=\"Turn on all the features\"\n      value=\"foo\"\n      name=\"bar\"\n    />\n  )\n}\n```\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-radio-input.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-radio-input\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-radio-input/README.md","extension":".md","srcPath":"packages/ui-radio-input/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-radio-input/README.md","packageName":"@instructure/ui-radio-input","requirePath":"@instructure/ui-radio-input/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-radio-input/README.md').default","esPath":"@instructure/ui-radio-input/README","id":"ui-radio-input","title":"ui-radio-input"},"ui-range-input":{"description":"\n## ui-range-input\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA styled HTML range input.\n\n\n### Components\nThe `ui-range-input` package contains the following:\n- [RangeInput](#RangeInput)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-range-input\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { RangeInput } from '@instructure/ui-range-input'\n\nconst MyRange = () => {\n  return (\n    <RangeInput\n      label=\"Grading range\"\n      defaultValue={50}\n      max={100}\n      min={0}\n    />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-range-input.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-range-input\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-range-input/README.md","extension":".md","srcPath":"packages/ui-range-input/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-range-input/README.md","packageName":"@instructure/ui-range-input","requirePath":"@instructure/ui-range-input/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-range-input/README.md').default","esPath":"@instructure/ui-range-input/README","id":"ui-range-input","title":"ui-range-input"},"ui-rating":{"description":"\n## ui-rating\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA static rating component.\n\n\n### Components\nThe `ui-rating` package contains the following:\n- [Rating](#Rating)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-rating\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Rating } from '@instructure/ui-rating'\n\nconst MyRating = () => {\n  return (\n    <Rating\n      label=\"Product rating\"\n      size=\"small\"\n      iconCount={5}\n      valueNow={3.76}\n      valueMax={5}\n      margin=\"x-small medium xx-small none\"\n    />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-rating.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-rating\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-rating/README.md","extension":".md","srcPath":"packages/ui-rating/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-rating/README.md","packageName":"@instructure/ui-rating","requirePath":"@instructure/ui-rating/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-rating/README.md').default","esPath":"@instructure/ui-rating/README","id":"ui-rating","title":"ui-rating"},"ui-react-utils":{"description":"\n## ui-react-utils\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA React utility library made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-react-utils\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-react-utils.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-react-utils\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-react-utils/README.md","extension":".md","srcPath":"packages/ui-react-utils/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/README.md","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/README.md').default","esPath":"@instructure/ui-react-utils/README","id":"ui-react-utils","title":"ui-react-utils"},"ui-responsive":{"description":"\n## ui-responsive\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA component that allows for rendering a component differently based on either the element or the viewport size.\n\n### Components\nThe `ui-responsive` package contains the following:\n- [Responsive](#Responsive)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-responsive\n```\n\n### Usage\nFor detailed usage and documentation, see Responsive examples.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-responsive.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-responsive\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-responsive/README.md","extension":".md","srcPath":"packages/ui-responsive/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/README.md","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/README.md').default","esPath":"@instructure/ui-responsive/README","id":"ui-responsive","title":"ui-responsive"},"ui-scripts":{"description":"\n## ui-scripts\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA CLI tool for UI component libraries made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-scripts\n```\n\n### Scripts\n\n#### `build`\n\nTo build (babel transpile) a package to be consumed as a library:\n\n`yarn ui-build`\n\nTo build (webpack) a package to be consumed as an application:\n\n`yarn ui-build --bundle`\n\n#### `clean`\n\nTo clean out built/generated files from a package:\n\n`yarn ui-build --clean`\n\n#### `modules`\n\n`yarn ui-build --modules lib` writes commonjs modules to the lib/ directory.\n\n`yarn ui-build --modules es` writes es modules to the es/ directory.\n\nIf not specified, `modules` defaults to `es,lib`.\n\n#### `test`\n\nTo run tests for a package:\n\n`yarn ui-test`\n\n#### `lint`\n\nTo lint (eslint/stylelint) a package:\n\n`yarn ui-test --lint`\n\nTo lint a commit message (the `HEAD` commit):\n\n`yarn ui-scripts --lint-commit`\n\n#### `commit`\n\nTo write a correctly formatted commit message and commit the staged changes:\n\n`yarn ui-scripts --commit`\n\n#### `install-react`\n\nTo install a specific version of React and ReactDOM without updating `package.json`\n(defaults to the versions specified in the resolutions field):\n\n`yarn ui-scripts --install-react [version]`\n\n#### `bump`\n\nTo update all package versions\n(defaults to determining the version automatically using commit messages):\n\n`yarn ui-scripts --bump [version|major|minor|patch]`\n\n#### `publish`\n\nTo publish all packages (defaults to current version):\n\n`yarn ui-scripts --publish [version]`\n\n#### `fix-publish`\n\nIf the publish command fails, you can run the `fix-publish` script to publish\na version if it hasn't been published already. This script will try to determine\n(using `npm info`) if the version is already published before publishing.\n\n`yarn ui-scripts --fix-publish [version]`\n\n#### `post-publish`\n\nTo run post-publish steps\n(create Git tag, create Jira version, Slack notification)\nof the release script:\n\n`yarn ui-scripts --post-publish`\n\n#### `deploy-docs`\n\nTo run the deploy of the documentation (to Github pages):\n\n`yarn ui-scripts --deploy-docs`\n\n#### `examples`\n\nTo build component examples and start up a dev server with hot reloading:\n\n`yarn ui-build --examples --watch -p 8080`\n\nTo build component examples for deploying:\n\n`yarn ui-build --examples`\n\n#### `server`\n\nTo start up a server to test production builds of examples or docs:\n\n`yarn ui-scripts --server -p 8080`\n\n#### `tag`\n\nTo add an NPM dist-tag for all packages:\n\n`yarn ui-scripts --tag add 5.11.0 latest`\n\nTo remove an NPM dist-tag for all packages:\n\n`yarn ui-scripts --tag rm 5.11.0 latest`\n\n#### `deprecate`\n\nTo deprecate all packages (optional arguments: version, fix version):\n\n`yarn ui-scripts --deprecate 5.11.0 5.11.1`\n\n### Configuration\n\nIf you'd like to use the publish, deploy, and release scripts, you'll need to configure your project as follows:\n\n#### Project level\n\nAdd the config to your project level `package.json` file:\n\n```json\n\"config\": {\n  \"ui-scripts\": {\n    \"slack_emoji\": \":instui:\",\n    \"slack_channel\": \"#instui\",\n    \"jira_host\": \"instructure.atlassian.net\",\n    \"jira_project_id\": \"17900\",\n    \"jira_project_key\": \"INSTUI\",\n    \"npm_scope\": \"@instructure:registry=https://registry.npmjs.org/\",\n    \"gh_pages_branch\": \"gh-pages\",\n    \"gh_pages_dir\": \"packages/__docs__/__build__\",\n    \"gh_pages_cname\": \"instructure.design\",\n    \"changelog_url\": \"https://instructure.design/#CHANGELOG\"\n  }\n}\n```\n\n#### Environment variables\n\nAdd a `.env` file to your project root:\n\n```sh\nNPM_TOKEN=\nNPM_USERNAME=\nNPM_EMAIL=\nGIT_EMAIL=\"\"\nGIT_USERNAME=\nGIT_REMOTE_URL=gerrit:instructure-ui\nGIT_REMOTE_NAME=origin\nJIRA_CONSUMER_KEY=\nJIRA_TOKEN=\nJIRA_SECRET=\nJIRA_PEM_PATH=/Users/your_user_name/.ssh/jira.pem\nSLACK_USERNAME=instui\nSLACK_WEBHOOK=\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-scripts.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-scripts\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-scripts/README.md","extension":".md","srcPath":"packages/ui-scripts/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-scripts/README.md","packageName":"@instructure/ui-scripts","requirePath":"@instructure/ui-scripts/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-scripts/README.md').default","esPath":"@instructure/ui-scripts/README","id":"ui-scripts","title":"ui-scripts"},"ui-select":{"description":"\n## ui-select\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA component for select and autocomplete behavior.\n\n### Components\nThe `ui-select` package contains the following:\n- [Select](#Select)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-select\n```\n\n### Usage\n```js\nimport React from 'react'\nimport { Select } from '@instructure/ui-select'\n\nconst MySelect = () => {\n  return (\n    <Select>\n      <Select.Option>Option one</Select.Option>\n      <Select.Option>Option two</Select.Option>\n    </Select>\n  )\n}\n```\nFor detailed usage and documentation, see Select examples.\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-select.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-select\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-select/README.md","extension":".md","srcPath":"packages/ui-select/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-select/README.md","packageName":"@instructure/ui-select","requirePath":"@instructure/ui-select/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-select/README.md').default","esPath":"@instructure/ui-select/README","id":"ui-select","title":"ui-select"},"ui-selectable":{"description":"\n## ui-selectable\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Components\nThe `ui-selectable` package contains the following:\n- [Selectable](#Selectable)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-selectable\n```\n\n### Usage\nFor detailed usage and documentation, see Selectable examples.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-selectable.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-selectable\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-selectable/README.md","extension":".md","srcPath":"packages/ui-selectable/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-selectable/README.md","packageName":"@instructure/ui-selectable","requirePath":"@instructure/ui-selectable/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-selectable/README.md').default","esPath":"@instructure/ui-selectable/README","id":"ui-selectable","title":"ui-selectable"},"ui-simple-select":{"description":"\n## ui-simple-select\n\n[![npm][npm]][npm-url]\n[![build-status][build-status]][build-status-url]\n[![MIT License][license-badge]][LICENSE]\n[![Code of Conduct][coc-badge]][coc]\n\nA component for standard select element behavior.\n\n### Components\nThe `ui-simple-select` package contains the following:\n- [SimpleSelect](#SimpleSelect)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-simple-select\n```\n\n### Usage\n```js\nimport React from 'react'\nimport { Select } from '@instructure/ui-select'\n\nconst MySelect = () => {\n  return (\n    <SimpleSelect>\n      <SimpleSelect.Option>Option one</SimpleSelect.Option>\n      <SimpleSelect.Option>Option two</SimpleSelect.Option>\n    </SimpleSelect>\n  )\n}\n```\nFor detailed usage and documentation, see SimpleSelect examples.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-simple-select.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-simple-select\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-simple-select/README.md","extension":".md","srcPath":"packages/ui-simple-select/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-simple-select/README.md","packageName":"@instructure/ui-simple-select","requirePath":"@instructure/ui-simple-select/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-simple-select/README.md').default","esPath":"@instructure/ui-simple-select/README","id":"ui-simple-select","title":"ui-simple-select"},"ui-spinner":{"description":"\n## ui-spinner\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA spinner/loading component\n\n### Components\nThe `ui-spinner` package contains the following:\n- [Spinner](#Spinner)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-spinner\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Spinner } from '@instructure/ui-spinner'\n\nconst MySpinner = () => {\n  return (\n    <Spinner renderTitle=\"Loading\" />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-spinner.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-spinner\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-spinner/README.md","extension":".md","srcPath":"packages/ui-spinner/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-spinner/README.md","packageName":"@instructure/ui-spinner","requirePath":"@instructure/ui-spinner/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-spinner/README.md').default","esPath":"@instructure/ui-spinner/README","id":"ui-spinner","title":"ui-spinner"},"ui-stylelint-config":{"description":"\n## ui-stylelint-config\n\n[![npm][npm]][npm-url]\n[![build-status][build-status]][build-status-url]\n[![MIT License][license-badge]][LICENSE]\n[![Code of Conduct][coc-badge]][coc]\n\nA shared stylelint config made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-stylelint-config\n```\n\n### Usage\n\nIn your stylelint config file:\n\n```js\n/* stylelint.config.js */\nmodule.exports = require('@instructure/ui-stylelint-config')\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-stylelint-config.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-stylelint-config\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-stylelint-config/README.md","extension":".md","srcPath":"packages/ui-stylelint-config/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-stylelint-config/README.md","packageName":"@instructure/ui-stylelint-config","requirePath":"@instructure/ui-stylelint-config/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-stylelint-config/README.md').default","esPath":"@instructure/ui-stylelint-config/README","id":"ui-stylelint-config","title":"ui-stylelint-config"},"ui-svg-images":{"description":"\n## ui-svg-images\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Components\nThe `ui-svg-images` package contains the following:\n- [InlineSVG](#InlineSVG)\n- [SVGIcon](#SVGIcon)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-svg-images\n```\n\n### Usage\nFor detailed usage and documentation, see component examples.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-svg-images.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-svg-images\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-svg-images/README.md","extension":".md","srcPath":"packages/ui-svg-images/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-svg-images/README.md","packageName":"@instructure/ui-svg-images","requirePath":"@instructure/ui-svg-images/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-svg-images/README.md').default","esPath":"@instructure/ui-svg-images/README","id":"ui-svg-images","title":"ui-svg-images"},"ui-table":{"description":"\n## ui-table\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA styled HTML table component.\n\n### Components\n\nThe `ui-table` package contains the following:\n- [Table](#Table)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-table\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Table } from '@instructure/ui-table'\n\nconst MyTable = () => {\n  return (\n    <Table caption='Top rated movies'>\n      <Table.Head>\n        <Table.Row>\n          <Table.ColHeader>Rank</Table.ColHeader>\n          <Table.ColHeader>Title</Table.ColHeader>\n          <Table.ColHeader>Year</Table.ColHeader>\n          <Table.ColHeader>Rating</Table.ColHeader>\n        </Table.Row>\n      </Table.Head>\n      <Table.Body>\n        <Table.Row>\n          <Table.RowHeader>1</Table.RowHeader>\n          <Table.Cell>The Shawshank Redemption</Table.Cell>\n          <Table.Cell>1994</Table.Cell>\n          <Table.Cell>9.3</Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.RowHeader>2</Table.RowHeader>\n          <Table.Cell>The Godfather</Table.Cell>\n          <Table.Cell>1972</Table.Cell>\n          <Table.Cell>9.2</Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.RowHeader>3</Table.RowHeader>\n          <Table.Cell>The Godfather: Part II</Table.Cell>\n          <Table.Cell>1974</Table.Cell>\n          <Table.Cell>9.0</Table.Cell>\n        </Table.Row>\n      </Table.Body>\n  </Table>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-table.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-table\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-table/README.md","extension":".md","srcPath":"packages/ui-table/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-table/README.md","packageName":"@instructure/ui-table","requirePath":"@instructure/ui-table/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-table/README.md').default","esPath":"@instructure/ui-table/README","id":"ui-table","title":"ui-table"},"ui-tabs":{"description":"\n## ui-tabs\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Components\nThe `ui-tabs` package contains the following:\n- [Tabs](#Tabs)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-tabs\n```\n\n### Usage\n\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Tabs } from '@instructure/ui-tabs'\n\nexport default MyTabs = function () {\n  return (\n    <Tabs>\n      <Tabs.Panel renderTitle=\"First Tab\">\n        Tab One\n      </Tabs.Panel>\n      <Tabs.Panel renderTitle=\"Second Tab\" isSelected>\n        Tab Two\n      </Tabs.Panel>\n      <Tabs.Panel renderTitle=\"Third Tab\" isDisabled>\n        Tab Three\n      </Tabs.Panel>\n    </Tabs>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-tabs.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-tabs\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-tabs/README.md","extension":".md","srcPath":"packages/ui-tabs/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tabs/README.md","packageName":"@instructure/ui-tabs","requirePath":"@instructure/ui-tabs/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tabs/README.md').default","esPath":"@instructure/ui-tabs/README","id":"ui-tabs","title":"ui-tabs"},"ui-tag":{"description":"\n## ui-tag\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA tag component.\n\n\n### Components\nThe `ui-tag` package contains the following:\n- [Tag](#Tag)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-tag\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Tag } from '@instructure/ui-tag'\n\nconst MyTag = () => {\n  return (\n    <Tag text=\"Hello world\" />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-tag.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-tag\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-tag/README.md","extension":".md","srcPath":"packages/ui-tag/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tag/README.md","packageName":"@instructure/ui-tag","requirePath":"@instructure/ui-tag/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tag/README.md').default","esPath":"@instructure/ui-tag/README","id":"ui-tag","title":"ui-tag"},"ui-template-scripts":{"description":"\n## ui-template-scripts\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA collection of UI scripts and utils to automate upgrades.\n\n#### Using npx\n```bash\n$ npx @instructure/ui-template-scripts <command>\n```\n\n#### Globally installing `ui-template-scripts` with `yarn` or `npm`\n```bash\n$ yarn global add @instructure/ui-template-scripts\n```\nor\n```bash\n$ npm install -g @instructure/ui-template-scripts\n```\nYou now have access to `ui-template-scripts` commands\n```bash\nui-template-scripts <command>\n```\n\n### Available commands\n* __create-component__ | Generate a component within a new package or within an existing package.\n* __create-from-template__ | Copy template source file or directory to a specified destination and replace variables with designated values.\n* __create-package__ | Generate a package from a template.\n\n### Documentation\n\nFor more documentation on available options and parameters for individual commands do:\n\n```sh\nui-template-scripts <command> --help\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-template-scripts.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-template-scripts\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-template-scripts/README.md","extension":".md","srcPath":"packages/ui-template-scripts/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-template-scripts/README.md","packageName":"@instructure/ui-template-scripts","requirePath":"@instructure/ui-template-scripts/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-template-scripts/README.md').default","esPath":"@instructure/ui-template-scripts/README","id":"ui-template-scripts","title":"ui-template-scripts"},"ui-test-locator":{"description":"\n## ui-test-locator\n\n[![npm][npm]][npm-url]\n[![build-status][build-status]][build-status-url]\n[![MIT License][license-badge]][LICENSE]\n[![Code of Conduct][coc-badge]][coc]\n\nA locator component for finding components by their defined selector in tests.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-test-locator\n```\n\n### Usage\n\n```javascript\n// MyComponent.js\nimport { testable } from '@instructure/ui-testable'\n\n@testable()\nexport class MyComponent extends React.Component {\n  ...\n}\n\n// MyComponentLocator.js\nimport { locator } from '@instructure/ui-test-locator'\nimport { MyComponent } from './MyComponent'\n\nexport const MyComponentLocator = locator(MyComponent.selector)\n\n// MyComponent.test.js\nimport { MyComponent } from './MyComponent'\nimport { MyComponentLocator } from './MyComponentLocator.js'\n\nit('should render', () => {\n  await mount(<MyComponent />)\n\n  const myComponent = await MyComponentLocator.find()\n\n  expect(myComponent).to.exist()\n})\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-test-locator.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-test-locator\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-test-locator/README.md","extension":".md","srcPath":"packages/ui-test-locator/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-test-locator/README.md","packageName":"@instructure/ui-test-locator","requirePath":"@instructure/ui-test-locator/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-test-locator/README.md').default","esPath":"@instructure/ui-test-locator/README","id":"ui-test-locator","title":"ui-test-locator"},"ui-test-queries":{"description":"\n## ui-test-queries\n\n[![npm][npm]][npm-url]\n[![build-status][build-status]][build-status-url]\n[![MIT License][license-badge]][LICENSE]\n[![Code of Conduct][coc-badge]][coc]\n\nHelpers and utilities for queries in UI tests.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-test-queries\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-test-queries.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-test-queries\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-test-queries/README.md","extension":".md","srcPath":"packages/ui-test-queries/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-test-queries/README.md","packageName":"@instructure/ui-test-queries","requirePath":"@instructure/ui-test-queries/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-test-queries/README.md').default","esPath":"@instructure/ui-test-queries/README","id":"ui-test-queries","title":"ui-test-queries"},"ui-test-sandbox":{"description":"\n## ui-test-sandbox\n\n[![npm][npm]][npm-url]\n[![build-status][build-status]][build-status-url]\n[![MIT License][license-badge]][LICENSE]\n[![Code of Conduct][coc-badge]][coc]\n\nA wrapper for sinon test sandbox and associated utilities.\n\nSee https://sinonjs.org/\n\n### Installation\n\n```sh\nyarn add @instructure/ui-test-sandbox\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-test-sandbox.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-test-sandbox\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-test-sandbox/README.md","extension":".md","srcPath":"packages/ui-test-sandbox/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-test-sandbox/README.md","packageName":"@instructure/ui-test-sandbox","requirePath":"@instructure/ui-test-sandbox/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-test-sandbox/README.md').default","esPath":"@instructure/ui-test-sandbox/README","id":"ui-test-sandbox","title":"ui-test-sandbox"},"ui-test-utils":{"description":"\n## ui-test-utils\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA UI testing library made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-test-utils\n```\n\n### Usage\n\n```javascript\nimport { mount, expect, find } from '@instructure/ui-test-utils'\n\nimport MyComponent from '../'\n\nit('should render children', async () => {\n  await mount(<MyComponent>Hello World</MyComponent>)\n  expect(await find(':contains(Hello World)')).to.exist()\n})\n```\n[npm]: https://img.shields.io/npm/v/@instructure/ui-test-utils.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-test-utils\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-test-utils/README.md","extension":".md","srcPath":"packages/ui-test-utils/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-test-utils/README.md","packageName":"@instructure/ui-test-utils","requirePath":"@instructure/ui-test-utils/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-test-utils/README.md').default","esPath":"@instructure/ui-test-utils/README","id":"ui-test-utils","title":"ui-test-utils"},"ui-testable":{"description":"\n## ui-testable\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA decorator that adds a `data-` attribute to the React component root node\nto make it easier to test.\n\n**NOTE: by default, when NODE_ENV==='production' the `data-` attributes will not be appended**\n(since they are specifically there for testing and appending them takes a non-trivial\namount of time at runtime, slowing things down for your actual users).\nIf you would like the `data-cid` attributes on elements even in your production\nbuilds  (like if you are using them in your e2e builds or something),\nyou need to set the environment variable:\n```sh\nALWAYS_APPEND_UI_TESTABLE_LOCATORS=1\n```\n\n### Installation\n\n```sh\nyarn add @instructure/ui-testable\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-testable.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-testable\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-testable/README.md","extension":".md","srcPath":"packages/ui-testable/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-testable/README.md","packageName":"@instructure/ui-testable","requirePath":"@instructure/ui-testable/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-testable/README.md').default","esPath":"@instructure/ui-testable/README","id":"ui-testable","title":"ui-testable"},"ui-text":{"description":"\n## ui-text\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA component for styling textual content.\n\n### Components\nThe `ui-text` package contains the following:\n- [Text](#Text)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-text\n```\n\n### Usage\n```jsx\n---\nexample: false\n---\nimport React from 'react'\nimport { Text } from '@instructure/ui-text'\n\nconst MyText = () => {\n  return (\n    <Text>\n      Whatever you want to display goes here.\n    </Text>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-text.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-text\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-text/README.md","extension":".md","srcPath":"packages/ui-text/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text/README.md","packageName":"@instructure/ui-text","requirePath":"@instructure/ui-text/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text/README.md').default","esPath":"@instructure/ui-text/README","id":"ui-text","title":"ui-text"},"ui-text-area":{"description":"\n## ui-text-area\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA styled HTML textarea Component.\n\n### Components\nThe `ui-text-area` package contains the following:\n- [TextArea](#TextArea)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-text-area\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { TextArea } from '@instructure/ui-text-area'\n\nconst MyTextArea = () => {\n  return (\n    <TextArea\n      label=\"Course Description\"\n      maxHeight=\"10rem\"\n    />\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-text-area.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-text-area\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-text-area/README.md","extension":".md","srcPath":"packages/ui-text-area/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text-area/README.md","packageName":"@instructure/ui-text-area","requirePath":"@instructure/ui-text-area/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text-area/README.md').default","esPath":"@instructure/ui-text-area/README","id":"ui-text-area","title":"ui-text-area"},"ui-text-input":{"description":"\n## ui-text-input\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA styled HTML text input component.\n\n### Components\n\nThe `ui-text-input` package contains the following:\n\n- [TextInput](#TextInput)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-text-input\n```\n\n### Usage\n\n```javascript\n---\nexample: false\n---\nclass ControlledTextInputExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: 'Mint chocolate chip'\n    }\n  }\n\n  handleChange = (e, value) => this.setState({ value })\n\n  render () {\n    return (\n      <View as=\"div\">\n        <TextInput\n          renderLabel=\"What is your favorite ice cream flavor?\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n        <View as=\"div\" margin=\"medium none none\">\n          <code>this.state.value = {this.state.value}</code>\n        </View>\n      </View>\n    )\n  }\n}\n\nrender(<ControlledTextInputExample />)\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-text-input.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-text-input\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-text-input/README.md","extension":".md","srcPath":"packages/ui-text-input/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text-input/README.md","packageName":"@instructure/ui-text-input","requirePath":"@instructure/ui-text-input/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text-input/README.md').default","esPath":"@instructure/ui-text-input/README","id":"ui-text-input","title":"ui-text-input"},"ui-themes":{"description":"\n## ui-themes\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Installation\n\n```sh\nyarn add @instructure/ui-themes\n```\n\n### Usage\n\nBefore mounting (rendering) your React application:\n\n```js\nimport { canvas } from '@instructure/ui-themes'\n\nReactDOM.render(\n  <EmotionThemeProvider theme={canvas}>\n    <App />\n  </EmotionThemeProvider>,\n  element\n)\n```\n\nTo override the variables:\n\n```js\nimport { canvas } from '@instructure/ui-themes'\nconst themeOverrides = { colors: { brand: 'red' } }\n\nReactDOM.render(\n  <EmotionThemeProvider theme={{ ...canvas, ...themeOverrides }}>\n    <App />\n  </EmotionThemeProvider>,\n  element\n)\n```\n\nTo use the high contrast theme:\n\n```js\nimport { canvasHighContrast } from '@instructure/ui-themes'\n\nReactDOM.render(\n  <EmotionThemeProvider theme={canvasHighContrast}>\n    <App />\n  </EmotionThemeProvider>,\n  element\n)\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-themes.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-themes\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-themes/README.md","extension":".md","srcPath":"packages/ui-themes/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-themes/README.md","packageName":"@instructure/ui-themes","requirePath":"@instructure/ui-themes/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-themes/README.md').default","esPath":"@instructure/ui-themes/README","id":"ui-themes","title":"ui-themes"},"ui-time-select":{"description":"\n## ui-time-select\n\n[![npm][npm]][npm-url]\n[![build-status][build-status]][build-status-url]\n[![MIT License][license-badge]][LICENSE]\n[![Code of Conduct][coc-badge]][coc]\n\nA component for selecting time values.\n\n### Components\nThe `ui-time-select` package contains the following:\n- [TimeSelect](#TimeSelect)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-time-select\n```\n\n### Usage\n```js\nimport React from 'react'\nimport { TimeSelect } from '@instructure/ui-time-select'\n\nconst MyTimeSelect = () => {\n  return (\n    <TimeSelect renderLabel=\"Time Select\" />\n  )\n}\n```\nFor detailed usage and documentation, see TimeSelect examples.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-time-select.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-time-select\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-time-select/README.md","extension":".md","srcPath":"packages/ui-time-select/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-time-select/README.md","packageName":"@instructure/ui-time-select","requirePath":"@instructure/ui-time-select/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-time-select/README.md').default","esPath":"@instructure/ui-time-select/README","id":"ui-time-select","title":"ui-time-select"},"ui-toggle-details":{"description":"\n## ui-toggle-details\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA styled toggleable, accordion-like component.\n\n### Components\nThe `ui-toggle-details` package contains the following:\n- [ToggleDetails](#ToggleDetails)\n- [ToggleGroup](#ToggleGroup)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-toggle-details\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { ToggleDetails } from '@instructure/ui-toggle-details'\n\nconst MyToggleDetails = () => {\n  return (\n    <ToggleDetails summary=\"Hello toggle\">\n      <Text>Hello details</Text>\n    </ToggleDetails>\n  )\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-toggle-details.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-toggle-details\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-toggle-details/README.md","extension":".md","srcPath":"packages/ui-toggle-details/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-toggle-details/README.md","packageName":"@instructure/ui-toggle-details","requirePath":"@instructure/ui-toggle-details/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-toggle-details/README.md').default","esPath":"@instructure/ui-toggle-details/README","id":"ui-toggle-details","title":"ui-toggle-details"},"ui-token-scripts":{"description":"\n## ui-token-scripts\n\n[![npm][npm]][npm-url]\n[![build-status][build-status]][build-status-url]\n[![MIT License][license-badge]][LICENSE]\n[![Code of Conduct][coc-badge]][coc]\n\nUtility scripts for generating cross-platform tokens from InstUI themes.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-token-scripts\n```\n\n### Supported Platforms & Languages\n\n`ui-token-scripts` currently only targets SCSS. In the future, we will explore adding support for additional platforms and languages.\n\n\n### Available Commands\n\n#### `generate-tokens <options>`\n\nGenerate cross-platform design tokens for the given theme.\n\n#### `generate-all-tokens`\n\nGenerate cross-platform design tokens for all themes in configuration.\n\n**Note**: Project root must contain a configuration file containing a collection of configuration objects. This configuration may be leveraged to support theme-specific platform targeting in the future. \n\n```\n// ui-token-scripts.config.js\n\nmodule.exports = [\n  {\n    themeKey: 'canvas',\n    tokensPackage: '@instructure/ui-theme-tokens',\n    tokensPath: 'lib/canvas',\n  },\n  {\n    themeKey: 'canvas-ams',\n    tokensPackage: '@instructure/ui-theme-tokens',\n    tokensPath: 'lib/canvas-ams',\n  },\n]\n```\n\n### Documentation\n\nFor more documentation on available options and parameters for individual commands run:\n\n```sh\nui-token-scripts <command> --help\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-token-scripts.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-token-scripts\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-token-scripts/README.md","extension":".md","srcPath":"packages/ui-token-scripts/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-token-scripts/README.md","packageName":"@instructure/ui-token-scripts","requirePath":"@instructure/ui-token-scripts/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-token-scripts/README.md').default","esPath":"@instructure/ui-token-scripts/README","id":"ui-token-scripts","title":"ui-token-scripts"},"ui-tooltip":{"description":"\n## ui-tooltip\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA component for showing small text-only overlays on hover/focus.\n\n### Components\nThe `ui-tooltip` package contains the following:\n- [Tooltip](#Tooltip)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-tooltip\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { Tooltip } from '@instructure/ui-tooltip'\n\nconst MyTooltip = () => {\n  return (\n    <Tooltip renderTip=\"Hello world\">\n      Hover or focus me\n    </Popover>\n  )\n}\n```\nFor detailed usage and documentation, see Tooltip examples.\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-tooltip.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-tooltip\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-tooltip/README.md","extension":".md","srcPath":"packages/ui-tooltip/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tooltip/README.md","packageName":"@instructure/ui-tooltip","requirePath":"@instructure/ui-tooltip/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tooltip/README.md').default","esPath":"@instructure/ui-tooltip/README","id":"ui-tooltip","title":"ui-tooltip"},"ui-tray":{"description":"\n## ui-tray\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nTray component for secondary/menu content.\n\n### Components\nThe `ui-tray` package contains the following:\n- [Tray](#Tray)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-tray\n```\n\n### Usage\nFor detailed usage and documentation, see Tray examples.\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-tray.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-tray\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-tray/README.md","extension":".md","srcPath":"packages/ui-tray/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tray/README.md","packageName":"@instructure/ui-tray","requirePath":"@instructure/ui-tray/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tray/README.md').default","esPath":"@instructure/ui-tray/README","id":"ui-tray","title":"ui-tray"},"ui-tree-browser":{"description":"\n## ui-tree-browser\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA component for displaying a hierarchical view of information.\n\n### Components\nThe `ui-tree-browser` package contains the following:\n- [TreeBrowser](#TreeBrowser)\n\n### Installation\n\n```sh\nyarn add @instructure/ui-tree-browser\n```\n\n### Usage\n\n```js\nimport React from 'react'\nimport { TreeBrowser } from '@instructure/ui-tree-browser'\n\nconst MyTreeBrowser = () => {\n  return (\n    <TreeBrowser\n      collections={{ 1: { id: 1, name: \"Collection\", items: [1], descriptor: \"My Collection\" }}}\n      items={{ 1: { id: 1, name: \"Item\"}}}\n    />\n  )\n}\n```\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-tree-browser.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-tree-browser\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-tree-browser/README.md","extension":".md","srcPath":"packages/ui-tree-browser/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tree-browser/README.md","packageName":"@instructure/ui-tree-browser","requirePath":"@instructure/ui-tree-browser/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tree-browser/README.md').default","esPath":"@instructure/ui-tree-browser/README","id":"ui-tree-browser","title":"ui-tree-browser"},"ui-truncate-text":{"description":"\n## ui-truncate-text\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA TruncateText component made by Instructure Inc.\n\n\n### Components\n\nThe `ui-truncate-text` package contains the following:\n- [TruncateText](#TruncateText)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-truncate-text\n```\n\n### Usage\n```js\n---\nexample: false\n---\nimport React from 'react'\nimport { TruncateText } from '@instructure/ui-truncate-text'\n\nconst MyTruncateText = () => {\n  return (\n    <TruncateText\n      position=\"middle\"\n      truncate=\"word\"\n    >\n      <span>This line of text should be truncated from the middle of the string <strong>instead of the end.</strong></span>\n    </TruncateText>\n  )\n}\n```\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-truncate-text.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-truncate-text\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-truncate-text/README.md","extension":".md","srcPath":"packages/ui-truncate-text/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-truncate-text/README.md","packageName":"@instructure/ui-truncate-text","requirePath":"@instructure/ui-truncate-text/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-truncate-text/README.md').default","esPath":"@instructure/ui-truncate-text/README","id":"ui-truncate-text","title":"ui-truncate-text"},"ui-upgrade-scripts":{"description":"\n## ui-upgrade-scripts\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA collection of UI scripts and utils to automate upgrades.\n\n#### Using npx\n```bash\n$ npx @instructure/ui-upgrade-scripts upgrade-dependencies --deps react react-dom\n```\n\n#### Globally installing `ui-upgrade-scripts` with `yarn` or `npm`\n```bash\n$ yarn global add @instructure/ui-upgrade-scripts\n```\nor\n```bash\n$ npm install -g @instructure/ui-upgrade-scripts\n```\nYou now have access to `ui-upgrade-scripts` commands\n```bash\nui-upgrade-scripts upgrade-dependencies --deps classnames keycode\n```\n\n### Available commands\n* __upgrade-dependencies__ | Upgrade dependencies to a specified version or latest (if no version is specified)\n\n### Documentation\n\nFor more documentation on available options and parameters for individual commands do:\n\n```sh\nui-upgrade-scripts <command> --help\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-upgrade-scripts.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-upgrade-scripts\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-upgrade-scripts/README.md","extension":".md","srcPath":"packages/ui-upgrade-scripts/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-upgrade-scripts/README.md","packageName":"@instructure/ui-upgrade-scripts","requirePath":"@instructure/ui-upgrade-scripts/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-upgrade-scripts/README.md').default","esPath":"@instructure/ui-upgrade-scripts/README","id":"ui-upgrade-scripts","title":"ui-upgrade-scripts"},"ui-utils":{"description":"\n## ui-utils\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\n### Installation\n\n```sh\nyarn add @instructure/ui-utils\n```\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-utils.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-utils\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-utils/README.md","extension":".md","srcPath":"packages/ui-utils/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/README.md","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/README.md').default","esPath":"@instructure/ui-utils/README","id":"ui-utils","title":"ui-utils"},"ui-view":{"description":"\n## ui-view\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA component for basic styles including spacing, sizing, borders, display, positioning, and focus states.\n\n### Components\nThe `ui-view` package contains the following:\n- [ContextView](#ContextView)\n- [View](#View)\n\n\n### Installation\n\n```sh\nyarn add @instructure/ui-view\n```\n\n### Usage\n```js\n---\nexample: false\n---\nimport React from 'react'\nimport { View } from '@instructure/ui-view'\n\nconst MyView = () => {\n  return (\n    <View as=\"div\" padding=\"small\" borderWidth=\"small\">\n      Hello World\n    </View>\n  )\n}\n```\n\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-view.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-view\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-view/README.md","extension":".md","srcPath":"packages/ui-view/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-view/README.md","packageName":"@instructure/ui-view","requirePath":"@instructure/ui-view/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-view/README.md').default","esPath":"@instructure/ui-view/README","id":"ui-view","title":"ui-view"},"ui-webpack-config":{"description":"\n## ui-webpack-config\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][license]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA shared webpack config made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/ui-webpack-config\n```\n\n### Usage\n\nIn your Webpack config file:\n\n```js\n/* webpack.config.js */\nconst baseConfig = require('@instructure/ui-webpack-config')\nmodule.exports = {\n  ...baseConfig,\n  plugins: [...baseConfig.plugins, ...myPlugins],\n  module: {\n    // note: put your rules first\n    rules: [...myModuleRules, ...baseConfig.module.rules]\n  },\n  resolveLoader: {\n    alias: { ...baseConfig.resolveLoader.alias, ...myLoaderAliases }\n  }\n}\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/ui-webpack-config.svg\n[npm-url]: https://npmjs.com/package/@instructure/ui-webpack-config\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui 'Travis CI'\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","order":"","relativePath":"packages/ui-webpack-config/README.md","extension":".md","srcPath":"packages/ui-webpack-config/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-webpack-config/README.md","packageName":"@instructure/ui-webpack-config","requirePath":"@instructure/ui-webpack-config/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-webpack-config/README.md').default","esPath":"@instructure/ui-webpack-config/README","id":"ui-webpack-config","title":"ui-webpack-config"},"uid_README":{"description":"\n## uid\n\n[![npm][npm]][npm-url]&nbsp;\n[![build-status][build-status]][build-status-url]&nbsp;\n[![MIT License][license-badge]][LICENSE]&nbsp;\n[![Code of Conduct][coc-badge]][coc]\n\nA unique (CSS-safe) id generator made by Instructure Inc.\n\n### Installation\n\n```sh\nyarn add @instructure/uid\n```\n\n### Usage\n\n```javascript\nimport uid from '@instructure/uid'\n\nconst id = uid()\n```\n\n[npm]: https://img.shields.io/npm/v/@instructure/uid.svg\n[npm-url]: https://npmjs.com/package/@instructure/uid\n\n[build-status]: https://travis-ci.org/instructure/instructure-ui.svg?branch=master\n[build-status-url]: https://travis-ci.org/instructure/instructure-ui \"Travis CI\"\n\n[license-badge]: https://img.shields.io/npm/l/instructure-ui.svg?style=flat-square\n[license]: https://github.com/instructure/instructure-ui/blob/master/LICENSE\n\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/instructure/instructure-ui/blob/master/CODE_OF_CONDUCT.md\n","category":"packages","id":"uid_README","title":"uid","order":"","relativePath":"packages/uid/README.md","extension":".md","srcPath":"packages/uid/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/uid/README.md","packageName":"@instructure/uid","requirePath":"@instructure/uid/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/uid/README.md').default","esPath":"@instructure/uid/README"},"EmotionThemeProvider__README":{"description":"\nThe `<EmotionThemeProvider/>` component provides a way to set the theme for our app or override the default theme properties for all themeable child components using the [withStyle](#withStyle) decorator.\n\nNote that `<EmotionThemeProvider/>` components can be nested and that\ntheme properties will fall back to the parent theme, or the default `canvas` theme when they are not set.\n\n`<EmotionThemeProvider/>` is a wrapper for the [ThemeProvider](https://emotion.sh/docs/theming#themeprovider-reactcomponenttype) of Emotion library that we use under the hood for theming and applying css styles to our components.\n\n### Applying theme to the application:\n\nTo apply a theme to whole app, you need to import `<EmotionThemeProvider/>` and the theme you want to use from `@instructure/ui-themes` (or use your own compatible theme), and wrap your app in the theme provider.\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { instructure } from '@instructure/ui-themes'\nimport { EmotionThemeProvider } from '@instructure/emotion'\n\nimport { App } from './App'\n\nReactDOM.render(\n  <EmotionThemeProvider theme={instructure}>\n    <App />\n  </EmotionThemeProvider>,\n  document.getElementById('app')\n)\n```\n\n### Nesting theme providers\n\n```js\n<EmotionThemeProvider theme={canvas}>\n  <Heading>I should have \"canvas\" font family.</Heading>\n\n  <EmotionThemeProvider theme={instructure}>\n    <Heading>I should have \"instructure\" font family.</Heading>\n  </EmotionThemeProvider>\n</EmotionThemeProvider>\n```\n\n### Global overrides\n\n`<EmotionThemeProvider/>`accepts override objects too. Here you can override any theme variable inside that provider.\n\n```js\n---\nexample: true\n---\n<div>\n  <Heading level=\"h3\" margin=\"small small medium\">I should have default font family.</Heading>\n\n  <EmotionThemeProvider\n    theme={{\n      typography: { fontFamily: 'monospace' }\n    }}\n  >\n    <Heading level=\"h3\" margin=\"small small\">I should have monospace font family.</Heading>\n  </EmotionThemeProvider>\n</div>\n```\n\n### Theme overrides\n\nIn case you are using multiple themes in your app, you can target a specific theme to override with the `themeOverrides` key, and under the name (key) of the theme.\n\n```js\n---\n  example: true\n---\n<div>\n  <Alert variant=\"info\" margin=\"small\">\n    I am a default style Alert.\n  </Alert>\n\n  <EmotionThemeProvider\n    theme={{\n      themeOverrides: {\n        canvas: {\n          colors: { backgroundLightest: 'orange' }\n        },\n        'canvas-high-contrast': {\n          colors: { backgroundLightest: 'red' }\n        },\n        instructure: {\n          colors: { backgroundLightest: 'green' }\n        }\n      }\n    }}\n  >\n    <Alert variant=\"info\" margin=\"small\">\n      My background should be:\n      <List margin=\"xx-small\">\n        <List.Item><strong>orange</strong> in 'canvas',</List.Item>\n        <List.Item><strong>red</strong> in 'canvas-high-contrast',</List.Item>\n        <List.Item>and <strong>green</strong> in 'instructure' theme.</List.Item>\n      </List>\n    </Alert>\n  </EmotionThemeProvider>\n</div>\n```\n\n### Global component theme overrides\n\nYou can globally override the themeVariables of specific components too with the `componentOverrides` key.\n\n**Important:** these variables are the components own theme variables set in the `theme.js` of the component.\n\nThe `componentOverrides` can also be nested inside `themeOverrides`.\n\n**Note:** these overrides are handled in the `getComponentThemeOverride` style util method, not in\n`EmotionThemeProvider`.\n\n```js\n---\n  example: true\n---\n  <div>\n    <Alert variant=\"info\" margin=\"small\">\n      I am a default style Alert.\n    </Alert>\n\n    <EmotionThemeProvider\n      theme={{\n        componentOverrides: {\n          Alert: {\n            infoIconBackground: \"darkblue\",\n            infoBorderColor: \"darkblue\"\n          }\n        },\n        themeOverrides: {\n          canvas: {\n            colors: {\n              backgroundLightest: 'lightgray'\n            },\n            componentOverrides: {\n              Alert: {\n                warningIconBackground: \"deeppink\",\n                warningBorderColor: \"deeppink\"\n              }\n            },\n          }\n        }\n      }}\n    >\n      <Alert variant=\"success\" margin=\"small\">\n        My background should be light gray in 'canvas' theme.\n      </Alert>\n\n      <Alert variant=\"warning\" margin=\"small\">\n        My background should be light gray and the icon background should be pink in 'canvas' theme.\n      </Alert>\n\n      <Alert variant=\"info\" margin=\"small\">\n        My background should be light gray in 'canvas' theme, and the icon background should be dark blue in any theme.\n      </Alert>\n    </EmotionThemeProvider>\n  </div>\n```\n","describes":"EmotionThemeProvider","order":"","relativePath":"packages/emotion/src/EmotionThemeProvider/README.md","extension":".md","srcPath":"packages/emotion/src/EmotionThemeProvider/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/emotion/src/EmotionThemeProvider/README.md","packageName":"@instructure/emotion","requirePath":"@instructure/emotion/lib/EmotionThemeProvider/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/emotion/src/EmotionThemeProvider/README.md').default","esPath":"@instructure/emotion/es/EmotionThemeProvider/README","id":"EmotionThemeProvider__README","title":"EmotionThemeProvider__README"},"AccessibleContent__README":{"description":"\nAccessibleContent provides a textual alternative to the presentational content it is wrapping. It utilizes the `alt` prop that is very similar in concept to the 'alt' attribute of an HTML <img> tag.\n\nThe content should be descriptive enough that a screen reader user gets the gist purely through text. Note the caveats on hiding content from screen readers. (see [PresentationContent](#PresentationContent))\n\n```js\n---\nexample: true\n---\n<AccessibleContent alt=\"Alternative text for a screen reader only\">\n  <Text>\n    Presentational content goes here\n  </Text>\n</AccessibleContent>\n```\n","describes":"AccessibleContent","order":"","relativePath":"packages/ui-a11y-content/src/AccessibleContent/README.md","extension":".md","srcPath":"packages/ui-a11y-content/src/AccessibleContent/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-content/src/AccessibleContent/README.md","packageName":"@instructure/ui-a11y-content","requirePath":"@instructure/ui-a11y-content/lib/AccessibleContent/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-content/src/AccessibleContent/README.md').default","esPath":"@instructure/ui-a11y-content/es/AccessibleContent/README","id":"AccessibleContent__README","title":"AccessibleContent__README"},"PresentationContent__README":{"description":"\nA component that *tries* to hide itself from screen readers, absolutely\nexpecting that you're providing a more accessible version of the resource\nusing something like a ScreenReaderContent component.\n\nBe warned that this does not totally prevent all screen readers from\nseeing this content in all modes. For example, VoiceOver in OS X will\nstill see this element when running in the \"Say-All\" mode and read it\nalong with the accessible version you're providing.\n\nUse of this component is discouraged unless there's no alternative\n(e.g. for data visualizations)\n\n```js\n---\nexample: true\n---\n<PresentationContent>\n  <Text>\n    Presentational content here\n  </Text>\n</PresentationContent>\n```\n","describes":"PresentationContent","order":"","relativePath":"packages/ui-a11y-content/src/PresentationContent/README.md","extension":".md","srcPath":"packages/ui-a11y-content/src/PresentationContent/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-content/src/PresentationContent/README.md","packageName":"@instructure/ui-a11y-content","requirePath":"@instructure/ui-a11y-content/lib/PresentationContent/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-content/src/PresentationContent/README.md').default","esPath":"@instructure/ui-a11y-content/es/PresentationContent/README","id":"PresentationContent__README","title":"PresentationContent__README"},"ScreenReaderContent__README":{"description":"\nThe ScreenReaderContent component renders content that is accessible to\nscreen readers, but is not visible.\n\n```js\n---\nexample: true\n---\n<ScreenReaderContent>\n  This content is not visible.\n</ScreenReaderContent>\n```\n","describes":"ScreenReaderContent","order":"","relativePath":"packages/ui-a11y-content/src/ScreenReaderContent/README.md","extension":".md","srcPath":"packages/ui-a11y-content/src/ScreenReaderContent/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-content/src/ScreenReaderContent/README.md","packageName":"@instructure/ui-a11y-content","requirePath":"@instructure/ui-a11y-content/lib/ScreenReaderContent/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-content/src/ScreenReaderContent/README.md').default","esPath":"@instructure/ui-a11y-content/es/ScreenReaderContent/README","id":"ScreenReaderContent__README","title":"ScreenReaderContent__README"},"Alert__README":{"description":"\nThe Alert component can be used to notify the user. It supports several\nvariants to provide context to the message.\n\nAlert can optionally render as a dismissible 'dialog' with a close button.\n\nThe `margin` prop can be added to give\nspace above or below the alert.\n\n```js\n---\nexample: true\n---\n<div>\n  <Alert\n    variant=\"success\"\n    renderCloseButtonLabel=\"Close\"\n    margin=\"small\"\n    transition=\"none\"\n  >\n    Sample success alert text. I will close w/o a transition out if you close me\n  </Alert>\n  <Alert\n    variant=\"info\"\n    renderCloseButtonLabel=\"Close\"\n    margin=\"small\"\n  >\n    Sample info text. I will fade out if you close me.\n  </Alert>\n  <Alert\n    variant=\"error\"\n    renderCloseButtonLabel=\"Close\"\n    margin=\"small\"\n  >\n    Sample error text that continues for a while\n    to demonstrate what happens when the content stretches over\n    several lines. It really does take a lot of prose to get the\n    text to wrap when you are on a high resolution screen.\n  </Alert>\n  <Alert\n    variant=\"warning\"\n    margin=\"small\"\n  >\n    Sample warning text. This alert is not dismissible and cannot be closed.\n  </Alert>\n</div>\n```\n\nThe `timeout` prop can be used to automatically dismiss an alert after a time.\n\n```js\n---\nexample: true\n---\n<Alert\n  variant=\"info\"\n  margin=\"small\"\n  timeout={5000}\n>\n  Sample info text. I will fade out after 5 seconds\n</Alert>\n```\n\nGiven a `liveRegion` property, Alerts will guarantee a screenreader will announce their text.\nUse `liveRegionPoliteness` to choose an `aria-live` politeness setting of either `polite`\nor `assertive` (default). Use `isLiveRegionAtomic` to choose an `aria-atomic` setting \nof either `true` or `false` (default).\n\nDue to a bug in some screen readers, the live region element should be static, either through\nserver rendering or included in the static HTML file for the app. The Alert component will\nensure that element has the correct ARIA attributes.\n\nFor more information about live regions, see\n[this MDN article](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions).\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      alerts: []\n    }\n\n    this.i = 0\n    this.variants = ['info', 'success', 'warning', 'error']\n    this.politeness = ['polite', 'assertive']\n  }\n\n  addAlert () {\n    const variant = this.variants[this.i++ % this.variants.length]\n    const politeness = Math.random() < 0.5 ? 'polite' : 'assertive'\n    const alerts = [...this.state.alerts]\n    const key = new Number(this.i)\n    alerts.push({\n      key,\n      variant,\n      politeness,\n      onDismiss: () => this.closeAlert(key)\n    })\n    this.setState({ alerts })\n  }\n\n  closeAlert (key) {\n    const alerts = this.state.alerts.filter((alert) => {\n      return alert.key !== key\n    })\n    this.setState({ alerts })\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.addAlert.bind(this)}>Add Alert</Button>\n        {this.state.alerts.map((alert) => {\n          return (\n            <View\n              key={alert.key}\n              display=\"block\"\n              margin=\"small 0\"\n            >\n              <Alert\n                variant={alert.variant}\n                renderCloseButtonLabel=\"Close\"\n                onDismiss={alert.onDismiss}\n                liveRegion={() => document.getElementById('flash-messages')}\n                liveRegionPoliteness={alert.politeness}\n                margin=\"small 0\"\n              >\n                This is {alert.politeness === 'polite' ? 'a' : 'an'} {alert.politeness} {alert.variant} alert\n              </Alert>\n            </View>\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nrender(<Example />)\n```\n\nAlerts can be used to emit screenreader only messages too\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      message: null,\n      count: 1\n    }\n  }\n\n  changeMessage = () => {\n    this.setState({\n      message: `this is message ${this.state.count}`,\n      count: this.state.count + 1\n      })\n  }\n\n  clearMessage  =() => {\n    this.setState({\n      message: null,\n      count: this.state.count + 1})\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.changeMessage}>Change Message</Button>\n        <Button onClick={this.clearMessage} margin=\"0 0 0 small\">Clear Message</Button>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          isLiveRegionAtomic\n          screenReaderOnly\n         >\n            {this.state.message}\n        </Alert>\n      </div>\n    );\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use the Info alert to notify the user of more information</Figure.Item>\n    <Figure.Item>Use the Error alert to notify user of an error</Figure.Item>\n    <Figure.Item>Use the Warning alert to notify user of a warning</Figure.Item>\n    <Figure.Item>Use the Success alert to notify user of a success event or action</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Have alert messaging that is more than two lines long</Figure.Item>\n    <Figure.Item>Overuse alerts on the same page</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>If the alert requires user interaction to be dismissed, the alert should behave as a modal dialog. Focus should be set to the alert when it appears, remain in the alert until it is dismissed, and return to a logical place on the page when the alert is dismissed</Figure.Item>\n    <Figure.Item>aria-live=\"polite\" alerts will only be announced if the user is not currently doing anything. Polite should be used in most situations involving live regions that present new info to users</Figure.Item>\n    <Figure.Item>aria-live=\"assertive\" alerts will be announced to the user as soon as possible, but not necessarily immediately. Assertive should be used if there is information that a user must know about right away, for example, a warning message in a form that does validation on the fly</Figure.Item>\n    <Figure.Item>The aria-atomic=BOOLEAN is used to set whether or not the screen reader should always present the live region as a whole, even if only part of the region changes. The possible settings are: false or true. The default setting is false.</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Alert","order":"","relativePath":"packages/ui-alerts/src/Alert/README.md","extension":".md","srcPath":"packages/ui-alerts/src/Alert/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-alerts/src/Alert/README.md","packageName":"@instructure/ui-alerts","requirePath":"@instructure/ui-alerts/lib/Alert/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-alerts/src/Alert/README.md').default","esPath":"@instructure/ui-alerts/es/Alert/README","id":"Alert__README","title":"Alert__README"},"Avatar__README":{"description":"\nWhen an image src is not supplied the user's initials will display. The avatar can be `circle` _(default)_ or `rectangle`. Use the `margin` prop to add space between Avatar and other content.\n\n```js\n---\nexample: true\n---\n<div>\n  <Avatar name=\"Sarah Robinson\" src={avatarSquare} margin=\"0 small 0 0\" />\n  <Avatar name=\"Sarah Robinson\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Kyle Montgomery\" src={avatarSquare} shape=\"rectangle\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Kyle Montgomery\" shape=\"rectangle\" />\n</div>\n```\n\nThe `size` prop allows you to select from `x-small`, `small`, `medium`, `large`, and `x-large`. If the `auto` prop is set, the avatar size will adjust according to the font-size\nof its container.\n\n```js\n---\nexample: true\n---\n<div>\n  <Avatar name=\"James Arias\" size=\"x-small\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Charles Kimball\" size=\"small\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Melissa Reed\" size=\"medium\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Heather Wheeler\" size=\"large\" margin=\"0 small 0 0\" />\n  <Avatar name=\"David Herbert\" size=\"x-large\" />\n</div>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Ensure the appropriate size is being used for its placement (in a table, stand-alone, etc…)</Figure.Item>\n    <Figure.Item>Use circle variant in Canvas</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use inline in sentence</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Avatar","order":"","relativePath":"packages/ui-avatar/src/Avatar/README.md","extension":".md","srcPath":"packages/ui-avatar/src/Avatar/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-avatar/src/Avatar/README.md","packageName":"@instructure/ui-avatar","requirePath":"@instructure/ui-avatar/lib/Avatar/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-avatar/src/Avatar/README.md').default","esPath":"@instructure/ui-avatar/es/Avatar/README","id":"Avatar__README","title":"Avatar__README"},"Badge__README":{"description":"\n### Making badges accessible\nBadge counts are automatically fed to screenreaders through the `aria-describedby`\nattribute. Often a stand alone number doesn't give a screenreader user enough context (_\"3\" vs. \"You have 3 unread emails\"_).\nThe examples below use the `formatOutput` prop to make the badge more screenreader-friendly.\n\n```js\n---\nexample: true\n---\n  <div>\n    <Badge\n      count={99}\n      pulse\n      margin=\"0 medium 0 0\"\n      formatOutput={function (formattedCount) {\n        return (\n          <AccessibleContent alt={`You have ${formattedCount} new edits to review`}>\n            {formattedCount}\n          </AccessibleContent>\n        )\n      }}\n    >\n      <IconButton\n        renderIcon={IconUserSolid}\n        screenReaderLabel=\"Edits\"\n        withBorder={false}\n        withBackground={false}\n      />\n    </Badge>\n    <Badge\n      type=\"notification\"\n      formatOutput={function () {\n        return <ScreenReaderContent>You have new edits to review</ScreenReaderContent>\n      }}\n    >\n      <IconButton\n        renderIcon={IconUserSolid}\n        screenReaderLabel=\"Edits\"\n        withBorder={false}\n        withBackground={false}\n      />\n    </Badge>\n  </div>\n```\n\n> Note the use of the `pulse` prop in the first example to make the Badge slowly pulse twice on mount.\n\n### Limit the count\n\nUse the `countUntil` prop to set a limit for the count. The default for `formatOverflowText` is a \"+\" symbol.\n\n```js\n---\nexample: true\n---\n<div>\n  <Badge count={105} countUntil={100} margin=\"0 medium 0 0\">\n    <Button>Inbox</Button>\n  </Badge>\n  <Badge count={250} countUntil={100}>\n    <Button>Assignments</Button>\n  </Badge>\n</div>\n```\n\n### Standalone, notification and color variants\n\nSetting the `standalone` prop to `true` renders Badge as a standalone\nelement that is not positioned relative to a child and displays inline-block.\nSetting `type=\"notification\"` will render small circles that should not contain any visible text.\n\n```js\n---\nexample: true\n---\n<div>\n  <Badge standalone count={6} margin=\"0 small 0 0\" />\n  <Badge standalone variant=\"success\" count={12} margin=\"0 small 0 0\"  />\n  <Badge standalone variant=\"danger\" count={18} countUntil={10} margin=\"0 small 0 0\" />\n  <Badge\n    type=\"notification\"\n    standalone\n    formatOutput={function () {\n      return <ScreenReaderContent>This is a notification</ScreenReaderContent>\n    }}\n    margin=\"0 small 0 0\"\n  />\n  <Badge\n    variant=\"success\"\n    type=\"notification\"\n    standalone\n    formatOutput={function () {\n      return <ScreenReaderContent>This is a success notification</ScreenReaderContent>\n    }}\n    margin=\"0 small 0 0\"\n  />\n  <Badge\n    variant=\"danger\"\n    type=\"notification\"\n    standalone\n    formatOutput={function () {\n      return <ScreenReaderContent>This is a danger notification</ScreenReaderContent>\n    }}\n  />\n</div>\n```\n\n### Placement\n\nDefault is `top end`. __Note that standalone badges can't be placed.__\n\n```js\n---\nexample: true\nrender: false\n---\nconst EditButton = () => (\n  <IconButton\n    renderIcon={IconUserSolid}\n    screenReaderLabel=\"Edit page\"\n    withBorder={false}\n    withBackground={false}\n  />\n)\n\nconst Example = () => (\n  <div>\n    <View as=\"div\" margin=\"0 0 medium\">\n      <Badge count={21} margin=\"0 large 0 0\" placement=\"top start\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} margin=\"0 large 0 0\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} margin=\"0 large 0 0\" placement=\"bottom start\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} margin=\"0 large 0 0\" placement=\"bottom end\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} margin=\"0 large 0 0\" placement=\"start center\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} placement=\"end center\">\n        <EditButton />\n      </Badge>\n    </View>\n    <View as=\"div\">\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        placement=\"top start\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        placement=\"bottom start\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        placement=\"bottom end\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        placement=\"start center\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        placement=\"end center\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n    </View>\n  </div>\n)\n\nrender(<Example />)\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use count for up to 2 digits of numbers</Figure.Item>\n    <Figure.Item>Use \"+\" symbol for more than 2 digits (99+)</Figure.Item>\n    <Figure.Item>Use for numeric count (like unread messages)</Figure.Item>\n    <Figure.Item>Provide accessible text for what the number represents</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use as a status indicator refer to Pill</Figure.Item>\n    <Figure.Item>Use for text strings</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Badge","order":"","relativePath":"packages/ui-badge/src/Badge/README.md","extension":".md","srcPath":"packages/ui-badge/src/Badge/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-badge/src/Badge/README.md","packageName":"@instructure/ui-badge","requirePath":"@instructure/ui-badge/lib/Badge/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-badge/src/Badge/README.md').default","esPath":"@instructure/ui-badge/es/Badge/README","id":"Badge__README","title":"Badge__README"},"Billboard__README":{"description":"### Static Billboard\nUsed for empty states, 404 pages, redirects, etc.\n\n```js\n---\nexample: true\n---\n<Billboard\n  size=\"medium\"\n  heading=\"Well, this is awkward.\"\n  message=\"Think there should be something here?\"\n  hero={<Img src={placeholderImage(900, 500)} />}\n/>\n```\n\n### Structure\n\n- If Billboard has an `href` prop set, it will render as a link;\nif an `onClick` prop is set, the component will render as a button.\n- Use the `message` prop for your link or button text/call to action (Note:\ndon't pass interactive content to the `message` prop if you have set the `href`\nor `onClick` props).\n- Use the `size` prop to adjust the size of the icon and text.\n- Pass [Instructure icons](#icons-react) to the `hero` property via a function\n_(see examples)_, and they will be sized correctly based on the Billboard's\n`size`.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" width=\"400px\" withVisualDebug>\n  <Billboard\n    margin=\"large\"\n    heading=\"404\"\n    message=\"Billboard is now a button\"\n    size=\"small\"\n    onClick={function () {\n      alert('This Billboard was clicked!')\n    }}\n    hero={(size) => <IconUserLine size={size} />}\n  />\n</View>\n```\n```js\n---\nexample: true\n---\n<View as=\"div\" width=\"600px\" withVisualDebug>\n  <Billboard\n    margin=\"large\"\n    message=\"Click this link\"\n    href=\"http://instructure.com\"\n    hero={(size) => <IconGradebookLine size={size} />}\n  />\n</View>\n```\n```js\n---\nexample: true\n---\n<Billboard\n  readOnly\n  message=\"Create a new Module\"\n  size=\"large\"\n  onClick={function () {\n    alert('This Billboard was clicked!')\n  }}\n  hero={(size) => <IconPlusLine size={size} />}\n/>\n```\n\n\n### Disabled Billboard\n```js\n---\nexample: true\n---\n<Billboard\n  size=\"small\"\n  heading=\"This is disabled\"\n  onClick={function () {\n    alert('This Billboard was clicked!')\n  }}\n  hero={(size) => <IconUserLine size={size} />}\n  disabled\n/>\n```\n","describes":"Billboard","order":"","relativePath":"packages/ui-billboard/src/Billboard/README.md","extension":".md","srcPath":"packages/ui-billboard/src/Billboard/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-billboard/src/Billboard/README.md","packageName":"@instructure/ui-billboard","requirePath":"@instructure/ui-billboard/lib/Billboard/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-billboard/src/Billboard/README.md').default","esPath":"@instructure/ui-billboard/es/Billboard/README","id":"Billboard__README","title":"Billboard__README"},"Breadcrumb__README":{"description":"\nBreadcrumbs enable users to quickly see their location within a path of navigation.\nLong breadcrumb text will be automatically truncated, ensuring the list always\nremains on a single line.\n\n**Breadcrumbs are best suited for tablet-sized (~768px) screens and larger.**\nFor smaller screens, use a [Link](#Link) that returns the user to the previous page or view.\nThe example below is implemented with [Responsive](#Responsive). Resize the browser window to see\nBreadcrumb become a Link at under 768px.\n\n```js\n---\nexample: true\n---\n<Responsive\n  query={{\n    tablet: { minWidth: 768 }\n  }}\n>\n  {(props, matches) => {\n    if (matches.includes('tablet')) {\n      return (\n        <Breadcrumb label=\"You are here:\">\n          <Breadcrumb.Link href=\"#\">Student Forecast</Breadcrumb.Link>\n          <Breadcrumb.Link href=\"#\">University of Utah</Breadcrumb.Link>\n          <Breadcrumb.Link href=\"#\">University of Utah Colleges</Breadcrumb.Link>\n          <Breadcrumb.Link>College of Life Sciences</Breadcrumb.Link>\n        </Breadcrumb>\n      )\n    } else {\n      return (\n        <Link\n          href=\"#\"\n          isWithinText={false}\n          renderIcon={IconArrowOpenStartLine}\n        >\n          <TruncateText>University of Utah Colleges</TruncateText>\n        </Link>\n      )\n    }\n  }}\n</Responsive>\n```\n\nChange the `size` prop to control the font-size of the breadcrumbs (default is `medium`).\n\n```js\n---\nexample: true\n---\n<div>\n  <Breadcrumb size=\"small\" label=\"You are here:\" margin=\"none none medium\">\n    <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">English 204</Breadcrumb.Link>\n      <Breadcrumb.Link\n        onClick={function () {\n          console.log(\"This Breadcrumb.Link was clicked!\")\n        }}\n      >\n        Exploring John Updike\n      </Breadcrumb.Link>\n    <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">The Rabbit Novels</Breadcrumb.Link>\n    <Breadcrumb.Link>Rabbit Is Rich</Breadcrumb.Link>\n  </Breadcrumb>\n  <View as=\"div\" width=\"40rem\">\n    <Breadcrumb label=\"You are here:\" margin=\"none none medium\">\n      <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">English 204</Breadcrumb.Link>\n        <Breadcrumb.Link\n          onClick={function () {\n            console.log(\"This Breadcrumb.Link was clicked!\")\n          }}\n        >\n          Exploring John Updike\n        </Breadcrumb.Link>\n      <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">The Rabbit Novels</Breadcrumb.Link>\n      <Breadcrumb.Link>Rabbit Is Rich</Breadcrumb.Link>\n    </Breadcrumb>\n  </View>\n  <Breadcrumb size=\"large\" label=\"You are here:\">\n    <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">English 204</Breadcrumb.Link>\n      <Breadcrumb.Link\n        onClick={function () {\n          console.log(\"This Breadcrumb.Link was clicked!\")\n        }}\n      >\n        Exploring John Updike\n      </Breadcrumb.Link>\n    <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">The Rabbit Novels</Breadcrumb.Link>\n    <Breadcrumb.Link>Rabbit Is Rich</Breadcrumb.Link>\n  </Breadcrumb>\n</div>\n```\n\n### Icons\nYou can include icons in `Breadcrumb.Link`:\n\n```js\n---\nexample: true\n---\n<Breadcrumb label=\"Breadcrumb with icons\">\n  <Breadcrumb.Link renderIcon={<IconBankLine size=\"small\" />} href=\"#Breadcrumb\">Item Bank</Breadcrumb.Link>\n  <Breadcrumb.Link renderIcon={<IconClockLine size=\"small\" />} onClick={() => {}}>History</Breadcrumb.Link>\n  <Breadcrumb.Link renderIcon={IconPlusLine} iconPlacement=\"end\">New Question</Breadcrumb.Link>\n</Breadcrumb>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Place Breadcrumb near the top of the page</Figure.Item>\n    <Figure.Item>Show hierarchy, not history</Figure.Item>\n    <Figure.Item>Keep Breadcrumb titles short but descriptive</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use Breadcrumb if you are taking users through a multi-step process</Figure.Item>\n    <Figure.Item>Use Breadcrumb in mobile layouts: use a Link to the previous page/view instead</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Breadcrumb","order":"","relativePath":"packages/ui-breadcrumb/src/Breadcrumb/README.md","extension":".md","srcPath":"packages/ui-breadcrumb/src/Breadcrumb/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-breadcrumb/src/Breadcrumb/README.md","packageName":"@instructure/ui-breadcrumb","requirePath":"@instructure/ui-breadcrumb/lib/Breadcrumb/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-breadcrumb/src/Breadcrumb/README.md').default","esPath":"@instructure/ui-breadcrumb/es/Breadcrumb/README","id":"Breadcrumb__README","title":"Breadcrumb__README"},"BaseButton__README":{"description":"\n`BaseButton` is a low level utility component used to compose Instructure UI buttons. In most cases, it should not be used directly.\nUse [Button](#Button), [IconButton](#IconButton), or [CondensedButton](#CondensedButton) instead.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" margin=\"medium\">\n  <BaseButton>Click me</BaseButton>\n</View>\n```\n","describes":"BaseButton","order":"","relativePath":"packages/ui-buttons/src/BaseButton/README.md","extension":".md","srcPath":"packages/ui-buttons/src/BaseButton/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/BaseButton/README.md","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/BaseButton/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/BaseButton/README.md').default","esPath":"@instructure/ui-buttons/es/BaseButton/README","id":"BaseButton__README","title":"BaseButton__README"},"Button__README":{"description":"\nButton allows users to perform actions or trigger changes. If selecting the Button causes the user to navigate to a different location, consider using the [Link](#Link) component instead.\n\n```js\n---\nexample: true\n---\n<Button>Hello{null}</Button>\n```\n\n### Color\n\nThe `color` prop will change the Button's color scheme.\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <Button color=\"primary\" margin=\"small\">Primary</Button>\n  <Button color=\"secondary\" margin=\"small\">Secondary</Button>\n  <Button color=\"success\" margin=\"small\">Success</Button>\n  <Button color=\"danger\" margin=\"small\">Danger</Button>\n  <Button color=\"primary-inverse\" margin=\"small\">Primary Inverse</Button>\n</View>\n```\n\n### Size\n\nTo specify the Button `size`, set the size prop to `small`, `medium` (default) or `large`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <Button size=\"small\" margin=\"small\">Small</Button>\n  <Button margin=\"small\">Medium</Button>\n  <Button size=\"large\" margin=\"small\">Large</Button>\n</View>\n```\n\n### Rendering icons in Buttons\n\nAn icon can be rendered alongside the Button content using the `renderIcon` prop. Use [IconButton](#IconButton) instead if your Button only displays an Icon with no other visual content.\n\n```js\n---\nexample: true\n---\n<Button renderIcon={IconAddLine}>Add Item</Button>\n```\n\n### Text wrapping\n\nJust like native HTML buttons, the Button text will wrap to the next line when it does not have enough room.\n\n```js\n---\nexample: true\n---\n<View\n  display=\"block\"\n  width=\"10rem\"\n  margin=\"small\"\n  padding=\"small none\"\n  withVisualDebug\n>\n  <Button color=\"primary\">\n    A Button With a Whole Lot of Text\n  </Button>\n</View>\n```\n\nIf you need to prevent text wrapping, you can use the [TruncateText](#TruncateText) util. You can also conditionally render a [Tooltip](#Tooltip) with the full text when truncation occurs.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    isTruncated: false\n  }\n\n  handleUpdate = (isTruncated) => {\n    if (this.state.isTruncated !== isTruncated) {\n      this.setState({ isTruncated })\n    }\n  }\n\n  renderButton () {\n    return (\n      <Button color=\"primary\">\n        <TruncateText onUpdate={this.handleUpdate}>\n          {this.props.message}\n        </TruncateText>\n      </Button>\n    )\n  }\n\n  render () {\n    return (\n      <View\n        display=\"block\"\n        width=\"10rem\"\n        margin=\"small\"\n        padding=\"small none\"\n        withVisualDebug\n      >\n        {this.state.isTruncated ? (\n          <Tooltip\n            renderTip={this.props.message}\n            mountNode={() => document.getElementById('main')}\n          >\n            { this.renderButton() }\n          </Tooltip>\n        ) : this.renderButton()}\n      </View>\n    )\n  }\n}\n\nrender(<Example message=\"A Button With a Whole Lot of Text\" />)\n```\n\n### Display\n\nBy default, the Button displays inline with other elements. If you need it to expand to fill the width of it's container, set the `display` prop to `block`.\n\n```js\n---\nexample: true\n---\n<View\n  display=\"block\"\n  width=\"30rem\"\n  margin=\"small\"\n  padding=\"small none\"\n  withVisualDebug\n>\n  <Button\n    renderIcon={IconUserLine}\n    display=\"block\"\n    textAlign=\"center\"\n    color=\"success\"\n  >\n    User Details\n  </Button>\n</View>\n```\n\n### Rendering Buttons without backgrounds\n\nUse backgroundless buttons for interfaces on dark backgrounds or when there is a need to deemphasize the button from another primary action on the page. Be sure to use border/text colors that meet the proper contrast ratios with whatever background they are placed on.\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <View display=\"inline-block\" background=\"primary\">\n    <Button renderIcon={IconAddLine} withBackground={false} color=\"primary\" margin=\"small\">Click here</Button>\n  </View>\n  <View display=\"inline-block\" background=\"primary-inverse\">\n    <Button renderIcon={IconAddLine} withBackground={false} color=\"primary-inverse\" margin=\"small\">Click here</Button>\n  </View>\n</View>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use 'Title Case' for button text</Figure.Item>\n    <Figure.Item>Use buttons with color set to <code>primary</code> only once for each section of content</Figure.Item>\n    <Figure.Item>Use buttons with color set to <code>primary</code> when the task of the view requires an action to be taken</Figure.Item>\n    <Figure.Item>Use the <code>success</code> and <code>danger</code> colors for grading activities</Figure.Item>\n    <Figure.Item>Use the <code>danger</code> color to warn the user of potentially destructive actions</Figure.Item>\n    <Figure.Item>Use a button with color set to <code>secondary</code> as a secondary or tertiary option for actions such as Cancel</Figure.Item>\n    <Figure.Item>The <code>primary-inverse</code> color can be used as a secondary option instead of the <code>secondary</code> color when the background would otherwise match the <code>secondary</code> button color (example: ModalFooter). Set the focusColor to `info` as well with this configuration.</Figure.Item>\n    <Figure.Item>The maximum string length of any button, including spaces, should be 20 characters</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use more than one button with color set to <code>primary</code> per section of content\n</Figure.Item>\n    <Figure.Item>Use buttons without backgrounds excessively</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>When using buttons on a dark background, use the <code>primary-inverse</code> color to ensure adequate contrast</Figure.Item>\n    <Figure.Item>Buttons are activated with both Enter and Spacebar keys, and either key press will fire an `onClick` event</Figure.Item>\n    <Figure.Item>Disabled buttons do not need to meet color contrast ratio requirements or receive keyboard focus but will be read as \"disabled\" or \"dimmed\" by screen readers</Figure.Item>\n    <Figure.Item>Icon only buttons must have ScreenReaderContent added so screen readers indicate what the button is used for</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Button","order":"","relativePath":"packages/ui-buttons/src/Button/README.md","extension":".md","srcPath":"packages/ui-buttons/src/Button/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/Button/README.md","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/Button/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/Button/README.md').default","esPath":"@instructure/ui-buttons/es/Button/README","id":"Button__README","title":"Button__README"},"CloseButton__README":{"description":"\nSome design patterns require a `CloseButton` to be placed in the start or end position. This is a helper component that gives you the close icon out of the box and facilitates placement.\n\nThe `placement` prop designates the `CloseButton` placement within the parent container. Note that in order to apply an `offset`, `placement` should be set to `start` or `end`. Also make sure that the container has a `position` css style applied other than `static`. In the following example we use [View](#View) as the container and set the `position` to `relative`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" position=\"relative\" height=\"5rem\" background=\"primary\" shadow=\"resting\">\n  <CloseButton placement=\"end\" offset=\"small\" screenReaderLabel=\"Close\" />\n</View>\n```\n\nIf you need the `CloseButton` to work in a layout with other elements vs. absolutely positioning it, you can omit the `placement` prop or set it to `static`. You can then use another tool such as [Flex](#Flex) to handle the layout.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" position=\"relative\" background=\"primary\" shadow=\"resting\">\n  <Flex height=\"6rem\" justifyItems=\"space-between\" alignItems=\"center\" padding=\"medium\">\n    <Flex.Item shouldShrink shouldGrow>\n      <Heading level=\"h2\">Some Heading Text</Heading>\n    </Flex.Item>\n    <Flex.Item padding=\"none none none medium\">\n      <CloseButton size=\"medium\" screenReaderLabel=\"Close\" />\n    </Flex.Item>\n  </Flex>\n</View>\n```\n\nIf you need even more customization, note that you can always compose this component using the [IconButton](#IconButton) directly. Supply the `renderIcon` prop with [IconXSolid](#Iconography) and set the `withBorder` and `withBackground` props to `false`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" position=\"relative\" height=\"5rem\" background=\"primary\" shadow=\"resting\">\n  <Flex justifyItems=\"end\">\n    <Flex.Item>\n      <IconButton\n        screenReaderLabel=\"Close\"\n        renderIcon={IconXSolid}\n        size=\"small\"\n        withBackground={false}\n        withBorder={false}\n        margin=\"small\"\n      />\n    </Flex.Item>\n  </Flex>\n</View>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Set the <code>color</code> prop to <code>primary</code> when a CloseButton appears on a dark background to ensure adequate contrast</Figure.Item>\n    <Figure.Item>Ensure the CloseButton is labeled correctly using the <code>screenReaderLabel</code> prop so screen readers announce what action will be taken when selected</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"CloseButton","order":"","relativePath":"packages/ui-buttons/src/CloseButton/README.md","extension":".md","srcPath":"packages/ui-buttons/src/CloseButton/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/CloseButton/README.md","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/CloseButton/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/CloseButton/README.md').default","esPath":"@instructure/ui-buttons/es/CloseButton/README","id":"CloseButton__README","title":"CloseButton__README"},"CondensedButton__README":{"description":"\nCondensedButton is a button component that renders without padding. It is meant specifically for tight spaces, or areas where the button padding would prevent the button content from aligning correctly with other elements.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" background=\"primary\" padding=\"small\">\n  <CondensedButton>Click Me</CondensedButton>\n</View>\n```\n\nIn the following example, CondensedButton is used so that the button content can align with the rest of the table cell content.\n\n```js\n---\nexample: true\n---\n<Table caption='Tallest Roller Coasters'>\n  <Table.Head>\n    <Table.Row>\n      <Table.ColHeader id=\"Roller Coaster\">\n        Roller Coaster\n      </Table.ColHeader>\n      <Table.ColHeader id=\"Height\">\n        Height\n      </Table.ColHeader>\n      <Table.ColHeader id=\"Amusement Park\">\n        Amusement Park\n      </Table.ColHeader>\n    </Table.Row>\n  </Table.Head>\n  <Table.Body>\n    <Table.Row>\n      <Table.Cell>\n        Kingda Ka<br />\n        <CondensedButton>View Advanced Stats</CondensedButton>\n      </Table.Cell>\n      <Table.Cell>\n        456.0ft\n      </Table.Cell>\n      <Table.Cell>\n        Six Flags Great America\n      </Table.Cell>\n    </Table.Row>\n    <Table.Row>\n      <Table.Cell>\n        Top Thrill Dragster<br />\n        <CondensedButton>View Advanced Stats</CondensedButton>\n      </Table.Cell>\n      <Table.Cell>\n        420.0ft\n      </Table.Cell>\n      <Table.Cell>\n        Cedar Point\n      </Table.Cell>\n    </Table.Row>\n    <Table.Row>\n      <Table.Cell>\n        Superman: Escape from Krypton<br />\n        <CondensedButton>View Advanced Stats</CondensedButton>\n      </Table.Cell>\n      <Table.Cell>\n        415.0ft\n      </Table.Cell>\n      <Table.Cell>\n        Six Flags Magic Mountain\n      </Table.Cell>\n    </Table.Row>\n  </Table.Body>\n</Table>\n```\n","describes":"CondensedButton","order":"","relativePath":"packages/ui-buttons/src/CondensedButton/README.md","extension":".md","srcPath":"packages/ui-buttons/src/CondensedButton/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/CondensedButton/README.md","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/CondensedButton/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/CondensedButton/README.md').default","esPath":"@instructure/ui-buttons/es/CondensedButton/README","id":"CondensedButton__README","title":"CondensedButton__README"},"IconButton__README":{"description":"\nAn IconButton can be used when the Button only renders an Icon and does not have other visual elements or text content.\n\n```js\n---\nexample: true\n---\n<IconButton screenReaderLabel=\"Add User\"><IconAddLine /></IconButton>\n```\n\n### Accessibility\n\nBecause the IconButton visually only renders an icon, a description is necessary for assistive technologies. The `screenReaderLabel` prop is required for this purpose, and should consist of a complete description of the action.\n\n```js\n---\nexample: true\n---\n<IconButton color=\"primary\" screenReaderLabel=\"Add blog post\"><IconAddLine /></IconButton>\n```\n\nUsing [Tooltip](#Tooltip) in conjunction with IconButton can also provide necessary context when the IconButton alone would be insufficient.\n\n```js\n---\nexample: true\n---\n<Tooltip\n  renderTip=\"View user profile\"\n  on={['hover', 'focus']}\n  placement=\"bottom\"\n>\n  <IconButton screenReaderLabel=\"View user profile\"><IconUserLine /></IconButton>\n</Tooltip>\n```\n\n### Shaping\n\nThe `shape` prop specifies if the IconButton will render as a `rectangle` or `circle`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <IconButton shape=\"rectangle\" screenReaderLabel=\"Delete tag\" margin=\"small\"><IconXSolid /></IconButton>\n  <IconButton shape=\"circle\" screenReaderLabel=\"Delete tag\" margin=\"small\"><IconXSolid /></IconButton>\n</View>\n```\n\n### Rendering only the icon\n\nThe background and border can be optionally removed as needed by setting the `withBorder` and `withBackground` props to `false`\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <View display=\"inline-block\" background=\"primary\">\n    <IconButton withBackground={false} withBorder={false} screenReaderLabel=\"Delete tag\" margin=\"large\">\n      <IconXSolid />\n    </IconButton>\n  </View>\n  <View display=\"inline-block\" background=\"primary-inverse\">\n    <IconButton withBackground={false} withBorder={false} color=\"primary-inverse\" screenReaderLabel=\"Delete tag\" margin=\"large\">\n      <IconXSolid />\n    </IconButton>\n  </View>\n</View>\n```","describes":"IconButton","order":"","relativePath":"packages/ui-buttons/src/IconButton/README.md","extension":".md","srcPath":"packages/ui-buttons/src/IconButton/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/IconButton/README.md","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/IconButton/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/IconButton/README.md').default","esPath":"@instructure/ui-buttons/es/IconButton/README","id":"IconButton__README","title":"IconButton__README"},"ToggleButton__README":{"description":"\n`ToggleButton` is a controlled button component used for toggling a status or setting\nbetween one of two states (locked/unlocked, published/unpublished, etc.).\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    locked: 'off'\n  }\n\n  handleLocked = (e) => {\n    this.setState(function(prevState) {\n      return {locked: prevState.locked === 'on' ? 'off' : 'on'}\n    })\n  }\n\n  render () {\n    const locked = this.state.locked === 'on'\n\n    return (\n      <View as=\"div\" padding=\"x-large\" id=\"toggleContainer\">\n        <ToggleButton\n          status={locked ? 'pressed' : 'unpressed'}\n          color={locked ? 'danger' : 'secondary'}\n          renderIcon={locked ? IconLockSolid : IconUnlockLine}\n          screenReaderLabel={locked ? 'Unlock assignment' : 'Lock assignment'}\n          renderTooltipContent={locked ? 'Unlock' : 'Lock'}\n          onClick={this.handleLocked}\n          mountNode={() => document.getElementById('toggleContainer')}\n        />\n      </View>\n    )\n  }\n}\nrender(<Example />)\n```\n\n### Inverse ToggleButton\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass InverseExample extends React.Component {\n  state = {\n    locked: 'off'\n  }\n\n  handleLocked = (e) => {\n    this.setState(function(prevState) {\n      return {locked: prevState.locked === 'on' ? 'off' : 'on'}\n    })\n  }\n\n  render () {\n    const locked = this.state.locked === 'on'\n\n    return (\n      <View as=\"div\" padding=\"xx-large\" background=\"primary-inverse\" id=\"inverseToggleContainer\">\n        <ToggleButton\n          status={locked ? 'pressed' : 'unpressed'}\n          color=\"primary-inverse\"\n          renderIcon={locked ? IconLockSolid : IconUnlockLine}\n          screenReaderLabel={locked ? 'Unlock assignment' : 'Lock assignment'}\n          renderTooltipContent={locked ? 'Unlock' : 'Lock'}\n          onClick={this.handleLocked}\n          mountNode={() => document.getElementById('inverseToggleContainer')}\n        />\n      </View>\n    )\n  }\n}\nrender(<InverseExample />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use for toggling a setting or status between one of two states</Figure.Item>\n    <Figure.Item>Use <code>color=\"primary-inverse\"</code> on dark backgrounds so your icon and tooltip are visible</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use text inside a <code>ToggleButton</code></Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"ToggleButton","order":"","relativePath":"packages/ui-buttons/src/ToggleButton/README.md","extension":".md","srcPath":"packages/ui-buttons/src/ToggleButton/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/ToggleButton/README.md","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/ToggleButton/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/ToggleButton/README.md').default","esPath":"@instructure/ui-buttons/es/ToggleButton/README","id":"ToggleButton__README","title":"ToggleButton__README"},"Byline__README":{"description":"\nA byline component with a visual and a caption:\n\n```js\n---\nexample: true\n---\n<Byline description={lorem.sentence()}>\n  <Avatar name=\"Julia Childer\" />\n</Byline>\n```\n\nCreate a heading by using the `title` prop, and add space around the Byline\ncomponent via the `margin` prop. To constrain the component's width, use\nthe `size` prop.\n\nYou can also adjust the alignment of the visual object with the descriptive text by\nsetting the `alignContent` prop.\n\n```js\n---\nexample: true\n---\n<Byline\n  margin=\"x-large auto\"\n  size=\"small\"\n  alignContent=\"top\"\n  title=\"Graham Taylor\"\n  description={lorem.paragraph()}\n>\n  <Avatar name=\"Graham Taylor\" />\n</Byline>\n```\n\n```js\n---\nexample: true\n---\n<Byline\n  description={\n    <View display=\"block\" margin=\"0 0 0 x-small\">\n      <Heading level=\"h2\">\n        <Link href=\"#\">Clickable Heading</Link>\n      </Heading>\n      <Text\n        size=\"x-small\"\n        transform=\"uppercase\"\n        letterSpacing=\"expanded\"\n      >\n        Something here\n      </Text>\n    </View>\n  }>\n  <SVGIcon src={iconExample} title=\"love\" size=\"small\" color=\"success\" />\n</Byline>\n```\n","describes":"Byline","order":"","relativePath":"packages/ui-byline/src/Byline/README.md","extension":".md","srcPath":"packages/ui-byline/src/Byline/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-byline/src/Byline/README.md","packageName":"@instructure/ui-byline","requirePath":"@instructure/ui-byline/lib/Byline/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-byline/src/Byline/README.md').default","esPath":"@instructure/ui-byline/es/Byline/README","id":"Byline__README","title":"Byline__README"},"Calendar__README":{"description":"\nThe `Calendar` component provides a visual interface for date data.\n\n### Composing a Calendar in your Application\nBy design, the `Calendar` component does not dictate which date libraries or\nformats you use in your application. The following example demonstrates how a\nbasic `Calendar` might be created using utilities from\n[Moment.js](https://momentjs.com/docs/#/parsing/).\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass Example extends React.Component {\n  state = {\n    todayDate: parseDate('2019-08-16').toISOString(),\n    renderedDate: parseDate('2019-08-02').toISOString()\n  }\n\n  generateMonth = () => {\n    const date = parseDate(this.state.renderedDate)\n      .startOf('month')\n      .startOf('week')\n\n    return Array.apply(null, Array(Calendar.DAY_COUNT)).map(() => {\n      const currentDate = date.clone()\n      date.add(1, 'days')\n      return currentDate\n    })\n  }\n\n  renderWeekdayLabels = () => {\n    const date = parseDate(this.state.renderedDate).startOf('week')\n\n    return Array.apply(null, Array(7)).map(() => {\n      const currentDate = date.clone()\n      date.add(1, 'day')\n\n      return (\n        <AccessibleContent alt={currentDate.format('dddd')}>\n          {currentDate.format('dd')}\n        </AccessibleContent>\n      )\n    })\n  }\n\n  handleRenderNextMonth = (event) => {\n    this.modifyRenderedMonth(1)\n  }\n\n  handleRenderPrevMonth = (event) => {\n    this.modifyRenderedMonth(-1)\n  }\n\n  modifyRenderedMonth = (step) => {\n    this.setState(({ renderedDate }) => {\n      const date = parseDate(renderedDate)\n      date.add(step, 'month')\n      return { renderedDate: date.toISOString() }\n    })\n  }\n\n  renderDay (date) {\n    const {\n      renderedDate,\n      todayDate,\n    } = this.state\n\n    return (\n      <Calendar.Day\n        key={date.toISOString()}\n        date={date.toISOString()}\n        isOutsideMonth={!date.isSame(renderedDate, 'month')}\n        isToday={date.isSame(todayDate, 'day')}\n        label={`${date.format('D')} ${date.format('MMMM')} ${date.format('YYYY')}`}\n      >\n        {date.format('D')}\n      </Calendar.Day>\n    )\n  }\n\n  render () {\n    const date = parseDate(this.state.renderedDate)\n\n    const buttonProps = (type = 'prev') => ({\n      size: 'small',\n      withBackground: false,\n      withBorder: false,\n      renderIcon: type === 'prev'\n        ? <IconArrowOpenStartSolid color=\"primary\" />\n        : <IconArrowOpenEndSolid color=\"primary\" />,\n      screenReaderLabel: type === 'prev' ? 'Previous month' : 'Next month'\n    })\n\n    return (\n      <Calendar\n        renderPrevMonthButton={<IconButton {...buttonProps('prev')} />}\n        renderNextMonthButton={<IconButton {...buttonProps('next')} />}\n        renderNavigationLabel={\n          <span>\n            <div>{date.format('MMMM')}</div>\n            <div>{date.format('YYYY')}</div>\n          </span>\n        }\n        renderWeekdayLabels={this.renderWeekdayLabels()}\n        onRequestRenderNextMonth={this.handleRenderNextMonth}\n        onRequestRenderPrevMonth={this.handleRenderPrevMonth}\n      >\n        {this.generateMonth().map(date => this.renderDay(date))}\n      </Calendar>\n    )\n  }\n}\n\nconst locale = 'en-us'\nconst timezone = 'America/Denver'\n\nconst parseDate = (dateStr) => {\n  return moment.tz(dateStr, [moment.ISO_8601], locale, timezone)\n}\n\nrender(<Example />)\n```\n\n#### Some dates to keep track of\n* `todayDate` - the date that represents today\n* `renderedDate` - the date that the user is viewing as they navigate the `Calendar`\n\n#### Generating a month\nWe generate a month based on the `renderedDate` value. The `Calendar` always\ndisplays 6 weeks or 42 days (42 is defined as a constant `Calendar.DAY_COUNT`),\nso we pad our month values with days from the previous and next month if\nnecessary. The complete implementation can be seen in the `generateMonth` function\nin our example.\n\n#### Rendering days\nUsing the month data, we can now map it to children of type `Calendar.Day`.\nAs we render each day, if it is outside the current month we can set the\n`isOutsideMonth` prop. We can also set the `isToday` prop if it is the current\ndate. For accessibility, it is recommended that you provide more information to\neach `Calendar.Day` using the label prop. This label will help screen readers to\nhave important context as the `Calendar` is navigated. It should include the day,\nmonth, and the year (Ex. instead of `1` we would provide `1 August 2019`).\n\n#### Rendering weekday labels\n`Calendar` requires you to provide an array of 7 labels that correspond to each\nday of the week via the `renderWeekdayLabels` prop. The visible portion of the\nlabel should be abbreviated (no longer than three characters). Note that screen\nreaders will read this content preceding each date as the `Calendar` is navigated.\nConsider using [AccessibleContent](#AccessibleContent) with the `alt` prop\ncontaining the full day name for assistive technologies and the children containing\nthe abbreviation. ex. `[<AccessibleContent alt=\"Sunday\">Sun</AccessibleContent>, ...]`\n\n#### Rendering next and previous month buttons\nThe `renderNextMonthButton` and `renderPrevMonthButton` can be supplied using the\n[IconButton](#IconButton) component with the `size` prop set to\n`small`, the `withBackground` and `withBorder` props both set to `false`, and the `renderIcon` prop set to [IconArrowOpenStart](#iconography) or\n[IconArrowOpenEnd](#iconography).\n","describes":"Calendar","order":"","relativePath":"packages/ui-calendar/src/Calendar/README.md","extension":".md","srcPath":"packages/ui-calendar/src/Calendar/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-calendar/src/Calendar/README.md","packageName":"@instructure/ui-calendar","requirePath":"@instructure/ui-calendar/lib/Calendar/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-calendar/src/Calendar/README.md').default","esPath":"@instructure/ui-calendar/es/Calendar/README","id":"Calendar__README","title":"Calendar__README"},"Checkbox__README":{"description":"\nBy default, the Checkbox component is a custom styled HTML checkbox. To default the checkbox to checked,\nset the `defaultChecked` prop.\n\nAdjust the size of the checkbox and label text via the `size` prop. The default size is\n`medium`.\n\n```js\n---\nexample: true\n---\n<Checkbox label={lorem.sentence()} value=\"medium\" defaultChecked />\n```\n\nThe default Checkbox in its disabled state:\n\n```js\n---\nexample: true\n---\n<CheckboxGroup\n  defaultValue={['medium']}\n  name=\"example\"\n  description={<ScreenReaderContent>Checkbox examples</ScreenReaderContent>}\n>\n  <Checkbox label={lorem.sentence()} value=\"medium\" disabled />\n  <Checkbox label={lorem.sentence()} value=\"small\" disabled />\n</CheckboxGroup>\n```\n\nThe `indeterminate` property triggers a visual state that handles\nsituations where \"child\" Checkboxes are neither all checked nor all\nunchecked. Note the use of `aria-labelledby` to make the relationship\nbetween the parent and child Checkboxes clear to screenreader users.\n\n*Note: the `toggle` variant does not support the `indeterminate`\nproperty.*\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: ['his111', 'eng203']\n    }\n  }\n\n  updateValue (value) {\n    const index = this.state.value.indexOf(value)\n\n    if (index === -1) {\n      this.setState({ value: [...this.state.value, value] })\n    } else {\n      this.setState((prevState) => ({\n        value: [...prevState.value.slice(0, index), ...prevState.value.slice(index + 1)]\n      }))\n    }\n  }\n\n  render () {\n    return (\n      <FormFieldGroup\n        description={\n          <ScreenReaderContent>\n            <span id=\"groupLabel\">Courses to edit</span>\n          </ScreenReaderContent>\n        }\n        rowSpacing=\"small\"\n      >\n        <Checkbox\n          aria-labelledby=\"groupLabel selectAllLabel\"\n          label={<span id=\"selectAllLabel\">Select all courses</span>}\n          value=\"all\"\n          onChange={() => this.setState({\n            value: this.state.value.length === 3 ? [] : ['eng203', 'sci101', 'his111']\n          })}\n          checked={this.state.value.length === 3}\n          indeterminate={this.state.value.length > 0 && this.state.value.length < 3}\n        />\n        <View as=\"div\" padding=\"0 0 0 medium\">\n          <Checkbox\n            aria-labelledby=\"groupLabel eng203Label\"\n            label={<span id=\"eng203Label\">English 203</span>}\n            value=\"eng203\"\n            name=\"courses\"\n            onChange={(event) => { this.updateValue(event.target.value) }}\n            checked={this.state.value.indexOf('eng203') !== -1}\n          />\n        </View>\n        <View as=\"div\" padding=\"0 0 0 medium\">\n          <Checkbox\n            aria-labelledby=\"groupLabel sci101Label\"\n            label={<span id=\"sci101Label\">Science 101</span>}\n            value=\"sci101\"\n            name=\"courses\"\n            onChange={(event) => {\n              this.updateValue(event.target.value)\n            }}\n            checked={this.state.value.indexOf('sci101') !== -1}\n          />\n        </View>\n        <View as=\"div\" padding=\"0 0 0 medium\">\n          <Checkbox\n            aria-labelledby=\"groupLabel hist101Label\"\n            label={<span id=\"hist101Label\">History 111</span>}\n            value=\"his111\"\n            name=\"courses\"\n            onChange={(event) => {\n              this.updateValue(event.target.value)\n            }}\n            checked={this.state.value.indexOf('his111') !== -1}\n          />\n        </View>\n      </FormFieldGroup>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\nSetting the `variant` prop to `toggle` turns the checkbox into a toggle switch. For __toggle only__ the size prop affects the size of the label and not the actual size of the switch.\n\n```js\n---\nexample: true\n---\n<FormFieldGroup description={<ScreenReaderContent>Checkbox examples</ScreenReaderContent>}>\n  <Checkbox label=\"Small size\" value=\"small\" variant=\"toggle\" size=\"small\" defaultChecked />\n  <Checkbox label=\"Medium size\" value=\"medium\" variant=\"toggle\" />\n  <Checkbox label=\"Large size\" value=\"large\" variant=\"toggle\" size=\"large\" defaultChecked />\n</FormFieldGroup>\n```\n\nTo change the label placement for the toggle variety, use the labelPlacement prop.  The default\nplacement is 'end'.\n\n*Note: the `simple` variant does not support the `labelPlacement`\nproperty.*\n\n```js\n---\nexample: true\n---\n<FormFieldGroup description={<ScreenReaderContent>Toggle label examples</ScreenReaderContent>}>\n  <Checkbox label=\"Top\" variant=\"toggle\" labelPlacement=\"top\" defaultChecked />\n  <Checkbox label=\"Start\" variant=\"toggle\" labelPlacement=\"start\" />\n  <Checkbox label=\"End\" variant=\"toggle\" labelPlacement=\"end\" defaultChecked />\n</FormFieldGroup>\n```\n\nYou might want to hide the label text when using the toggle switch variant. Do that by wrapping\nthe text in the [ScreenReaderContent](#ScreenReaderContent) component.\n\n```js\n---\nexample: true\n---\n<Checkbox\n  label={<ScreenReaderContent>Screenreader-accessible label</ScreenReaderContent>}\n  value=\"accessible\"\n  variant=\"toggle\"\n/>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Align to the left side of the label</Figure.Item>\n    <Figure.Item>Use when multiple selections are allowed</Figure.Item>\n    <Figure.Item>Use to save space from toggles</Figure.Item>\n    <Figure.Item>Stack vertically if there is more than two options to select</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Run more than two checkboxes horizontally</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Checkbox","order":"","relativePath":"packages/ui-checkbox/src/Checkbox/README.md","extension":".md","srcPath":"packages/ui-checkbox/src/Checkbox/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-checkbox/src/Checkbox/README.md","packageName":"@instructure/ui-checkbox","requirePath":"@instructure/ui-checkbox/lib/Checkbox/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-checkbox/src/Checkbox/README.md').default","esPath":"@instructure/ui-checkbox/es/Checkbox/README","id":"Checkbox__README","title":"Checkbox__README"},"CheckboxGroup__README":{"description":"\nA `<CheckboxGroup/>` is a group of [Checkbox](#Checkbox) components that share the same name. You can\nset an array `value` for the entire group and it will handle setting the `checked` and `name` props for you.\nThe Checkbox components can be rendered vertically or horizontally using the `layout` property.\n\n```js\n---\nexample: true\n---\n<FormFieldGroup description={<ScreenReaderContent>CheckboxGroup examples</ScreenReaderContent>}>\n  <CheckboxGroup name=\"sports\"\n    onChange={function (value) { console.log(value) }}\n    defaultValue={['football', 'volleyball']}\n    description=\"Select your favorite sports\"\n  >\n    <Checkbox label=\"Football\" value=\"football\" />\n    <Checkbox label=\"Basketball\" value=\"basketball\" />\n    <Checkbox label=\"Volleyball\" value=\"volleyball\" />\n    <Checkbox label=\"Other\" value=\"other\" />\n  </CheckboxGroup>\n  <CheckboxGroup name=\"sports\" size=\"small\"\n    layout=\"columns\"\n    onChange={function (value) { console.log(value) }}\n    defaultValue={['football', 'volleyball']}\n    description=\"Select your favorite sports\"\n  >\n    <Checkbox label=\"Football\" value=\"football\" />\n    <Checkbox label=\"Basketball\" value=\"basketball\" />\n    <Checkbox label=\"Volleyball\" value=\"volleyball\" />\n    <Checkbox label=\"Other\" value=\"other\" />\n  </CheckboxGroup>\n</FormFieldGroup>\n```\n\nThe `toggle` variant with `layout` prop set to `inline` and an error message:\n\n```js\n---\nexample: true\n---\n<CheckboxGroup\n  name=\"sports2\"\n  layout=\"inline\"\n  messages={[\n    { text: 'Invalid name', type: 'error' }\n  ]}\n  onChange={function (value) { console.log(value) }}\n  defaultValue={['soccer', 'volleyball']}\n  description=\"I wish to receive score alerts for\"\n>\n  <Checkbox label=\"Football\" value=\"football\" variant=\"toggle\" />\n  <Checkbox label=\"Basketball\" value=\"basketball\" variant=\"toggle\" />\n  <Checkbox label=\"Volleyball\" value=\"volleyball\" variant=\"toggle\" />\n  <Checkbox label=\"Soccer\" value=\"soccer\" variant=\"toggle\" />\n</CheckboxGroup>\n```\n\nYou can set disable/readonly on a group and it works much the same way as a RadioInputGroup.\n\nA `disabled` CheckboxGroup:\n\n```js\n---\nexample: true\n---\n<CheckboxGroup\n  name=\"sports4\"\n  onChange={function (value) { console.log(value) }}\n  defaultValue={['soccer', 'volleyball']}\n  description=\"I wish to receive score alerts for\"\n  disabled\n>\n  <Checkbox label=\"Football\" value=\"football\" variant=\"toggle\" />\n  <Checkbox label=\"Basketball\" value=\"basketball\" variant=\"toggle\" />\n  <Checkbox label=\"Volleyball\" value=\"volleyball\" variant=\"toggle\" />\n  <Checkbox label=\"Soccer\" value=\"soccer\" variant=\"toggle\" />\n</CheckboxGroup>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Align to the left side of the label</Figure.Item>\n    <Figure.Item>Use when multiple selections are allowed</Figure.Item>\n    <Figure.Item>Use to save space from toggles</Figure.Item>\n    <Figure.Item>Stack vertically if there is more than two options to select</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Run more than two checkboxes horizontally</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Ensure CheckboxGroups are labeled correctly so screen readers announce what the group of checkboxes are used for</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"CheckboxGroup","order":"","relativePath":"packages/ui-checkbox/src/CheckboxGroup/README.md","extension":".md","srcPath":"packages/ui-checkbox/src/CheckboxGroup/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-checkbox/src/CheckboxGroup/README.md","packageName":"@instructure/ui-checkbox","requirePath":"@instructure/ui-checkbox/lib/CheckboxGroup/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-checkbox/src/CheckboxGroup/README.md').default","esPath":"@instructure/ui-checkbox/es/CheckboxGroup/README","id":"CheckboxGroup__README","title":"CheckboxGroup__README"},"CodeEditor__README":{"description":"\nA wrapper around the popular [CodeMirror](https://codemirror.net/) text editor.\n\n### Code layout\n\nThe CodeEditor component can be used to display code via the `defaultValue` prop.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super()\n    this.state = { code: `function findSequence(goal) {\n  function find(start, history) {\n    if (start == goal)\n      return history;\n    else if (start > goal)\n      return null;\n    else\n      return find(start + 5, \"(\" + history + \" + 5)\") ||\n             find(start * 3, \"(\" + history + \" * 3)\");\n  }\n  return find(1, \"1\");\n}` }\n  }\n\n  handleChange = (value) => {\n    this.setState({ code: value})\n  }\n\n  render () {\n    return (\n      <CodeEditor\n        label='code editor'\n        value={this.state.code}\n        language='javascript'\n        options={{ lineNumbers: false }}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nrender(<Example />)\n```\n","describes":"CodeEditor","order":"","relativePath":"packages/ui-code-editor/src/CodeEditor/README.md","extension":".md","srcPath":"packages/ui-code-editor/src/CodeEditor/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-code-editor/src/CodeEditor/README.md","packageName":"@instructure/ui-code-editor","requirePath":"@instructure/ui-code-editor/lib/CodeEditor/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-code-editor/src/CodeEditor/README.md').default","esPath":"@instructure/ui-code-editor/es/CodeEditor/README","id":"CodeEditor__README","title":"CodeEditor__README"},"DateInput__README":{"description":"\nThe `DateInput` component provides a visual interface for inputting date data.\n\n### Composing a DateInput in your Application\n`DateInput` uses `Calendar` internally. See [Calendar](#Calendar) for more detailed\ndocumentation and guided examples. `DateInput` shares many of the same `Calendar`\nprops and it is created the same way with some additional attributes and callback\nmethods for the input. The following example is configured similar to the `Calendar`\nexamples using [Moment.js](https://momentjs.com/docs/#/parsing/).\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass Example extends React.Component {\n  state = {\n    value: '',\n    isShowingCalendar: false,\n    todayDate: parseDate('2019-08-28').toISOString(),\n    selectedDate: null,\n    renderedDate: parseDate('2019-08-01').toISOString(),\n    disabledDates: [\n      parseDate('2019-08-14').toISOString(),\n      parseDate('2019-08-19').toISOString(),\n      parseDate('2019-08-29').toISOString()\n    ],\n    messages: []\n  }\n\n  generateMonth = (renderedDate = this.state.renderedDate) => {\n    const date = parseDate(renderedDate)\n      .startOf('month')\n      .startOf('week')\n\n    return Array.apply(null, Array(Calendar.DAY_COUNT)).map(() => {\n      const currentDate = date.clone()\n      date.add(1, 'days')\n      return currentDate\n    })\n  }\n\n  formatDate = (dateInput) => {\n    const date = parseDate(dateInput)\n    return `${date.format('MMMM')} ${date.format('D')}, ${date.format('YYYY')}`\n  }\n\n  handleChange = (event, { value }) => {\n    const newDateStr = parseDate(value).toISOString()\n\n    this.setState(({ renderedDate }) => ({\n      value,\n      selectedDate: newDateStr,\n      renderedDate: newDateStr || renderedDate,\n      messages: []\n    }))\n  }\n\n  handleShowCalendar = (event) => {\n    this.setState({ isShowingCalendar: true })\n  }\n\n  handleHideCalendar = (event) => {\n    this.setState(({ selectedDate, disabledDates, value }) => ({\n      isShowingCalendar: false,\n      value: selectedDate ? this.formatDate(selectedDate) : value\n    }))\n  }\n\n  handleValidateDate = (event) => {\n    this.setState(({ selectedDate, value }) => {\n      // We don't have a selectedDate but we have a value. That means that the value\n      // could not be parsed and so the date is invalid\n      if (!selectedDate && value) {\n        return {\n          messages: [{ type: 'error', text: 'This date is invalid' }],\n        }\n      }\n      // Display a message if the user has typed in a value that corresponds to a\n      // disabledDate\n      if (this.isDisabledDate(parseDate(selectedDate))) {\n        return {\n          messages: [{ type: 'error', text: 'This date is disabled' }],\n        }\n      }\n    })\n  }\n\n  handleDayClick = (event, { date }) => {\n    this.setState({\n      selectedDate: date,\n      renderedDate: date,\n      messages: []\n    })\n  }\n\n  handleSelectNextDay = (event) => {\n    this.modifySelectedDate('day', 1)\n  }\n\n  handleSelectPrevDay = (event) => {\n    this.modifySelectedDate('day', -1)\n  }\n\n  handleRenderNextMonth = (event) => {\n    this.modifyRenderedDate('month', 1)\n  }\n\n  handleRenderPrevMonth = (event) => {\n    this.modifyRenderedDate('month', -1)\n  }\n\n  modifyRenderedDate = (type, step) => {\n    this.setState(({ renderedDate }) => {\n      return { renderedDate: this.modifyDate(renderedDate, type, step) }\n    })\n  }\n\n  modifySelectedDate = (type, step) => {\n    this.setState(({ selectedDate, renderedDate }) => {\n      // We are either going to increase or decrease our selectedDate by 1 day.\n      // If we do not have a selectedDate yet, we'll just select the first day of\n      // the currently rendered month instead.\n      const newDate = selectedDate\n        ? this.modifyDate(selectedDate, type, step)\n        : parseDate(renderedDate).startOf('month').toISOString()\n\n      return {\n        selectedDate: newDate,\n        renderedDate: newDate,\n        value: this.formatDate(newDate),\n        messages: []\n      }\n    })\n  }\n\n  modifyDate = (dateStr, type, step) => {\n    const date = parseDate(dateStr)\n    date.add(step, type)\n    return date.toISOString()\n  }\n\n  isDisabledDate = (date, disabledDates = this.state.disabledDates) => {\n    return disabledDates.reduce((result, disabledDate) => {\n      return result || date.isSame(disabledDate, 'day')\n    }, false)\n  }\n\n  renderWeekdayLabels = () => {\n    const date = parseDate(this.state.renderedDate).startOf('week')\n\n    return Array.apply(null, Array(7)).map(() => {\n      const currentDate = date.clone()\n      date.add(1, 'day')\n\n      return (\n        <AccessibleContent alt={currentDate.format('dddd')}>\n          {currentDate.format('dd')}\n        </AccessibleContent>\n      )\n    })\n  }\n\n  renderDays () {\n    const {\n      renderedDate,\n      selectedDate,\n      todayDate,\n    } = this.state\n\n    return this.generateMonth().map((date) => {\n      const dateStr = date.toISOString()\n\n      return (\n        <DateInput.Day\n          key={dateStr}\n          date={dateStr}\n          interaction={this.isDisabledDate(date) ? 'disabled' : 'enabled'}\n          isSelected={date.isSame(selectedDate, 'day')}\n          isToday={date.isSame(todayDate, 'day')}\n          isOutsideMonth={!date.isSame(renderedDate, 'month')}\n          label={`${date.format('D')} ${date.format('MMMM')} ${date.format('YYYY')}`}\n          onClick={this.handleDayClick}\n        >\n          {date.format('D')}\n        </DateInput.Day>\n      )\n    })\n  }\n\n  render () {\n    const {\n      value,\n      isShowingCalendar,\n      renderedDate,\n      messages\n    } = this.state\n\n    const date = parseDate(this.state.renderedDate)\n\n    const buttonProps = (type = 'prev') => ({\n      size: 'small',\n      withBackground: false,\n      withBorder: false,\n      renderIcon: type === 'prev'\n        ? <IconArrowOpenStartSolid color=\"primary\" />\n        : <IconArrowOpenEndSolid color=\"primary\" />,\n      screenReaderLabel: type === 'prev' ? 'Previous month' : 'Next month'\n    })\n\n    return (\n      <DateInput\n        renderLabel=\"Choose a date\"\n        assistiveText=\"Type a date or use arrow keys to navigate date picker.\"\n        value={value}\n        onChange={this.handleChange}\n        width=\"20rem\"\n        isInline\n        messages={messages}\n        isShowingCalendar={isShowingCalendar}\n        onRequestValidateDate={this.handleValidateDate}\n        onRequestShowCalendar={this.handleShowCalendar}\n        onRequestHideCalendar={this.handleHideCalendar}\n        onRequestSelectNextDay={this.handleSelectNextDay}\n        onRequestSelectPrevDay={this.handleSelectPrevDay}\n        onRequestRenderNextMonth={this.handleRenderNextMonth}\n        onRequestRenderPrevMonth={this.handleRenderPrevMonth}\n        renderNavigationLabel={\n          <span>\n            <div>{date.format('MMMM')}</div>\n            <div>{date.format('YYYY')}</div>\n          </span>\n        }\n        renderPrevMonthButton={<IconButton {...buttonProps('prev')} />}\n        renderNextMonthButton={<IconButton {...buttonProps('next')} />}\n        renderWeekdayLabels={this.renderWeekdayLabels()}\n      >\n        {this.renderDays()}\n      </DateInput>\n    )\n  }\n}\n\nconst locale = 'en-us'\nconst timezone = 'America/Denver'\n\nconst parseDate = (dateStr) => {\n  return moment.tz(dateStr, [moment.ISO_8601, 'llll', 'LLLL', 'lll', 'LLL', 'll', 'LL', 'l', 'L'], locale, timezone)\n}\n\nrender(<Example />)\n```\n\n#### Some dates to keep track of\n* `todayDate` - the date that represents today\n* `selectedDate` - the user's selected date\n* `renderedDate` - the date that the user is viewing as they navigate the `Calendar`\n* `disabledDates` - any dates that are disabled\n\n#### Rendering `DateInput.Day` children\n`DateInput` accepts children of type `DateInput.Day`. Both `DateInput.Day` and\n`Calendar.Day` are exporting the same `Day` component. The documentation for\n`Day` can be found in [Calendar](#Calendar).\n\n#### Handling onChange\nWhen the `DateInput` fires an `onChange` event:\n* The value should be updated and any messages should be cleared\n* Verify if the value can be parsed as a date\n* If it can be parsed, update the `selectedDate` and `renderedDate` with that date\n* If it cannot be parsed, the `selectedDate` is set to null and the `renderedDate`\nstays the same\n\n#### Handling onRequestHideCalendar\nWhen the `DateInput` fires `onRequestHideCalendar`:\n* The calendar should be hidden\n* The value should be updated with a formatted version of the `selectedDate` if\nit exists. See \"Formatting user input\" below\n\n#### Formatting user input\nDate formats can vary widely (ex. '8-9-19' vs '8/9/19'). When the `Calendar` is\nhidden, the input value should be converted to a consistent, standardized format.\nThe formatted result of the raw input '8/9/19'\ncould be \"August 9, 2019\".\n\n#### Handling onRequestValidateDate\nWhen the `DateInput` fires `onRequestValidateDate`, the provided user input\nshould be validated. If the value cannot be parsed as a valid date, or if the\n`selectedDate` is disabled, the user should be notified via the `messages` prop.\n","describes":"DateInput","order":"","relativePath":"packages/ui-date-input/src/DateInput/README.md","extension":".md","srcPath":"packages/ui-date-input/src/DateInput/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-date-input/src/DateInput/README.md","packageName":"@instructure/ui-date-input","requirePath":"@instructure/ui-date-input/lib/DateInput/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-date-input/src/DateInput/README.md').default","esPath":"@instructure/ui-date-input/es/DateInput/README","id":"DateInput__README","title":"DateInput__README"},"Dialog__README":{"description":"\nThe `Dialog` component is a utility that is used by\n[Popover](#Popover), [Modal](#Modal) and [Tray](#Tray) for keyboard accessibility.\n\nElements outside of the `Dialog` are hidden from screen readers automatically when `shouldContainFocus` is set to `true` or `screenreader`. The `liveRegion` prop can be used to specify any elements that should not be hidden.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { open: false }\n  }\n\n  render () {\n    return (\n      <View\n        as=\"div\"\n        padding=\"large\"\n      >\n        <Button\n          onClick={() => this.setState({ open: true })}\n        >\n          Open the Dialog\n        </Button>\n        <Portal open={this.state.open}>\n          <Mask>\n            <Dialog\n              open={this.state.open}\n              shouldContainFocus\n              defaultFocusElement={() => this._firstName}\n              shouldReturnFocus\n              onDismiss={() => this.setState({ open: false })}\n            >\n              <View\n                as=\"div\"\n                maxWidth=\"40rem\"\n                maxHeight=\"30rem\"\n                background=\"primary\"\n                shadow=\"above\"\n                style={{position: 'relative'}}\n                padding=\"medium\"\n              >\n                <CloseButton\n                  placement=\"end\"\n                  onClick={() => this.setState({ open: false })}\n                  screenReaderLabel=\"Close\"\n                />\n                <FormFieldGroup\n                  description={<Heading level=\"h4\" as=\"span\">Full name</Heading>}\n                  layout=\"columns\"\n                >\n                  <TextInput width=\"12rem\" renderLabel=\"First\" inputRef={(c) => this._firstName = c} />\n                  <TextInput width=\"12rem\" renderLabel=\"Last\" />\n                </FormFieldGroup>\n              </View>\n            </Dialog>\n          </Mask>\n        </Portal>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Keyboard focus must be set to a dialog when it appears; usually on the first interactive element within the dialog</Figure.Item>\n    <Figure.Item>A modal dialog must contain keyboard focus until it closes, so that keyboard or screen reader users won't mistakenly interact with background content that is meant to be hidden or inaccessible</Figure.Item>\n    <Figure.Item>A non-modal dialog must close when it loses focus</Figure.Item>\n    <Figure.Item>When the user closes a dialog, focus must return to a logical place within the page. This is usually to the element that triggered the dialog</Figure.Item>\n    <Figure.Item>When dialogs are triggered by buttons or links (buttons are recommended), accessibility can be further enhanced by applying aria-haspopup=\"dialog\" to the trigger. This will notify screen reader users that the trigger opens a dialog</Figure.Item>\n    <Figure.Item>We recommend that dialogs begin with a heading (typically an H2)</Figure.Item>\n    <Figure.Item>Dialogs should be able to be closed by clicking away, esc key and/or a close button</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Dialog","order":"","relativePath":"packages/ui-dialog/src/Dialog/README.md","extension":".md","srcPath":"packages/ui-dialog/src/Dialog/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dialog/src/Dialog/README.md","packageName":"@instructure/ui-dialog","requirePath":"@instructure/ui-dialog/lib/Dialog/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dialog/src/Dialog/README.md').default","esPath":"@instructure/ui-dialog/es/Dialog/README","id":"Dialog__README","title":"Dialog__README"},"DrawerLayout__README":{"description":"\nThe `<DrawerLayout />` component creates a layout consisting of both `<DrawerLayout.Tray />` and `<DrawerLayout.Content />`.\nThe tray can be placed at the `start` or `end` position. When there is sufficient space available,\nthe tray is positioned alongside the content. As the screen gets smaller, the `<DrawerTray />` can\nbe configured to overlay the `<DrawerLayout.Content />`\n\nThe `minWidth` prop specifies a breakpoint. When the `<DrawerLayout.Content />` resizes such that the width is\nless than the designated `minWidth`, the tray overlays the content\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = {\n    open: false,\n    trayIsOverlayed: false\n  };\n  handleOverlayTrayChange = (trayIsOverlayed) => {\n    this.setState({ trayIsOverlayed })\n  };\n  handleTrayDismiss = () => {\n    this.setState({ open: false })\n  };\n  render () {\n    return (\n      <View\n        height=\"25rem\"\n        as=\"div\"\n        background=\"primary\"\n        position=\"relative\"\n      >\n        { this.state.trayIsOverlayed && this.state.open && <Mask onClick={this.handleTrayDismiss} /> }\n        <DrawerLayout onOverlayTrayChange={this.handleOverlayTrayChange}>\n          <DrawerLayout.Tray\n            id=\"DrawerLayoutTrayExample1\"\n            open={this.state.open}\n            placement=\"start\"\n            label=\"Drawer Tray Start Example\"\n            onDismiss={this.handleTrayDismiss}\n          >\n            <View\n              as=\"div\"\n              maxWidth=\"16rem\"\n              textAlign=\"center\"\n              margin=\"large auto\"\n              padding=\"small\"\n            >\n              <CloseButton\n                placement=\"end\"\n                offset=\"small\"\n                onClick={this.handleTrayDismiss}\n                screenReaderLabel=\"Close\"\n              />\n              <Avatar name=\"foo bar\" margin=\"0 0 small 0\" />\n              <Text as=\"div\" size=\"x-small\">\n                Hello from start tray with a small amount of placeholder content\n              </Text>\n            </View>\n          </DrawerLayout.Tray>\n          <DrawerLayout.Content label=\"Drawer content example\">\n            <div style={{background: 'white', height: '100%'}}>\n              <View as=\"div\" padding=\"x-large\">\n                <Heading border=\"bottom\">A simple drawer layout</Heading>\n                <Grid startAt=\"medium\" vAlign=\"middle\" colSpacing=\"none\">\n                  <Grid.Row>\n                    <Grid.Col>\n                      <Button\n                        margin=\"small 0\"\n                        size=\"small\"\n                        onClick={() => { this.setState({ open: true }) }}\n                        aria-haspopup={this.state.trayIsOverlayed ? 'dialog' : 'region'}\n                        aria-controls=\"DrawerLayoutTrayExample1\"\n                      >\n                        Expand tray\n                      </Button>\n                    </Grid.Col>\n                  </Grid.Row>\n                </Grid>\n                <Text size=\"x-small\">\n                  <p>{lorem.paragraph()}</p>\n                </Text>\n                <Text size=\"x-small\">\n                  <p>{lorem.paragraph()}</p>\n                </Text>\n              </View>\n            </div>\n          </DrawerLayout.Content>\n        </DrawerLayout>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\nMultiple `<DrawerLayout />` components can be nested in order to place trays on both sides\n\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = {\n    endOpen: false,\n    startOpen: false\n  };\n  render () {\n    return (\n      <View\n        height=\"40rem\"\n        display=\"block\"\n        background=\"primary\"\n      >\n        <DrawerLayout>\n          <DrawerLayout.Tray\n            open={this.state.endOpen}\n            placement=\"end\"\n            label=\"Drawer Tray End Example\"\n            onDismiss={() => {this.setState({ endOpen: false })}}\n          >\n            <View\n              as=\"div\"\n              maxWidth=\"48rem\"\n              textAlign=\"center\"\n              margin=\"large auto\"\n              padding=\"large\"\n            >\n              <CloseButton\n                placement=\"end\"\n                offset=\"small\"\n                onClick={() => {\n                  this.setState({ endOpen: false })\n                }}\n                screenReaderLabel=\"Close\"\n              />\n              <Text as=\"div\" size=\"x-small\">\n                Hello from end tray with a good amount of content as well\n              </Text>\n            </View>\n          </DrawerLayout.Tray>\n          <DrawerLayout.Content label=\"Drawer content example containing another layout\">\n            <DrawerLayout>\n              <DrawerLayout.Tray\n                label=\"Layout Tray Start Example\"\n                open={this.state.startOpen}\n                placement=\"start\"\n                onDismiss={() => {this.setState({ startOpen: false })}}\n              >\n                <View\n                  as=\"div\"\n                  maxWidth=\"16rem\"\n                  textAlign=\"center\"\n                  margin=\"large auto\"\n                  padding=\"small\"\n                >\n                  <CloseButton\n                    placement=\"end\"\n                    offset=\"small\"\n                    onClick={() => {\n                      this.setState({ startOpen: false })\n                    }}\n                    screenReaderLabel=\"Close\"\n                  />\n                  <Avatar name=\"foo bar\" margin=\"0 0 small 0\" />\n                  <Text as=\"div\" size=\"x-small\">\n                    Hello from start tray with a small amount of placeholder content\n                  </Text>\n                </View>\n              </DrawerLayout.Tray>\n              <DrawerLayout.Content label=\"Drawer content example containing a responsive \">\n                <div style={{background: 'white', height: '100%'}}>\n                  <View as=\"div\" padding=\"x-large\">\n                    <Heading border=\"bottom\">A nested drawer layout</Heading>\n                    <Grid startAt=\"medium\" vAlign=\"middle\" colSpacing=\"none\">\n                      <Grid.Row>\n                        <Grid.Col>\n                          <Button\n                            margin=\"small 0\"\n                            size=\"small\"\n                            onClick={() => { this.setState({ startOpen: true }) }}\n                            aria-haspopup=\"dialog\"\n                          >\n                            Expand start tray\n                          </Button>\n                        </Grid.Col>\n                        <Grid.Col width=\"auto\">\n                          <Button\n                            margin=\"small 0\"\n                            size=\"small\"\n                            onClick={() => { this.setState({ endOpen: true }) }}\n                            aria-haspopup=\"dialog\"\n                          >\n                            Expand end tray\n                          </Button>\n                        </Grid.Col>\n                      </Grid.Row>\n                      <Grid.Row colSpacing=\"medium\">\n                        <Grid.Col>\n                          <Img role=\"img\" src={placeholderImage(250, 250)} />\n                        </Grid.Col>\n                        <Grid.Col>\n                          <Img role=\"img\" src={placeholderImage(250, 250)} />\n                        </Grid.Col>\n                        <Grid.Col>\n                          <Img role=\"img\" src={placeholderImage(250, 250)} />\n                        </Grid.Col>\n                      </Grid.Row>\n                    </Grid>\n                    <Text size=\"x-small\">\n                      <p>{lorem.paragraph()}</p>\n                    </Text>\n                    <Text size=\"x-small\">\n                      <p>{lorem.paragraph()}</p>\n                    </Text>\n                  </View>\n                </div>\n              </DrawerLayout.Content>\n            </DrawerLayout>\n          </DrawerLayout.Content>\n        </DrawerLayout>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","describes":"DrawerLayout","order":"","relativePath":"packages/ui-drawer-layout/src/DrawerLayout/README.md","extension":".md","srcPath":"packages/ui-drawer-layout/src/DrawerLayout/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drawer-layout/src/DrawerLayout/README.md","packageName":"@instructure/ui-drawer-layout","requirePath":"@instructure/ui-drawer-layout/lib/DrawerLayout/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-drawer-layout/src/DrawerLayout/README.md').default","esPath":"@instructure/ui-drawer-layout/es/DrawerLayout/README","id":"DrawerLayout__README","title":"DrawerLayout__README"},"Editable__README":{"description":"\nThe `Editable` component exists to support in-place editing of content on the page.\nPerhaps you have a page with some text, say the heading, that you'd like to let the user\nedit right there in-place. `Editable` manages the user's interactions which will flip\nthe rendering from the view mode to the edit mode in an accessible way. It is then just up\nto the consumer of `Editable` to provide _render properties_ which return the view component\nand the edit component.\n\nWhere `Editable` provides the state management and user interactions, it is not its\nresponsibility to provide the DOM structure to layout the component on the page.  We provide\na standard implementation of that in [`InPlaceEdit`](/#InPlaceEdit), which is where you\nwill find examples.\n\nUsing `Editable` gives you complete control, over how in-place editing\nshould look.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      mode: props.mode || 'view',\n      value: props.value || '',\n      buttonHasFocus: false,\n      readOnly: false\n    }\n    this.onFocusEditButton = null;\n  }\n\n  renderButton ({ isVisible, onClick, onFocus, onBlur, buttonRef }) {\n    if(this.state.readOnly) {\n      return null\n    }\n\n     // To correctly handle focus, always return the Button, but\n     // only visible if isVisible (if you want the UI to work in the standard way)\n    return (\n      <span style={{opacity: isVisible ? 1 : 0}}>\n        <Button\n          size=\"small\"\n          margin=\"0 0 0 x-small\"\n          onClick={onClick}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          elementRef={buttonRef}\n        >\n          Do it!\n        </Button>\n      </span>\n    )\n  }\n\n  renderViewer () {\n    return <span>{this.state.value}</span>\n  }\n\n  handleValueChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  handleModeChange = (newMode) => {\n    this.setState({mode: newMode})\n  }\n\n  renderEditor ({ onBlur, editorRef }) {\n    return (\n      <input\n        ref={editorRef}\n        onBlur={onBlur}\n        value={this.state.value}\n        onChange={this.handleValueChange}\n      />\n    )\n  }\n\n  renderMe = ({mode, getContainerProps, getViewerProps, getEditorProps, getEditButtonProps}) => {\n    return (\n      <View\n        {...getContainerProps()}\n      >\n        {mode === 'view' ? this.renderViewer(getViewerProps()) : null}\n        {mode === 'edit' ? this.renderEditor(getEditorProps()): null}\n        {this.renderButton(getEditButtonProps())}\n      </View>\n    )\n  }\n\n  onChangeReadOnly = (event) => {\n    this.setState({readOnly: event.target.checked})\n  }\n\n  render () {\n    return  (\n      <View as=\"div\">\n        <View as=\"div\" margin=\"0 0 small 0\">\n          <Checkbox size=\"small\" label=\"Read Only\" checked={this.state.readOnly} onChange={this.onChangeReadOnly}/>\n        </View>\n        <Editable\n          mode={this.state.mode}\n          onChangeMode={this.handleModeChange}\n          render={this.renderMe}\n          value={this.state.value}\n          readOnly={this.state.readOnly}\n        />\n      </View>\n    )\n  }\n\n}\nrender(<Example value=\"you can edit me\" />)\n```\n","describes":"Editable","order":"","relativePath":"packages/ui-editable/src/Editable/README.md","extension":".md","srcPath":"packages/ui-editable/src/Editable/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-editable/src/Editable/README.md","packageName":"@instructure/ui-editable","requirePath":"@instructure/ui-editable/lib/Editable/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-editable/src/Editable/README.md').default","esPath":"@instructure/ui-editable/es/Editable/README","id":"Editable__README","title":"Editable__README"},"InPlaceEdit__README":{"description":"\n`InPlaceEdit` provides the DOM structure to organize the components that participate\nin in-place editing by calling the `renderViewer` and `renderEditor` _render props_\nin the context of the containing DOM sub-tree. It also takes care of wiring up the\nevent handlers required by [`Editable`](#Editable) to make the user interactions wrok.\n\nAs a controlled component, it is the responsibility of the consumer to maintain a some data to make this work.\nEach time `InPlaceEdit` is rendered, you must provide as props:\n-  the current `mode` prop, which defaults to `'view'`. The app will be notified of\nchanges in mode via the `onChangeMode` function property.\n- the current `value` prop, which primarily serves to trigger a re-render when the value changes\n\nThe view component, as returned by the `renderViewer` property can be anything you wish, but\nwill typically render some formatted text. It is up to the consumer to provide this component with\nthe current value.\n\nThe edit component, as returned by the `renderEditor` property is used to collect the user's\ninput. It is up to the consumer to provide the necessary properties to get the user provided value\n(typically `onChange`), and to provide the current value.\n\nSome components, like [Heading](#Heading) and [Text](#Text) can be made editable by setting their `as` property\nto `input` (and optionally the `type` property). The value of this approach is that the editable version\nwill render in the same style as the view, making for a nice user experience.  Other transitions,\n`Text` to `Select` or `DateTimeInput` for example, result in a wholesale change in the component's UI, and will alter\nthe space it consumes in the app.\n\nUse `InPlaceEdit` to edit `Text` using `Text as=\"input\"`. Also demonstrates how you might wish to handle\nthe case when the text is empty.  Use the checkbox to switch between inline and block layout.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mode: props.mode || 'view',\n      value: 'This is some text',\n      inline: true\n    }\n  }\n\n  // You must provide this to Editable to be\n  // notified of mode changes\n  handleChangeMode = (mode) => {\n    this.setState({mode})\n  }\n\n  // You attach an event handler to your edit component\n  // to be notified of value changes from user interactions\n  handleChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  // Renders the view component\n  // Be sure to give it the current value\n  renderView = () => (\n    <Text\n      color={this.state.value ? 'primary' : 'secondary'}\n      weight={this.state.value ? 'normal' : 'light'}\n      size=\"large\"\n    >\n      {this.state.value || 'Enter some text'}\n    </Text>\n  )\n\n  // Renders the edit component.\n  // You have to forward the props on, which\n  // includes an onBlur property to help manage\n  // the mode changes.\n  // Be sure to give it the current value\n  renderEdit = ({onBlur, editorRef}) => (\n    <Text\n      color=\"primary\"\n      size=\"large\"\n      as=\"input\"\n      type=\"text\"\n      value={this.state.value}\n      onChange={this.handleChange}\n      aria-label=\"The title\"\n      onBlur={onBlur}\n      elementRef={editorRef}\n    />\n  )\n\n  // Renders the edit button.\n  // Leverage the default implementation provided by InPlaceEdit\n  renderEditButton = (props) => {\n    props.label = `Edit title \"${this.state.value}\"`\n    return InPlaceEdit.renderDefaultEditButton(props)\n  }\n\n  onChangeLayout = (event) => {\n    this.setState({inline: event.target.checked})\n  }\n\n  render () {\n    return (\n      <View as=\"div\">\n        <InPlaceEdit\n          renderViewer={this.renderView}\n          renderEditor={this.renderEdit}\n          renderEditButton={this.renderEditButton}\n          onChangeMode={this.handleChangeMode}\n          mode={this.state.mode}\n          value={this.state.value}\n          inline={this.state.inline}\n        />\n        <View as=\"div\" margin=\"small 0\">\n          <Checkbox label=\"inline\" checked={this.state.inline} onChange={this.onChangeLayout} />\n        </View>\n      </View>\n    )\n  }\n}\nrender(<Example />)\n```\n\nA readOnly `InPlaceEdit`\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mode: props.mode || 'view',\n      value: 'This is some text',\n    }\n  }\n\n  // You must provide this to Editable to be\n  // notified of mode changes\n  handleChangeMode = (mode) => {\n    this.setState({mode})\n  }\n\n  // You attach an event handler to your edit component\n  // to be notified of value changes from user interactions\n  handleChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  // Renders the view component\n  // Be sure to give it the current value\n  renderView = () => (\n    <Text size=\"large\">\n      {this.state.value}\n    </Text>\n  )\n\n  // Renders the edit component.\n  // You have to forward the props on, which\n  // includes an onBlur property to help manage\n  // the mode changes.\n  // Be sure to give it the current value\n  renderEdit = ({onBlur, editorRef}) => (\n    <Text\n      size=\"large\"\n      as=\"input\"\n      type=\"text\"\n      value={this.state.value}\n      onChange={this.handleChange}\n      aria-label=\"The title\"\n      onBlur={onBlur}\n      elementRef={editorRef}\n    />\n  )\n\n  // Renders the edit button.\n  // Leverage the default implemetation provided by InPlaceEdit\n  renderEditButton = (props) => {\n    props.label = `Edit title \"${this.state.value}\"`\n    return InPlaceEdit.renderDefaultEditButton(props)\n  }\n\n  render () {\n    return (\n      <InPlaceEdit\n        readOnly\n        renderViewer={this.renderView}\n        renderEditor={this.renderEdit}\n        renderEditButton={this.renderEditButton}\n\n        onChangeMode={this.handleChangeMode}\n        mode={this.state.mode}\n\n        value={this.state.value}\n      />\n    )\n  }\n}\nrender(<Example />)\n```\n\nTo edit end-justified text, wrap `<InPlaceEdit />` in a\n`<View>` component, as follows:\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mode: props.mode || 'view',\n      value: 'This is some text',\n    }\n  }\n\n  // You must provide this to Editable to be\n  // notified of mode changes\n  handleChangeMode = (mode) => {\n    this.setState({mode})\n  }\n\n  // You attach an event handler to your edit component\n  // to be notified of value changes from user interactions\n  handleChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  // Renders the view component\n  // Be sure to give it the current value\n  renderView = () => (\n    <Text size=\"large\">\n      {this.state.value}\n    </Text>\n  )\n\n  // Renders the edit component.\n  // You have to forward the props on, which\n  // includes an onBlur property to help manage\n  // the mode changes.\n  // Be sure to give it the current value\n  renderEdit = ({onBlur, editorRef}) => (\n    <Text\n      size=\"large\"\n      as=\"input\"\n      type=\"text\"\n      value={this.state.value}\n      onChange={this.handleChange}\n      aria-label=\"The title\"\n      onBlur={onBlur}\n      elementRef={editorRef}\n    />\n  )\n\n  // Renders the edit button.\n  // Leverage the default implementation provided by InPlaceEdit\n  renderEditButton = (props) => {\n    props.label = `Edit title \"${this.state.value}\"`\n    return InPlaceEdit.renderDefaultEditButton(props)\n  }\n\n  render () {\n    return (\n      <View as=\"div\" textAlign=\"end\">\n        <InPlaceEdit\n          renderViewer={this.renderView}\n          renderEditor={this.renderEdit}\n          renderEditButton={this.renderEditButton}\n          onChangeMode={this.handleChangeMode}\n          mode={this.state.mode}\n          value={this.state.value}\n          editButtonPlacement='start'\n        />\n      </View>\n    )\n  }\n}\nrender(<Example />)\n```\n\nSame as the first example, but notifies `Editable`'s `onChange`\nwhen the user has finished editing and the value has changed.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mode: props.mode || 'view',\n      value: 'Edit me',\n      onChangeValue: undefined,\n    }\n  }\n\n  // typically provided by the application so it can\n  // be notified of value changes when the user is\n  // finished editing\n  onChange = (newValue) => {\n    this.setState({onChangeValue: newValue})\n  }\n\n\n  // You must provide this to Editable to be\n  // notified of mode changes\n  handleChangeMode = (mode) => {\n    this.setState({mode})\n  }\n\n  // You attach an event handler to your edit component\n  // to be notified of value changes from user interactions\n  handleChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  // Renders the view component\n  // Be sure to give it the current value\n  renderView = () => (\n    <Text size=\"large\">\n      {this.state.value}\n    </Text>\n  )\n\n  // Renders the edit component.\n  // You have to forward the props on, which\n  // includes an onBlur property to help manage\n  // the mode changes.\n  // Be sure to give it the current value\n  renderEdit = ({onBlur, editorRef}) => (\n    <Text\n      size=\"large\"\n      as=\"input\"\n      type=\"text\"\n      value={this.state.value}\n      onChange={this.handleChange}\n      aria-label=\"The title\"\n      onBlur={onBlur}\n      elementRef={editorRef}\n    />\n  )\n\n  // Renders the edit button.\n  // Leverage the default implemetation provided by InPlaceEdit\n  renderEditButton = (props) => {\n    props.label = `Edit title \"${this.state.value}\"`\n    return InPlaceEdit.renderDefaultEditButton(props)\n  }\n\n  render () {\n    return (\n      <View as=\"div\">\n        <InPlaceEdit\n          renderViewer={this.renderView}\n          renderEditor={this.renderEdit}\n          renderEditButton={this.renderEditButton}\n\n          onChangeMode={this.handleChangeMode}\n          mode={this.state.mode}\n\n          value={this.state.value}\n          onChange={this.onChange}\n        />\n        <div>\n          <Text fontStyle=\"italic\">\n            {this.state.onChangeValue !== undefined\n              ? `onChange said: ${this.state.onChangeValue}` : `You haven't edited me yet!`}\n          </Text>\n        </div>\n      </View>\n    )\n  }\n}\nrender(<Example />)\n```\n","describes":"InPlaceEdit","order":"","relativePath":"packages/ui-editable/src/InPlaceEdit/README.md","extension":".md","srcPath":"packages/ui-editable/src/InPlaceEdit/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-editable/src/InPlaceEdit/README.md","packageName":"@instructure/ui-editable","requirePath":"@instructure/ui-editable/lib/InPlaceEdit/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-editable/src/InPlaceEdit/README.md').default","esPath":"@instructure/ui-editable/es/InPlaceEdit/README","id":"InPlaceEdit__README","title":"InPlaceEdit__README"},"Expandable__README":{"description":"\n`Expandable` handles the show/hide functionality for both [`ToggleDetails`](#ToggleDetails)\nand [`ToggleGroup`](#ToggleGroup).\n","describes":"Expandable","order":"","relativePath":"packages/ui-expandable/src/Expandable/README.md","extension":".md","srcPath":"packages/ui-expandable/src/Expandable/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-expandable/src/Expandable/README.md","packageName":"@instructure/ui-expandable","requirePath":"@instructure/ui-expandable/lib/Expandable/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-expandable/src/Expandable/README.md').default","esPath":"@instructure/ui-expandable/es/Expandable/README","id":"Expandable__README","title":"Expandable__README"},"FileDrop__README":{"description":"\n`FileDrop` is a consistent way to drag and drop, as well as browse your computer to upload a media file.\n\nThe `isDragAccepted` and `isDragRejected` props can be used to signal to the user if\nthe dragged files are going to be accepted or not (unfortunately, this only works as intended in Chrome\nand Firefox).\n\n```js\n---\nexample: true\n---\n<FileDrop\n  accept=\"image/*\"\n  onDropAccepted={([file]) => { console.log(`File accepted ${file.name}`) }}\n  onDropRejected={([file]) => { console.log(`File rejected ${file.name}`) }}\n  renderLabel={\n    <View as=\"div\" padding=\"xx-large large\" background=\"primary\">\n      <IconModuleLine size=\"large\" />\n      <Heading>Drop files here to add them to module</Heading>\n      <Text color=\"brand\">\n        Drag and drop, or click to browse your computer\n      </Text>\n    </View>\n  }\n/>\n```\n\nA disabled FileDrop\n\n```js\n---\nexample: true\n---\n<FileDrop\n  renderLabel={\n    <Billboard\n      heading=\"Upload your image\"\n      message=\"Drag and drop, or click to browse your computer\"\n      hero={<Img src={placeholderImage(1200, 300)} />}\n    />\n  }\n  interaction=\"disabled\"\n/>\n```\n\n### Accept\n\nThe `accept` prop dictates what type of files are allowed. It can be an array or comma-separated string of\n[MIME type formats](https://en.wikipedia.org/wiki/Media_type#Common_examples) and/or file extensions.\n\n```js\n---\nexample: true\n---\n<div>\n  <FileDrop\n    accept=\".csv\"\n    onDropAccepted={([file]) => { console.log(`File accepted ${file.name}`) }}\n    onDropRejected={([file]) => { console.log(`File rejected ${file.name}`) }}\n    renderLabel={\n      <View  background=\"secondary\" as=\"div\" textAlign=\"center\" padding=\"x-large large\">\n        <IconUploadSolid />\n        <Text as=\"div\" weight=\"bold\">\n          Upload document\n        </Text>\n        <Text>Drag and drop or <Text color=\"brand\">browse your files</Text></Text>\n        <Text size=\"small\" as=\"div\" lineHeight=\"double\">A single CSV document</Text>\n      </View>\n    }\n    display=\"inline-block\"\n    width=\"24rem\"\n    margin=\"x-small\"\n  />\n  <FileDrop\n    accept=\"video/*\"\n    onDropAccepted={([file]) => { console.log(`File accepted ${file.name}`) }}\n    onDropRejected={([file]) => { console.log(`File rejected ${file.name}`) }}\n    renderLabel={\n      <Billboard\n        size=\"small\"\n        message=\"All video file types\"\n        hero={<IconVideoLine />}\n      />\n    }\n    display=\"inline-block\"\n    width=\"12rem\"\n    margin=\"x-small\"\n  />\n</div>\n```\n\nFileDrop accepts the same `messages` prop as the other Instructure UI input components for providing\nform validation feedback. If there are `error` messages in the `messages` array, FileDrop's border\nwill turn the theme's `rejectedColor`.\n\n```js\n---\nexample: true\n---\n<FileDrop\n  accept=\".jpg\"\n  onDropAccepted={([file]) => { console.log(`File accepted ${file.name}`) }}\n  onDropRejected={([file]) => { console.log(`File rejected ${file.name}`) }}\n  messages={[{ text: 'Invalid file type', type: 'error' }]}\n  renderLabel={\n    <Billboard\n      size=\"small\"\n      message=\"Only .jpg files\"\n      hero={<IconImageLine />}\n    />\n  }\n  maxWidth=\"15rem\"\n  margin=\"0 auto\"\n/>\n```\n\n### shouldAllowMultiple\n\nIf the `shouldAllowMultiple` prop is `true`, FileDrop accepts multiple files.\n\n```js\n---\nexample: true\n---\n<FileDrop\n  shouldAllowMultiple={true}\n  onDropAccepted={(files) => {\n    console.log(`Files accepted ${files.map((f) => f.name).join(',')}`)\n  }}\n  renderLabel={\n    <View as=\"div\" textAlign=\"center\" padding=\"large\" margin=\"large 0 0 0\">\n      <IconAnnotateLine color=\"brand\" size=\"large\" />\n      <Text as=\"div\" color=\"brand\">\n        Drag and Drop or Click to Browser your Computer\n      </Text>\n    </View>\n  }\n  width=\"18rem\"\n  height=\"16rem\"\n  margin=\"x-small\"\n/>\n```\n\n### height Property\n\nIf the `height` property is set to `100%`, the FileDrop container will fill the available vertical space.\n\n```js\n---\nexample: true\n---\n<div style={{height: '30rem'}}>\n  <FileDrop\n    height=\"100%\"\n    renderLabel={\n      <Flex direction=\"column\" height=\"100%\" alignItems=\"center\" justifyItems=\"center\">\n        <Flex.Item padding=\"small\">\n          <IconPdfLine size=\"large\" />\n        </Flex.Item>\n        <Flex.Item padding=\"small\">\n          <Text size=\"large\">\n            Drag and Drop or Click to Browser your Computer\n          </Text>\n        </Flex.Item>\n        <Flex.Item padding=\"small\">\n          <Text color=\"secondary\" size=\"small\">\n            Accepted File Type is PDF\n          </Text>\n        </Flex.Item>\n      </Flex>\n    }\n  />\n</div>\n```\n","describes":"FileDrop","order":"","relativePath":"packages/ui-file-drop/src/FileDrop/README.md","extension":".md","srcPath":"packages/ui-file-drop/src/FileDrop/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-file-drop/src/FileDrop/README.md","packageName":"@instructure/ui-file-drop","requirePath":"@instructure/ui-file-drop/lib/FileDrop/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-file-drop/src/FileDrop/README.md').default","esPath":"@instructure/ui-file-drop/es/FileDrop/README","id":"FileDrop__README","title":"FileDrop__README"},"Flex__README":{"description":"\nThe Flex component makes it simple for developers to create multi-column\nlayouts with flexbox.\n\n### Layout direction\n\n**Note:** Use the `withVisualDebug` property to see the borders of Flex/Flex.Item while developing!\n\nFlex defaults to a `direction` of `row`, creating a horizontal layout. Change `direction` to\n`column` to stack your Flex.Items.\n\n> **Unless your layout has a specific/finite height, you probably don't need `direction=\"column\"`.** To create a layout of stacked elements, it is simpler to use multiple [View](#View) components with `display=\"block\"`.\n\n```js\n---\nexample: true\n---\n<div>\n  <Flex withVisualDebug margin=\"none none large\">\n    <Flex.Item>One</Flex.Item>\n    <Flex.Item>Two</Flex.Item>\n    <Flex.Item>Three</Flex.Item>\n    <Flex.Item>Four</Flex.Item>\n  </Flex>\n  <Flex withVisualDebug direction=\"column\" margin=\"none none large\">\n    <Flex.Item>One</Flex.Item>\n    <Flex.Item>Two</Flex.Item>\n    <Flex.Item>Three</Flex.Item>\n    <Flex.Item>Four</Flex.Item>\n  </Flex>\n  <Flex withVisualDebug direction=\"row-reverse\" margin=\"none none large\">\n    <Flex.Item>One</Flex.Item>\n    <Flex.Item>Two</Flex.Item>\n    <Flex.Item>Three</Flex.Item>\n    <Flex.Item>Four</Flex.Item>\n  </Flex>\n  <Flex withVisualDebug direction=\"column-reverse\">\n    <Flex.Item>One</Flex.Item>\n    <Flex.Item>Two</Flex.Item>\n    <Flex.Item>Three</Flex.Item>\n    <Flex.Item>Four</Flex.Item>\n  </Flex>\n</div>\n```\n\n### Sizing Flex.Items\n\nBy default, Flex.Items **expand to fit their contents**, even if that means overflowing\ntheir container.\n\n```js\n---\nexample: true\n---\n<Flex withVisualDebug>\n  <Flex.Item padding=\"x-small\">\n    Villum dolore eu fugiat nulla pariatur.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\">\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\">\n    Duis aute irure.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\">\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  </Flex.Item>\n</Flex>\n```\n\nAdding the `shouldShrink` property forces the Flex.Item to shrink as needed to fit inside its\ncontainer.\n\n```js\n---\nexample: true\n---\n<Flex withVisualDebug>\n  <Flex.Item padding=\"x-small\" shouldShrink>\n    Villum dolore eu fugiat nulla pariatur.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" shouldShrink>\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" shouldShrink>\n    Duis aute irure.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" shouldShrink>\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  </Flex.Item>\n</Flex>\n```\n\nThe `shouldGrow` property forces the Flex.Item to expand to fill in any available space.\n\n```js\n---\nexample: true\n---\n<Flex withVisualDebug>\n  <Flex.Item padding=\"x-small\" shouldShrink shouldGrow>\n    I am growing and shrinking!\n  </Flex.Item>\n  <Flex.Item>\n    I am not shrinking or growing.\n  </Flex.Item>\n</Flex>\n```\n\nThe `size` property sets the base size (accepts px, em, rem) for the Flex.Item. If the\n`direction` property is `row`, this is the item's **width**. If `direction` is `column`,\nthen it is the item's **height**. Flex.Items can grow beyond their `size`, but cannot\nshrink to less than their `size`.\n\n```js\n---\nexample: true\n---\n<Flex withVisualDebug>\n  <Flex.Item padding=\"x-small\" size=\"200px\">\n    I am always 200px.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" shouldShrink shouldGrow size=\"200px\">\n    I can grow, and shrink down to 200px.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" size=\"25%\">\n    I am always 25%.\n  </Flex.Item>\n</Flex>\n```\n\n### Aligning Flex.Items\n\nBy default, Flex aligns its Flex.Items along the `center` of the axis. Use the `alignItems`\nproperty to change this behavior.\n\n`alignItems` can be overridden on individual Flex.Items through Flex.Item's `align` property.\n\n```js\n---\nexample: true\n---\n<Flex alignItems=\"end\" withVisualDebug>\n  <Flex.Item>\n    <Avatar name=\"Sarah Robinson\" size=\"large\" src={avatarSquare} />\n  </Flex.Item>\n  <Flex.Item shouldGrow shouldShrink>\n    I should be aligned to the bottom of the Avatar.\n  </Flex.Item>\n  <Flex.Item>\n    Me, too.\n  </Flex.Item>\n  <Flex.Item align=\"start\">\n    I am aligning myself to the top.\n  </Flex.Item>\n</Flex>\n```\n\n### Justifying Flex.Items\n\nUse the `justifyItems` property to change the justification of Flex.Items.\n\n```js\n---\nexample: true\n---\n<div>\n  <Flex justifyItems=\"center\" margin=\"0 0 large\" withVisualDebug>\n    <Flex.Item>\n      <Avatar name=\"Sarah Robinson\" size=\"large\" src={avatarSquare} />\n    </Flex.Item>\n    <Flex.Item>\n      We are all centered!\n    </Flex.Item>\n    <Flex.Item>\n      Yeah!\n    </Flex.Item>\n  </Flex>\n\n  <Flex justifyItems=\"space-between\" withVisualDebug margin=\"0 0 large\">\n    <Flex.Item>\n      <Avatar name=\"Sarah Robinson\" size=\"large\" src={avatarSquare} />\n    </Flex.Item>\n    <Flex.Item>\n      Ah, a little more space.\n    </Flex.Item>\n    <Flex.Item>\n      Totally.\n    </Flex.Item>\n  </Flex>\n\n  <Flex justifyItems=\"end\" withVisualDebug>\n    <Flex.Item>\n      <Avatar name=\"Sarah Robinson\" size=\"large\" src={avatarSquare} />\n    </Flex.Item>\n    <Flex.Item>\n      Smooshed again.\n    </Flex.Item>\n    <Flex.Item>\n      Ugh.\n    </Flex.Item>\n  </Flex>\n</div>\n```\n\n### Handling overflow\n\nWhen `direction` is set to `column`, Flex.Items' `overflowY` property is automagically set\nto `auto` to account for content overflow with a vertical scrollbar.\n\n> To override this default, simply set `overflowY` on the Flex.Item to either `visible` or `hidden`.\n\n```js\n---\nexample: true\n---\n<Flex\n  withVisualDebug\n  direction=\"column\"\n>\n  <Flex.Item padding=\"small\">\n    <Heading>Pandas are cute, right?</Heading>\n  </Flex.Item>\n  <Flex.Item size=\"150px\" padding=\"small\">\n    <Img src={avatarSquare} />\n  </Flex.Item>\n</Flex>\n```\n\n### A few common layouts\n\n#### Heading and button combination\n\n```js\n---\nexample: true\n---\n<Flex>\n  <Flex.Item shouldGrow shouldShrink padding=\"none medium none none\">\n    <Heading>Lorem ipsum dolor sit amet consectetur dolor sit</Heading>\n  </Flex.Item>\n  <Flex.Item>\n    <Button margin=\"none x-small none none\">\n      Cancel\n    </Button>\n    <Button color=\"success\" renderIcon={IconUserSolid}>\n      Add user\n    </Button>\n  </Flex.Item>\n</Flex>\n```\n\n#### Centered content (note the nested Flex components and use of the `wrap` property)\n\n```js\n---\nexample: true\n---\n<Flex height=\"32rem\" justifyItems=\"center\" padding=\"large\" withVisualDebug>\n  <Flex.Item shouldShrink shouldGrow textAlign=\"center\">\n\n    <Heading level=\"h1\" margin=\"0 0 medium\">An amazing thing!</Heading>\n\n    <Flex withVisualDebug wrap=\"wrap\" justifyItems=\"space-around\" margin=\"0 0 medium\">\n      <Flex.Item padding=\"small\">\n        <SVGIcon src={iconExample} size=\"medium\" title=\"Icon Example\" />\n        <Text weight=\"bold\" size=\"large\" as=\"div\">We love you!</Text>\n      </Flex.Item>\n      <Flex.Item padding=\"small\">\n        <SVGIcon src={iconExample} size=\"medium\" title=\"Icon Example\" />\n        <Text weight=\"bold\" size=\"large\" as=\"div\">We love you!</Text>\n      </Flex.Item>\n      <Flex.Item padding=\"small\">\n        <SVGIcon src={iconExample} size=\"medium\" title=\"Icon Example\" />\n        <Text weight=\"bold\" size=\"large\" as=\"div\">We love you!</Text>\n      </Flex.Item>\n    </Flex>\n\n    <div>\n      <Button color=\"primary\" size=\"large\">Sign up now!</Button>\n    </div>\n\n  </Flex.Item>\n</Flex>\n```\n\n#### Quick and dirty mobile app layout\n\n```js\n---\nexample: true\n---\n\n<Flex height=\"400px\" width=\"300px\" as=\"div\" direction=\"column\" withVisualDebug>\n\n  <Flex.Item padding=\"small\" as=\"header\" textAlign=\"center\">\n    <Heading level=\"h3\">App</Heading>\n  </Flex.Item>\n\n  <Flex.Item shouldGrow shouldShrink padding=\"small\" as=\"main\">\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  </Flex.Item>\n\n  <Flex.Item padding=\"small\" as=\"footer\">\n\n    <Flex withVisualDebug justifyItems=\"space-between\">\n      <Flex.Item>\n        <IconButton\n          renderIcon={IconEmailLine}\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Some app function\"\n        />\n      </Flex.Item>\n      <Flex.Item>\n        <IconButton\n          renderIcon={IconPrinterLine}\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Some app function\"\n        />\n      </Flex.Item>\n      <Flex.Item>\n        <IconButton\n          renderIcon={IconCalendarDayLine}\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Some app function\"\n        />\n      </Flex.Item>\n      <Flex.Item>\n        <IconButton\n          renderIcon={IconSettingsLine}\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Some app function\"\n        />\n      </Flex.Item>\n    </Flex>\n\n  </Flex.Item>\n</Flex>\n```\n","describes":"Flex","order":"","relativePath":"packages/ui-flex/src/Flex/README.md","extension":".md","srcPath":"packages/ui-flex/src/Flex/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-flex/src/Flex/README.md","packageName":"@instructure/ui-flex","requirePath":"@instructure/ui-flex/lib/Flex/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-flex/src/Flex/README.md').default","esPath":"@instructure/ui-flex/es/Flex/README","id":"Flex__README","title":"Flex__README"},"Focusable__README":{"description":"\nThe `Focusable` component can be used to identify when an element receives focus. `Focusable` accepts\na `render` or `children` method that returns content which must have exactly one\n[focusable](https://html.spec.whatwg.org/multipage/interaction.html#focusable-area) element.\n\n```javascript\n---\nexample: true\n---\n<Focusable>\n{({ focused }) => (\n  <span>\n    <div>\n      <Button>Focus me!</Button>\n    </div>\n    {focused && (\n      <ContextView\n        margin=\"small 0\"\n        placement=\"bottom\"\n        as=\"div\"\n        background=\"primary\"\n        padding=\"small\"\n        borderWidth=\"small\"\n        display=\"block\"\n      >\n        I&#39;m focused!\n      </ContextView>\n    )}\n  </span>\n)}\n</Focusable>\n```\n\nEasily implement a \"skip to content\" link for keyboard-only or screenreader users.\n\n```javascript\n---\nexample: true\n---\n<Focusable>\n{({ focused }) => {\n  return (\n    <div>\n      {\n        focused ?\n          <Link href=\"#mainContentExample\">Skip to content</Link> :\n          <ScreenReaderContent tabIndex=\"0\">Skip to content</ScreenReaderContent>\n      }\n      <View as=\"p\" id=\"mainContentExample\">\n        Tab into this code example to see a 'Skip to Content' link appear\n      </View>\n    </div>\n  )\n}}\n</Focusable>\n```\n","describes":"Focusable","order":"","relativePath":"packages/ui-focusable/src/Focusable/README.md","extension":".md","srcPath":"packages/ui-focusable/src/Focusable/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-focusable/src/Focusable/README.md","packageName":"@instructure/ui-focusable","requirePath":"@instructure/ui-focusable/lib/Focusable/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-focusable/src/Focusable/README.md').default","esPath":"@instructure/ui-focusable/es/Focusable/README","id":"Focusable__README","title":"Focusable__README"},"FormField__README":{"description":"\nThis is a helper component that is used by most of the custom form\ncomponents. In most cases it shouldn't be used directly.\n\n```js\n---\nexample: true\n---\n<FormField id=\"foo\" label=\"Opacity\" width=\"200px\">\n  <input style={{display: 'block', width: '100%'}}/>\n</FormField>\n```\n","describes":"FormField","order":"","relativePath":"packages/ui-form-field/src/FormField/README.md","extension":".md","srcPath":"packages/ui-form-field/src/FormField/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormField/README.md","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormField/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormField/README.md').default","esPath":"@instructure/ui-form-field/es/FormField/README","id":"FormField__README","title":"FormField__README"},"FormFieldGroup__README":{"description":"\nThis is a helper component that is used by most of the custom form\ncomponents. Perfect if you need to wrap a complex group of form fields\n(Play with the different properties inside the code editor\nto see how they affect the overall look and feel). The first example\nsets the `layout to inline` and sets the `vAlign to middle` and `small rowSpacing`\n\n```js\n---\nexample: true\n---\n  <FormFieldGroup\n    description=\"Breakfast\"\n    rowSpacing=\"small\"\n    layout=\"inline\"\n    vAlign=\"middle\"\n  >\n    <TextInput renderLabel=\"Favorite Breakfast Eatery\"\n      messages={[\n      { text: 'Invalid name', type: 'error' }\n      ]}\n    />\n    <TextInput renderLabel=\"Favorite Side Dish\" />\n    <RadioInputGroup\n      name=\"beverage\"\n      description=\"Beverage of Choice\"\n      defaultValue=\"coffee\"\n      layout=\"columns\"\n    >\n      <RadioInput label=\"Juice\" value=\"juice\" />\n      <RadioInput label=\"Water\" value=\"water\" />\n      <RadioInput label=\"Coffee\" value=\"coffee\" />\n      <RadioInput label=\"Milk\" value=\"milk\" />\n      <RadioInput label=\"Soda\" value=\"soda\" />\n      <RadioInput label=\"Hot Tea\" value=\"tea\" />\n    </RadioInputGroup>\n  </FormFieldGroup>\n```\n\nThis example sets the `layout to columns` and sets the `vAlign to top`\nand the `colSpacing to medium`\n\n```js\n---\nexample: true\n---\n  <FormFieldGroup\n    description=\"Lunch\"\n    colSpacing=\"medium\"\n    layout=\"columns\"\n    vAlign=\"top\"\n  >\n    <TextInput renderLabel=\"Dining Style\" />\n    <TextInput renderLabel=\"Favorite Lunch Outing\"/>\n    <CheckboxGroup name=\"times\"\n      layout=\"stacked\"\n      onChange={function (value) { console.log(value) }}\n      defaultValue={['afternoon']}\n      description=\"Best Time to Head Out for Lunch\"\n    >\n      <Checkbox label=\"Between 11:00 and 11:30\" value=\"morning\" />\n      <Checkbox label=\"Between 11:30 and Noon\" value=\"early-afternoon\" />\n      <Checkbox label=\"Between Noon and 1:00\" value=\"afternoon\" />\n      <Checkbox label=\"Between 1:00 and 2:00\" value=\"late-afternoon\" />\n    </CheckboxGroup>\n  </FormFieldGroup>\n```\n\nThis example sets the `layout to stacked` and sets the `rowSpacing to large`\n\n```js\n---\nexample: true\n---\n  <FormFieldGroup\n    description=\"Dinner\"\n    layout=\"stacked\"\n    rowSpacing=\"large\"\n    messages={[\n    { text: 'Complete All Fields', type: 'error' }\n    ]}\n  >\n    <RadioInputGroup\n      name=\"diningstyle\"\n      description=\"Size of Your Meal\"\n      defaultValue=\"grill\"\n      layout=\"stacked\"\n    >\n      <RadioInput label=\"Keep it light\" value=\"light\" />\n      <RadioInput label=\"Anything cooked on the grill\" value=\"grill\" />\n      <RadioInput label=\"Bring it on... Ready for the full course\" value=\"full-course\" />\n      <RadioInput label=\"Breakfast for dinner\" value=\"breakfast\" />\n    </RadioInputGroup>\n    <TextInput renderLabel=\"If Not At Home - I'd Like To Eat Dinner At\"\n      />\n    <Checkbox label=\"Love to Eat Dessert After Dinner\" value=\"medium\" variant=\"toggle\" />\n  </FormFieldGroup>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Avoid placeholder text (it creates usability problems by increasing cognitive load, low contrast, lack of screen reader compatibility, etc.)</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"FormFieldGroup","order":"","relativePath":"packages/ui-form-field/src/FormFieldGroup/README.md","extension":".md","srcPath":"packages/ui-form-field/src/FormFieldGroup/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormFieldGroup/README.md","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormFieldGroup/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormFieldGroup/README.md').default","esPath":"@instructure/ui-form-field/es/FormFieldGroup/README","id":"FormFieldGroup__README","title":"FormFieldGroup__README"},"Grid__README":{"description":"\n### Create a basic column layout\n\nSimply create a `<Grid>` with some `<Grid.Row>` and `Grid.Col` children, and\nthe component will evenly distribute its columns.\n\nNote the `visualDebug` prop you can set if you're wondering\nexactly where your Grid columns are.\n\n```js\n---\nexample: true\n---\n<div>\n  <Grid visualDebug>\n    <Grid.Row>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n  <p>\n    {lorem.paragraph()}\n  </p>\n</div>\n```\n\n### Make the Grid stack until a certain breakpoint/screen width\n\nOften you will want to stack your `<Grid.Col>`s until you reach a certain\nscreen width. To do this, use the `startAt` prop.\n\nReduce the screen width and see how the Grid below only displays its\ncolumns inline after it hits the `large` breakpoint. Note that by\ndefault, stacked columns have bottom margin for visual separation.\n\n```js\n---\nexample: true\n---\n<Grid startAt=\"large\" visualDebug>\n  <Grid.Row>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n  </Grid.Row>\n</Grid>\n```\n\n### Control the width of each column\n\nYou can control the width of the `<Grid.Col>` columns for each\nbreakpoint with the `width` prop. Please note the following:\n\n+ If you don't need complex responsive behavior, you can just set\n  the width property to a single value for all breakpoints after\n  and including the breakpoint set via the `startAt` prop. e.g.\n  `<Grid.Col width={2}>`\n\n+ The Grid is made up of **12 columns**. If the columns' total\n  width exceeds 12, the layout will break.\n\n+ In addition to accepting the numerical values `1, 2, 3 ... 12`,\n  columns can also accept an `auto` value. This tells the column\n  to expand to the width of its content. (See the final example Grid\n  to see how this can be useful for right-aligning column content.)\n\n+ The `startAt` prop setting supersedes any `<Grid.Col>` width props. For\n  example, if you set `width={{small: 2}}` on a column, but the `startAt` prop\n  on your `<Grid>` is set to `medium`, the `width={{small: 2}}` will be ignored.\n\n```js\n---\nexample: true\n---\n<Grid visualDebug>\n  <Grid.Row>\n    <Grid.Col width={{small: 4, medium: 6, large: 3, xLarge: 6}}>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col width={{small: 4, medium: 4, large: 3, xLarge: 5}}>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col width={{small: 4, medium: 2, large: 6, xLarge: 1}}>\n      {lorem.paragraph()}\n    </Grid.Col>\n  </Grid.Row>\n</Grid>\n```\n\n### Add space/gutter between columns and rows\n\nBy default there is uniform spacing between Grid columns and rows, use the `colSpacing` and\n`rowSpacing` props, which accept `small`, `medium`, and `large` as values, you can change amount of spacing,\nor remove it with `none`.\n\n```js\n---\nexample: true\n---\n<Grid colSpacing=\"large\" rowSpacing=\"small\" visualDebug>\n  <Grid.Row>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n  </Grid.Row>\n  <Grid.Row>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n  </Grid.Row>\n</Grid>\n```\n\nAnother useful method for spacing out `<Grid.Col>` elements is to use the `hAlign`\nprop together with set widths on the columns. `hAlign` accepts the following\nvalues: `start`, `center`, `end`, `space-around`, and `space-between`.\n\n#### `hAlign=\"space-between\"`\n\n```js\n---\nexample: true\n---\n  <Grid hAlign=\"space-between\" visualDebug>\n    <Grid.Row>\n      <Grid.Col width={2}>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col width={4}>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col width={2}>\n        {lorem.paragraph()}\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n```\n\n#### `hAlign=\"space-around\"`\n\n```js\n---\nexample: true\n---\n  <Grid hAlign=\"space-around\" visualDebug>\n    <Grid.Row>\n      <Grid.Col width={2}>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col width={4}>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col width={2}>\n        {lorem.paragraph()}\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n```\n\n### Vertically align your columns\n\nAlign your columns along the vertical axis with the `vAlign` prop. In the example\nbelow the Grid is set to vertically center its columns.\n\n```js\n---\nexample: true\n---\n  <Grid vAlign=\"middle\" visualDebug>\n    <Grid.Row>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n```\n\n### Putting it all together\n\nLet's use `<Grid>` to create a page header with a heading on the left side\nand some action buttons on the right. In addition, let's say that on small\nscreens &#151; like smalls &#151; we want the header to stack the heading and\nthe buttons.\n\nUse `startAt=\"medium\"` to make the Grid only affect most tablets and above. To align\nthe buttons to the right, add `width=\"auto\"` to their `<Grid.Col>`. This will\nmake the column only expand to fit the width of the buttons. Because the\n`<Grid.Col>` containing the heading has no set width, it will expand by default\nto take up all the width it can, pinning the columns containing the buttons\nto the right.\n\n```js\n---\nexample: true\n---\n  <Grid startAt=\"medium\" vAlign=\"middle\" colSpacing=\"none\">\n    <Grid.Row>\n      <Grid.Col>\n        <Heading>I am a fairly lengthy heading for the page</Heading>\n      </Grid.Col>\n      <Grid.Col width=\"auto\">\n        <Button>Cancel</Button>\n        &nbsp;\n        <Button color=\"primary\" renderIcon={IconAddSolid}>Widget</Button>\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n```\n","describes":"Grid","order":"","relativePath":"packages/ui-grid/src/Grid/README.md","extension":".md","srcPath":"packages/ui-grid/src/Grid/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-grid/src/Grid/README.md","packageName":"@instructure/ui-grid","requirePath":"@instructure/ui-grid/lib/Grid/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-grid/src/Grid/README.md').default","esPath":"@instructure/ui-grid/es/Grid/README","id":"Grid__README","title":"Grid__README"},"Heading__README":{"description":"\nHeading is a component for creating typographic headings.\n\n```js\n---\nexample: true\n---\n<Heading>Default Heading</Heading>\n```\n\n### Heading level\n\nGenerate content headings, from h1 to h5. Use the `margin` prop to add margin.\n\n- The `as` prop controls what html element is output. _(if not defined it will default to level)._\n- The `level` prop sets its appearance.\n\n```js\n---\nexample: true\n---\n<div>\n  <Heading level=\"h1\" as=\"h2\" margin=\"0 0 x-small\">Heading level One</Heading>\n  <Heading level=\"h2\" as=\"h1\" margin=\"0 0 x-small\">Heading level Two</Heading>\n  <Heading level=\"h3\" margin=\"0 0 x-small\">Heading level Three</Heading>\n  <Heading level=\"h4\" margin=\"0 0 x-small\">Heading level Four</Heading>\n  <Heading level=\"h5\" margin=\"0 0 x-small\">Heading level Five</Heading>\n  <Heading level=\"reset\" as=\"h2\">Heading level reset as a Two</Heading>\n</div>\n```\n\n### Heading colors\n\nThe default is for the color to inherit, but it can be set to `primary` or `secondary` via the `color` prop. Note there is an inverse option available as well: `primary-inverse` or `secondary-inverse` (_see inverse example below_).\n\n```js\n---\nexample: true\n---\n<div>\n  <Heading>I inherit my color via the CSS cascade (default)</Heading>\n  <Heading color=\"primary\">I am primary color</Heading>\n  <Heading color=\"secondary\">I am secondary color</Heading>\n</div>\n```\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<div>\n  <Heading color=\"primary-inverse\">I am primary-inverse color</Heading>\n  <Heading color=\"secondary-inverse\">I am secondary-inverse color</Heading>\n</div>\n```\n\n### Heading borders\n\nThe default is no borders. However, using the `border` prop, you can\nadd either `top` or `bottom` borders to your heading.\n\n```js\n---\nexample: true\n---\n<div>\n  <Heading margin=\"0 0 medium\" border=\"bottom\">I have a bottom border</Heading>\n  <Heading border=\"top\">I have a top border</Heading>\n</div>\n```\n\n### Ellipsis text overflow\n\nUse [TruncateText](#TruncateText) if you need to constrain your\nHeading to a single line (or certain number of lines).\n\n```js\n---\nexample: true\n---\n<Heading level=\"h2\">\n  <TruncateText>{lorem.paragraph()}</TruncateText>\n</Heading>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Each page should always contain one and only one H1</Figure.Item>\n    <Figure.Item>Headings should be used in logical order</Figure.Item>\n    <Figure.Item>Headings should not be used to format text</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Heading","order":"","relativePath":"packages/ui-heading/src/Heading/README.md","extension":".md","srcPath":"packages/ui-heading/src/Heading/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-heading/src/Heading/README.md","packageName":"@instructure/ui-heading","requirePath":"@instructure/ui-heading/lib/Heading/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-heading/src/Heading/README.md').default","esPath":"@instructure/ui-heading/es/Heading/README","id":"Heading__README","title":"Heading__README"},"ApplyLocale__README":{"description":"\n`<ApplyLocale />` Sets the locale and timezone context for children that can\nuse it, such as a [TimeSelect](#TimeSelect).\n\n```js\n---\nexample: true\nrender: false\n---\n\nclass Example extends React.Component {\n  state = {\n    value: '2020-05-18T23:59:00'\n  }\n\n  handleChange = (e, { value }) => {\n    this.setState({ value }, () =>console.log(this.state.value))\n  }\n\n  render () {\n    return (\n      <TimeSelect\n        renderLabel=\"Choose a time\"\n        placeholder=\"e.g., 4:00:00 PM\"\n        value={this.state.value}\n        step={15}\n        format=\"LTS\"\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nrender(\n  <ApplyLocale locale=\"fr\" timezone=\"Europe/Paris\">\n    <Example />\n  </ApplyLocale>\n)\n```\n","describes":"ApplyLocale","order":"","relativePath":"packages/ui-i18n/src/ApplyLocale/README.md","extension":".md","srcPath":"packages/ui-i18n/src/ApplyLocale/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/src/ApplyLocale/README.md","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/lib/ApplyLocale/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/src/ApplyLocale/README.md').default","esPath":"@instructure/ui-i18n/es/ApplyLocale/README","id":"ApplyLocale__README","title":"ApplyLocale__README"},"ApplyTextDirection__README":{"description":"\nA utility component used to manage text direction. In addition to appending the `dir` attribute to\nits underlying DOM node, `<ApplyTextDirection />` also creates a direction context which can be\nconsumed by child components that have implemented [bidirectional](#bidirectional).\n\nIf no `dir` prop is supplied, `<ApplyTextDirection />` will fallback to its parent context if it\nexists. Otherwise it queries for and uses the documentElement `dir` attribute and defaults to `ltr`\nif it is not found.\n\n```javascript\n---\nexample: true\n---\n<ApplyTextDirection dir=\"rtl\">\n  <View\n    display=\"block\"\n    background=\"primary\"\n    padding=\"large\"\n    borderWidth=\"none none none large\"\n  >\n    <Heading>Rtl Content</Heading>\n    {lorem.paragraph()}\n  </View>\n</ApplyTextDirection>\n```\n\nFor exceptions, `<ApplyTextDirection />` can be nested and override parent context.\n\n```javascript\n---\nexample: true\n---\n<ApplyTextDirection dir=\"rtl\">\n  <View\n    display=\"block\"\n    background=\"primary\"\n    padding=\"large\"\n    borderWidth=\"none none none large\"\n  >\n    <Heading>Rtl Content</Heading>\n    {lorem.paragraph()}\n  </View>\n  <ApplyTextDirection dir=\"ltr\">\n    <View\n      display=\"block\"\n      background=\"primary\"\n      padding=\"large\"\n      borderWidth=\"none none none large\"\n    >\n      <Heading>Ltr Content</Heading>\n      {lorem.paragraph()}\n    </View>\n  </ApplyTextDirection>\n</ApplyTextDirection>\n```\n","describes":"ApplyTextDirection","order":"","relativePath":"packages/ui-i18n/src/ApplyTextDirection/README.md","extension":".md","srcPath":"packages/ui-i18n/src/ApplyTextDirection/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/src/ApplyTextDirection/README.md","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/lib/ApplyTextDirection/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/src/ApplyTextDirection/README.md').default","esPath":"@instructure/ui-i18n/es/ApplyTextDirection/README","id":"ApplyTextDirection__README","title":"ApplyTextDirection__README"},"Img__README":{"description":"\nAn accessible image component\n\n```js\n---\nexample: true\n---\n<Img src={placeholderImage(250, 250)} />\n```\n\n### Margin and display\n\nUse the `margin` prop to add space around `<Img />`. Setting the `display` prop to `block` makes\nthe image a block-level element.\n\n```js\n---\nexample: true\n---\n<View textAlign=\"center\" as=\"div\">\n  <Img margin=\"small\" alt=\"A placeholder image\" src={placeholderImage(300, 200)} />\n  <Img margin=\"small\" src={placeholderImage(200, 200)} />\n  <Img display=\"block\" margin=\"small auto\" src={placeholderImage(400, 200)} />\n</View>\n```\n\n### Color overlay\n\nThe `overlay` prop accepts parameters for `color`, `opacity`, and `blend`.\n\n```js\n---\nexample: true\n---\n  <View textAlign=\"center\" as=\"div\">\n    <Img\n      src={placeholderImage(200, 200)}\n      overlay={{color: '#008ee2', opacity: 9, blend: 'overlay'}}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n    <Img\n      src={placeholderImage(200, 200)}\n      overlay={{color: '#008ee2', opacity: 6, blend: 'multiply'}}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n    <Img\n      src={placeholderImage(200, 200)}\n      overlay={{color: '#008ee2', opacity: 3}}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n  </View>\n```\n\n### Cover\n\nWhen the `constrain` prop is set to `cover` the image fills the _full_ width and height of its\ncontaining element, while maintaining the aspect ratio of the source image.\n\n```js\n---\nexample: true\n---\n<div style={{width: '66%', height: '11rem'}}>\n  <Img src={avatarSquare} constrain=\"cover\" />\n</div>\n```\n\n### Contain\n\nWhen the `constrain` prop is set to `contain` the image fits within the width and height of its\ncontaining element, while maintaining the aspect ratio of the source image.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" background=\"primary-inverse\" width=\"200px\" height=\"200px\" textAlign=\"center\">\n  <Img src={avatarPortrait} constrain=\"contain\" />\n</View>\n```\n\n### Grayscale and blur filters\n\nPlease note: these should only be used for presentational effects.\n\n```js\n---\nexample: true\n---\n  <View textAlign=\"center\" as=\"div\">\n    <Img\n      withGrayscale\n      src={avatarSquare}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n    <Img\n      withBlur\n      src={avatarSquare}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n  </View>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Contextual images must have alternative text that describes the information or function represented by them</Figure.Item>\n    <Figure.Item>Decorative images that do not present important content, are used for layout or non-informative purposes, and do not appear within a link do not need to be presented to screen readers.  Decorative and spacer images should have null alternative text (alt=\"\")</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Img","order":"","relativePath":"packages/ui-img/src/Img/README.md","extension":".md","srcPath":"packages/ui-img/src/Img/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-img/src/Img/README.md","packageName":"@instructure/ui-img","requirePath":"@instructure/ui-img/lib/Img/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-img/src/Img/README.md').default","esPath":"@instructure/ui-img/es/Img/README","id":"Img__README","title":"Img__README"},"Link__README":{"description":"\n### Where to use Link\n\n`Link` is intended for presenting actions **inline with other content**, such as within headings or sentences. Typically those actions navigate the user to a different view.\n\n```js\n---\nexample: true\n---\n<Text>The quick brown fox <Link href=\"https://instructure.github.io/instructure-ui/\">jumps</Link> over the lazy dog.</Text>\n```\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<Text color=\"primary-inverse\">The quick brown fox <Link color=\"link-inverse\" href=\"https://instructure.github.io/instructure-ui/\">jumps</Link> over the lazy dog.</Text>\n```\n\n### Adding margin\n\nUse the `margin` prop to add space to the left or right of the Link. Because\nLink displays `inline`, **top and bottom margin will not work**. If you need\nto add margin to the top or bottom of Link, wrap it inside a `<View />`.\n\n```js\n---\nexample: true\n---\n<Text>The quick brown fox <Link href=\"https://instructure.github.io/instructure-ui/\" margin=\"0 small\">jumps</Link> over the lazy dog.</Text>\n```\n\n### Underlines\n\nLink's primary use is inline with other content, which is why it is underlined by default. For rare situations where Link needs\nto appear without surrounding text, the default underline can be configured to only show on hover by making `isWithinText={false}`. **Note: this only applies when outside high contrast mode. When inside high contrast mode, the link will always have an underline.**\n\n```js\n---\nexample: true\n---\n<Link\n  href=\"http://instructure.design\"\n  isWithinText={false}\n>\n  I have no default underline\n</Link>\n```\n\n### Truncating text\n\nUse [TruncateText](#TruncateText) to truncate text within Link. Note this will cause Link to display `inline-flex`,\nunless an alternate `display` prop is provided.\n\n```js\n---\nexample: true\n---\n<Link\n  onClick={() => console.log('clicked')}\n  isWithinText={false}\n  renderIcon={<IconUserLine size=\"small\" />}\n>\n  <TruncateText>{lorem.paragraph()}</TruncateText>\n</Link>\n```\n\n### Using icons\n\nUse the `renderIcon` property to put an [icon](#iconography) inside a Link. To position the\nicon _after_ the link text, change the `iconPlacement` property to `end`. You can also\nrender a Link with just an icon. Don't forget to add text for screen readers, though.\n\n```js\n---\nexample: true\n---\n<div>\n  <View as=\"div\" margin=\"0 0 small\">\n    <Link href=\"https://instructure.design\" renderIcon={<IconUserLine size=\"small\" />}>Icon before text</Link> with the quick brown fox\n  </View>\n  <View as=\"div\" margin=\"0 0 small\">\n    This Link has an icon and displays inline with text. <Link\n      href=\"https://instructure.design\"\n      renderIcon={<IconUserLine />}\n      iconPlacement=\"end\"\n    >\n      Icon appears after Link text\n    </Link>. This is more text after the link.\n  </View>\n  <View as=\"div\">\n    This Link consists of only an icon&nbsp;\n    <Link onClick={() => console.log('clicked!')} renderIcon={IconUserLine}>\n      <ScreenReaderContent>Descriptive text</ScreenReaderContent>\n    </Link>.\n  </View>\n</div>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Use <code>color=\"link-inverse\"</code> when a Link appears on a dark background to ensure adequate contrast</Figure.Item>\n    <Figure.Item>Links must have a non-empty href attribute to be considered true links and to be accessible to keyboard users</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Link","order":"","relativePath":"packages/ui-link/src/Link/README.md","extension":".md","srcPath":"packages/ui-link/src/Link/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-link/src/Link/README.md","packageName":"@instructure/ui-link","requirePath":"@instructure/ui-link/lib/Link/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-link/src/Link/README.md').default","esPath":"@instructure/ui-link/es/Link/README","id":"Link__README","title":"Link__README"},"InlineList__README":{"description":"\nAn `InlineList` component displays the list horizontally.\n\n```javascript\n---\nexample: true\n---\n  <InlineList>\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Submitted</Link></InlineList.Item>\n  </InlineList>\n\n```\n\n### Adding a delimiter\n\nThe `delimiter` prop lets you display a separator between Items in the List. The built-in delimeter options include ['none', 'pipe', 'slash', and 'arrow'].\n\n```javascript\n---\nexample: true\n---\n<div>\n  <InlineList delimiter=\"none\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">No Separator</Link></InlineList.Item>\n  </InlineList>\n  <InlineList delimiter=\"pipe\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Pipe Separator</Link></InlineList.Item>\n  </InlineList>\n  <InlineList delimiter=\"slash\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Slash Separator</Link></InlineList.Item>\n  </InlineList>\n  <InlineList delimiter=\"arrow\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Arrow Separator</Link></InlineList.Item>\n  </InlineList>\n</div>\n```\n\n### Sizing\n\nThe `size` prop lets you adjust the font-size of the List. The predefined values are aligned with other components that use a 'size' prop for overall consistency within your application. The default is 'medium'.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <InlineList size=\"small\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>Small Size</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Submitted</Link></InlineList.Item>\n  </InlineList>\n  <InlineList margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>Medium (default) Size</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Submitted</Link></InlineList.Item>\n  </InlineList>\n  <InlineList size=\"large\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>Large Size</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Submitted</Link></InlineList.Item>\n  </InlineList>\n</div>\n```\n\n### Adding predefined space between each InlineList.Item\n\nUse the `itemSpacing` prop to add space around your list’s items. To avoid unwanted excess space at the start/end of a List, the first and last InlineList.Item will not receive margin via the `itemSpacing` prop. \n> NOTE: itemSpacing has no affect on an InlineList.Item that has the  `delimiter` prop set to anything other than **none**.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <InlineList itemSpacing=\"xxx-small\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to xxx-small</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"xx-small\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to xx-small</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"x-small\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b>  Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to x-small</Link></InlineList.Item>\n  </InlineList>\n    <InlineList itemSpacing=\"small\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b>  Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to small</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"medium\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b>  Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to medium</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"large\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to large</Link></InlineList.Item>\n  </InlineList>\n    <InlineList itemSpacing=\"x-large\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to x-large</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"xx-large\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to xx-large</Link></InlineList.Item>\n  </InlineList>\n</div>\n```\n","describes":"InlineList","order":"","relativePath":"packages/ui-list/src/InlineList/README.md","extension":".md","srcPath":"packages/ui-list/src/InlineList/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-list/src/InlineList/README.md","packageName":"@instructure/ui-list","requirePath":"@instructure/ui-list/lib/InlineList/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-list/src/InlineList/README.md').default","esPath":"@instructure/ui-list/es/InlineList/README","id":"InlineList__README","title":"InlineList__README"},"List__README":{"description":"\n> ### What about 'inline' lists?\n>\n> For inline lists use the [InlineList](#InlineList) component.\n\n`<List>` accepts only `<List.Item>` as a child.\n\n```js\n---\nexample: true\n---\n<div>\n  <List margin=\"0 0 medium\">\n    <List.Item>List item 1</List.Item>\n    <List.Item>List item 2</List.Item>\n    <List.Item>List item 3</List.Item>\n  </List>\n  <List as=\"ol\" margin=\"0 0 medium\">\n    <List.Item>List item 1</List.Item>\n    <List.Item>List item 2</List.Item>\n    <List.Item>List item 3</List.Item>\n  </List>\n  <List isUnstyled>\n    <List.Item><Link href=\"https://www.canvaslms.com/try-canvas\">Canvas by Instructure</Link></List.Item>\n    <List.Item><Link href=\"https://www.getbridge.com\">Bridge by Instructure</Link></List.Item>\n    <List.Item><Link href=\"https://www.arcmedia.com\">Arc by Instructure</Link></List.Item>\n  </List>\n</div>\n```\n\n### Adding a delimiter\n\nThe `delimiter` lets you set a separator between items of the list. The predefined options are ['none', 'solid', and 'dashed'].\n\n```js\n---\nexample: true\n---\n<div>\n  <List delimiter=\"none\" margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n  </List>\n  <List delimiter=\"solid\" isUnstyled margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n  </List>\n  <List delimiter=\"dashed\" as=\"ol\" margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n  </List>\n</div>\n```\n\n### Sizing\n\nThe `size` prop lets you adjust the font-size of the List. The predefined values are aligned with other components that use a 'size' prop for overall consistency within your application. The default is 'medium'.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <List size=\"small\" margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>Small Size</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n  </List>\n  <List margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>Medium (default) Size</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n  </List>\n  <List size=\"large\" margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>Large Size</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n  </List>\n</div>\n```\n\n### Adding predefined space between each List.Item\n\nUse the `itemSpacing` prop to add space around your list’s items. To avoid unwanted excess space at the start/end of a List, the first and last List.Item will not receive margin via the `itemSpacing` prop.\n\n> NOTE: itemSpacing has no affect on an List.Item that has the `delimiter` prop set to anything other than **none**.\n\n```js\n---\nexample: true\n---\n  <List isUnstyled itemSpacing=\"small\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n    <List.Item><Link href=\"#\">itemSpacing has been set to xx-small</Link></List.Item>\n  </List>\n```\n\n**itemSpacing** set to `medium`\n\n```js\n---\nexample: true\n---\n  <List itemSpacing=\"medium\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item><b>Due:</b>  Oct 1, 2019</List.Item>\n    <List.Item><Link href=\"#\">itemSpacing has been set to medium</Link></List.Item>\n  </List>\n```\n\n**itemSpacing** set to `x-large`\n\n```js\n---\nexample: true\n---\n    <List isUnstyled itemSpacing=\"x-large\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n    <List.Item><Link href=\"#\">itemSpacing has been set to x-large</Link></List.Item>\n  </List>\n```\n\nList.Items also accept the same `margin` prop as List, in the event you need different spacing around certain List.Items in the List.\n\n```js\n---\nexample: true\n---\n<List isUnstyled itemSpacing=\"small\">\n  <List.Item margin=\"x-large 0\"><Link href=\"https://www.canvaslms.com/try-canvas\">Canvas by Instructure</Link></List.Item>\n  <List.Item><Link href=\"https://www.getbridge.com\">Bridge by Instructure</Link></List.Item>\n  <List.Item><Link href=\"https://www.arcmedia.com\">Arc by Instructure</Link></List.Item>\n</List>\n```\n","describes":"List","order":"","relativePath":"packages/ui-list/src/List/README.md","extension":".md","srcPath":"packages/ui-list/src/List/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-list/src/List/README.md","packageName":"@instructure/ui-list","requirePath":"@instructure/ui-list/lib/List/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-list/src/List/README.md').default","esPath":"@instructure/ui-list/es/List/README","id":"List__README","title":"List__README"},"Menu__README":{"description":"\nThe `Menu` component is a special type of Popover that is meant to be used as a list of actions or functions (`<Menu.Items/>` that are keyboard accessible)  that the user may want to invoke often related to or controlling some other content on the page.\n\n- Menu should not be used for navigation.\n- Menu should not be used as a form input.\n- Menu is usually triggered on click of a trigger element (often a ‘...’ or cog icon button).\n- The Menu provides custom focus management, trapping focus within the ContextView, allowing navigation between Menu.Items via arrow keys.\n- Menu uses Popover internally and provides additional semantic markup and focus behavior.\n\nPassing a node to the `trigger` prop will render a toggle button which, when clicked, shows or hides\nthe [Menu](#Menu) in a [Popover](#Popover).\n\nNote: `<Menu/>` cannot contain content that is not a `<Menu.Item/>` (links or buttons). If\nyou need to include more complex content, take a look at [Popover](#Popover).\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      singleSelection: ['itemOne'],\n      multipleSelection: ['optionOne', 'optionThree']\n    }\n  }\n\n  handleSingleSelect = (e, newSelected) => {\n    this.setState({\n      singleSelection: newSelected\n    })\n  };\n\n  handleMultipleSelect = (e, newSelected) => {\n    this.setState({\n      multipleSelection: newSelected\n    })\n  };\n\n  render () {\n    return (\n    <View padding=\"medium\" textAlign=\"center\">\n      <Menu\n        placement=\"bottom\"\n        trigger={\n          <Button>Menu</Button>\n        }\n        mountNode={() => document.getElementById('main')}\n      >\n        <Menu.Item value=\"mastery\">Learning Mastery</Menu.Item>\n        <Menu.Item href=\"https://instructure.github.io/instructure-ui/\">Default (Grid view)</Menu.Item>\n        <Menu.Item disabled>Individual (List view)</Menu.Item>\n        <Menu label=\"More Options\">\n          <Menu.Group\n            allowMultiple\n            label=\"Select Many\"\n            selected={this.state.multipleSelection}\n            onSelect={this.handleMultipleSelect}\n          >\n            <Menu.Item value=\"optionOne\">\n              Option 1\n            </Menu.Item>\n            <Menu.Item value=\"optionTwo\">\n              Option 2\n            </Menu.Item>\n            <Menu.Item value=\"optionThree\">\n              Option 3\n            </Menu.Item>\n          </Menu.Group>\n          <Menu.Separator />\n          <Menu.Item value=\"navigation\">Navigation</Menu.Item>\n          <Menu.Item value=\"set\">Set as default</Menu.Item>\n        </Menu>\n        <Menu.Separator />\n        <Menu.Group\n          label=\"Select One\"\n          selected={this.state.singleSelection}\n          onSelect={this.handleSingleSelect}\n        >\n          <Menu.Item value=\"itemOne\">\n            Item 1\n          </Menu.Item>\n          <Menu.Item value=\"itemTwo\">\n            Item 2\n          </Menu.Item>\n        </Menu.Group>\n        <Menu.Separator />\n        <Menu.Item value=\"baz\">Open grading history...</Menu.Item>\n      </Menu>\n    </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Make the text within Menu direct so users can quickly decide on an action</Figure.Item>\n    <Figure.Item>Use for radio or checkbox type interactions</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Nest Menu.Items more than two levels deep</Figure.Item>\n    <Figure.Item>Use content that is not a Menu.Item (links or buttons)</Figure.Item>\n    <Figure.Item>Include complex content</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Menu","order":"","relativePath":"packages/ui-menu/src/Menu/README.md","extension":".md","srcPath":"packages/ui-menu/src/Menu/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-menu/src/Menu/README.md","packageName":"@instructure/ui-menu","requirePath":"@instructure/ui-menu/lib/Menu/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-menu/src/Menu/README.md').default","esPath":"@instructure/ui-menu/es/Menu/README","id":"Menu__README","title":"Menu__README"},"Metric__README":{"description":"\nThe Metric component displays 'value' and 'label'. The default alignment is 'center'.\n\n```javascript\n---\nexample: true\n---\n  <Metric textAlign=\"start\" renderLabel=\"Grade\" renderValue=\"80%\" />\n```\n\nThe Metric component can be set to align 'start'.\n```javascript\n---\nexample: true\n---\n  <Metric renderLabel=\"Grade\" renderValue=\"80%\" />\n```\n\nThe Metric component can be set to align 'end'.\n```javascript\n---\nexample: true\n---\n  <Metric textAlign=\"end\" renderLabel=\"Grade\" renderValue=\"80%\" />\n```\n","describes":"Metric","order":"","relativePath":"packages/ui-metric/src/Metric/README.md","extension":".md","srcPath":"packages/ui-metric/src/Metric/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-metric/src/Metric/README.md","packageName":"@instructure/ui-metric","requirePath":"@instructure/ui-metric/lib/Metric/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-metric/src/Metric/README.md').default","esPath":"@instructure/ui-metric/es/Metric/README","id":"Metric__README","title":"Metric__README"},"MetricGroup__README":{"description":"\nA `MetricGroup` component displays multiple `Metric` (value + label) in rows.\n\n```javascript\n---\nexample: true\n---\n<MetricGroup>\n  <Metric renderLabel=\"Grade\" renderValue=\"80%\" />\n  <Metric renderLabel=\"Late\" renderValue=\"4\" />\n  <Metric renderLabel=\"Missing\" renderValue=\"2\" />\n</MetricGroup>\n```\n","describes":"MetricGroup","order":"","relativePath":"packages/ui-metric/src/MetricGroup/README.md","extension":".md","srcPath":"packages/ui-metric/src/MetricGroup/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-metric/src/MetricGroup/README.md","packageName":"@instructure/ui-metric","requirePath":"@instructure/ui-metric/lib/MetricGroup/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-metric/src/MetricGroup/README.md').default","esPath":"@instructure/ui-metric/es/MetricGroup/README","id":"MetricGroup__README","title":"MetricGroup__README"},"Modal__README":{"description":"\nThe Modal is a dialog component that is centered in the viewport. The Modal\noverlays the application content and applies a mask to it.\n\nThe default `padding` of the Modal content is `medium` but can be overridden\nby using the `padding` prop on the `<Modal.Body/>` if the use case requires it.\n\n```js\n---\nrender: false\nexample: true\n---\nconst fpo = lorem.paragraphs(5)\n\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(function (state) {\n      return { open: !state.open }\n    })\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault()\n    console.log('form submitted')\n    this.setState(state => ({ open: false }))\n  }\n\n  renderCloseButton () {\n    return (\n      <CloseButton\n        placement=\"end\"\n        offset=\"small\"\n        onClick={this.handleButtonClick}\n        screenReaderLabel=\"Close\"\n      />\n    )\n  }\n\n  render () {\n    return (\n      <div style={{ padding: '0 0 11rem 0', margin: '0 auto' }}>\n        <Button onClick={this.handleButtonClick}>\n          {this.state.open ? 'Close' : 'Open'} the Modal\n        </Button>\n        <Modal\n          as=\"form\"\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          onSubmit={this.handleFormSubmit}\n          size=\"auto\"\n          label=\"Modal Dialog: Hello World\"\n          shouldCloseOnDocumentClick\n        >\n          <Modal.Header>\n            {this.renderCloseButton()}\n            <Heading>Hello World</Heading>\n          </Modal.Header>\n          <Modal.Body>\n            <TextInput renderLabel=\"Example\" placeholder=\"if you hit enter here, it should submit the form\" />\n            <Text lineHeight=\"double\">{fpo}</Text>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleButtonClick} margin=\"0 x-small 0 0\">Close</Button>\n            <Button color=\"primary\" type=\"submit\">Submit</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Constraining Modal to a parent element\n\nBy default, Modals are positioned relative to the document body.\n\nSetting the `constrain` property to `parent` will constrain the Modal within the element it is mounted from (specified via the `mountNode` property). Note: in these cases, the `mountNode` element should have an explicit `height` set: Because Modal is absolutely positioned, it has no height of its own.\n\n```js\n---\nrender: false\nexample: true\n---\nconst fpo = lorem.paragraphs(1)\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      size: 'auto'\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(function (state) {\n      return { open: !state.open }\n    })\n  }\n\n  renderCloseButton () {\n    return (\n      <CloseButton\n        placement=\"end\"\n        offset=\"small\"\n        onClick={this.handleButtonClick}\n        screenReaderLabel=\"Close\"\n      />\n    )\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.handleButtonClick}>\n          {this.state.open ? 'Close' : 'Open'} the Modal\n        </Button>\n        <Modal\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          size=\"fullscreen\"\n          label=\"Modal Dialog: Hello World\"\n          shouldCloseOnDocumentClick\n          mountNode={() => document.getElementById('constrainExample')}\n          constrain=\"parent\"\n        >\n          <Modal.Header>\n            {this.renderCloseButton()}\n            <Heading>This Modal is constrained to a parent</Heading>\n          </Modal.Header>\n          <Modal.Body>\n            <View as=\"p\" margin=\"none none small\"><Text>{fpo}</Text></View>\n            <ModalAutoCompleteExample renderLabel=\"Choose a state\" />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleButtonClick} margin=\"0 x-small 0 0\">Close</Button>\n            <Button onClick={this.handleButtonClick} color=\"primary\" type=\"submit\">Submit</Button>\n          </Modal.Footer>\n        </Modal>\n        <View\n          background=\"primary-inverse\"\n          margin=\"medium auto none\"\n          display=\"block\"\n          width=\"25rem\"\n          height=\"25rem\"\n          borderWidth=\"large\"\n          id=\"constrainExample\">\n        </View>\n      </div>\n    )\n  }\n}\n\nclass ModalAutoCompleteExample extends React.Component {\n  state = {\n    isShowingOptions: false\n  }\n\n  handleShowOptions = () => {\n    this.setState({ isShowingOptions: true })\n  }\n  handleHideOptions = () => {\n    this.setState({ isShowingOptions: false })\n  }\n  render () {\n    const options = [\n      'Alabama', 'Alaska', 'American Samoa', 'Arizona',\n      'Arkansas', 'California', 'Colorado', 'Connecticut',\n      'Delaware', 'District Of Columbia',\n      'Federated States Of Micronesia', 'Florida', 'Georgia',\n      'Guam', 'Hawaii', 'Idaho', 'Illinois'\n    ]\n\n    return (\n      <Select {...this.props} isShowingOptions={this.state.isShowingOptions} onRequestShowOptions={this.handleShowOptions} onRequestHideOptions={this.handleHideOptions}>\n        {options.map((label, index) => (\n          <Select.Option key={label} id={'' + index}>\n            {label}\n          </Select.Option>\n        ))}\n      </Select>\n    )\n  }\n}\n\nrender(<Example />)\n```\n### Media (images, etc.) inside Modals\n\n> Setting the `variant` prop to `\"inverse\"` will result in a dark version of Modal, useful for displaying media. *Note that the `inverse` Modal does not currently support text or form input content.*\n\n**If you are displaying small, relatively uniform images or videos inside Modal, the default settings should work well.** Modal.Body will expand to the height of the media you're displaying. If there is overflow, scrollbars will be available.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(function (state) {\n      return { open: !state.open }\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.handleButtonClick}>\n          {this.state.open ? 'Close' : 'Open'} the Modal\n        </Button>\n        <Modal\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          size=\"auto\"\n          label=\"Modal Dialog: Hello Media\"\n          shouldCloseOnDocumentClick\n          variant=\"inverse\"\n        >\n          <Modal.Header>\n            <Flex>\n              <Flex.Item shouldGrow shouldShrink>\n                <Heading level=\"h2\"><TruncateText>A small image</TruncateText></Heading>\n              </Flex.Item>\n              <Flex.Item>\n                <CloseButton\n                  color=\"primary-inverse\"\n                  placement=\"end\"\n                  offset=\"small\"\n                  onClick={this.handleButtonClick}\n                  screenReaderLabel=\"Close\"\n                />\n              </Flex.Item>\n            </Flex>\n          </Modal.Header>\n          <Modal.Body padding=\"none\">\n            <Img\n              src={placeholderImage(500, 250)}\n              display=\"block\"\n              margin=\"0 auto\"\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleButtonClick} withBackground={false} color=\"primary-inverse\" type=\"submit\">Submit</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n**When you have to display large media inside the Modal (or have no control over the size of the media)**, set `overflow` to `fit`. Doing so makes Modal.Body fill 100% of the available width and height, enabling you to\nuse the [Img](#Img) component's `constrain` property to fit the image inside Modal.Body.\n\n> `<Img />` uses CSS's [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) for its constrain property. If you're not using `<Img />`, add an `object-fit` rule to your media, and it will work with `overflow=\"fit\"`.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      imageFit: 'cover',\n      modalSize: 'fullscreen'\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(function (state) {\n      return { open: !state.open }\n    })\n  }\n\n  handleImageFitChange = (event, value) => {\n    this.setState({ imageFit: value })\n  }\n\n  handleModalSizeChange = (event, value) => {\n    this.setState({ modalSize: value })\n  }\n\n  render () {\n    return (\n      <div>\n        <FormFieldGroup\n          description={<Heading level=\"h3\" as=\"h3\">Media Modal</Heading>}\n          rowSpacing=\"medium\"\n        >\n          <RadioInputGroup\n            onChange={this.handleImageFitChange}\n            name=\"imageFit\"\n            defaultValue=\"cover\"\n            description=\"Img component's `constrain` prop\"\n            variant=\"toggle\"\n          >\n            <RadioInput label=\"Cover\" value=\"cover\" />\n            <RadioInput label=\"Contain\" value=\"contain\" />\n          </RadioInputGroup>\n          <RadioInputGroup\n            onChange={this.handleModalSizeChange}\n            name=\"modalSize\"\n            defaultValue=\"fullscreen\"\n            description=\"Modal size\"\n            variant=\"toggle\"\n          >\n            <RadioInput label=\"fullscreen\" value=\"fullscreen\" />\n            <RadioInput label=\"small\" value=\"small\" />\n            <RadioInput label=\"medium\" value=\"medium\" />\n            <RadioInput label=\"large\" value=\"large\" />\n            <RadioInput label=\"auto\" value=\"auto\" />\n          </RadioInputGroup>\n        </FormFieldGroup>\n        <Button onClick={this.handleButtonClick} margin=\"medium 0 0\">\n          {this.state.open ? 'Close' : 'Open'} the Modal\n        </Button>\n        <Modal\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          size={this.state.modalSize}\n          label=\"Modal Dialog: Hello Media\"\n          shouldCloseOnDocumentClick\n          variant=\"inverse\"\n          overflow=\"fit\"\n        >\n          <Modal.Header>\n            <Flex>\n              <Flex.Item shouldGrow shouldShrink>\n                <Flex alignItems=\"center\">\n                  <Flex.Item margin=\"0 x-small 0 0\">\n                    <SVGIcon src={iconExample} size=\"small\" title=\"Icon Example\" />\n                  </Flex.Item>\n                  <Flex.Item shouldGrow shouldShrink>\n                    <Heading level=\"h2\"><TruncateText>This Modal Contains Media</TruncateText></Heading>\n                  </Flex.Item>\n                </Flex>\n              </Flex.Item>\n              <Flex.Item>\n                <IconButton\n                  color=\"primary-inverse\"\n                  withBackground={false}\n                  withBorder={false}\n                  renderIcon={IconPrinterSolid}\n                  screenReaderLabel=\"Print This Image\"\n                  margin=\"0 x-small 0 0\"\n                />\n                <IconButton\n                  color=\"primary-inverse\"\n                  withBackground={false}\n                  withBorder={false}\n                  renderIcon={IconDownloadSolid}\n                  screenReaderLabel=\"Download This Image\"\n                  margin=\"0 x-small 0 0\"\n                />\n                <IconButton\n                  color=\"primary-inverse\"\n                  withBackground={false}\n                  withBorder={false}\n                  renderIcon={IconXSolid}\n                  screenReaderLabel=\"Close\"\n                  onClick={this.handleButtonClick}\n                />\n              </Flex.Item>\n            </Flex>\n          </Modal.Header>\n          <Modal.Body padding=\"none\">\n            <Img\n              src={avatarSquare}\n              constrain={this.state.imageFit}\n              display=\"block\"\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleButtonClick} withBackground={false} color=\"primary-inverse\" type=\"submit\">Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use it to validate user decisions or to gain secondary confirmation</Figure.Item>\n    <Figure.Item>Provide input areas that the user may interact with such as Forms, Dropdowns, Selectors, and Links</Figure.Item>\n    <Figure.Item>Provide a way to dismiss the Modal: the \"x\" close button, the ESC key, clicking outside the modal, alternative response button (done, etc...)</Figure.Item>\n    <Figure.Item>Place optional response button(s) on the right side within the Modal.Footer</Figure.Item>\n    <Figure.Item>Place primary button on the far right with secondary response buttons to the left of the primary</Figure.Item>\n    <Figure.Item>Use size=\"fullscreen\" when setting Modal.Body to overflow=\"contain\" to support media fitting within its container</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use when the workflow should NOT be interrupted</Figure.Item>\n    <Figure.Item>Use to show error, success, or warning messages/notifications (see Alert)</Figure.Item>\n    <Figure.Item>Add content to a modal that would be better suited in its own page</Figure.Item>\n    <Figure.Item>Use \"inverse\" variant for anything other than media</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Keyboard focus must be set in the modal when it appears; usually on the first interactive element</Figure.Item>\n    <Figure.Item>Modals must contain keyboard focus until they’re closed. This is to ensure that keyboard or screen reader users won't mistakenly interact with background content that is meant to be hidden or inaccessible</Figure.Item>\n    <Figure.Item>When a user closes a modal, focus must return to a logical place within the page. This is usually the element that triggered opening the modal</Figure.Item>\n    <Figure.Item>Modals should be able to be closed by clicking away, esc key and/or a close button</Figure.Item>\n    <Figure.Item>We recommend that modals begin with a heading (typically H2)</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Modal","order":"","relativePath":"packages/ui-modal/src/Modal/README.md","extension":".md","srcPath":"packages/ui-modal/src/Modal/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-modal/src/Modal/README.md","packageName":"@instructure/ui-modal","requirePath":"@instructure/ui-modal/lib/Modal/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-modal/src/Modal/README.md').default","esPath":"@instructure/ui-modal/es/Modal/README","id":"Modal__README","title":"Modal__README"},"Transition__README":{"description":"\nThe `Transition` wrapper helps you easily transition elements in and out of\nyour UI. The component defaults to the `fade` opacity transition.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      in: true\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState((state) => {\n      return {\n        in: !state.in\n      }\n    })\n  };\n\n  render () {\n    return (\n      <div>\n        <div>\n          <Button margin=\"small 0\" size=\"small\" onClick={this.handleButtonClick}>\n            Fade {this.state.in ? 'Out' : 'In'}\n          </Button>\n        </div>\n        <Transition\n          transitionOnMount\n          in={this.state.in}\n          type=\"fade\"\n        >\n          <Avatar name=\"Fade\" />\n        </Transition>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n`scale` transitions both the opacity and size of the element.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      in: true\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState((state) => {\n      return {\n        in: !state.in\n      }\n    })\n  };\n\n  render () {\n    return (\n      <div>\n        <div>\n          <Button margin=\"small 0\" size=\"small\" onClick={this.handleButtonClick}>\n            {this.state.in ? 'Collapse' : 'Expand'}\n          </Button>\n        </div>\n        <Transition\n          transitionOnMount\n          unmountOnExit\n          in={this.state.in}\n          type=\"scale\"\n        >\n          <Avatar name=\"Collapse\" />\n        </Transition>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n`slide` transitions the horizontal or vertical position of the element. The slide direction can be\ninternationalized for right to left (rtl) languages. The following example uses the\n[ApplyTextDirection](#ApplyTextDirection) util to mirror the slide direction for rtl.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      direction: 'left',\n      in: true\n    }\n  }\n\n  handleDirectionChange = (e, value) => {\n    this.setState({\n      direction: value,\n      in: true\n    })\n  };\n\n  handleButtonClick = () => {\n    this.setState((state) => {\n      return {\n        in: !state.in\n      }\n    })\n  };\n\n  mirrorDirection (direction) {\n    const mirror = {\n      left: 'right',\n      right: 'left',\n      up: 'up',\n      down: 'down'\n    }\n\n    return mirror[direction]\n  };\n\n  render () {\n    return (\n      <ApplyTextDirection>\n        {(dir, rtl) => {\n          const direction = rtl ? this.mirrorDirection(this.state.direction) : this.state.direction\n          const directionVariants = [\n            {value: 'left', label: 'Start'},\n            {value: 'right', label: 'End'},\n            {value: 'down', label: 'Down'},\n            {value: 'up', label: 'Up'}\n          ]\n          return (\n            <div>\n              <div>\n                <RadioInputGroup\n                  onChange={this.handleDirectionChange}\n                  name=\"slideExample\"\n                  description={<ScreenReaderContent>Select a direction</ScreenReaderContent>}\n                  value={direction}\n                  variant=\"toggle\"\n                >\n                  {directionVariants.map(dir => <RadioInput key={dir.value} value={dir.value} label={dir.label} />)}\n                </RadioInputGroup>\n                <Button size=\"small\" margin=\"medium none small\" onClick={this.handleButtonClick}>\n                  Slide {this.state.in ? 'Out' : 'In'}\n                </Button>\n              </div>\n              <div style={{\n                position: 'relative',\n                overflow: 'hidden',\n                height: '15rem',\n                display: 'flex',\n                justifyContent: (this.state.direction === 'right') ? 'flex-end' : 'flex-start'\n              }}>\n                <Transition\n                  transitionOnMount\n                  unmountOnExit\n                  in={this.state.in}\n                  type={`slide-${direction}`}\n                >\n                  <Avatar name=\"Slide\" />\n                </Transition>\n              </div>\n            </div>\n          )\n        }}\n      </ApplyTextDirection>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","describes":"Transition","order":"","relativePath":"packages/ui-motion/src/Transition/README.md","extension":".md","srcPath":"packages/ui-motion/src/Transition/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-motion/src/Transition/README.md","packageName":"@instructure/ui-motion","requirePath":"@instructure/ui-motion/lib/Transition/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-motion/src/Transition/README.md').default","esPath":"@instructure/ui-motion/es/Transition/README","id":"Transition__README","title":"Transition__README"},"AppNav__README":{"description":"\n`AppNav` is a navigation component currently intended for use within LTI apps. AppNav\ncan be configured to adapt to small screen widths by truncating nav items that\ndon't fit within the available space.\n\nThe `onUpdate` function prop returns the number of visible nav items, while the\n`renderTruncateLabel` function prop allows you to customize the trigger for the Menu\nthat contains the truncated items. The example below shows how you can use both of\nthese props to create a hamburger menu when the number of visible nav items is less\nthan two.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nconst totalItemsCount = 5\n\nclass AppNavExample extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      visibleItemsCount: totalItemsCount\n    }\n  }\n\n  handleUpdate = ({ visibleItemsCount }) => {\n    this.setState({ visibleItemsCount })\n  }\n\n  render () {\n    const visibleItemsCount = this.state.visibleItemsCount\n\n    return (\n      <AppNav\n        screenReaderLabel=\"App navigation\"\n        visibleItemsCount={visibleItemsCount >= 2 ? visibleItemsCount : 0}\n        onUpdate={this.handleUpdate}\n        renderBeforeItems={\n          <AppNav.Item\n            renderLabel={<ScreenReaderContent>Instructure</ScreenReaderContent>}\n            renderIcon={<IconCommonsLine inline={false} size=\"medium\" color=\"primary\" />}\n            href=\"http://instructure.com\"\n          />\n        }\n        renderAfterItems={\n          <IconButton\n            onClick={() => console.log('Add')}\n            renderIcon={IconPlusSolid}\n            margin=\"0 0 0 x-small\"\n            screenReaderLabel=\"Add something\"\n            withBorder={false}\n            withBackground={false}\n          />\n        }\n        renderTruncateLabel={function () {\n          const hiddenItemsCount = totalItemsCount - visibleItemsCount\n          if (visibleItemsCount >= 2) {\n            return `${hiddenItemsCount} More`\n          } else {\n            return (\n              <span>\n                <IconHamburgerLine size=\"small\" inline={false} />\n                <ScreenReaderContent>{`${hiddenItemsCount} More`}</ScreenReaderContent>\n              </span>\n            )\n          }\n        }}\n      >\n        <AppNav.Item\n          renderLabel=\"instructure-ui\"\n          href=\"http://instructure.design\"\n          renderAfter={\n            <Badge\n              type=\"notification\"\n              variant=\"success\"\n              standalone\n              formatOutput={function () {\n                return <ScreenReaderContent>You have notifications from instructure-ui</ScreenReaderContent>\n              }}\n            />\n          }\n        />\n        <AppNav.Item\n          isSelected\n          renderLabel=\"Canvas\"\n          href=\"https://www.instructure.com/canvas/\"\n        />\n        <AppNav.Item\n          renderLabel=\"Canvas Network\"\n          href=\"https://canvas.net\"\n        />\n        <AppNav.Item\n          renderLabel={() => 'Canvas Community'}\n          href=\"https://community.canvaslms.com/\"\n        />\n        <AppNav.Item\n          renderLabel=\"Bridge\"\n          href=\"https://www.instructure.com/bridge/\"\n        />\n      </AppNav>\n    )\n  }\n}\n\nrender(<AppNavExample />)\n```\n","describes":"AppNav","order":"","relativePath":"packages/ui-navigation/src/AppNav/README.md","extension":".md","srcPath":"packages/ui-navigation/src/AppNav/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-navigation/src/AppNav/README.md","packageName":"@instructure/ui-navigation","requirePath":"@instructure/ui-navigation/lib/AppNav/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-navigation/src/AppNav/README.md').default","esPath":"@instructure/ui-navigation/es/AppNav/README","id":"AppNav__README","title":"AppNav__README"},"Navigation__README":{"description":"\nA top-level `Navigation` component\n\n```js\n---\nexample: true\n---\n  <div style={{height: '35rem'}}>\n    <Navigation\n      label=\"Main navigation\"\n      toggleLabel={{\n        expandedLabel: 'Minimize Navigation',\n        minimizedLabel: 'Expand Navigation'\n      }}\n    >\n      <Navigation.Item\n        icon={<Img src={placeholderLogo(85, 85)} constrain=\"cover\" />}\n        label={<ScreenReaderContent>Home</ScreenReaderContent>}\n        href=\"#\"\n        themeOverride={{\n          backgroundColor: 'red',\n          hoverBackgroundColor: 'blue'\n        }}\n      />\n      <Navigation.Item\n        icon={<Avatar name=\"Ziggy Marley\" size=\"x-small\"/>}\n        label=\"Account\"\n        onClick={() => { this.loadSubNav('account') }}\n      />\n      <Navigation.Item\n        icon={<IconAdminLine />}\n        label=\"Admin\"\n        href=\"#\"\n      />\n      <Navigation.Item selected\n        icon={<IconDashboardLine />}\n        label=\"Dashboard\"\n        href=\"#\"\n      />\n      <Navigation.Item\n        icon={<Badge count={99}><IconInboxLine /></Badge>}\n        label=\"Inbox\"\n        href=\"#\"\n      />\n      <Navigation.Item\n        icon={<IconUserLine />}\n        label=\"Supercalifragilistic\"\n        href=\"#\"\n      />\n    </Navigation>\n  </div>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use for top-level Navigation</Figure.Item>\n    <Figure.Item>Remember that Navigation can be themed by the institution</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Add LTI links to the main area</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Navigation","order":"","relativePath":"packages/ui-navigation/src/Navigation/README.md","extension":".md","srcPath":"packages/ui-navigation/src/Navigation/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-navigation/src/Navigation/README.md","packageName":"@instructure/ui-navigation","requirePath":"@instructure/ui-navigation/lib/Navigation/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-navigation/src/Navigation/README.md').default","esPath":"@instructure/ui-navigation/es/Navigation/README","id":"Navigation__README","title":"Navigation__README"},"NumberInput__README":{"description":"\nA controlled number input field. Note that this field **does not work\nuncontrolled** - you must pass event handlers if you want it to respond to\nuser input.\n\nThis example handles arrow buttons, up/down arrow keys, and typing into\nthe input.  It also includes an `onBlur` handler that displays an error message\nif the input is invalid or missing.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  MIN = 0\n  MAX = 999\n\n  state = {\n    disabled: false,\n    inline: false,\n    messages: null,\n    number: null,\n    readOnly: false,\n    showArrows: true,\n    value: ''\n  }\n\n  handleChange = (event, value) => this.setState({\n    messages: null,\n    number: value ? Number(value) : null,\n    value\n  })\n\n  handleDecrement = (event) => this.setState(({ number }) => {\n    if (isNaN(number)) return\n    if (number === null) return this.setNumber(this.MIN)\n    if (isInteger(number)) return this.setNumber(number - 1)\n    return this.setNumber(Math.floor(number))\n  })\n\n  handleIncrement = (event) => this.setState(({ number }) => {\n    if (isNaN(number)) return\n    if (number === null) return this.setNumber(this.MIN + 1)\n    if (isInteger(number)) return this.setNumber(number + 1)\n    return this.setNumber(Math.ceil(number))\n  })\n\n  handleBlur = (event) => this.setState(({ number, value }) => {\n    if (isNaN(number)) return this.invalidNumber(value)\n    if (number === null) return this.required()\n    return this.setNumber(Math.round(number))\n  })\n\n  setNumber (n) {\n    const number = this.bound(n)\n    return {\n      messages: null,\n      number,\n      value: number\n    }\n  }\n\n  bound (n) {\n    if (n < this.MIN) return this.MIN\n    if (n > this.MAX) return this.MAX\n    return n\n  }\n\n  invalidNumber (value) {\n    return {\n      messages: [{ text: `'${value}' is not a valid number.`, type: 'error' }]\n    }\n  }\n\n  required () {\n    return {\n      messages: [{ text: 'This is required.', type: 'error' }]\n    }\n  }\n\n  toggleDisabled = (event) => this.setState(({ disabled }) => ({ disabled: !disabled }))\n\n  toggleInline = (event) => this.setState(({ inline }) => ({ inline: !inline }))\n\n  toggleReadOnly = (event) => this.setState(({ readOnly }) => ({ readOnly: !readOnly }))\n\n  toggleShowArrows = (event) => this.setState(({ showArrows }) => ({ showArrows: !showArrows }))\n\n  render () {\n    return (\n      <FormFieldGroup description=\"Controlled NumberInput example\">\n        <Checkbox\n          checked={this.state.showArrows}\n          label=\"Show arrows\"\n          onChange={this.toggleShowArrows}\n        />\n        <Checkbox\n          checked={this.state.disabled}\n          label=\"Disabled\"\n          onChange={this.toggleDisabled}\n        />\n        <Checkbox\n          checked={this.state.readOnly}\n          label=\"Read only\"\n          onChange={this.toggleReadOnly}\n        />\n        <Checkbox\n          checked={this.state.inline}\n          label=\"Inline display\"\n          onChange={this.toggleInline}\n        />\n        <NumberInput\n          renderLabel={`How old are you? (${this.MIN}-${this.MAX})`}\n          display={this.state.inline ? 'inline-block' : null}\n          messages={this.state.messages}\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onDecrement={this.handleDecrement}\n          onIncrement={this.handleIncrement}\n          placeholder=\"Age (in years)\"\n          interaction={this.state.disabled\n            ? 'disabled'\n            : this.state.readOnly ? 'readonly' : 'enabled'\n          }\n          isRequired\n          showArrows={this.state.showArrows}\n          value={this.state.value}\n        />\n      </FormFieldGroup>\n    )\n  }\n}\n\n// IE11 doesn't support Number.isInteger\nfunction isInteger (number) {\n  return Math.floor(number) === number\n}\n\nrender(<Example />)\n```\n\n> Note: `NumberInput` accepts a string or number as its `value`. However, the value returned by the `onChange` callback is always a string and should be converted to a number before attempting to augment it.\n\nNumberInput comes in 2 sizes. The default size is \"medium\".\n\n```js\n---\nexample: true\n---\n<div>\n  <NumberInput renderLabel=\"Default-size input\" /><br/>\n  <NumberInput size=\"large\" renderLabel=\"Large-size input\" />\n</div>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use when the input is limited to a number (integer, rational, or irrational expressed with decimal points)</Figure.Item>\n    <Figure.Item>Use labels at the top or to the left of the input field</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Place labels or text strings to the right of the input field</Figure.Item>\n    <Figure.Item>Use for alphanumeric input</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"NumberInput","order":"","relativePath":"packages/ui-number-input/src/NumberInput/README.md","extension":".md","srcPath":"packages/ui-number-input/src/NumberInput/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-number-input/src/NumberInput/README.md","packageName":"@instructure/ui-number-input","requirePath":"@instructure/ui-number-input/lib/NumberInput/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-number-input/src/NumberInput/README.md').default","esPath":"@instructure/ui-number-input/es/NumberInput/README","id":"NumberInput__README","title":"NumberInput__README"},"Options__README":{"description":"\n`Options` is a view-only component for creating option lists and menus, like those used in [Select](#Select) and [Menu](#Menu). It should only be used if an existing component doesn't offer the level of customization needed.\n\nThe `variant` prop of `Option.Item` provides several visual treatments. Use the `highlighted` variant to indicate that an option is being hovered, focused, or otherwise interacted with and the `selected` variant to indicate the selected option.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" width=\"300px\">\n  <Options>\n    <Options.Item onClick={() => console.log('clicked!')}>\n      Default option\n    </Options.Item>\n    <Options.Item variant=\"highlighted\">\n      Highlighted option\n    </Options.Item>\n    <Options.Item variant=\"selected\">\n      Selected option\n    </Options.Item>\n    <Options.Item variant=\"disabled\">\n      Disabled option\n    </Options.Item>\n  </Options>\n</View>\n```\n\n`Options` components can be nested to create sub menus. Icons may be added to any `Options.Item` before or after its text content using `renderBeforeLabel` and `renderAfterLabel` respectively.\n\n> `Options` and `Options.Item` receive default roles of `list` and `listitem` respectively, but the most applicable roles should be used. These will commonly be `listbox`/`option` or `menu`/`menuitem`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" width=\"300px\">\n  <Options role=\"menu\" as=\"ul\">\n    <Options.Item role=\"menuitem\">\n      Option one\n    </Options.Item>\n    <Options.Item role=\"menuitem\" variant=\"highlighted\">\n      Option two\n    </Options.Item>\n    <Options.Item role=\"menuitem\" renderAfterLabel={IconArrowOpenEndSolid}>\n      Flyout menu option\n    </Options.Item>\n    <Options.Separator as=\"li\" />\n    <Options role=\"menu\" as=\"ul\" renderLabel={'Sub menu'}>\n      <Options.Item role=\"menuitem\">\n        Sub option one\n      </Options.Item>\n      <Options.Item role=\"menuitem\">\n        Sub option two\n      </Options.Item>\n    </Options>\n    <Options.Separator />\n    <Options role=\"menu\" as=\"ul\" renderLabel={'Radio group'}>\n      <Options.Item role=\"menuitemradio\" renderBeforeLabel={IconCheckSolid}>\n        Radio option one\n      </Options.Item>\n      <Options.Item role=\"menuitemradio\" renderBeforeLabel={\n        <IconCheckLine style={{opacity: 0}} />\n      }>\n        Radio option two\n      </Options.Item>\n    </Options>\n    <Options.Separator />\n    <Options.Item role=\"menuitem\">\n      Option three\n    </Options.Item>\n  </Options>\n</View>\n```\n\n`Options` does not manage any state or react to any user interaction. The consuming component or app should listen for events on items and update the `variant` props accordingly via its own state.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      highlighted: -1,\n      selected: -1\n    }\n  }\n\n  handleKeyDown = (event) => {\n    const { highlighted } = this.state\n    let index = highlighted\n\n    if (event.keyCode === 40 && highlighted < this.props.options.length - 1) {\n      // down arrow\n      event.preventDefault()\n      index = highlighted + 1\n    } else if (event.keyCode === 38 && highlighted > 0) {\n      // up arrow\n      event.preventDefault()\n      index = highlighted - 1\n    } else if (event.keyCode === 13 && highlighted > -1) {\n      // enter\n      this.setState({ selected: index })\n    }\n    this.setState({ highlighted: index })\n  }\n\n  handleFocus = (event, index) => {\n    this.setState({ highlighted: index })\n  }\n\n  handleMouseOver = (event, index) => {\n    this.setState({ highlighted: index })\n  }\n\n  handleClick = (event, index) => {\n    this.setState({ selected: index })\n  }\n\n  render () {\n    return (\n      <View\n        display=\"block\"\n        width=\"300px\"\n        shadow=\"above\"\n      >\n        <Options onKeyDown={this.handleKeyDown} tabIndex=\"0\">\n          {this.props.options.map((option, index) => {\n            let variant = 'default'\n            if (this.state.highlighted === index) {\n              variant = 'highlighted'\n            } else if (this.state.selected === index) {\n              variant = 'selected'\n            }\n            return (\n              <Options.Item\n                key={option}\n                variant={variant}\n                tabIndex=\"-1\"\n                onMouseOver={(e) => this.handleMouseOver(e, index)}\n                onFocus={(e) => this.handleFocus(e, index)}\n                onClick={(e) => this.handleClick(e, index)}\n              >\n                { option }\n              </Options.Item>\n            )\n          })}\n        </Options>\n      </View>\n    )\n  }\n}\n\nrender(\n  <Example options={[\n    'Option one',\n    'Option two',\n    'Option three',\n    'Option four',\n    'Option five'\n  ]} />\n)\n```\n","describes":"Options","order":"","relativePath":"packages/ui-options/src/Options/README.md","extension":".md","srcPath":"packages/ui-options/src/Options/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-options/src/Options/README.md","packageName":"@instructure/ui-options","requirePath":"@instructure/ui-options/lib/Options/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-options/src/Options/README.md').default","esPath":"@instructure/ui-options/es/Options/README","id":"Options__README","title":"Options__README"},"Mask__README":{"description":"\nA Mask component covers its closest positioned parent (either absolute or relative).\n\n```js\n---\nexample: true\n---\n<View\n  padding=\"large\"\n  margin=\"medium\"\n  textAlign=\"center\"\n  as=\"div\"\n  style={{ position: 'relative' }}\n>\n  <Heading>Some content that is masked</Heading>\n  <Mask />\n</View>\n```\n\nThe Mask component can be configured to cover the full screen if it is rendered inside a [Portal](#Portal).\n\n```js\n---\nexample: true\nrender: false\n---\n\n class Example extends React.Component {\n   constructor (props) {\n     super(props)\n\n     this.state = {\n       open: false\n     }\n   }\n\n   handleButtonClick = () => {\n     this.setState(function (state) {\n       return { open: !state.open }\n     })\n   };\n\n   render () {\n     return (\n       <div>\n         <Button onClick={this.handleButtonClick}>\n           {this.state.open ? 'Close' : 'Open'} the Mask\n         </Button>\n         <Portal\n           open={this.state.open}\n         >\n            <Mask\n              fullscreen\n              onClick={() => { this.setState({ open: false }) }}\n            >\n              <Heading>Click anywhere around this text to close the Mask</Heading>\n            </Mask>\n          </Portal>\n       </div>\n     )\n   }\n }\n\n render(<Example />)\n ```\n","describes":"Mask","order":"","relativePath":"packages/ui-overlays/src/Mask/README.md","extension":".md","srcPath":"packages/ui-overlays/src/Mask/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-overlays/src/Mask/README.md","packageName":"@instructure/ui-overlays","requirePath":"@instructure/ui-overlays/lib/Mask/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-overlays/src/Mask/README.md').default","esPath":"@instructure/ui-overlays/es/Mask/README","id":"Mask__README","title":"Mask__README"},"Overlay__README":{"description":"\nThe Overlay component is a closable/dismissible component that transitions\nin and out content rendered in a [Portal](#Portal)\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = {\n    open: false\n  }\n\n  _mask = null\n\n  handleMaskRef = el => {\n    this._mask = el\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={() => { this.setState({ open: true })}}>\n          Show the Overlay\n        </Button>\n        <Overlay\n          open={this.state.open}\n          transition=\"fade\"\n          label=\"Overlay Example\"\n          shouldReturnFocus\n          shouldContainFocus\n          onDismiss={() => { this.setState({ open: false })}}\n          defaultFocusElement={() => this._mask}\n        >\n          <Mask\n            onClick={() => { this.setState({ open: false })}}\n            elementRef={this.handleMaskRef}\n          >\n            <Spinner renderTitle=\"Loading\" size=\"large\" margin=\"0 0 0 medium\" />\n          </Mask>\n        </Overlay>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Ensure content behind the overlay is hidden from users so they cannot navigate to it when using keyboard navigation and screen readers</Figure.Item>\n    <Figure.Item>Dismissable with the ESC key</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Overlay","order":"","relativePath":"packages/ui-overlays/src/Overlay/README.md","extension":".md","srcPath":"packages/ui-overlays/src/Overlay/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-overlays/src/Overlay/README.md","packageName":"@instructure/ui-overlays","requirePath":"@instructure/ui-overlays/lib/Overlay/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-overlays/src/Overlay/README.md').default","esPath":"@instructure/ui-overlays/es/Overlay/README","id":"Overlay__README","title":"Overlay__README"},"Pages__README":{"description":"\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      activePageIndex: 0\n    }\n  }\n\n  handlePagesBackButtonClick = (activePageIndex) => {\n    this.setState({\n      activePageIndex\n    })\n  }\n\n  handleLinkClick = () => {\n    this.setState({\n      activePageIndex: 1\n    })\n  }\n\n  renderBackButton (navigateToPreviousPage) {\n    return (\n      <IconButton\n        onClick={navigateToPreviousPage}\n        renderIcon={IconArrowOpenStartLine}\n        screenReaderLabel=\"Back to Page One\"\n        withBorder={false}\n        withBackground={false}\n      />\n    )\n  }\n\n  render () {\n    return (\n      <Pages \n        activePageIndex={this.state.activePageIndex}\n        onPageIndexChange={this.handlePagesBackButtonClick}\n        backButtonLabel=\"Back to previous page\"\n      >\n        <Pages.Page>\n         {(history, navigateToPreviousPage) => {\n          return (\n            <div>\n              <View as=\"div\" textAlign=\"end\">\n                <Link\n                  isWithinText={false}\n                  onClick={this.handleLinkClick}\n                >\n                  Go to Page Two\n                </Link>\n              </View>\n              <View as=\"div\" margin=\"large 0 0 0\" textAlign=\"center\">\n                <Text as=\"div\">Page One</Text>\n              </View>\n            </div>\n          )\n        }}\n        </Pages.Page>\n        <Pages.Page>\n          {(history, navigateToPreviousPage) => {\n          return (\n            <div>\n              <View as=\"div\" maxWidth=\"7rem\">\n                {history.length > 1 && (\n                  this.renderBackButton(navigateToPreviousPage)\n                )}\n              </View>\n              <View as=\"div\" margin=\"large 0 0 0\" textAlign=\"center\">\n                Hey Look - Page Two\n              </View>\n            </div>\n          )\n        }}\n        </Pages.Page>\n      </Pages>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      activePageIndex: 0\n    }\n  }\n\n  handlePagesBackButtonClick = (activePageIndex) => {\n    this.setState({\n      activePageIndex\n    })\n  }\n\n  handleViewDetailsClick = () => {\n    this.setState({\n      activePageIndex: 1\n    })\n  }\n\n  renderBackButton (navigateToPreviousPage) {\n    return (\n      <IconButton\n        onClick={navigateToPreviousPage}\n        renderIcon={IconArrowStartLine}\n        screenReaderLabel=\"Back\"\n        withBorder={false}\n        withBackground={false}\n      />\n    )\n  }\n\n  render () {\n    return (\n      <Pages\n        activePageIndex={this.state.activePageIndex}\n        onPageIndexChange={this.handlePagesBackButtonClick}\n        backButtonLabel=\"Back to previous page\"\n      >\n        <Pages.Page>\n        {(history, navigateToPreviousPage) => {\n          return (\n            <div>\n              {history.length > 1 && (\n                this.renderBackButton(navigateToPreviousPage)\n              )}\n              <View display=\"inline-block\" margin=\"large\">\n                <Heading level=\"h1\">Hello World</Heading>\n              </View>\n              <Button\n                onClick={this.handleViewDetailsClick}\n                color=\"primary\"\n              >\n                View Details\n              </Button>\n            </div>\n          )\n        }}\n        </Pages.Page>\n        <Pages.Page>\n        {(history, navigateToPreviousPage) => {\n          return (\n            <div>\n              {history.length > 1 && (\n                this.renderBackButton(navigateToPreviousPage)\n              )}\n              <View display=\"inline-block\" margin=\"large\">\n                <Heading level=\"h1\">Foo Bar Baz Qux</Heading>\n              </View>\n              <FormField id=\"name\" label=\"Name\">\n                <input id=\"name\"/>\n              </FormField>\n            </div>\n          )\n        }}\n        </Pages.Page>\n      </Pages>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n\n```js\n---\nrender: false\nexample: true\n---\nconst USERS = [\n  {\n    id: 1,\n    name: 'Fred Flintstone',\n    email: 'fred@example.com',\n    age: 41,\n    spouse: 2\n  },\n  {\n    id: 2,\n    name: 'Wilma Flintstone',\n    email: 'wilma@example.com',\n    age: 40,\n    spouse: 1\n  },\n  {\n    id: 3,\n    name: 'Barney Rubble',\n    email: 'barney@example.com',\n    age: 42,\n    spouse: 4\n  },\n  {\n    id: 4,\n    name: 'Betty Rubble',\n    email: 'betty@example.com',\n    age: 38,\n    spouse: 3\n  },\n  {\n    id: 5,\n    name: 'Pebbles Flintstone',\n    age: 2,\n    parents: [1, 2]\n  },\n  {\n    id: 6,\n    name: 'Bamm-Bamm Rubble',\n    age: 1,\n    parents: [3, 4]\n  }\n]\n\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      showPopover: false,\n      activePageIndex: 0\n    }\n  }\n\n  findUser (id) {\n    return USERS.find((user) => user.id === id)\n  }\n\n  setActivePageIndex (index) {\n    this.setState({\n      activePageIndex: index,\n      lastPageIndex: this.state.activePageIndex\n    })\n  }\n\n  handlePagesBackButtonClick = (activePageIndex) => {\n    this.setActivePageIndex(activePageIndex)\n  }\n\n  handleDetailsButtonClick = (activePageIndex) => {\n    this.setActivePageIndex(activePageIndex)\n  }\n\n  showPopover = () => {\n    this.setState({\n      showPopover: true\n    })\n  }\n\n  hidePopover = () => {\n    this.setState({\n      showPopover: false,\n      activePageIndex: 0\n    })\n  }\n\n  renderNavigation () {\n    this._usersNav = []\n    return (\n      <div>\n        {USERS.map((user, index) => {\n          return (\n            <div key={index}>{this.renderUserMedia(user)}</div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  renderUserMedia (user) {\n    return (\n      <View as=\"div\" margin=\"small 0\">\n        <Link\n          isWithinText={false}\n          onClick={this.handleDetailsButtonClick.bind(this, user.id)}\n          elementRef={(el) => { this._usersNav[user.id] = el }}\n        >\n          <Byline description={user.name}>\n            <Avatar name={user.name} />\n          </Byline>\n        </Link>\n      </View>\n    )\n  }\n\n  renderNavigationButton (history, navigateToPreviousPage) {\n    return history.length === 1 ? (\n      this.renderCloseButton()\n    ) : (\n      this.renderBackButton(navigateToPreviousPage)\n    )\n  }\n\n  renderBackButton (navigateToPreviousPage) {\n    return (\n      <IconButton\n        onClick={navigateToPreviousPage}\n        renderIcon={IconArrowOpenStartLine}\n        screenReaderLabel=\"Back\"\n        withBorder={false}\n        withBackground={false}\n      />\n    )\n  }\n\n  renderCloseButton () {\n    return (\n      <IconButton\n        onClick={this.hidePopover}\n        renderIcon={IconXLine}\n        withBorder={false}\n        withBackground={false}\n        screenReaderLabel=\"Close\"\n      />\n    )\n  }\n\n  render () {\n    return (\n      <View padding=\"large 0\">\n        <Popover\n          on=\"click\"\n          isShowingContent={this.state.showPopover}\n          shouldContainFocus\n          shouldReturnFocus\n          screenReaderLabel=\"Pages Dialog Example\"\n          placement=\"center end\"\n          onHideContent={this.hidePopover}\n          renderTrigger={\n            <Button onClick={this.showPopover}>\n              View Users\n            </Button>\n          }\n        >\n          <Pages\n            activePageIndex={this.state.activePageIndex}\n            onPageIndexChange={this.handlePagesBackButtonClick}\n            backButtonLabel=\"Back to previous page\"\n          >\n            <Pages.Page\n              defaultFocusElement={() => this._usersNav[this.state.lastPageIndex]}\n            >\n            {(history, navigateToPreviousPage) => {\n              return (\n                <div>\n                  <Grid hAlign=\"space-between\">\n                    <Grid.Row>\n                      <Grid.Col width={9}>\n                        <Heading level=\"h1\">Users</Heading>\n                      </Grid.Col>\n                      <Grid.Col width={3} textAlign=\"end\">\n                        {this.renderNavigationButton(history, navigateToPreviousPage)}\n                      </Grid.Col>\n                    </Grid.Row>\n                  </Grid>\n                  {this.renderNavigation()}\n                </div>\n              )\n            }}\n            </Pages.Page>\n            {USERS.map((user, index) => {\n              return (\n                <Pages.Page key={index}>\n                {(history, navigateToPreviousPage) => {\n                  return (\n                    <div>\n                      <Grid hAlign=\"space-between\">\n                        <Grid.Row>\n                          <Grid.Col width={9}>\n                            <Heading level=\"h1\">User Details</Heading>\n                          </Grid.Col>\n                          <Grid.Col width={3} textAlign=\"end\">\n                            {this.renderNavigationButton(history, navigateToPreviousPage)}\n                          </Grid.Col>\n                        </Grid.Row>\n                      </Grid>\n                      <Byline description={user.name}>\n                        <Avatar name={user.name} />\n                      </Byline>\n                      <Table caption=\"User details\">\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.RowHeader>Age</Table.RowHeader>\n                            <Table.Cell>{user.age}</Table.Cell>\n                          </Table.Row>\n                          {user.email && (\n                            <Table.Row>\n                              <Table.RowHeader>Email</Table.RowHeader>\n                              <Table.Cell>{user.email}</Table.Cell>\n                            </Table.Row>\n                          )}\n                          {!isNaN(user.spouse) && (\n                            <Table.Row>\n                              <Table.RowHeader>Spouse</Table.RowHeader>\n                              <Table.Cell>\n                                {this.renderUserMedia(this.findUser(user.spouse))}\n                              </Table.Cell>\n                            </Table.Row>\n                          )}\n                          {Array.isArray(user.parents) && (\n                            <Table.Row>\n                              <Table.RowHeader>Parents</Table.RowHeader>\n                              <Table.Cell>\n                                {user.parents.map((parent, index) => {\n                                  return (\n                                    <div key={index}>{this.renderUserMedia(this.findUser(parent))}</div>\n                                  )\n                                })}\n                              </Table.Cell>\n                            </Table.Row>\n                          )}\n                        </Table.Body>\n                      </Table>\n                    </div>\n                  )\n                }}\n                </Pages.Page>\n              )\n            })}\n          </Pages>\n        </Popover>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","describes":"Pages","order":"","relativePath":"packages/ui-pages/src/Pages/README.md","extension":".md","srcPath":"packages/ui-pages/src/Pages/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pages/src/Pages/README.md","packageName":"@instructure/ui-pages","requirePath":"@instructure/ui-pages/lib/Pages/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pages/src/Pages/README.md').default","esPath":"@instructure/ui-pages/es/Pages/README","id":"Pages__README","title":"Pages__README"},"Pagination__README":{"description":"\nRenders available pages of content, and reacts to selection of another page.\nExpects array of `Pagination.Page` children. Focus and announcement of page change is\nthe responsibility of your app.\n\nIf there are more than 5 pages, the `compact` variant truncates the page navigation\nto show only the first, last, and pages surrounding the current page. At fewer than\n5 pages, no next/previous arrow buttons will be shown, and all pages will be listed.\n\nProvide an `onClick` to `Pagination.Page` to handle navigation.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { currentPage: 0 }\n  }\n\n  setPage (page) {\n    this.setState({ currentPage: page })\n  }\n\n  render () {\n    const pages = Array.from(Array(9)).map((v, i) => <Pagination.Page\n      key={i}\n      onClick={this.setPage.bind(this, i)}\n      current={i === this.state.currentPage}>\n        {i + 1}\n    </Pagination.Page>)\n\n    return (\n      <Pagination\n        as=\"nav\"\n        margin=\"small\"\n        variant=\"compact\"\n        labelNext=\"Next Page\"\n        labelPrev=\"Previous Page\"\n      >\n        {pages}\n      </Pagination>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\nYou can handle endpoints that have a lot of pages by using a sparse array of children:\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { currentPage: 0 }\n  }\n\n  renderPage(pageIndex) {\n    return (\n      <Pagination.Page\n        key={pageIndex}\n        onClick={() => this.setState({ currentPage: pageIndex })}\n        current={pageIndex === this.state.currentPage}\n      >\n          {pageIndex + 1}\n      </Pagination.Page>\n    )\n  }\n\n  render () {\n    const {currentPage} = this.state\n    const pages = Array(100000)\n    pages[0] = this.renderPage(0)\n    pages[pages.length - 1] = this.renderPage(pages.length - 1)\n    const visiblePageRangeStart = Math.min(pages.length - 4, Math.max(currentPage - 1, 1))\n    const visiblePageRangeEnd = Math.min(currentPage + 4, pages.length - 1)\n    for (let i = visiblePageRangeStart; i < visiblePageRangeEnd; i++) {\n      pages[i] = this.renderPage(i)\n    }\n\n    return (\n      <Pagination\n        as=\"nav\"\n        margin=\"small\"\n        variant=\"compact\"\n        labelNext=\"Next Page\"\n        labelPrev=\"Previous Page\"\n      >\n        {pages}\n      </Pagination>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\nIf you instead provide an href to `Pagination.Page` it will render as a link.\n\n```js\n---\nexample: true\n---\n<Pagination variant=\"full\" label=\"Jump to\">\n  <Pagination.Page href=\"/pages/1\" current>A-G</Pagination.Page>\n  <Pagination.Page href=\"/pages/2\">H-J</Pagination.Page>\n  <Pagination.Page href=\"/pages/3\">K-M</Pagination.Page>\n  <Pagination.Page href=\"/pages/3\">N-Q</Pagination.Page>\n  <Pagination.Page href=\"/pages/3\">R-Z</Pagination.Page>\n</Pagination>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use for splitting up content or data into several pages</Figure.Item>\n    <Figure.Item>Use if there are more than 20 items displayed in one view</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Ensure page links and the next/previous buttons are labeled correctly for screen readers</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Pagination","order":"","relativePath":"packages/ui-pagination/src/Pagination/README.md","extension":".md","srcPath":"packages/ui-pagination/src/Pagination/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pagination/src/Pagination/README.md","packageName":"@instructure/ui-pagination","requirePath":"@instructure/ui-pagination/lib/Pagination/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pagination/src/Pagination/README.md').default","esPath":"@instructure/ui-pagination/es/Pagination/README","id":"Pagination__README","title":"Pagination__README"},"Pill__README":{"description":"\nDisplays short, contextual information about an item. Change the border\nand text color via the `color` prop. Use the `margin` prop to add space around\nthe component.\n\n```js\n---\nexample: true\n---\n<div>\n  <Pill\n    margin=\"x-small\"\n  >\n    Excused\n  </Pill>\n  <Pill\n    color=\"info\"\n    margin=\"x-small\"\n  >\n    Draft\n  </Pill>\n  <Pill\n    color=\"success\"\n    margin=\"x-small\"\n  >\n    Checked In\n  </Pill>\n  <Pill\n    color=\"danger\"\n    margin=\"x-small\"\n  >\n    Missing\n  </Pill>\n  <Pill\n    color=\"warning\"\n    margin=\"x-small\"\n  >\n    Late\n  </Pill>\n  <Pill\n    color=\"alert\"\n    margin=\"x-small\"\n  >\n    Notification\n  </Pill>\n</div>\n```\n\nThe component has a max-width, set by its theme. Any overflowing text will\nbe handled via ellipses.\n\n```js\n---\nexample: true\n---\n<Pill>\n  extraordinary superfluousness\n</Pill>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use all capital letters</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use more than 2 words</Figure.Item>\n    <Figure.Item>Use for dismissible items (use a <Link href=\"/#Tag\">Tag</Link> instead)</Figure.Item>\n    <Figure.Item>Use for counts (use a <Link href=\"/#Badge\">Badge</Link> instead)</Figure.Item>\n    <Figure.Item>Put icons or actions next to the text</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Pill","order":"","relativePath":"packages/ui-pill/src/Pill/README.md","extension":".md","srcPath":"packages/ui-pill/src/Pill/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pill/src/Pill/README.md","packageName":"@instructure/ui-pill","requirePath":"@instructure/ui-pill/lib/Pill/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pill/src/Pill/README.md').default","esPath":"@instructure/ui-pill/es/Pill/README","id":"Pill__README","title":"Pill__README"},"Popover__README":{"description":"\nPopovers hide or show content as a result of user interaction, such as clicking, hovering, or focusing. When opened, the content remains connected to the element that triggered it. If you only need to display a small amount of text-only content, you might consider using a [Tooltip](#Tooltip). If you need to display a larger amount of content, a [Tray](#Tray) could be a better choice.\n\n#### Uncontrolled Popover\n\n```js\n---\nexample: true\n---\n<Popover\n  renderTrigger={\n    <Link aria-describedby=\"tip\">\n      Hover or focus me\n    </Link>\n  }\n  shouldRenderOffscreen\n  shouldReturnFocus={false}\n  placement=\"top center\"\n  mountNode={() => document.getElementById('main')}\n  onPositioned={() => console.log('positioned')}\n  onShowContent={() => console.log('showing')}\n  onHideContent={() => console.log('hidden')}\n>\n  <View padding=\"x-small\" display=\"block\" as=\"div\" id=\"tip\">\n    Hello World\n  </View>\n</Popover>\n\n```\n\n#### Controlled Popover\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isShowingContent: false\n    }\n  }\n\n  renderCloseButton () {\n    return (\n      <CloseButton\n        placement=\"end\"\n        offset=\"small\"\n        onClick={() => this.setState({ isShowingContent: false })}\n        screenReaderLabel=\"Close\"\n      />\n    )\n  }\n\n  render () {\n    return (\n      <View>\n        <Popover\n          renderTrigger={<Button>Sign In</Button>}\n          isShowingContent={this.state.isShowingContent}\n          onShowContent={(e) => {\n            this.setState({ isShowingContent: true })\n          }}\n          onHideContent={(e, { documentClick }) => {\n            this.setState({ isShowingContent: false })\n          }}\n          on=\"click\"\n          screenReaderLabel=\"Popover Dialog Example\"\n          shouldContainFocus\n          shouldReturnFocus\n          shouldCloseOnDocumentClick\n          offsetY=\"16px\"\n          mountNode={() => document.getElementById('main')}\n        >\n          <View padding=\"medium\" display=\"block\" as=\"form\">\n            {this.renderCloseButton()}\n            <FormFieldGroup description=\"Log In\">\n              <TextInput renderLabel=\"Username\" inputRef={(el) => { if (el) { this._username = el } }}/>\n              <TextInput renderLabel=\"Password\" type=\"password\" />\n            </FormFieldGroup>\n          </View>\n        </Popover>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n\n```\n\n> Note: Popover can act as a dialog with a close button. With the `shouldContainFocus` property set, it will trap focus inside the Popover.\n\nThe `shouldAlignArrow` prop will offset the popover content to adjust for the offset of the arrow. This will override offsetX for start/end placements, and will override offsetY for top/bottom placements.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\nrender () {\n  return (\n      <div style={{ paddingBottom: 25, display: 'flex', justifyContent: 'center' }}>\n        <Popover\n          renderTrigger={<div style={{display: 'inline-block', height: '3px', width: '3px', background: 'blue'}}/>}\n          isShowingContent={true}\n          placement=\"end top\"\n          shouldAlignArrow\n          mountNode={() => document.getElementById('main')}\n        >\n          <Heading>Small<br/>Target</Heading>\n        </Popover>\n      </div>\n  )\n}\n}\n\nrender(<Example />)\n```\n\nIf the `Popover` contains focusable content and should be rendered in the focus order immediately after the trigger, it can be configured using the `shouldFocusContentOnTriggerBlur` prop. Note that the content must be rendered in the correct order in the document (using the `mountNode` prop).\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isShowingContent: false\n    }\n  }\n\n  render () {\n    return (\n      <div style={{ paddingBottom: 50, display: 'flex', justifyContent: 'center' }}>\n        <Popover\n          renderTrigger={<Button margin=\"small\">Focus Me</Button>}\n          isShowingContent={this.state.isShowingContent}\n          onShowContent={(e) => {\n            this.setState({ isShowingContent: true })\n          }}\n          onHideContent={(e) => {\n            this.setState({ isShowingContent: false })\n          }}\n          on={['focus', 'click']}\n          shouldContainFocus={false}\n          shouldFocusContentOnTriggerBlur\n          mountNode={() => document.getElementById('container')}\n        >\n          <Button margin=\"small\">Focus Me When Trigger Blurs</Button>\n        </Popover>\n        <div id=\"container\"/>\n        <Button id=\"next\" margin=\"small\">Focus Me Next</Button>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Consider using a <Link href=\"/#Tray\">Tray</Link> if the content is beyond a mobile screen size</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Put content on the same row as the close \"x\"</Figure.Item>\n    <Figure.Item>Use with an <Link href=\"#Overlay\">Overlay</Link></Figure.Item>\n    <Figure.Item>Have multiple Popovers open at the same time</Figure.Item>\n    <Figure.Item>Use in place of a <Link href=\"/#Tooltip\">Tooltip</Link> or <Link href=\"/#Menu\">Menu</Link></Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Keyboard focus must be set in the popover when it appears; usually on the first interactive element</Figure.Item>\n    <Figure.Item>Popovers must contain keyboard focus until they’re closed. This is to ensure that keyboard or screen reader users won't mistakenly interact with background content that is meant to be hidden or inaccessible</Figure.Item>\n    <Figure.Item>When a user closes the Popover, focus must return to a logical place within the page. This is usually the element that triggered opening the popover</Figure.Item>\n    <Figure.Item>Popovers should be able to be closed by clicking away, esc key and/or a close button</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Popover","order":"","relativePath":"packages/ui-popover/src/Popover/README.md","extension":".md","srcPath":"packages/ui-popover/src/Popover/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-popover/src/Popover/README.md","packageName":"@instructure/ui-popover","requirePath":"@instructure/ui-popover/lib/Popover/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-popover/src/Popover/README.md').default","esPath":"@instructure/ui-popover/es/Popover/README","id":"Popover__README","title":"Popover__README"},"Portal__README":{"description":"\nThe `<Portal/>` component allows you to render a subtree into a DOM element.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isPortalOpen: false\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(state => {\n      return { isPortalOpen: !state.isPortalOpen }\n    })\n  };\n\n  render () {\n    const firstParagraph = lorem.paragraph()\n    const secondParagraph = lorem.paragraph()\n    return (\n      <div>\n        <Button onClick={this.handleButtonClick}>\n          {this.state.isPortalOpen ? 'Close' : 'Open'} the Portal\n        </Button>\n        <Portal\n          mountNode={this._mountNode}\n          open={this.state.isPortalOpen}\n        >\n          <ContextView placement=\"center start\" padding=\"0 x-small\">\n            <p>Greetings from the portal!</p>\n          </ContextView>\n        </Portal>\n        <Text>\n          <p>{firstParagraph}</p>\n          <div ref={(c) => this._mountNode = c}></div>\n          <p>{secondParagraph}</p>\n        </Text>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","describes":"Portal","order":"","relativePath":"packages/ui-portal/src/Portal/README.md","extension":".md","srcPath":"packages/ui-portal/src/Portal/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-portal/src/Portal/README.md","packageName":"@instructure/ui-portal","requirePath":"@instructure/ui-portal/lib/Portal/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-portal/src/Portal/README.md').default","esPath":"@instructure/ui-portal/es/Portal/README","id":"Portal__README","title":"Portal__README"},"Position__README":{"description":"\nA component that positions content with respect to a designated target.\n\n### Important Upgrade Notes\n\nCodemods are available to automatically update any props that have changed. However, there are some breaking changes that will need to be addressed manually. These changes and are described below.\n\n- `Position.Target` and `Position.Content` are no longer in use. The target is now defined via the `renderTarget` prop and the children of a Position will be rendered as the positioned content.\n\n### Internationalization\n\n`Position` placement can be internationalized for right to left languages. The\nfollowing examples are configured utilizing the [ApplyTextDirection](#ApplyTextDirection)\ncomponent in conjunction with the [mirrorHorizontalPlacement](#mirrorPlacement)\nutility function.\n\n```js\n---\nrender: false\nexample: true\n---\nconst fpo = lorem.sentence()\nclass Example extends React.Component {\nconstructor (props) {\n  super(props)\n\n  this.state = { placement: 'end', adjusted: 'end' }\n}\n\nhandleButtonClick = () => {\n  const placements = [\n    'top',\n    'end',\n    'bottom',\n    'start',\n    'top start',\n    'start top',\n    'start center',\n    'start bottom',\n    'bottom start',\n    'bottom center',\n    'bottom end',\n    'end bottom',\n    'end center',\n    'end top',\n    'top end',\n    'top center',\n    'center end',\n    'center start'\n  ]\n\n  let { placement } = this.state\n\n  placement = placements[placements.indexOf(placement) + 1] || placements[0]\n\n  this.setState({ placement })\n};\n\nhandlePositionChanged = ({ placement }) => {\n  this.setState({ adjusted: placement })\n};\n\nrender () {\n  const { placement, adjusted } = this.state\n\n  let offset = {\n    x: 0,\n    y: 0\n  }\n\n  if (['top', 'bottom'].indexOf(placement.split(' ')[0]) >= 0) {\n    offset.y = 16\n  } else {\n    offset.x = 16\n  }\n\n  return (\n    <View\n      as=\"div\"\n      margin=\"x-large\"\n      padding=\"x-large\"\n      textAlign=\"center\"\n    >\n      <ApplyTextDirection>\n        {(dir, rtl) => (\n          <Position\n            placement={rtl ? mirrorHorizontalPlacement(placement, ' ') : placement}\n            offsetX={offset.x}\n            offsetY={offset.y}\n            onPositionChanged={this.handlePositionChanged}\n            renderTarget={\n              <Button color=\"primary\" onClick={this.handleButtonClick}>\n                Change Placement\n              </Button>\n            }\n          >\n            <ContextView\n              placement={rtl ? mirrorHorizontalPlacement(adjusted, ' ') : adjusted}\n              maxWidth=\"22rem\" padding=\"small\"\n            >\n              <Heading level=\"h3\">{placement}</Heading>\n              <p>{fpo}</p>\n            </ContextView>\n          </Position>\n        )\n      }\n      </ApplyTextDirection>\n    </View>\n  )\n}\n}\n\nrender(<Example />)\n```\n\nThe `mountNode` prop renders the positioned content inside the configured element (instead of the body).\n\n```js\n---\nrender: false\nexample: true\n---\n\nconst fpo = lorem.sentence()\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      placement: 'end',\n      adjusted: 'end'\n    }\n  }\n\n  handleButtonClick = () => {\n    const placements = [\n      'top',\n      'end',\n      'bottom',\n      'start',\n      'top start',\n      'start top',\n      'start center',\n      'start bottom',\n      'bottom start',\n      'bottom center',\n      'bottom end',\n      'end bottom',\n      'end center',\n      'end top',\n      'top end',\n      'top center',\n      'center end',\n      'center start'\n    ]\n\n    let { placement } = this.state\n\n    placement = placements[placements.indexOf(placement) + 1] || placements[0]\n\n    this.setState({ placement })\n  };\n\n  handlePositionChanged = ({ placement }) => {\n    this.setState({ adjusted: placement })\n  };\n\n  render () {\n    const { placement, adjusted } = this.state\n\n    let offsetX = 0\n    let offsetY = 0\n\n    if (['top', 'bottom'].indexOf(placement.split(' ')[0]) >= 0) {\n      offsetY = 16\n    } else {\n      offsetX = 16\n    }\n\n    return (\n    <span>\n      <View\n        as=\"div\"\n        margin=\"x-large\"\n        padding=\"x-large\"\n        textAlign=\"center\"\n      >\n        <ApplyTextDirection>\n          {(dir, rtl) => (\n            <Position\n              placement={rtl ? mirrorHorizontalPlacement(placement, ' ') : placement}\n              offsetX={offsetX}\n              offsetY={offsetY}\n              mountNode={() => this._mountNode}\n              onPositionChanged={this.handlePositionChanged}\n              renderTarget={\n                <Button color=\"primary\" onClick={this.handleButtonClick}>\n                  Change Placement\n                </Button>\n              }\n            >\n              <ContextView\n                placement={rtl ? mirrorHorizontalPlacement(adjusted, ' ') : adjusted}\n                maxWidth=\"20rem\"\n                padding=\"small\"\n              >\n                <Heading level=\"h3\">{placement}</Heading>\n                <p>\n                  {fpo}\n                </p>\n              </ContextView>\n            </Position>\n          )}\n        </ApplyTextDirection>\n      </View>\n      <div\n        style={{\n          position: 'relative',\n          padding: 100\n        }}\n        ref={(c) => { this._mountNode = c }}\n      />\n    </span>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n`shouldPositionOverTarget` prop with `stretch` placement.\n\n```js\n---\nrender: false\nexample: true\n---\nconst fpo = lorem.paragraphs(7)\n\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      placement: 'top stretch'\n    }\n  }\n\n  handleButtonClick = () => {\n    const placements = [\n      'top stretch',\n      'bottom stretch',\n      'end stretch',\n      'start stretch'\n    ]\n\n    let { placement } = this.state\n\n    placement = placements[placements.indexOf(placement) + 1] || placements[0]\n\n    this.setState({ placement })\n  };\n\n  render () {\n    const { placement } = this.state\n\n    return (\n      <div>\n        <ApplyTextDirection>\n          {(dir, rtl) => (\n            <Position\n              placement={rtl ? mirrorHorizontalPlacement(placement, ' ') : placement}\n              shouldPositionOverTarget\n              insertAt=\"top\"\n              mountNode={() => this._mountNode}\n              renderTarget={\n                <div\n                  ref={(c) => { this._mountNode = c }}\n                  style={{\n                    overflowY: 'auto',\n                    maxHeight: '10rem',\n                    marginBottom: '1rem',\n                    padding: '0.5rem'\n                  }}\n                >\n                  {fpo}\n                </div>\n              }\n            >\n              <div\n                style={{\n                  backgroundColor: 'white',\n                  padding: '1rem'\n                }}\n              >\n                <Heading level=\"h3\">{placement}</Heading>\n              </div>\n            </Position>\n          )}\n        </ApplyTextDirection>\n        <Button color=\"primary\" onClick={this.handleButtonClick}>\n          Change Placement\n        </Button>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","describes":"Position","order":"","relativePath":"packages/ui-position/src/Position/README.md","extension":".md","srcPath":"packages/ui-position/src/Position/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-position/src/Position/README.md","packageName":"@instructure/ui-position","requirePath":"@instructure/ui-position/lib/Position/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-position/src/Position/README.md').default","esPath":"@instructure/ui-position/es/Position/README","id":"Position__README","title":"Position__README"},"ProgressBar__README":{"description":"\n`<ProgressBar />` is a styled HTML `<progress />` element, complete\nwith the aria attributes required to support screen readers.\n\n### `size`\n\n```js\n---\nexample: true\n---\n<div>\n  <ProgressBar\n    size=\"x-small\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    size=\"small\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    size=\"large\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n  />\n</div>\n```\n\n### `color`\n\n`<ProgressBar />`'s `color` property controls the overall color scheme of the\ncomponent. Set it to `primary-inverse` when the component is used on dark backgrounds.\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<ProgressBar\n  screenReaderLabel=\"Loading completion\"\n  color=\"primary-inverse\"\n  valueNow={30}\n  valueMax={60}\n/>\n```\n\n### `meterColor`\nThe color of the progress meter is set separately through the `meterColor` property.\n\n```js\n---\nexample: true\n---\n<div>\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"info\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"success\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"alert\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"warning\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"danger\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />  \n</div>\n```\n\n`meterColor` can also be passed in as a function that takes `valueNow / valueMax`\nas parameters. This allows you to adjust the color of the meter based on the\ncurrent value.\n\n```js\n---\nexample: true\n---\n<ProgressBar\n  screenReaderLabel=\"Loading completion\"\n  meterColor={({ valueNow, valueMax }) => {\n    if (valueNow < 20) {\n      return 'danger'\n    } else if (valueNow / valueMax >= 1) {\n      return 'success'\n    } else {\n      return 'info'\n    }\n  }}\n  valueNow={10}\n  valueMax={60}\n/>\n```\n\n> `<ProgressBar />` defaults to setting the meter color to `success` when\ncomplete.\n\n\n### `renderValue` / `formatScreenReaderValue`\n\nVia the `renderValue` prop, developers can use `valueMax` and `valueNow` props to format the\nvalue that `<ProgressBar />` displays.\n\n> `renderValue` will not be spoken by screen readers. Any essential information\nin `renderValue` must also be conveyed via `formatScreenReaderValue` for screen reader users.\n\n```js\n---\nexample: true\n---\n<ProgressBar\n  screenReaderLabel=\"Percent complete\"\n  formatScreenReaderValue={({ valueNow, valueMax }) => {\n    return Math.round((valueNow / valueMax * 100)) + ' percent'\n  }}\n  renderValue={({ valueNow, valueMax }) => {\n    return (\n      <Text>\n        {Math.round(valueNow / valueMax * 100)}%\n      </Text>\n    )\n  }}\n  valueMax={88}\n  valueNow={33}\n/>\n```\n","describes":"ProgressBar","order":"","relativePath":"packages/ui-progress/src/ProgressBar/README.md","extension":".md","srcPath":"packages/ui-progress/src/ProgressBar/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-progress/src/ProgressBar/README.md","packageName":"@instructure/ui-progress","requirePath":"@instructure/ui-progress/lib/ProgressBar/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-progress/src/ProgressBar/README.md').default","esPath":"@instructure/ui-progress/es/ProgressBar/README","id":"ProgressBar__README","title":"ProgressBar__README"},"ProgressCircle__README":{"description":"\n`<ProgressCircle />` is a <span role=\"img\" aria-hidden=\"true\" style=\"font-size: 2rem; vertical-align: middle;\">🍩</span> styled HTML `<progress />` element, complete\nwith the aria attributes required to support screen readers.\n\n### `size`, `shouldAnimateOnMount`, `animationDelay`\n\n```js\n---\nexample: true\n---\n<div>\n  <ProgressCircle\n    size=\"x-small\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 small 0 0\"\n    shouldAnimateOnMount\n  />\n  <ProgressCircle\n    size=\"small\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 small 0 0\"\n    shouldAnimateOnMount\n    animationDelay={2000}\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 small 0 0\"\n    shouldAnimateOnMount\n    animationDelay={4000}\n    formatScreenReaderValue={function ({ valueNow, valueMax }) {\n      return valueNow + ' out of ' + valueMax\n    }}\n    renderValue={function ({ valueNow, valueMax }) {\n      return (\n        <span>\n          <Text size=\"large\" weight=\"bold\">{valueNow}</Text>\n          <br />\n          <Text size=\"small\">/&nbsp;</Text>\n          <Text size=\"small\">{valueMax}</Text>\n        </span>\n      )\n    }}\n  />\n  <ProgressCircle\n    size=\"large\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    shouldAnimateOnMount\n    animationDelay={6000}\n    formatScreenReaderValue={function ({ valueNow, valueMax }) {\n      const passing = valueNow > (valueMax / 2) ? 'pass' : 'fail'\n      return `${valueNow} of ${valueMax}: ${passing}`\n    }}\n    renderValue={function ({ valueNow, valueMax }) {\n      if (valueNow > (valueMax / 2)) {\n        return (\n          <Text weight=\"bold\" size=\"large\">\n            PASS\n          </Text>\n        )\n      } else {\n        return (\n        <Text weight=\"bold\" size=\"large\">\n          FAIL\n        </Text>\n        )\n      }\n    }}\n  />\n</div>\n```\n\n### `color`\n\n`<ProgressCircle />`'s `color` property controls the overall color scheme of the\ncomponent. Set it to `primary-inverse` when the component is used on dark backgrounds.\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<ProgressCircle\n  screenReaderLabel=\"Loading completion\"\n  color=\"primary-inverse\"\n  valueNow={50}\n  valueMax={60}\n/>\n```\n\n### `meterColor`\nThe color of the progress meter is set separately through the `meterColor` property.\n\n```js\n---\nexample: true\n---\n<div>\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"info\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"success\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"alert\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"warning\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"danger\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />  \n</div>\n```\n\n`meterColor` can also be passed in as a function that takes `valueNow / valueMax`\nas parameters. This allows you to adjust the color of the meter based on the\ncurrent value.\n\n```js\n---\nexample: true\n---\n<ProgressCircle\n  screenReaderLabel=\"Loading completion\"\n  meterColor={({ valueNow, valueMax }) => {\n    if (valueNow < 20) {\n      return 'danger'\n    } else if (valueNow / valueMax >= 1) {\n      return 'success'\n    } else {\n      return 'info'\n    }\n  }}\n  valueNow={10}\n  valueMax={60}\n/>\n```\n\n> `<ProgressCircle />` defaults to setting the meter color to `success` when\ncomplete.\n\n\n### `renderValue` / `formatScreenReaderValue`\n\nVia the `renderValue` prop, developers can use `valueMax` and `valueNow` props to format the\nvalue that `<ProgressCircle />` displays.\n\n> `renderValue` will not be spoken by screen readers. Any essential information\nin `renderValue` must also be conveyed via `formatScreenReaderValue` for screen reader users.\n\n```js\n---\nexample: true\n---\n<ProgressCircle\n  screenReaderLabel=\"Percent complete\"\n  formatScreenReaderValue={({ valueNow, valueMax }) => {\n    return Math.round((valueNow / valueMax * 100)) + ' percent'\n  }}\n  renderValue={({ valueNow, valueMax }) => {\n    const percent = Math.round(valueNow / valueMax * 100)\n    return (\n      <span>\n        <Text size=\"large\" weight=\"bold\" color=\"primary\">\n          {percent > 100 ? 100 : percent}\n        </Text>\n        <Text size=\"small\" weight=\"bold\" color=\"secondary\">%</Text>\n      </span>\n    )\n  }}\n  valueMax={88}\n  valueNow={33}\n/>\n```\n","describes":"ProgressCircle","order":"","relativePath":"packages/ui-progress/src/ProgressCircle/README.md","extension":".md","srcPath":"packages/ui-progress/src/ProgressCircle/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-progress/src/ProgressCircle/README.md","packageName":"@instructure/ui-progress","requirePath":"@instructure/ui-progress/lib/ProgressCircle/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-progress/src/ProgressCircle/README.md').default","esPath":"@instructure/ui-progress/es/ProgressCircle/README","id":"ProgressCircle__README","title":"ProgressCircle__README"},"RadioInput__README":{"description":"\nBy default, the RadioInput component is a custom styled HTML radio button.\n\nAdjust the size of the RadioInput and its label text via the `size` prop. The default size is\n`medium`.\n\n```js\n---\nexample: true\n---\n<RadioInput\n  label=\"See RadioInputGroup for more details\"\n  value=\"foo\"\n  name=\"bar\"\n  checked\n/>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use sentence-style capitalization</Figure.Item>\n    <Figure.Item>Use a clear and concise label for RadioInput</Figure.Item>\n    <Figure.Item>Optionally include a heading to provide further clarity</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Have a single RadioInput</Figure.Item>\n    <Figure.Item>Use long labels for RadioInput</Figure.Item>\n    <Figure.Item>Display more than two radio inputs horizontally</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"RadioInput","order":"","relativePath":"packages/ui-radio-input/src/RadioInput/README.md","extension":".md","srcPath":"packages/ui-radio-input/src/RadioInput/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-radio-input/src/RadioInput/README.md","packageName":"@instructure/ui-radio-input","requirePath":"@instructure/ui-radio-input/lib/RadioInput/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-radio-input/src/RadioInput/README.md').default","esPath":"@instructure/ui-radio-input/es/RadioInput/README","id":"RadioInput__README","title":"RadioInput__README"},"RadioInputGroup__README":{"description":"\nA RadioInputGroup is a group of RadioInput components. It will handle setting\nthe name property on the RadioInput components for you and will set the selected item\nbased on the `value` property.\n\nAdjust the size of the radio button and label text via the `size` prop. The default size is\n`medium`.\n\n```js\n---\nrender: false\nexample: true\n---\nfunction Example () {\n  const inputs = [\n    {value: 'foo', label: 'Radio option one' },\n    {value: 'bar', label: 'Radio option two' },\n    {value: 'baz', label: 'Radio option three' }\n  ]\n  const handleChange = function (event, value) {\n    console.log(value)\n  }\n  return (\n    <RadioInputGroup onChange={handleChange} name=\"example1\" defaultValue=\"foo\" description=\"Select something\">\n      {inputs.map(input => <RadioInput key={input.value} value={input.value} label={input.label} />)}\n    </RadioInputGroup>\n  )\n}\nrender(<Example />)\n```\n\nWith the `layout` prop set to `inline` to render the description in its own column at screens `medium` size\nand up (see [Grid](#Grid)).\n\n```js\n---\nrender: false\nexample: true\n---\nfunction Example () {\n  const inputs = [\n    {value: 'foo', label: 'Classical' },\n    {value: 'bar', label: 'Electronic' },\n    {value: 'baz', label: 'Country' }\n  ]\n  return (\n    <RadioInputGroup\n      name=\"example2\"\n      defaultValue=\"foo\"\n      description=\"Select something\"\n      layout=\"inline\">\n      {inputs.map(input => <RadioInput key={input.value} value={input.value} label={input.label} />)}\n    </RadioInputGroup>\n  )\n}\nrender(<Example />)\n```\n\nWith the `layout` property set to `columns` the inputs will render horizontally at screens `medium` size\nand up (see [Grid](#Grid)).\n\n```js\n---\nrender: false\nexample: true\n---\nfunction Example () {\n  const inputs = [\n    {value: 'foo', label: 'Extremely happy' },\n    {value: 'bar', label: 'Very annoyed' },\n    {value: 'baz', label: 'Somewhat apathetic' }\n  ]\n  return (\n    <RadioInputGroup\n      layout=\"columns\"\n      name=\"example3\"\n      defaultValue=\"foo\"\n      description=\"Select something\"\n    >\n      {inputs.map(input =>\n        <RadioInput\n          key={input.value}\n          value={input.value}\n          label={input.label}\n        />\n      )}\n    </RadioInputGroup>\n  )\n}\n\nrender(<Example />)\n```\n\nSet the `variant` prop to `toggle` to have the RadioInputGroup display as a toggle switch. The `context` prop can be set to switch the background color of the toggle switch. Default is `success` options are 'success', 'warning', 'danger', and 'off'.\n\n```js\n---\nexample: true\n---\n<FormFieldGroup description={<ScreenReaderContent>Toggle examples</ScreenReaderContent>}>\n <RadioInputGroup\n    name=\"featuresm\"\n    defaultValue=\"off\"\n    description=\"Small-size\"\n    variant=\"toggle\"\n    size=\"small\">\n    <RadioInput label=\"Off\" value=\"off\" context=\"off\" />\n    <RadioInput label=\"Allow\" value=\"allow\" />\n    <RadioInput label=\"On\" value=\"on\" />\n  </RadioInputGroup>\n  <RadioInputGroup\n    name=\"featuremed\"\n    defaultValue=\"allow\"\n    description=\"Medium-size (default)\"\n    variant=\"toggle\">\n    <RadioInput label=\"Off\" value=\"off\" context=\"off\" />\n    <RadioInput label=\"Allow\" value=\"allow\" />\n    <RadioInput label=\"On\" value=\"on\" />\n  </RadioInputGroup>\n  <RadioInputGroup\n    name=\"context\"\n    defaultValue=\"off\"\n    description=\"Context (background changes based on context set)\"\n    variant=\"toggle\">\n    <RadioInput label=\"Off\" value=\"off\" context=\"danger\" />\n    <RadioInput label=\"Allow\" value=\"allow\" context=\"warning\" />\n    <RadioInput label=\"On\" value=\"on\" />\n  </RadioInputGroup>\n  <RadioInputGroup\n    name=\"featurelg\"\n    defaultValue=\"on\"\n    description=\"Large-size\"\n    variant=\"toggle\"\n    size=\"large\">\n    <RadioInput label=\"Off\" value=\"off\" />\n    <RadioInput label=\"Allow\" value=\"allow\" />\n    <RadioInput label=\"On\" value=\"on\" />\n  </RadioInputGroup>\n</FormFieldGroup>\n```\n\nSetting the `disabled` prop to `true` will disable the entire RadioInputGroup.\n\n```js\n---\nexample: true\n---\n<RadioInputGroup\n  name=\"fruits1\"\n  description=\"Fruits\"\n  defaultValue=\"orange\"\n  disabled\n>\n  <RadioInput label=\"Apple\" value=\"apple\" />\n  <RadioInput label=\"Orange\" value=\"orange\" />\n  <RadioInput label=\"Banana\" value=\"banana\" />\n</RadioInputGroup>\n```\n\n```js\n---\nexample: true\n---\n<RadioInputGroup name=\"feature1\" defaultValue=\"off\" description=\"Super-awesome feature\" variant=\"toggle\" disabled>\n  <RadioInput label=\"Off\" value=\"off\" context=\"off\" />\n  <RadioInput label=\"Allow\" value=\"allow\" />\n  <RadioInput label=\"On\" value=\"on\" />\n</RadioInputGroup>\n```\n\nOr disable an individual RadioInput component via its `disabled` prop.\n\n```js\n---\nexample: true\n---\n<RadioInputGroup\n  name=\"fruits2\"\n  defaultValue=\"banana\"\n  description=\"Fruits\"\n  layout=\"columns\"\n>\n  <RadioInput label=\"Apple\" value=\"apple\" />\n  <RadioInput label=\"Orange\" value=\"orange\" disabled />\n  <RadioInput label=\"Banana\" value=\"banana\" />\n</RadioInputGroup>\n```\n\n```js\n---\nexample: true\n---\n<RadioInputGroup name=\"feature2\" defaultValue=\"none\" description=\"Super-awesome feature\" variant=\"toggle\">\n  <RadioInput label=\"None\" value=\"none\" context=\"off\" />\n  <RadioInput label=\"Some\" value=\"some\" />\n  <RadioInput label=\"All\" value=\"all\" disabled />\n</RadioInputGroup>\n```\n\nIf you would like to make the description visible only to screen readers you can use the\n[ScreenReaderContent](#ScreenReaderContent) component.\n\n```js\n---\nexample: true\n---\n<RadioInputGroup\n  name=\"fruit3\"\n  defaultValue=\"banana\"\n  description={\n    <ScreenReaderContent>Select a fruit</ScreenReaderContent>\n  }\n  messages={[{ text: 'Invalid choice', type: 'error' }]}\n>\n  <RadioInput label=\"Apple\" value=\"apple\" />\n  <RadioInput label=\"Orange\" value=\"orange\" />\n  <RadioInput label=\"Banana\" value=\"banana\" />\n</RadioInputGroup>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use sentence-style capitalization</Figure.Item>\n    <Figure.Item>Use a clear and concise label for RadioInput</Figure.Item>\n    <Figure.Item>Optionally include a heading to provide further clarity</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Have a single RadioInput</Figure.Item>\n    <Figure.Item>Use long labels for RadioInput</Figure.Item>\n    <Figure.Item>Display more than two radio inputs horizontally</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"RadioInputGroup","order":"","relativePath":"packages/ui-radio-input/src/RadioInputGroup/README.md","extension":".md","srcPath":"packages/ui-radio-input/src/RadioInputGroup/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-radio-input/src/RadioInputGroup/README.md","packageName":"@instructure/ui-radio-input","requirePath":"@instructure/ui-radio-input/lib/RadioInputGroup/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-radio-input/src/RadioInputGroup/README.md').default","esPath":"@instructure/ui-radio-input/es/RadioInputGroup/README","id":"RadioInputGroup__README","title":"RadioInputGroup__README"},"RangeInput__README":{"description":"\nAn html5 range input/slider component.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = { size: \"small\" }\n  handleModalSizeChange = (event, value) => {\n    this.setState({ size: value })\n  }\n  render() {\n    return (\n      <div>\n        <RangeInput label=\"Grading range\" defaultValue={30} max={100} min={0} size={this.state.size} />\n        <RadioInputGroup\n          onChange={this.handleModalSizeChange}\n          name=\"labelSize\"\n          defaultValue=\"small\"\n          description=\"Label size\"\n          variant=\"toggle\"\n        >\n          <RadioInput label=\"small\" value=\"small\" />\n          <RadioInput label=\"medium\" value=\"medium\" />\n          <RadioInput label=\"large\" value=\"large\" />\n        </RadioInputGroup>\n      </div>\n    )\n  }\n}\nrender(<Example />)\n```\n","describes":"RangeInput","order":"","relativePath":"packages/ui-range-input/src/RangeInput/README.md","extension":".md","srcPath":"packages/ui-range-input/src/RangeInput/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-range-input/src/RangeInput/README.md","packageName":"@instructure/ui-range-input","requirePath":"@instructure/ui-range-input/lib/RangeInput/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-range-input/src/RangeInput/README.md').default","esPath":"@instructure/ui-range-input/es/RangeInput/README","id":"RangeInput__README","title":"RangeInput__README"},"Rating__README":{"description":"\nRating takes the `valueNow` and `valueMax` props and\noutputs a 3- or 5-star rating. Decimals are rounded to the nearest\nwhole number.\n### 3- or 5-star ratings\n\nRating defaults to a 3-star rating system. Use `iconCount` to switch\nto a 5-star system. Note how you can use the `formatValueText` prop to\ncreate readable text for screenreaders that will be outputted in the\n`aria-valuetext` attribute.\n\nNote how the second example below has filled stars that animate in. Toggle\nthis feature using the `animateFill` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <Rating\n    formatValueText={function (currentRating, maxRating) {\n      return currentRating + ' out of ' + maxRating\n    }}\n    label=\"Overall rating of freshman year experience\"\n    valueNow={68.45}\n    valueMax={100}\n  />\n  <br />\n  <Rating\n    animateFill\n    formatValueText={function (currentRating, maxRating) {\n      return currentRating + ' out of ' + maxRating\n    }}\n    label=\"Overall rating of freshman year experience\"\n    iconCount={5}\n    valueNow={68.45}\n    valueMax={100}\n  />\n</div>\n```\n\n### Sizes\n\nChoose from `small`, `medium`, or `large`. The `margin` prop has been added to add\nspace around the actual rating.\n\n```js\n---\nexample: true\n---\n<div>\n  <Rating\n    label=\"Product rating\"\n    size=\"small\"\n    iconCount={5}\n    valueNow={3.76}\n    valueMax={5}\n    margin=\"x-small medium xx-small none\"\n  />\n  <Rating\n    label=\"Overall rating of college experience\"\n    iconCount={5}\n    valueNow={30}\n    valueMax={100}\n    margin=\"x-small xx-large\"\n  />\n  <Rating\n    animateFill\n    label=\"Rating of professor\"\n    size=\"large\"\n    iconCount={5}\n    valueNow={8}\n    valueMax={8}\n    margin=\"medium\"\n  />\n</div>\n```\n","describes":"Rating","order":"","relativePath":"packages/ui-rating/src/Rating/README.md","extension":".md","srcPath":"packages/ui-rating/src/Rating/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-rating/src/Rating/README.md","packageName":"@instructure/ui-rating","requirePath":"@instructure/ui-rating/lib/Rating/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-rating/src/Rating/README.md').default","esPath":"@instructure/ui-rating/es/Rating/README","id":"Rating__README","title":"Rating__README"},"Responsive__README":{"description":"\nThe `Responsive` component allows for rendering a component differently based on either\nthe element or the viewport size.\n\n> **A note on performance**: Try to limit children to only content or components that need explicit updates at different breakpoints. Content that can scale on its own does not need to be rendered via Responsive. Similarly, don't overuse Responsive. Using many Responsive instances on a single page can also negatively affect rendering performance.\n\n### Passing props at breakpoints\n\nBreakpoints are defined by the `query` prop. Different props can be\nspecified for each breakpoint using the `props` prop. These props are passed to the\nunderlying component via the `Responsive` `render` or `children` props as functions.\n\nThe following example using `Avatar` renders as a circle when the element is under 30rem.\n\n```js\n---\nexample: true\n---\n<Responsive\n  query={{ small: { maxWidth: '30rem' }, large: { minWidth: '30rem' }}}\n  props={{\n    small: { shape: 'circle', size: 'medium' },\n    large: { shape: 'rectangle', size: 'x-large' }\n  }}\n  render={(props, matches) => {\n    return (\n      <div>\n        <Avatar\n          {...props}\n          name=\"Kyle Montgomery\"\n          src={avatarSquare}\n        />\n      </div>\n    )\n  }}\n/>\n```\n\n### Rendering conditionally based on breakpoint matches\n\nThe `render` and `children` props also receive an array of names corresponding to the\ncurrently matching queries. These can be used to determine what should be rendered at a\ngiven breakpoint.\n\n```js\n---\nexample: true\n---\n<Responsive\n  match=\"media\"\n  query={{\n    small: { maxWidth: 600 },\n    medium: { minWidth: 600 },\n    large: { minWidth: 800}\n  }}\n>\n  {(props, matches) => {\n    if (matches.includes('large')) {\n      return (\n        <Billboard\n          message=\"Large breakpoint\"\n          hero={<IconUserLine />}\n        />\n      )\n    } else if (matches.includes('medium') && !matches.includes('large')) {\n      return (\n        <Byline description=\"Medium breakpoint\">\n          <Avatar name=\"Alexander Hamilton\" />\n        </Byline>\n      )\n    } else {\n      return (\n        <Pill color=\"primary\">\n          Small breakpoint\n        </Pill>\n      )\n    }\n  }}\n</Responsive>\n```\n","describes":"Responsive","order":"","relativePath":"packages/ui-responsive/src/Responsive/README.md","extension":".md","srcPath":"packages/ui-responsive/src/Responsive/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/Responsive/README.md","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/lib/Responsive/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/src/Responsive/README.md').default","esPath":"@instructure/ui-responsive/es/Responsive/README","id":"Responsive__README","title":"Responsive__README"},"Select__README":{"description":"\n`Select` is an accessible, custom styled combobox component for inputting a variety of data types.\n- It behaves similar to [Popover](#Popover) but provides additional semantic markup and focus behavior as a form input.\n- It should not be used for navigation or as a list of actions/functions. (see [Menu](#Menu)).\n- It can behave like a `<select>` element or implement autocomplete behavior.\n\n> Note: Before implementing Select, see if a [SimpleSelect](#SimpleSelect) will suffice.\n\n#### Managing state for a Select\n`Select` is a controlled-only component. The consuming app or component must manage any state needed. A variety of request callbacks are provided as prompts for state updates. `onRequestShowOptions`, for example, is fired when `Select` thinks the `isShowingOptions` prop should be updated to `true`. Of course, the consumer can always choose how to react to these callbacks.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass SingleSelectExample extends React.Component {\n  state = {\n    inputValue: this.props.options[0].label,\n    isShowingOptions: false,\n    highlightedOptionId: null,\n    selectedOptionId: this.props.options[0].id,\n    announcement: null\n  }\n\n  getOptionById (queryId) {\n    return this.props.options.find(({ id }) => id === queryId)\n  }\n\n  handleShowOptions = (event) => {\n    this.setState({\n      isShowingOptions: true\n    })\n  }\n\n  handleHideOptions = (event) => {\n    const { selectedOptionId } = this.state\n    const option = this.getOptionById(selectedOptionId).label\n    this.setState({\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      inputValue: selectedOptionId ? option : '',\n      announcement: 'List collapsed.'\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({\n      highlightedOptionId: null\n    })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const optionsAvailable = `${this.props.options.length} options available.`\n    const nowOpen = !this.state.isShowingOptions ? `List expanded. ${optionsAvailable}` : ''\n    const option = this.getOptionById(id).label\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? option : state.inputValue,\n      announcement: `${option} ${nowOpen}`\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    const option = this.getOptionById(id).label\n    this.setState({\n      selectedOptionId: id,\n      inputValue: option,\n      isShowingOptions: false,\n      announcement: `\"${option}\" selected. List collapsed.`\n    })\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId,\n      selectedOptionId,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Single Select\"\n          assistiveText=\"Use arrow keys to navigate options.\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          onBlur={this.handleBlur}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n        >\n          {this.props.options.map((option) => {\n            return (\n              <Select.Option\n                id={option.id}\n                key={option.id}\n                isHighlighted={option.id === highlightedOptionId}\n                isSelected={option.id === selectedOptionId}\n              >\n                { option.label }\n              </Select.Option>\n            )\n          })}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <SingleSelectExample\n      options={[\n        { id: 'opt1', label: 'Alaska' },\n        { id: 'opt2', label: 'American Samoa' },\n        { id: 'opt3', label: 'Arizona' },\n        { id: 'opt4', label: 'Arkansas' },\n        { id: 'opt5', label: 'California' },\n        { id: 'opt6', label: 'Colorado' },\n        { id: 'opt7', label: 'Connecticut' },\n        { id: 'opt8', label: 'Delaware' },\n        { id: 'opt9', label: 'District Of Columbia' },\n        { id: 'opt10', label: 'Federated States Of Micronesia' },\n        { id: 'opt11', label: 'Florida' },\n        { id: 'opt12', label: 'Georgia (unavailable)' },\n        { id: 'opt13', label: 'Guam' },\n        { id: 'opt14', label: 'Hawaii' },\n        { id: 'opt15', label: 'Idaho' },\n        { id: 'opt16', label: 'Illinois' }\n      ]}\n    />\n  </View>\n)\n```\n\n#### Providing autocomplete behavior\nIt's best practice to always provide autocomplete functionality to help users make a selection. The example below demonstrates one method of filtering options based on user input, but this logic should be customized to what works best for the application.\n\n> Note: Select makes some conditional assumptions about keyboard behavior. For example, if the list is NOT showing, up/down arrow keys and the space key, will show the list. Otherwise, the arrows will navigate options and the space key will type a space character.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass AutocompleteExample extends React.Component {\n  state = {\n    inputValue: '',\n    isShowingOptions: false,\n    highlightedOptionId: null,\n    selectedOptionId: null,\n    filteredOptions: this.props.options,\n    announcement: null\n  }\n\n  getOptionById (queryId) {\n    return this.props.options.find(({ id }) => id === queryId)\n  }\n\n  getOptionsChangedMessage (newOptions) {\n    let message = newOptions.length !== this.state.filteredOptions.length\n      ? `${newOptions.length} options available.` // options changed, announce new total\n      : null // options haven't changed, don't announce\n    if (message && newOptions.length > 0) {\n      // options still available\n      if (this.state.highlightedOptionId !== newOptions[0].id) {\n        // highlighted option hasn't been announced\n        const option = this.getOptionById(newOptions[0].id).label\n        message = `${option}. ${message}`\n      }\n    }\n    return message\n  }\n\n  filterOptions = (value) => {\n    return this.props.options.filter(option => (\n      option.label.toLowerCase().startsWith(value.toLowerCase())\n    ))\n  }\n\n  matchValue () {\n    const {\n      filteredOptions,\n      inputValue,\n      highlightedOptionId,\n      selectedOptionId\n    } = this.state\n\n    // an option matching user input exists\n    if (filteredOptions.length === 1) {\n      const onlyOption = filteredOptions[0]\n      // automatically select the matching option\n      if (onlyOption.label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: onlyOption.label,\n          selectedOptionId: onlyOption.id,\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n    // allow user to return to empty input and no selection\n    if (inputValue.length === 0) {\n      return { selectedOptionId: null }\n    }\n    // no match found, return selected option label to input\n    if (selectedOptionId) {\n      const selectedOption = this.getOptionById(selectedOptionId)\n      return { inputValue: selectedOption.label }\n    }\n    // input value is from highlighted option, not user input\n    // clear input, reset options\n    if (highlightedOptionId) {\n      if (inputValue === this.getOptionById(highlightedOptionId).label) {\n        return {\n          inputValue: '',\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n  }\n\n  handleShowOptions = (event) => {\n    this.setState(({ filteredOptions }) => ({\n      isShowingOptions: true,\n      announcement: `List expanded. ${filteredOptions.length} options available.`\n    }))\n  }\n\n  handleHideOptions = (event) => {\n    const { selectedOptionId, inputValue } = this.state\n    this.setState({\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      announcement: 'List collapsed.',\n      ...this.matchValue()\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({ highlightedOptionId: null })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const option = this.getOptionById(id)\n    if (!option) return // prevent highlighting of empty option\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? option.label : state.inputValue,\n      announcement: option.label\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    const option = this.getOptionById(id)\n    if (!option) return // prevent selecting of empty option\n    this.setState({\n      selectedOptionId: id,\n      inputValue: option.label,\n      isShowingOptions: false,\n      filteredOptions: this.props.options,\n      announcement: `${option.label} selected. List collapsed.`\n    })\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    const newOptions = this.filterOptions(value)\n    this.setState((state) => ({\n      inputValue: value,\n      filteredOptions: newOptions,\n      highlightedOptionId: newOptions.length > 0 ? newOptions[0].id : null,\n      isShowingOptions: true,\n      selectedOptionId: value === '' ? null : state.selectedOptionId,\n      announcement: this.getOptionsChangedMessage(newOptions)\n    }))\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Autocomplete\"\n          assistiveText=\"Type or use arrow keys to navigate options.\"\n          placeholder=\"Start typing to search...\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          onBlur={this.handleBlur}\n          onInputChange={this.handleInputChange}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n          renderBeforeInput={<IconUserSolid inline={false} />}\n          renderAfterInput={<IconSearchLine inline={false} />}\n        >\n          {filteredOptions.length > 0 ? filteredOptions.map((option) => {\n            return (\n              <Select.Option\n                id={option.id}\n                key={option.id}\n                isHighlighted={option.id === highlightedOptionId}\n                isSelected={option.id === selectedOptionId}\n                isDisabled={option.disabled}\n                renderBeforeLabel={!option.disabled ? IconUserSolid : IconUserLine}\n              >\n                {!option.disabled\n                  ? option.label\n                  : `${option.label} (unavailable)`\n                }\n              </Select.Option>\n            )\n          }) : (\n            <Select.Option\n              id=\"empty-option\"\n              key=\"empty-option\"\n            >\n              ---\n            </Select.Option>\n          )}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <AutocompleteExample\n      options={[\n        { id: 'opt0', label: 'Aaron Aaronson' },\n        { id: 'opt1', label: 'Amber Murphy' },\n        { id: 'opt2', label: 'Andrew Miller' },\n        { id: 'opt3', label: 'Barbara Ward' },\n        { id: 'opt4', label: 'Byron Cranston', disabled: true },\n        { id: 'opt5', label: 'Dennis Reynolds' },\n        { id: 'opt6', label: 'Dee Reynolds' },\n        { id: 'opt7', label: 'Ezra Betterthan' },\n        { id: 'opt8', label: 'Jeff Spicoli' },\n        { id: 'opt9', label: 'Joseph Smith' },\n        { id: 'opt10', label: 'Jasmine Diaz' },\n        { id: 'opt11', label: 'Martin Harris' },\n        { id: 'opt12', label: 'Michael Morgan', disabled: true },\n        { id: 'opt13', label: 'Michelle Rodriguez' },\n        { id: 'opt14', label: 'Ziggy Stardust' }\n      ]}\n    />\n  </View>\n)\n```\n\n#### Highlighting and selecting options\nTo mark an option as \"highlighted\", use the option's `isHighlighted` prop. Note that only one highlighted option is permitted. Similarly, use `isSelected` to mark an option or multiple options as \"selected\". When allowing multiple selections, it's best to render a [Tag](#Tag) for each selected option via the `renderBeforeInput` prop.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass MultipleSelectExample extends React.Component {\n  state = {\n    inputValue: '',\n    isShowingOptions: false,\n    highlightedOptionId: null,\n    selectedOptionId: ['opt1', 'opt6'],\n    filteredOptions: this.props.options,\n    announcement: null\n  }\n\n  getOptionById (queryId) {\n    return this.props.options.find(({ id }) => id === queryId)\n  }\n\n  getOptionsChangedMessage (newOptions) {\n    let message = newOptions.length !== this.state.filteredOptions.length\n      ? `${newOptions.length} options available.` // options changed, announce new total\n      : null // options haven't changed, don't announce\n    if (message && newOptions.length > 0) {\n      // options still available\n      if (this.state.highlightedOptionId !== newOptions[0].id) {\n        // highlighted option hasn't been announced\n        const option = this.getOptionById(newOptions[0].id).label\n        message = `${option}. ${message}`\n      }\n    }\n    return message\n  }\n\n  filterOptions = (value) => {\n    const { selectedOptionId } = this.state\n    return this.props.options.filter(option => (\n      selectedOptionId.indexOf(option.id) === -1 // ignore selected options removed from list\n      && option.label.toLowerCase().startsWith(value.toLowerCase())\n    ))\n  }\n\n  matchValue () {\n    const {\n      filteredOptions,\n      inputValue,\n      highlightedOptionId,\n      selectedOptionId\n    } = this.state\n\n    // an option matching user input exists\n    if (filteredOptions.length === 1) {\n      const onlyOption = filteredOptions[0]\n      // automatically select the matching option\n      if (onlyOption.label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: '',\n          selectedOptionId: [...selectedOptionId, onlyOption.id],\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n    // input value is from highlighted option, not user input\n    // clear input, reset options\n    if (highlightedOptionId) {\n      if (inputValue === this.getOptionById(highlightedOptionId).label) {\n        return {\n          inputValue: '',\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n  }\n\n  handleShowOptions = (event) => {\n    this.setState({ isShowingOptions: true })\n  }\n\n  handleHideOptions = (event) => {\n    this.setState({\n      isShowingOptions: false,\n      ...this.matchValue()\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({\n      highlightedOptionId: null\n    })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const option = this.getOptionById(id)\n    if (!option) return // prevent highlighting empty option\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? option.label : state.inputValue,\n      announcement: option.label\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    const option = this.getOptionById(id)\n    if (!option) return // prevent selecting of empty option\n    this.setState((state) => ({\n      selectedOptionId: [...state.selectedOptionId, id],\n      highlightedOptionId: null,\n      filteredOptions: this.filterOptions(''),\n      inputValue: '',\n      isShowingOptions: false,\n      announcement: `${option.label} selected. List collapsed.`\n    }))\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    const newOptions = this.filterOptions(value)\n    this.setState({\n      inputValue: value,\n      filteredOptions: newOptions,\n      highlightedOptionId: newOptions.length > 0 ? newOptions[0].id : null,\n      isShowingOptions: true,\n      announcement: this.getOptionsChangedMessage(newOptions)\n    })\n  }\n\n  handleKeyDown = (event) => {\n    const { selectedOptionId, inputValue } = this.state\n    if (event.keyCode === 8) {\n      // when backspace key is pressed\n      if (inputValue === '' && selectedOptionId.length > 0) {\n        // remove last selected option, if input has no entered text\n        this.setState((state) => ({\n          highlightedOptionId: null,\n          selectedOptionId: state.selectedOptionId.slice(0, -1)\n        }))\n      }\n    }\n  }\n  // remove a selected option tag\n  dismissTag (e, tag) {\n    // prevent closing of list\n    e.stopPropagation()\n    e.preventDefault()\n\n    const newSelection = this.state.selectedOptionId.filter((id) => id !== tag)\n    this.setState({\n      selectedOptionId: newSelection,\n      highlightedOptionId: null\n    }, () => {\n      this.inputRef.focus()\n    })\n  }\n  // render tags when multiple options are selected\n  renderTags () {\n    const { selectedOptionId } = this.state\n    return selectedOptionId.map((id, index) => (\n      <Tag\n        dismissible\n        key={id}\n        title={`Remove ${this.getOptionById(id).label}`}\n        text={this.getOptionById(id).label}\n        margin={index > 0 ? 'xxx-small 0 xxx-small xx-small' : 'xxx-small 0'}\n        onClick={(e) => this.dismissTag(e, id)}\n      />\n    ))\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Multiple Select\"\n          assistiveText=\"Type or use arrow keys to navigate options. Multiple selections allowed.\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          inputRef={(el) => this.inputRef = el}\n          onBlur={this.handleBlur}\n          onInputChange={this.handleInputChange}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n          onKeyDown={this.handleKeyDown}\n          renderBeforeInput={selectedOptionId.length > 0 ? this.renderTags() : null}\n        >\n          {filteredOptions.length > 0 ? filteredOptions.map((option, index) => {\n            if (selectedOptionId.indexOf(option.id) === -1) {\n              return (\n                <Select.Option\n                  id={option.id}\n                  key={option.id}\n                  isHighlighted={option.id === highlightedOptionId}\n                >\n                  { option.label }\n                </Select.Option>\n              )\n            }\n          }) : (\n            <Select.Option\n              id=\"empty-option\"\n              key=\"empty-option\"\n            >\n              ---\n            </Select.Option>\n          )}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <MultipleSelectExample\n      options={[\n        { id: 'opt1', label: 'Alaska' },\n        { id: 'opt2', label: 'American Samoa' },\n        { id: 'opt3', label: 'Arizona' },\n        { id: 'opt4', label: 'Arkansas' },\n        { id: 'opt5', label: 'California' },\n        { id: 'opt6', label: 'Colorado' },\n        { id: 'opt7', label: 'Connecticut' },\n        { id: 'opt8', label: 'Delaware' },\n        { id: 'opt9', label: 'District Of Columbia' },\n        { id: 'opt10', label: 'Federated States Of Micronesia' },\n        { id: 'opt11', label: 'Florida' },\n        { id: 'opt12', label: 'Georgia (unavailable)' },\n        { id: 'opt13', label: 'Guam' },\n        { id: 'opt14', label: 'Hawaii' },\n        { id: 'opt15', label: 'Idaho' },\n        { id: 'opt16', label: 'Illinois' }\n      ]}\n    />\n  </View>\n)\n```\n\n#### Composing option groups\nIn addition to `<Select.Option />` Select also accepts `<Select.Group />` as children. This is meant to serve the same purpose as `<optgroup>` elements. Group only requires you provide a label via its `renderLabel` prop. Groups and their associated options also accept icons or other stylistic additions if needed.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass GroupSelectExample extends React.Component {\n  state = {\n    inputValue: this.props.options['Western'][0].label,\n    isShowingOptions: false,\n    highlightedOptionId: null,\n    selectedOptionId: this.props.options['Western'][0].id,\n    announcement: null\n  }\n\n  getOptionById (id) {\n    const { options } = this.props\n    let match = null\n    Object.keys(options).forEach((key, index) => {\n      for (let i = 0; i < options[key].length; i++) {\n        const option = options[key][i]\n        if (id === option.id) {\n          // return group property with the object just to make it easier\n          // to check which group the option belongs to\n          match = { ...option, group: key }\n          break\n        }\n      }\n    })\n    return match\n  }\n\n  getGroupChangedMessage (newOption) {\n    const currentOption = this.getOptionById(this.state.highlightedOptionId)\n    const isNewGroup = !currentOption || currentOption.group !== newOption.group\n    let message = isNewGroup ? `Group ${newOption.group} entered. ` : ''\n    message += newOption.label\n    return message\n  }\n\n  handleShowOptions = (event) => {\n    this.setState({\n      isShowingOptions: true,\n      highlightedOptionId: null\n    })\n  }\n\n  handleHideOptions = (event) => {\n    const { selectedOptionId } = this.state\n    this.setState({\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      inputValue: this.getOptionById(selectedOptionId).label\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({\n      highlightedOptionId: null\n    })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const newOption = this.getOptionById(id)\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? newOption.label : state.inputValue,\n      announcement: this.getGroupChangedMessage(newOption)\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    this.setState({\n      selectedOptionId: id,\n      inputValue: this.getOptionById(id).label,\n      isShowingOptions: false,\n      announcement: `${this.getOptionById(id).label} selected.`\n    })\n  }\n\n  renderLabel (text, variant) {\n    return (\n      <span>\n        <Badge\n          type=\"notification\"\n          variant={variant}\n          standalone\n          margin=\"0 x-small xxx-small 0\"\n        />\n        { text }\n      </span>\n    )\n  }\n\n  renderGroup () {\n    const { options } = this.props\n    const { highlightedOptionId, selectedOptionId } = this.state\n\n    return Object.keys(options).map((key, index) => {\n      const badgeVariant = key === 'Eastern' ? 'success' : 'primary'\n      return (\n        <Select.Group key={index} renderLabel={this.renderLabel(key, badgeVariant)}>\n          {options[key].map((option) => (\n            <Select.Option\n              key={option.id}\n              id={option.id}\n              isHighlighted={option.id === highlightedOptionId}\n              isSelected={option.id === selectedOptionId}\n            >\n              { option.label }\n            </Select.Option>\n          ))}\n        </Select.Group>\n      )\n    })\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Group Select\"\n          assistiveText=\"Type or use arrow keys to navigate options.\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          onBlur={this.handleBlur}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n          renderBeforeInput={\n            <Badge\n              type=\"notification\"\n              variant={this.getOptionById(selectedOptionId).group === 'Eastern'\n                ? 'success'\n                : 'primary'\n              }\n              standalone\n              margin=\"0 0 xxx-small 0\"\n            />\n          }\n        >\n          {this.renderGroup()}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <GroupSelectExample\n      options={{\n        'Western': [\n          { id: 'opt5', label: 'Alaska' },\n          { id: 'opt6', label: 'California' },\n          { id: 'opt7', label: 'Colorado' },\n          { id: 'opt8', label: 'Idaho' }\n        ],\n        'Eastern': [\n          { id: 'opt1', label: 'Alabama' },\n          { id: 'opt2', label: 'Connecticut' },\n          { id: 'opt3', label: 'Delaware' },\n          { id: '4', label: 'Illinois' }\n        ]\n      }}\n    />\n  </View>\n)\n```\n\n#### Asynchronous option loading\nIf no results match the user's search, it's recommended to leave `isShowingOptions` as `true` and to display an \"empty option\" as a way of communicating that there are no matches. Similarly, it's helpful to display a [Spinner](#Spinner) in an empty option while options load.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass AsyncExample extends React.Component {\n  state = {\n    inputValue: '',\n    isShowingOptions: false,\n    isLoading: false,\n    highlightedOptionId: null,\n    selectedOptionId: null,\n    selectedOptionLabel: '',\n    filteredOptions: [],\n    announcement: null\n  }\n\n  timeoutId = null\n\n  getOptionById (queryId) {\n    return this.state.filteredOptions.find(({ id }) => id === queryId)\n  }\n\n  filterOptions = (value) => {\n    return this.props.options.filter(option => (\n      option.label.toLowerCase().startsWith(value.toLowerCase())\n    ))\n  }\n\n  matchValue () {\n    const {\n      filteredOptions,\n      inputValue,\n      selectedOptionId,\n      selectedOptionLabel\n    } = this.state\n\n    // an option matching user input exists\n    if (filteredOptions.length === 1) {\n      const onlyOption = filteredOptions[0]\n      // automatically select the matching option\n      if (onlyOption.label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: onlyOption.label,\n          selectedOptionId: onlyOption.id\n        }\n      }\n    }\n    // allow user to return to empty input and no selection\n    if (inputValue.length === 0) {\n      return { selectedOptionId: null, filteredOptions: [] }\n    }\n    // no match found, return selected option label to input\n    if (selectedOptionId) {\n      return { inputValue: selectedOptionLabel }\n    }\n  }\n\n  handleShowOptions = (event) => {\n    this.setState(({ filteredOptions }) => ({\n      isShowingOptions: true\n    }))\n  }\n\n  handleHideOptions = (event) => {\n    const { selectedOptionId, inputValue } = this.state\n    this.setState({\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      announcement: 'List collapsed.',\n      ...this.matchValue()\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({ highlightedOptionId: null })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const option = this.getOptionById(id)\n    if (!option) return // prevent highlighting of empty option\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? option.label : state.inputValue,\n      announcement: option.label\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    const option = this.getOptionById(id)\n    if (!option) return // prevent selecting of empty option\n    this.setState({\n      selectedOptionId: id,\n      selectedOptionLabel: option.label,\n      inputValue: option.label,\n      isShowingOptions: false,\n      announcement: `${option.label} selected. List collapsed.`,\n      filteredOptions: [this.getOptionById(id)]\n    })\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    clearTimeout(this.timeoutId)\n\n    if (!value || value === '') {\n      this.setState({\n        isLoading: false,\n        inputValue: value,\n        isShowingOptions: true,\n        selectedOptionId: null,\n        selectedOptionLabel: null,\n        filteredOptions: [],\n      })\n    } else {\n      this.setState({\n        isLoading: true,\n        inputValue: value,\n        isShowingOptions: true,\n        filteredOptions: [],\n        highlightedOptionId: null,\n        announcement: 'Loading options.'\n      })\n\n      this.timeoutId = setTimeout(() => {\n        const newOptions = this.filterOptions(value)\n        this.setState({\n          filteredOptions: newOptions,\n          isLoading: false,\n          announcement: `${newOptions.length} options available.`\n        })\n      }, 1500)\n    }\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      isLoading,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Async Select\"\n          assistiveText=\"Type to search\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          onBlur={this.handleBlur}\n          onInputChange={this.handleInputChange}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n        >\n          {filteredOptions.length > 0 ? filteredOptions.map((option) => {\n            return (\n              <Select.Option\n                id={option.id}\n                key={option.id}\n                isHighlighted={option.id === highlightedOptionId}\n                isSelected={option.id === selectedOptionId}\n                isDisabled={option.disabled}\n                renderBeforeLabel={!option.disabled ? IconUserSolid : IconUserLine}\n              >\n                {option.label}\n              </Select.Option>\n            )\n          }) : (\n            <Select.Option id=\"empty-option\" key=\"empty-option\">\n              {isLoading\n                ? <Spinner renderTitle=\"Loading\" size=\"x-small\" />\n                : inputValue !== '' ? 'No results' : 'Type to search'}\n            </Select.Option>\n          )}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <AsyncExample\n      options={[\n        { id: 'opt0', label: 'Aaron Aaronson' },\n        { id: 'opt1', label: 'Amber Murphy' },\n        { id: 'opt2', label: 'Andrew Miller' },\n        { id: 'opt3', label: 'Barbara Ward' },\n        { id: 'opt4', label: 'Byron Cranston', disabled: true },\n        { id: 'opt5', label: 'Dennis Reynolds' },\n        { id: 'opt6', label: 'Dee Reynolds' },\n        { id: 'opt7', label: 'Ezra Betterthan' },\n        { id: 'opt8', label: 'Jeff Spicoli' },\n        { id: 'opt9', label: 'Joseph Smith' },\n        { id: 'opt10', label: 'Jasmine Diaz' },\n        { id: 'opt11', label: 'Martin Harris' },\n        { id: 'opt12', label: 'Michael Morgan', disabled: true },\n        { id: 'opt13', label: 'Michelle Rodriguez' },\n        { id: 'opt14', label: 'Ziggy Stardust' },\n      ]}\n    />\n  </View>\n)\n```\n\n#### Providing assistive text for screen readers\nIt's important to ensure screen reader users receive instruction and feedback while interacting with a `Select`, but screen reader support for the `combobox` role varies. The `assistiveText` prop should always be used to explain how a keyboard user can make a selection. Additionally, a live region should be updated with feedback as the component is interacted with, such as when options are filtered or highlighted. Using an [Alert](#Alert) with the `screenReaderOnly` prop is the easiest way to do this.\n","describes":"Select","order":"","relativePath":"packages/ui-select/src/Select/README.md","extension":".md","srcPath":"packages/ui-select/src/Select/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-select/src/Select/README.md","packageName":"@instructure/ui-select","requirePath":"@instructure/ui-select/lib/Select/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-select/src/Select/README.md').default","esPath":"@instructure/ui-select/es/Select/README","id":"Select__README","title":"Select__README"},"Selectable__README":{"description":"\n`Selectable` is a low level utility component that can be used to create combobox widgets. Before composing your own component, make sure an existing component, like [Select](#Select), can't be adapted for your use case.\n\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass CustomSelect extends React.Component {\n  state = {\n    isShowingOptions: false,\n    highlightedOptionId: this.props.options[0].id,\n    selectedOptionId: this.props.options[0].id,\n    inputValue: this.props.options[0].label,\n    filteredOptions: this.props.options\n  }\n\n  filterOptions = (value) => {\n    return this.props.options.filter(option => (\n      option.label.toLowerCase().startsWith(value.toLowerCase())\n    ))\n  }\n\n  matchValue () {\n    const { filteredOptions, inputValue, selectedOptionId } = this.state\n    if (filteredOptions.length === 1) {\n      if (filteredOptions[0].label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: filteredOptions[0].label,\n          selectedOptionId: filteredOptions[0].id\n        }\n      }\n    }\n    const index = this.getOptionIndex(null, selectedOptionId, this.props.options)\n    return { inputValue: this.props.options[index].label }\n  }\n\n  getInputStyles () {\n    return {\n      display: 'block',\n      width: '250px',\n      padding: '5px'\n    }\n  }\n\n  getListStyles () {\n    const { isShowingOptions } = this.state\n    return {\n      background: 'white',\n      listStyle: 'none',\n      padding: 0,\n      margin: 0,\n      border: isShowingOptions && 'solid 1px lightgray'\n    }\n  }\n\n  getOptionStyles (option) {\n    const { selectedOptionId, highlightedOptionId } = this.state\n    const selected = selectedOptionId === option.id\n    const highlighted = highlightedOptionId === option.id\n    let background = 'transparent'\n    if (selected) {\n      background = 'lightgray'\n    } else if (highlighted) {\n      background = '#eeeeee'\n    }\n    return {\n      background,\n      padding: '0 10px'\n    }\n  }\n\n  getOptionIndex (direction, id, from) {\n    const { filteredOptions, highlightedOptionId } = this.state\n    const options = from ? from : filteredOptions\n    let index\n\n    for (let i = 0; i <= options.length - 1; i++) {\n      if (typeof id === 'undefined') {\n        if (highlightedOptionId === options[i].id) {\n          index = i + direction\n          if (index < 0) {\n            index = 0\n          } else if (index >= options.length - 1) {\n            index = options.length - 1\n          }\n          break\n        }\n      } else {\n        if (id === options[i].id) {\n          index = i\n          break\n        }\n      }\n    }\n    return index\n  }\n\n  getHandlers () {\n    return this.props.isDisabled ? {} : {\n      onRequestShowOptions: (e) => this.setState(state => ({\n        isShowingOptions: true,\n        highlightedOptionId: state.filteredOptions[0].id\n      })),\n      onRequestHideOptions: (e) => {\n        const index = this.getOptionIndex(null, this.state.selectedOptionId, this.props.options)\n        this.setState(state => ({\n          isShowingOptions: false,\n          inputValue: this.props.options[index].label,\n          filteredOptions: this.props.options,\n          highlightedOptionId: null,\n        }))\n      },\n      onRequestHighlightOption: (e, { id, direction }) => {\n        let index = this.getOptionIndex(direction, id)\n        this.setState(state => ({\n          highlightedOptionId: state.filteredOptions[index] ? state.filteredOptions[index].id : null,\n          inputValue: direction && state.filteredOptions[index]\n            ? state.filteredOptions[index].label\n            : state.inputValue\n        }))\n      },\n      onRequestSelectOption: (e, { id }) => {\n        const index = this.getOptionIndex(null, id)\n        this.setState(state => ({\n          selectedOptionId: id,\n          inputValue: state.filteredOptions[index].label,\n          filteredOptions: this.props.options,\n          isShowingOptions: false,\n          highlightedOptionId: null,\n        }))\n      }\n    }\n  }\n\n  render () {\n    const {\n      isShowingOptions,\n      inputValue,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions\n    } = this.state\n\n    return (\n      <Selectable\n        isShowingOptions={isShowingOptions}\n        highlightedOptionId={highlightedOptionId}\n        selectedOptionId={selectedOptionId ? selectedOptionId : null}\n        {...this.getHandlers()}\n      >\n        {({\n          getRootProps,\n          getLabelProps,\n          getInputProps,\n          getTriggerProps,\n          getListProps,\n          getOptionProps\n        }) => (\n          <span\n            style={{display: 'inline-block'}}\n            {...getRootProps({ref: (el) => this.rootRef = el})}\n          >\n            <label {...getLabelProps()}>Selectable Example</label>\n            <input\n              style={this.getInputStyles()}\n              {...getInputProps()}\n              {...getTriggerProps({\n                type: 'text',\n                value: inputValue,\n                onChange: (e) => {\n                  const newOptions = this.filterOptions(e.target.value)\n                  this.setState({\n                    inputValue: e.target.value,\n                    filteredOptions: newOptions,\n                    isShowingOptions: true,\n                    highlightedOptionId: newOptions[0] ? newOptions[0].id : null\n                  })\n                },\n                onBlur: (e) => this.setState({\n                  filteredOptions: this.props.options,\n                  highlightedOptionId: null,\n                  isShowingOptions: false,\n                  ...this.matchValue()\n                })\n              })\n            } />\n            <ul\n              style={this.getListStyles()}\n              {...getListProps()}\n            >\n              {isShowingOptions && filteredOptions.map((option) => (\n                <li\n                  key={option.id}\n                  style={this.getOptionStyles(option)}\n                  {...getOptionProps({ id: option.id })}\n                >\n                  {option.label}\n                </li>\n              ))}\n            </ul>\n          </span>\n        )}\n      </Selectable>\n    )\n  }\n}\n\nrender(\n  <View>\n    <CustomSelect\n      options={[\n        { id: 'opt0', value: '0', label: 'Alabama' },\n        { id: 'opt1', value: '1', label: 'Alaska' },\n        { id: 'opt2', value: '2', label: 'American Samoa' },\n        { id: 'opt3', value: '3', label: 'Arizona' },\n        { id: 'opt4', value: '4', label: 'Arkansas' },\n        { id: 'opt5', value: '5', label: 'California' },\n        { id: 'opt6', value: '6', label: 'Colorado' },\n        { id: 'opt7', value: '7', label: 'Connecticut' },\n        { id: 'opt8', value: '8', label: 'Delaware' },\n        { id: 'opt9', value: '9', label: 'District Of Columbia' },\n        { id: 'opt10', value: '10', label: 'Federated States Of Micronesia' },\n        { id: 'opt11', value: '11', label: 'Florida' },\n        { id: 'opt12', value: '12', label: 'Georgia' },\n        { id: 'opt13', value: '13', label: 'Guam' },\n        { id: 'opt14', value: '14', label: 'Hawaii' },\n        { id: 'opt15', value: '15', label: 'Idaho' },\n        { id: 'opt16', value: '16', label: 'Illinois' }\n      ]}\n    />\n  </View>\n)\n```\n\nSelectable has very few opinions about how a combobox component should be composed. It mostly aims to ensure all the proper WAI-ARIA roles and attributes are set on the right elements at the right times. Selectable uses a combination of controllable props and prop getters to set these attributes and provide accessible behavior.\n\n#### Prop getters\n`Selectable` provides a number of different prop getters. Each getter is intended to be used with a particular element in your component. `getInputProps` should be used to obtain attributes relevant to the `input` element in a combobox component. `getTriggerProps` should be used for the element responsible for triggering the showing and hiding of the options list. If the `input` element is also the trigger, use both of these prop getters on that element.\n\nThe only getter with a required argument is `getOptionProps` which requires an `id` be provided. However, it's best practice to set any props needed on an element via its prop getter. This just ensures you don't inadvertently override an essential value.\n\n#### Controllable props\nThere are several controllable props available. These should be updated to reflect changes to the externally managed state of the combobox component. The `selectedOptionId` prop, for example, specifies which option(s) should be considered \"selected\" when rendered.\n\n#### Request callbacks\nA variety of request callbacks are provided as prompts for state updates. They do not actually make any changes to props or state on their own. `onRequestShowOptions`, for example, is fired when `Selectable` thinks its `isShowingOptions` prop should be updated to true. The consumer can always decide if and how to react to these prompts, but utilizing them reduces a lot of the boilerplate combobox logic the consumer would otherwise be responsible for providing.\n","describes":"Selectable","order":"","relativePath":"packages/ui-selectable/src/Selectable/README.md","extension":".md","srcPath":"packages/ui-selectable/src/Selectable/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-selectable/src/Selectable/README.md","packageName":"@instructure/ui-selectable","requirePath":"@instructure/ui-selectable/lib/Selectable/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-selectable/src/Selectable/README.md').default","esPath":"@instructure/ui-selectable/es/Selectable/README","id":"Selectable__README","title":"Selectable__README"},"SimpleSelect__README":{"description":"\n`SimpleSelect` is a higher level abstraction of [Select](#Select) that closely parallels the functionality of standard HTML `<select>` elements. It does not support autocomplete behavior and is much less configurable than [Select](#Select). However, because it is more opinionated, `SimpleSelect` can be implemented with very little boilerplate.\n\n### Uncontrolled\nFor the most basic implementations, `SimpleSelect` can be uncontrolled. If desired, the `defaultValue` prop can be used to set the initial selection.\n\n```javascript\n---\nexample: true\nrender: true\n---\n<SimpleSelect renderLabel=\"Uncontrolled Select\">\n  <SimpleSelect.Option id=\"foo\" value=\"foo\">\n    Foo\n  </SimpleSelect.Option>\n  <SimpleSelect.Option id=\"bar\" value=\"bar\">\n    Bar\n  </SimpleSelect.Option>\n  <SimpleSelect.Option id=\"baz\" value=\"baz\">\n    Baz\n  </SimpleSelect.Option>\n</SimpleSelect>\n```\n\n### Controlled\nTo use `SimpleSelect` controlled, simply provide the `value` prop the string that corresponds to the selected option's `value` prop. The `onChange` callback can be used to update the value stored in state.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    value: 'Alaska'\n  }\n\n  handleSelect = (e, { id, value }) => {\n    this.setState({ value })\n  }\n\n  render () {\n    return (\n      <SimpleSelect\n        renderLabel=\"Controlled Select\"\n        assistiveText=\"Use arrow keys to navigate options.\"\n        value={this.state.value}\n        onChange={this.handleSelect}\n      >\n        {this.props.options.map((opt, index) => (\n          <SimpleSelect.Option\n            key={index}\n            id={`opt-${index}`}\n            value={opt}\n          >\n            { opt }\n          </SimpleSelect.Option>\n        ))}\n\n      </SimpleSelect>\n    )\n  }\n}\nrender(\n  <Example\n    options={[\n      'Alaska',\n      'American Samoa',\n      'Arizona',\n      'Arkansas',\n      'California',\n      'Colorado',\n      'Connecticut',\n      'Delaware',\n      'District Of Columbia',\n      'Federated States Of Micronesia',\n      'Florida',\n      'Georgia',\n      'Guam',\n      'Hawaii',\n      'Idaho',\n      'Illinois'\n    ]}\n  />\n)\n```\n\n### Groups\nLike a HTML `<select>` element, `SimpleSelect` supports option groups. `SimpleSelect.Group` only requires the `renderLabel` prop be provided.\n\n```javascript\n---\nexample: true\nrender: true\n---\n<SimpleSelect renderLabel=\"Select with Groups\">\n  <SimpleSelect.Group renderLabel=\"Group one\" key=\"grp1\">\n    <SimpleSelect.Option id=\"opt1\" value=\"option-1\">\n      Option one\n    </SimpleSelect.Option>\n  </SimpleSelect.Group>\n  <SimpleSelect.Group renderLabel=\"Group two\" key=\"grp2\">\n    <SimpleSelect.Option id=\"opt2\" value=\"option-2\">\n      Option two\n    </SimpleSelect.Option>\n    <SimpleSelect.Option id=\"opt3\" value=\"option-3\">\n      Option three\n    </SimpleSelect.Option>\n    <SimpleSelect.Option id=\"opt4\" value=\"option-4\">\n      Option four\n    </SimpleSelect.Option>\n  </SimpleSelect.Group>\n</SimpleSelect>\n```\n","describes":"SimpleSelect","order":"","relativePath":"packages/ui-simple-select/src/SimpleSelect/README.md","extension":".md","srcPath":"packages/ui-simple-select/src/SimpleSelect/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-simple-select/src/SimpleSelect/README.md","packageName":"@instructure/ui-simple-select","requirePath":"@instructure/ui-simple-select/lib/SimpleSelect/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-simple-select/src/SimpleSelect/README.md').default","esPath":"@instructure/ui-simple-select/es/SimpleSelect/README","id":"SimpleSelect__README","title":"SimpleSelect__README"},"Spinner__README":{"description":"\n### Choose from four sizes and add margin as needed\n\nThe `size` prop allows you to select from `x-small`, `small`, `medium` and `large`\n-sized spinners. Margin can be added as needed using the `margin` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <Spinner renderTitle=\"Loading\" size=\"x-small\" />\n  <Spinner renderTitle=\"Loading\" size=\"small\" margin=\"0 0 0 medium\" />\n  <Spinner renderTitle=\"Loading\" margin=\"0 0 0 medium\" />\n  <Spinner renderTitle=\"Loading\" size=\"large\" margin=\"0 0 0 medium\" />\n</div>\n```\n\n### Different color schemes for use with light and dark backgrounds\n\nSpinner provides an `inverse` color scheme designed to be used with\ndark backgrounds.\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<Spinner renderTitle=\"Loading\" variant=\"inverse\" />\n```\n\n### Screen reader support\n\nThe `renderTitle` prop is read to screen readers.\n\n```js\n---\nexample: true\n---\n<Spinner renderTitle={() => \"Hello world\"} />\n```\n","describes":"Spinner","order":"","relativePath":"packages/ui-spinner/src/Spinner/README.md","extension":".md","srcPath":"packages/ui-spinner/src/Spinner/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-spinner/src/Spinner/README.md","packageName":"@instructure/ui-spinner","requirePath":"@instructure/ui-spinner/lib/Spinner/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-spinner/src/Spinner/README.md').default","esPath":"@instructure/ui-spinner/es/Spinner/README","id":"Spinner__README","title":"Spinner__README"},"InlineSVG__README":{"description":"\nThe InlineSVG component renders an accessible SVG inline in the html document.\nInlineSVG accepts the `className` prop, which you can use to style your image.\n\n> If you are rendering a square SVG icon, use [SVGIcon](#SVGIcon), which provides\nprops and styles specific to icons, such as pre-defined sizes.\n\n### Setting a fixed `width` or `height`\n\nFor sizing, the component accepts `width` and `height` props, which are added\nto the SVG as attributes.\n\n```js\n---\nexample: true\n---\n<InlineSVG src={iconExample} width=\"3em\" height=\"3em\" />\n```\n\n### Sizing to fill container\n\nIf you want your SVG to expand to fill its container, set both `height`\nand `width` to `auto`.\n\n> Note that setting `inline` to `false` will cause the SVG to display block, which\ncan be useful for removing any extra space at the bottom of the image that results from\n`line-height` being inherited.\n\n```js\n---\nexample: true\n---\n<View\n  as=\"div\"\n  width=\"15rem\"\n  borderWidth=\"small\"\n>\n  <InlineSVG\n    width=\"auto\"\n    height=\"auto\"\n    inline={false}\n    viewBox=\"0 0 500 500\"\n  >\n    <circle cx=\"250\" cy=\"250\" r=\"250\" />\n  </InlineSVG>\n</View>\n```\n","describes":"InlineSVG","order":"","relativePath":"packages/ui-svg-images/src/InlineSVG/README.md","extension":".md","srcPath":"packages/ui-svg-images/src/InlineSVG/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-svg-images/src/InlineSVG/README.md","packageName":"@instructure/ui-svg-images","requirePath":"@instructure/ui-svg-images/lib/InlineSVG/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-svg-images/src/InlineSVG/README.md').default","esPath":"@instructure/ui-svg-images/es/InlineSVG/README","id":"InlineSVG__README","title":"InlineSVG__README"},"SVGIcon__README":{"description":"\nSVGIcon renders an accessible SVG icon inline in the HTML document.\n\nIn this example `iconExample` is the SVG source loaded as a string. You can use a webpack\nloader like [svg-inline-loader](https://github.com/webpack-contrib/svg-inline-loader) to import\nthe SVG source into your react component.\n\nThe SVGIcon component will add title and description elements for you if you set the `title`\nand `description` props. See the [InlineSVG](#InlineSVG) component for more props and\nexamples.\n\n_A11y note:_ By default the role is set to `presentation`. However, when the `title` prop is set, the `role`\nattribute is set to `img`. Include the `description` prop to further describe the image.\n\n### Default icon size\n\nBy default SVGIcon is set to a size of `1em`, so it will scale to match the `font-size` of\nits parent element.\n\n```js\n---\nexample: true\n---\n<div>\n  <div>I <SVGIcon src={iconExample} title=\"love\" /> New York!</div>\n  <Heading>I <SVGIcon src={iconExample} title=\"love\" /> New York!</Heading>\n</div>\n```\n\n### Changing icon size\nTo change the size of the icon, use one of the predefined options for the `size` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <SVGIcon src={iconExample} size=\"x-small\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"small\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"medium\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"x-large\" title=\"Icon Example\" />\n</div>\n```\n\nIf you need a size that is not offered via the `size` prop, adjust the\n`font-size` on the icon's parent element.\n\n```js\n---\nexample: true\n---\n<div style={{fontSize: '15rem', lineHeight: 1}}>\n  <SVGIcon src={iconExample} title=\"Icon Example\" />\n</div>\n```\n\n### Changing icon color\n\nBy default SVGIcon inherits the color of its parent element. However,\n[InlineSVG](#InlineSVG), the child component of SVGIcon, supports setting\nthe icon to one of the theme colors via the `color` property.\n\n> Setting `color` to `auto` will make SVGIcon not set\nany color fill. If you are setting the icon color via the `className` prop,\nuse this option &#151; otherwise the `color` value set by your class\ncould be overwritten.\n\n```js\n---\nexample: true\n---\n<div>\n  <SVGIcon color=\"primary\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"secondary\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"brand\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"success\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"warning\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"error\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"alert\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n</div>\n```\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<div>\n  <SVGIcon color=\"primary-inverse\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"secondary-inverse\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n</div>\n```\n\n### Changing icon rotation\n\nSVGIcon can be rotated by adding a `rotate` prop of 0 (default), 90, 180, or 270.\n\n```js\n---\nexample: true\n---\n<SVGIcon src={iconExample} size=\"medium\" rotate=\"90\" />\n```\n\n### Changing the icon's display property\n\nSVGIcon defaults to displaying `inline-block`, which can result in some space\nappearing beneath the icon, as it will inherit its parent's `line-height`.\nIn situations where this is undesirable, you can set `inline` to `false` to make\nthe icon display as a block-level element.\n\n```js\n---\nexample: true\n---\n<SVGIcon src={iconExample} size=\"medium\" inline={false} />\n```\n\n### Children\n\nThe SVGIcon component also accepts SVG content as jsx via the children prop. Note: if passing the path via the children prop, do not forget to include the **viewBox** attribute (see example).\n\n```js\n---\nexample: true\n---\n<SVGIcon size=\"small\" viewBox=\"0 0 2000 2000\">\n  <path d=\"M1692.48 910.647l-732.762 687.36-731.182-685.779c-154.616-156.875-154.616-412.122 0-568.997 74.542-75.558 173.704-117.233 279.304-117.233h.113c105.487 0 204.65 41.675 279.078 117.233l.113.113c74.767 75.783 116.103 176.865 116.103 284.385h112.941c0-107.52 41.224-208.602 116.104-284.498 74.428-75.558 173.59-117.233 279.19-117.233h.113c105.487 0 204.763 41.675 279.19 117.233 154.617 156.875 154.617 412.122 1.695 567.416m78.833-646.701c-95.887-97.355-223.737-150.89-359.718-150.89h-.113c-136.094 0-263.83 53.535-359.604 150.777-37.61 38.061-68.443 80.979-92.16 127.398-23.718-46.42-54.664-89.337-92.16-127.285-95.774-97.355-223.51-150.89-359.605-150.89h-.113c-135.981 0-263.83 53.535-359.83 150.89-197.648 200.696-197.648 526.983 1.694 729.035l810.014 759.868L1771.313 991.4c197.647-200.47 197.647-526.758 0-727.454\" stroke=\"none\" strokeWidth=\"1\" fillRule=\"evenodd\"/>\n</SVGIcon>\n```\n","describes":"SVGIcon","order":"","relativePath":"packages/ui-svg-images/src/SVGIcon/README.md","extension":".md","srcPath":"packages/ui-svg-images/src/SVGIcon/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-svg-images/src/SVGIcon/README.md","packageName":"@instructure/ui-svg-images","requirePath":"@instructure/ui-svg-images/lib/SVGIcon/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-svg-images/src/SVGIcon/README.md').default","esPath":"@instructure/ui-svg-images/es/SVGIcon/README","id":"SVGIcon__README","title":"SVGIcon__README"},"Table__README":{"description":"\n### Table layout\n\nIn stacked layout, column header is rendered in each cell, but not in row header.\n\n> If you are using [TruncateText](#TruncateText) (or CSS ellipsis) in your Table, set the\n> layout to `fixed` or `stacked`, or the text truncation will not work. To force long strings to break and not\n> exceed the bounds of the table cell, use `fixed` or `stacked`, together with the [Text](#Text) component:\n> `<Text wrap=\"break-word\">[long string]</Text>`.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    layout: 'auto',\n    hover: false,\n  }\n\n  handleChange = (field, value) => {\n    this.setState({\n      [field]: value,\n    })\n  }\n\n  renderOptions () {\n    const { layout, hover } = this.state\n\n    return (\n      <Flex alignItems=\"start\">\n        <Flex.Item margin=\"small\">\n          <RadioInputGroup\n            name=\"layout\"\n            description=\"layout\"\n            value={layout}\n            onChange={(e, value) => this.handleChange('layout', value)}\n          >\n            <RadioInput label=\"auto\" value=\"auto\" />\n            <RadioInput label=\"fixed\" value=\"fixed\" />\n            <RadioInput label=\"stacked\" value=\"stacked\" />\n          </RadioInputGroup>\n        </Flex.Item>\n        <Flex.Item margin=\"small\">\n          <Checkbox\n            label=\"hover\"\n            checked={hover}\n            onChange={(e, value) => this.handleChange('hover', !hover)}\n          />\n        </Flex.Item>\n      </Flex>\n    )\n  }\n\n  render() {\n    const { layout, hover } = this.state\n\n    return (\n      <div>\n        {this.renderOptions()}\n        <Table\n          caption='Top rated movies'\n          layout={layout}\n          hover={hover}\n        >\n          <Table.Head>\n            <Table.Row>\n              <Table.ColHeader id=\"Rank\">Rank</Table.ColHeader>\n              <Table.ColHeader id=\"Title\">Title</Table.ColHeader>\n              <Table.ColHeader id=\"Year\">Year</Table.ColHeader>\n              <Table.ColHeader id=\"Rating\">Rating</Table.ColHeader>\n            </Table.Row>\n          </Table.Head>\n          <Table.Body>\n            <Table.Row>\n              <Table.RowHeader>1</Table.RowHeader>\n              <Table.Cell>The Shawshank Redemption</Table.Cell>\n              <Table.Cell>1994</Table.Cell>\n              <Table.Cell>9.3</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.RowHeader>2</Table.RowHeader>\n              <Table.Cell>The Godfather</Table.Cell>\n              <Table.Cell>1972</Table.Cell>\n              <Table.Cell>9.2</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.RowHeader>3</Table.RowHeader>\n              <Table.Cell>The Godfather: Part II</Table.Cell>\n              <Table.Cell>1974</Table.Cell>\n              <Table.Cell>9.0</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Column width and alignment\n\nEach column (`ColHeader`) can have a custom width, and each cell (`ColHeader`, `RowHeader` or `Cell`)\ncan be aligned differently.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  render() {\n    const { headers, rows } = this.props\n\n    return (\n      <Responsive\n        query={{\n          small: { maxWidth: '40rem' },\n          large: { minWidth: '41rem' },\n        }}\n        props={{\n          small: { layout: 'stacked' },\n          large: { layout: 'fixed' },\n        }}\n      >\n        {({ layout }) => (\n          <div>\n            <Table\n              caption='Top rated movies'\n              layout={layout}\n            >\n              <Table.Head>\n                <Table.Row>\n                  {(headers || []).map(({ id, text, width, textAlign }) => (\n                    <Table.ColHeader\n                      key={id}\n                      id={id}\n                      width={width}\n                      textAlign={textAlign}\n                    >\n                      {text}\n                    </Table.ColHeader>\n                   ))}\n                </Table.Row>\n              </Table.Head>\n              <Table.Body>\n                {rows.map((row) => (\n                  <Table.Row key={row.id}>\n                    {headers.map(({ id, renderCell, textAlign }) => (\n                      <Table.Cell\n                        key={id}\n                        textAlign={layout === 'stacked' ? 'start' : textAlign}\n                      >\n                        {renderCell ? renderCell(row[id], layout) : row[id]}\n                      </Table.Cell>\n                    ))}\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </div>\n        )}\n      </Responsive>\n    )\n  }\n}\n\nconst renderSummary = (summary, layout) => (layout === 'stacked')\n  ? summary\n  : (\n    <TruncateText\n      truncate=\"word\"\n      ellipsis=\"...\"\n    >\n      {summary}\n    </TruncateText>\n  )\n\nrender(\n  <Example\n    headers={[\n      {\n        id: 'Title',\n        text: 'Title',\n        width: '25%',\n        textAlign: 'start',\n      },\n      {\n        id: 'Year',\n        text: 'Year',\n        width: '15%',\n        textAlign: 'start',\n      },\n      {\n        id: 'Summary',\n        text: 'Summary',\n        width: '40%',\n        renderCell: renderSummary,\n        textAlign: 'start',\n      },\n      {\n        id: 'BoxOffice',\n        text: 'Box Office',\n        width: '20%',\n        textAlign: 'end',\n      },\n    ]}\n    rows={[\n      {\n        id: '1',\n        Title: 'The Shawshank Redemption',\n        Year: 1994,\n        Summary: 'Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.',\n        BoxOffice: '$28,341,469',\n      },\n      {\n        id: '2',\n        Title: 'The Godfather',\n        Year: 1972,\n        Summary: 'The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.',\n        BoxOffice: '$133,698,921',\n      },\n      {\n        id: '3',\n        Title: 'The Godfather: Part II',\n        Year: 1974,\n        Summary: 'The early life and career of Vito Corleone in 1920s New York City is portrayed, while his son, Michael, expands and tightens his grip on the family crime syndicate.',\n        BoxOffice: '$47,542,841',\n      },\n    ]}\n  />\n)\n```\n\n### A sortable table using our Responsive component\n\nResize the window to see how column headers transition into a Select for sorting table content when the traditional Table Header is no longer clickable. The Table layout itself switches from the horizontal view to the stacked view allowing content to be viewed without horizontal scrolling. See [Responsive](#Responsive) for more examples.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass SortableTable extends React.Component {\n  constructor (props) {\n    super(props)\n    const { headers } = props\n\n    this.state = {\n      sortBy: headers && headers[0] && headers[0].id,\n      ascending: true,\n    }\n  }\n\n  handleSort = (event, { id }) => {\n    const { sortBy, ascending } = this.state\n\n    if (id === sortBy) {\n      this.setState({\n        ascending: !ascending,\n      })\n    } else {\n      this.setState({\n        sortBy: id,\n        ascending: true,\n      })\n    }\n  }\n\n  render() {\n    const { caption, headers, rows } = this.props\n    const { sortBy, ascending } = this.state\n    const direction = ascending ? 'ascending' : 'descending'\n    const sortedRows = [...(rows || [])].sort((a, b) => {\n      if (a[sortBy] < b[sortBy]) {\n        return -1\n      }\n      if (a[sortBy] > b[sortBy]) {\n        return 1\n      }\n      return 0\n    })\n\n    if (!ascending) {\n      sortedRows.reverse()\n    }\n    return (\n      <Responsive\n        query={{\n          small: { maxWidth: '40rem' },\n          large: { minWidth: '41rem' },\n        }}\n        props={{\n          small: { layout: 'stacked' },\n          large: { layout: 'auto' },\n        }}\n      >\n        {(props) => (\n          <div>\n            <Table\n              caption={`${caption}: sorted by ${sortBy} in ${direction} order`}\n              {...props}\n            >\n              <Table.Head renderSortLabel=\"Sort by\">\n                <Table.Row>\n                  {(headers || []).map(({ id, text }) => (\n                    <Table.ColHeader\n                      key={id}\n                      id={id}\n                      onRequestSort={this.handleSort}\n                      sortDirection={id === sortBy ? direction : 'none'}\n                    >\n                      {text}\n                    </Table.ColHeader>\n                   ))}\n                </Table.Row>\n              </Table.Head>\n              <Table.Body>\n                {sortedRows.map((row) => (\n                  <Table.Row key={row.id}>\n                    {headers.map(({ id, renderCell }) => (\n                      <Table.Cell key={id}>\n                        {renderCell ? renderCell(row[id]) : row[id]}\n                      </Table.Cell>\n                    ))}\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n            <Alert\n              liveRegion={() => document.getElementById('flash-messages')}\n              liveRegionPoliteness=\"polite\"\n              screenReaderOnly\n            >\n              {`Sorted by ${sortBy} in ${direction} order`}\n            </Alert>\n          </div>\n        )}\n      </Responsive>\n    )\n  }\n}\n\nrender(\n  <SortableTable\n    caption=\"Top rated movies\"\n    headers={[\n      {\n        id: 'Rank',\n        text: 'Rank',\n      },\n      {\n        id: 'Title',\n        text: 'Title',\n      },\n      {\n        id: 'Year',\n        text: 'Year',\n      },\n      {\n        id: 'Rating',\n        text: 'Rating',\n        renderCell: (rating) => rating.toFixed(1),\n      },\n    ]}\n    rows={[\n      {\n        id: '1',\n        Rank: 1,\n        Title: 'The Shawshank Redemption',\n        Year: 1994,\n        Rating: 9.3,\n      },\n      {\n        id: '2',\n        Rank: 2,\n        Title: 'The Godfather',\n        Year: 1972,\n        Rating: 9.2,\n      },\n      {\n        id: '3',\n        Rank: 3,\n        Title: 'The Godfather: Part II',\n        Year: 1974,\n        Rating: 9.0,\n      },\n      {\n        id: '4',\n        Rank: 4,\n        Title: 'The Dark Knight',\n        Year: 2008,\n        Rating: 9.0,\n      },\n      {\n        id: '5',\n        Rank: 5,\n        Title: '12 Angry Men',\n        Year: 1957,\n        Rating: 8.9,\n      },\n    ]}\n  />\n)\n```\n\n### A sortable table with selection and pagination\n\nThe composition order is important. `SelectableTable` -> `PaginatedTable` -> `SortableTable`, so\nthat selection does not re-paginate or re-sort the table, and pagination does not re-sort the table.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass SelectableTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: new Set()\n    }\n  }\n\n  handleSelectAll = (allSelected) => {\n    const { rowIds } = this.props\n\n    this.setState({\n      selected: allSelected ? new Set() : new Set(rowIds),\n    })\n  }\n\n  handleSelectRow = (rowSelected, rowId) => {\n    const { selected } = this.state\n    const copy = new Set(selected)\n    if (rowSelected) {\n      copy.delete(rowId)\n    } else {\n      copy.add(rowId)\n    }\n\n    this.setState({\n      selected: copy,\n    })\n  }\n\n  render() {\n    const { caption, headers, rows, onSort, sortBy, ascending, rowIds } = this.props\n    const { selected } = this.state\n    const allSelected = selected.size > 0 && rowIds.every((id) => selected.has(id))\n    const someSelected = selected.size > 0 && !allSelected\n    const direction = ascending ? 'ascending' : 'descending'\n\n    return (\n      <Responsive\n        query={{\n          small: { maxWidth: '40rem' },\n          large: { minWidth: '41rem' },\n        }}\n        props={{\n          small: { layout: 'stacked' },\n          large: { layout: 'auto' },\n        }}\n      >\n        {(props) => (\n          <div>\n            <View\n              as=\"div\"\n              padding=\"small\"\n              background=\"primary-inverse\"\n            >\n              {`${selected.size} of ${rowIds.length} selected`}\n            </View>\n            <Table\n              caption={`${caption}: sorted by ${sortBy} in ${direction} order`}\n              {...props}\n            >\n              <Table.Head renderSortLabel={<ScreenReaderContent>Sort by</ScreenReaderContent>}>\n                <Table.Row>\n                  <Table.ColHeader id=\"select\">\n                    <Checkbox\n                      label={<ScreenReaderContent>Select all</ScreenReaderContent>}\n                      onChange={() => this.handleSelectAll(allSelected)}\n                      checked={allSelected}\n                      indeterminate={someSelected}\n                    />\n                  </Table.ColHeader>\n                  {(headers || []).map(({ id, text, width }) => (\n                     <Table.ColHeader\n                       key={id}\n                       id={id}\n                       width={width}\n                       onRequestSort={onSort}\n                       sortDirection={id === sortBy ? direction : 'none'}\n                     >\n                       {text}\n                     </Table.ColHeader>\n                   ))}\n                </Table.Row>\n              </Table.Head>\n              <Table.Body>\n                {(rows || []).map((row) => {\n                  const rowSelected = selected.has(row.id)\n\n                  return (\n                    <Table.Row key={row.id}>\n                      <Table.RowHeader>\n                        <Checkbox\n                          label={<ScreenReaderContent>Select row</ScreenReaderContent>}\n                          onChange={() => this.handleSelectRow(rowSelected, row.id)}\n                          checked={rowSelected}\n                        />\n                      </Table.RowHeader>\n                      {(headers || []).map(({ id, renderCell }) => (\n                        <Table.Cell key={id}>\n                          {renderCell ? renderCell(row[id]) : row[id]}\n                        </Table.Cell>\n                      ))}\n                    </Table.Row>\n                  )\n                })}\n              </Table.Body>\n            </Table>\n            <Alert\n              liveRegion={() => document.getElementById('flash-messages')}\n              liveRegionPoliteness=\"polite\"\n              screenReaderOnly\n            >\n              {`${selected.size} of ${rowIds.length} selected`}\n            </Alert>\n          </div>\n        )}\n      </Responsive>\n    )\n  }\n}\n\nclass PaginatedTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 0,\n    }\n  }\n\n  handleClick = (page) => {\n    this.setState({\n      page,\n    })\n  }\n\n  handleSort = (event, options) => {\n    const { onSort } = this.props\n\n    this.setState({\n      page: 0,\n    })\n    onSort(event, options)\n  }\n\n  render() {\n    const { caption, headers, rows, sortBy, ascending, perPage } = this.props\n    const { page } = this.state\n    const startIndex = page * perPage\n    const slicedRows = rows.slice(startIndex, startIndex + perPage)\n    const pageCount = perPage && Math.ceil(rows.length / perPage)\n\n    return (\n      <div>\n        <SelectableTable\n          caption={caption}\n          headers={headers}\n          rows={slicedRows}\n          onSort={this.handleSort}\n          sortBy={sortBy}\n          ascending={ascending}\n          rowIds={rows.map((row) => row.id)}\n        />\n        {pageCount > 1 && (\n          <Pagination\n            variant='compact'\n            labelNext='Next Page'\n            labelPrev='Previous Page'\n            margin='large'\n          >\n            {Array.from(Array(pageCount), (item, index) => (\n              <Pagination.Page\n                key={index}\n                onClick={() => this.handleClick(index)}\n                current={index === page}\n              >\n                {index + 1}\n              </Pagination.Page>\n            ))}\n          </Pagination>\n        )}\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"polite\"\n          screenReaderOnly\n        >\n          {`Table page ${page + 1} of ${pageCount}`}\n        </Alert>\n      </div>\n    )\n  }\n}\n\nclass SortableTable extends React.Component {\n  constructor (props) {\n    super(props)\n    const { headers } = props\n\n    this.state = {\n      sortBy: headers && headers[0] && headers[0].id,\n      ascending: true,\n    }\n  }\n\n  handleSort = (event, { id }) => {\n    const { sortBy, ascending } = this.state\n\n    if (id === sortBy) {\n      this.setState({\n        ascending: !ascending,\n      })\n    } else {\n      this.setState({\n        sortBy: id,\n        ascending: true,\n      })\n    }\n  }\n\n  render() {\n    const { caption, headers, rows, perPage } = this.props\n    const { sortBy, ascending } = this.state\n    const sortedRows = [...rows].sort((a, b) => {\n      if (a[sortBy] < b[sortBy]) {\n        return -1\n      }\n      if (a[sortBy] > b[sortBy]) {\n        return 1\n      }\n      return 0\n    })\n\n    if (!ascending) {\n      sortedRows.reverse()\n    }\n    return (\n      <div>\n        <PaginatedTable\n          caption={caption}\n          headers={headers}\n          rows={sortedRows}\n          onSort={this.handleSort}\n          sortBy={sortBy}\n          ascending={ascending}\n          perPage={perPage}\n        />\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"polite\"\n          screenReaderOnly\n        >\n          {`Sorted by ${sortBy} in ${ascending ? 'ascending' : 'descending'} order`}\n        </Alert>\n      </div>\n    )\n  }\n}\n\nconst renderRating = (rating) => (\n  <Rating\n    label='Rating'\n    valueNow={rating}\n    valueMax={10}\n    iconCount={5}\n  />\n)\n\nrender(\n  <SortableTable\n    caption=\"Top rated movies\"\n    headers={[\n      {\n        id: 'Rank',\n        text: 'Rank',\n      },\n      {\n        id: 'Title',\n        text: 'Title',\n        width: '40%',\n      },\n      {\n        id: 'Year',\n        text: 'Year',\n      },\n      {\n        id: 'Rating',\n        text: 'Rating',\n        renderCell: renderRating,\n      },\n    ]}\n    rows={[\n      {\n        id: '1',\n        Rank: 1,\n        Title: 'The Shawshank Redemption',\n        Year: 1994,\n        Rating: 9.3,\n      },\n      {\n        id: '2',\n        Rank: 2,\n        Title: 'The Godfather',\n        Year: 1972,\n        Rating: 9.2,\n      },\n      {\n        id: '3',\n        Rank: 3,\n        Title: 'The Godfather: Part II',\n        Year: 1974,\n        Rating: 9.0,\n      },\n      {\n        id: '4',\n        Rank: 4,\n        Title: 'The Dark Knight',\n        Year: 2008,\n        Rating: 9.0,\n      },\n      {\n        id: '5',\n        Rank: 5,\n        Title: '12 Angry Men',\n        Year: 1957,\n        Rating: 8.9,\n      },\n    ]}\n    perPage={3}\n  />\n)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Column headers can be sortable</Figure.Item>\n    <Figure.Item>Use the <Link href=\"#CondensedButton\">CondensedButton</Link> and <strong>small</strong> inputs inside cells</Figure.Item>\n    <Figure.Item>Actions must relate to that row only</Figure.Item>\n    <Figure.Item>Use horizontal and vertical alignment that makes sense with the content</Figure.Item>\n    <Figure.Item>Start align US dates and apply i18n</Figure.Item>\n    <Figure.Item>Start align text and alphanumeric</Figure.Item>\n    <Figure.Item>Start align currency</Figure.Item>\n    <Figure.Item>End align quantities and decimals</Figure.Item>\n    <Figure.Item>Table headers should have the same start or end alignment as their column contents</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Center align more than 4 characters/numbers, choose start or end</Figure.Item>\n    <Figure.Item>Use to create a layout</Figure.Item>\n    <Figure.Item>Use zebra stripes</Figure.Item>\n    <Figure.Item>Bottom align ever</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Table","order":"","relativePath":"packages/ui-table/src/Table/README.md","extension":".md","srcPath":"packages/ui-table/src/Table/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-table/src/Table/README.md","packageName":"@instructure/ui-table","requirePath":"@instructure/ui-table/lib/Table/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-table/src/Table/README.md').default","esPath":"@instructure/ui-table/es/Table/README","id":"Table__README","title":"Table__README"},"Tabs__README":{"description":"\n`<Tabs />` is an accessible tabbed navigation component. Use the TAB key to focus the component and arrow keys to navigate between panels of content. To set a default panel that should be selected on initial render, set the `selected` prop on that `<Tabs.Panel>`.\n\nTo restrict the width of `<Tabs />`, use the `maxWidth` prop. Add space around the entire component using the `margin` prop. Adjust the padding around the panel content via `padding` (default is `small`) on each `<Tabs.Panel>`. Restrict the height of the panel using `minHeight` or `maxHeight`. Finally, switch the text alignment of the panel content with `textAlign`.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    selectedIndex: 0\n  }\n  handleTabChange = (event, { index, id }) => {\n    this.setState({\n      selectedIndex: index\n    })\n  }\n  render () {\n    const { selectedIndex } = this.state\n    return (\n      <Tabs\n        margin=\"large auto\"\n        padding=\"medium\"\n        onRequestTabChange={this.handleTabChange}\n      >\n        <Tabs.Panel\n          id=\"tabA\"\n          renderTitle=\"Tab A\"\n          textAlign=\"center\"\n          padding=\"large\"\n          iSelected={selectedIndex === 0}\n        >\n          <Button>Focus Me</Button>\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabB\" renderTitle=\"Disabled Tab\" isDisabled>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabC\" renderTitle=\"Tab C\" isSelected={selectedIndex === 2}>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabD\" renderTitle=\"Tab D\" isSelected={selectedIndex === 3}>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n      </Tabs>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Secondary Tabs\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    selectedIndex: 2\n  }\n  handleTabChange = (event, { index }) => {\n    this.setState({\n      selectedIndex: index\n    })\n  }\n  render () {\n    const { selectedIndex } = this.state\n    return (\n      <Tabs\n        variant=\"secondary\"\n        onRequestTabChange={this.handleTabChange}\n        minHeight=\"10rem\"\n        maxHeight=\"10rem\"\n      >\n        <Tabs.Panel renderTitle=\"First Tab\" isSelected={selectedIndex === 0}>\n          Hello World\n        </Tabs.Panel>\n        <Tabs.Panel renderTitle=\"Disabled Tab\" isDisabled>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n        <Tabs.Panel renderTitle=\"Third Tab\" isSelected={selectedIndex === 2}>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n        <Tabs.Panel renderTitle=\"Fourth Tab\" isSelected={selectedIndex === 3}>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n      </Tabs>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Handling Tab overflow\n\nBy default, `<Tabs />` will stack each individual `<Tab />` if there isn't enough horizontal\nspace to display them all inline. For a more compact tab navigation, set `tabOverflow` to\n`scroll`, which allows the Tabs to scroll horizontally.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    selectedIndex: 4\n  }\n  handleTabChange = (event, { index, id }) => {\n    this.setState({\n      selectedIndex: index\n    })\n  }\n  render () {\n    const { selectedIndex } = this.state\n    return (\n      <Tabs\n        margin=\"large auto\"\n        padding=\"medium\"\n        onRequestTabChange={this.handleTabChange}\n        tabOverflow=\"scroll\"\n        maxWidth=\"20rem\"\n      >\n        <Tabs.Panel id=\"tabA\" renderTitle=\"Tab A\" isSelected={selectedIndex === 0}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabB\" renderTitle=\"Tab B\" isSelected={selectedIndex === 1}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabC\" renderTitle=\"Tab C\" isSelected={selectedIndex === 2}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabD\" renderTitle=\"Tab D\" isSelected={selectedIndex === 3}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabE\" renderTitle=\"Tab E\" isSelected={selectedIndex === 4}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabF\" renderTitle=\"Tab F\" isSelected={selectedIndex === 5}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabG\" renderTitle=\"Tab G\" isSelected={selectedIndex === 6}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n      </Tabs>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Title should be a single row above content</Figure.Item>\n    <Figure.Item>TabButton content should be succinct, preferably one word</Figure.Item>\n    <Figure.Item>Use title case</Figure.Item>\n    <Figure.Item>Use default variant when a single Tabs component exists on the page</Figure.Item>\n    <Figure.Item>Ensure each Tablist.Panel content is mutually exclusive of the others’</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Exceed 20 characters including spaces for the title</Figure.Item>\n    <Figure.Item>Exceed 5 tabs</Figure.Item>\n    <Figure.Item>Use avatars, pills, icons, etc in the TabButton</Figure.Item>\n    <Figure.Item>Use `tabOverflow=\"scroll\"` with `secondary` Tabs</Figure.Item>\n    <Figure.Item>Nest tabbed content within a tab</Figure.Item>\n    <Figure.Item>Align tabs to the center of the page</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Tabs","order":"","relativePath":"packages/ui-tabs/src/Tabs/README.md","extension":".md","srcPath":"packages/ui-tabs/src/Tabs/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tabs/src/Tabs/README.md","packageName":"@instructure/ui-tabs","requirePath":"@instructure/ui-tabs/lib/Tabs/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tabs/src/Tabs/README.md').default","esPath":"@instructure/ui-tabs/es/Tabs/README","id":"Tabs__README","title":"Tabs__README"},"Tag__README":{"description":"\nUse `<Tag />` to represent a category or group in a form.\n\n```js\n---\nexample: true\n---\n<Tag text=\"Static\" margin=\"0 xx-small 0 0\" />\n```\n\n### Dismissible\n\nWhen the `dismissible` prop is added to a clickable Tag, the button\nrenders an X/close icon (the Tag should be dismissed via the `onClick`\nprop).\n\n```js\n---\nexample: true\n---\n<Tag\n  text={\n    <AccessibleContent alt=\"Remove dismissible tag\">\n      Dismissible tag\n    </AccessibleContent>\n  }\n  dismissible\n  margin=\"0 xx-small 0 0\"\n  onClick={function () {\n    alert(\"This Tag was dismissed\")\n  }}\n/>\n```\n\n### Disabled\n\nA `disabled` Tag.\n\n```js\n---\nexample: true\n---\n<Tag\n  text=\"Dismissible Disabled\"\n  dismissible\n  disabled\n  margin=\"0 xx-small 0 0\"\n  onClick={function () {\n    alert(\"This Tag was dismissed. This shouldn't happen\")\n  }}\n/>\n```\n\n### Sizes\n\n`medium` is the default Tag size.\n\n```js\n---\nexample: true\n---\n<div>\n  <Tag text=\"Small\" size=\"small\" margin=\"0 xx-small 0 0\" />\n  <Tag text=\"Medium\" margin=\"0 xx-small 0 0\" />\n  <Tag text=\"Large\" size=\"large\" margin=\"0 xx-small 0 0\" />\n</div>\n```\n\n### Max-width\n\n```js\n---\nexample: true\n---\n<Tag\n  text=\"Long string of text designed to trigger overflow\"\n/>\n```\n\n### Inline variant\n\nThis variant is designed to look similar to the surrounding text.\n\n```js\n---\nexample: true\n---\n<p>\n  This is an\n  <Tag\n    dismissible\n    onClick={() => alert('Tag dismissed')}\n    size=\"large\"\n    text={<AccessibleContent alt=\"Remove 'inline'\">\n      inline\n    </AccessibleContent>}\n    variant=\"inline\"\n  />\n  tag.\n</p>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>When implementing dismissable tags, be sure to add AccessibleContent to clarify that the tag is dismissible to screen readers</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Tag","order":"","relativePath":"packages/ui-tag/src/Tag/README.md","extension":".md","srcPath":"packages/ui-tag/src/Tag/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tag/src/Tag/README.md","packageName":"@instructure/ui-tag","requirePath":"@instructure/ui-tag/lib/Tag/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tag/src/Tag/README.md').default","esPath":"@instructure/ui-tag/es/Tag/README","id":"Tag__README","title":"Tag__README"},"Text__README":{"description":"\nA component for styling textual content\n\n### Font sizes\n\n```js\n---\nexample: true\n---\n<div>\n  <Text size=\"x-small\">I&#39;m extra small</Text><br/>\n  <Text size=\"small\">I&#39;m small</Text><br/>\n  <Text>I&#39;m medium</Text><br/>\n  <Text size=\"large\">I&#39;m large</Text><br/>\n  <Text size=\"x-large\">I&#39;m extra large</Text><br/>\n  <Text size=\"xx-large\">I&#39;m extra extra large</Text>\n</div>\n```\n\n### Font weights\n\n```js\n---\nexample: true\n---\n<div>\n  <Text weight=\"light\">I&#39;m light text</Text><br/>\n  <Text>I&#39;m normal text</Text><br/>\n  <Text weight=\"bold\">I&#39;m bold text</Text>\n</div>\n```\n\n### Font styles\n\n```js\n---\nexample: true\n---\n<div>\n  <Text fontStyle=\"italic\">I&#39;m italic text</Text><br/>\n  <Text>I&#39;m normal text</Text>\n</div>\n```\n\n### Line heights\n\n```js\n---\nexample: true\n---\n<div>\n  <Text lineHeight=\"fit\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text>\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text lineHeight=\"condensed\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text lineHeight=\"double\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n</div>\n```\n\n### Text transform\n\n```js\n---\nexample: true\n---\n<div>\n  <Text transform=\"capitalize\">I&#39;m capitalized text</Text><br/>\n  <Text transform=\"uppercase\">I&#39;m uppercase text</Text><br/>\n  <Text transform=\"lowercase\">I&#39;M LOWERCASE TEXT</Text><br/>\n</div>\n```\n\n### Letter-spacing\n\n```js\n---\nexample: true\n---\n<div>\n  <Text letterSpacing=\"normal\">I&#39;m normal text</Text><br/>\n  <Text letterSpacing=\"condensed\">I&#39;m condensed text</Text><br/>\n  <Text letterSpacing=\"expanded\" transform=\"uppercase\">I&#39;m expanded uppercase text</Text><br/>\n</div>\n```\n\n### Wrap\n\nUse `wrap=\"break-word\"` to force breaking in long strings that would otherwise\nexceed the bounds of their containers.\n\n```js\n---\nexample: true\n---\n<div>\n  <View as=\"div\" maxWidth=\"300px\" margin=\"none none small\" debug>\n    <Text>\n      superlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstring\n    </Text>\n  </View>\n  <View as=\"div\" maxWidth=\"300px\" debug>\n    <Text wrap=\"break-word\">\n      superlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstring\n    </Text>\n  </View>\n</div>\n```\n\n### Text colors\n\n```js\n---\nexample: true\n---\n<div>\n  <Text color=\"primary\">I&#39;m primary text</Text><br/>\n  <Text color=\"secondary\">I&#39;m secondary text</Text><br/>\n  <Text color=\"brand\">I&#39;m brand text</Text><br />\n  <Text color=\"success\">I&#39;m success text</Text><br/>\n  <Text color=\"warning\">I&#39;m warning text</Text><br/>\n  <Text color=\"danger\">I&#39;m danger text</Text><br />\n  <Text color=\"alert\">I&#39;m alert text</Text>\n</div>\n```\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<div>\n  <Text color=\"primary-inverse\">I&#39;m primary text</Text><br/>\n  <Text color=\"secondary-inverse\">I&#39;m secondary text</Text>\n</div>\n```\n\n### Element styles\n\n```js\n---\nexample: true\n---\n<Text>\n  <b>bold </b>\n  <strong>strong </strong>\n  <i>italic </i>\n  <em>emphasis </em>\n  <pre>preformatted</pre>\n  <code>code</code>\n  This<sup>is</sup> some<sub>text</sub>.\n</Text>\n```\n","describes":"Text","order":"","relativePath":"packages/ui-text/src/Text/README.md","extension":".md","srcPath":"packages/ui-text/src/Text/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text/src/Text/README.md","packageName":"@instructure/ui-text","requirePath":"@instructure/ui-text/lib/Text/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text/src/Text/README.md').default","esPath":"@instructure/ui-text/es/Text/README","id":"Text__README","title":"Text__README"},"TextArea__README":{"description":"\nTextArea renders a standard HTML `textarea` element. By default, TextArea will\nresize to fit its content. Use the `maxHeight` property to set a limit on the\ncomponent's height.\n\n```js\n---\nexample: true\n---\n<div>\n  <TextArea\n    label=\"Enter/delete text to see TextArea resize\"\n  />\n  <br />\n  <TextArea\n    label=\"I can't go any higher than 10rem (160px)\"\n    maxHeight=\"10rem\"\n  />\n</div>\n```\n\nTo allow the user to manually resize TextArea (in supported browsers), use the\n`resize` property.\n\n```js\n---\nexample: true\n---\n<TextArea label=\"Description\" resize=\"vertical\" />\n```\n\nA `TextArea` with errors:\n\n```js\n---\nexample: true\n---\n<TextArea messages={[{ text: 'Invalid description', type: 'error' }]} label=\"Description\" />\n```\n\nA disabled `TextArea`:\n\n```js\n---\nexample: true\n---\n<TextArea label=\"Description\" disabled />\n```\n\nA `TextArea` with a screenreader only label:\n\n```js\n---\nexample: true\n---\n<TextArea\n  label={<ScreenReaderContent>Description</ScreenReaderContent>}\n  placeholder=\"describe something\"\n/>\n```\n\nAn inline `TextArea` with a fixed width, initial height and maxHeight.\n\n```js\n---\nexample: true\n---\n<div style={{ display: 'flex', alignItems: 'center' }}>\n  <TextArea\n    label={<ScreenReaderContent>Label</ScreenReaderContent>}\n    inline\n    width=\"10em\"\n    height=\"10em\"\n    maxHeight=\"250px\"\n  />\n</div>\n```\n\nA 'controlled' TextArea:\n\n```js\n---\nrender: false\nexample: true\n---\n\nclass Example extends React.Component {\n  state = { description: 'Hello World' };\n\n  handleChange = (e) => this.setState({ description: e.target.value});\n\n  render () {\n    return (\n      <TextArea\n        label=\"Description\"\n        value={this.state.description}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nrender(<Example/>)\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Align text to the left</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Repeat label text if using placeholder text</Figure.Item>\n    <Figure.Item>Use for rich text editing</Figure.Item>\n    <Figure.Item>Allow resizing of the TextArea to break the layout of a page</Figure.Item>\n    <Figure.Item>Place labels to the right of the TextArea</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"TextArea","order":"","relativePath":"packages/ui-text-area/src/TextArea/README.md","extension":".md","srcPath":"packages/ui-text-area/src/TextArea/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text-area/src/TextArea/README.md","packageName":"@instructure/ui-text-area","requirePath":"@instructure/ui-text-area/lib/TextArea/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text-area/src/TextArea/README.md').default","esPath":"@instructure/ui-text-area/es/TextArea/README","id":"TextArea__README","title":"TextArea__README"},"TextInput__README":{"description":"\n`TextInput` is a custom styled `input` element. It supports the following types: `text` (default) / `email` / `url` / `tel` / `search` / `password`\n\n### Uncontrolled TextInput\n\n```js\n---\nexample: true\n---\n<TextInput\n  renderLabel=\"Name\"\n  placeholder=\"Doe, John Doe\"\n  onChange={(event, value) => { console.log(value) }}\n/>\n```\n\n#### Controlled TextInput\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass ControlledTextInputExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: 'Supertramp',\n      disabled: false,\n      readOnly: false,\n      inline: false,\n      messages: null\n    }\n  }\n\n  handleChange = (e, value) => this.setState({\n    value,\n    messages: null\n  })\n\n  handleBlur = (e) => {\n    if (this.state.value === 'Supertramp') {\n      this.setState({\n        messages: [{ text: `Come on. There's no way your favorite band is really Supertramp.`, type: 'error' }]\n      })\n    }\n  }\n\n  toggleDisabled = (e) => this.setState(({ disabled: !this.state.disabled }))\n  toggleReadOnly = (e) => this.setState(({ readOnly: !this.state.readOnly }))\n  toggleInline = (e) => this.setState(({ inline: !this.state.inline }))\n\n  render () {\n    return (\n      <div>\n        <FormFieldGroup\n          description=\"Controlled TextInput state\"\n          layout=\"columns\"\n        >\n          <Checkbox\n            checked={this.state.disabled}\n            label=\"disabled\"\n            onChange={this.toggleDisabled}\n          />\n          <Checkbox\n            checked={this.state.readOnly}\n            label=\"readOnly\"\n            onChange={this.toggleReadOnly}\n          />\n          <Checkbox\n            checked={this.state.inline}\n            label=\"inline display\"\n            onChange={this.toggleInline}\n          />\n        </FormFieldGroup>\n        <View display=\"block\" margin=\"medium 0 0\">\n          <TextInput\n            renderLabel=\"What is your favorite band?\"\n            display={this.state.inline ? 'inline-block' : null}\n            value={this.state.value}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            interaction={this.state.disabled\n              ? 'disabled'\n              : this.state.readOnly ? 'readonly' : 'enabled'\n            }\n            messages={this.state.messages}\n            renderAfterInput={<SVGIcon src={iconExample} />}\n          />\n        </View>\n      </div>\n    )\n  }\n}\n\nrender(<ControlledTextInputExample />)\n```\n\n### Prepending and appending content\n\nTextInput accepts focusable and non-focusable content before and/or after\nthe input text. A common use case is adding an icon or avatar to the input.\nFocusable content will be focused separately from the input itself.\n\n> Note: For any content larger than an icon or small avatar (multiple [Tags](#Tag), for example),\n> use the `renderBeforeInput` property.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass ExtraContentExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: ''\n    }\n  }\n\n  handleChange = (e, value) => this.setState({ value })\n\n  render () {\n    return (\n      <View as=\"div\">\n        <TextInput\n          renderLabel=\"What are Paula Panda's favorite ice cream flavors?\"\n          value={this.state.value}\n          onChange={this.handleChange}\n          renderBeforeInput={\n            <View display=\"block\" padding=\"xxx-small 0\">\n              {\n                (this.state.value !== '') &&\n                <Tag\n                  text={this.state.value}\n                  margin=\"xxx-small xxx-small xxx-small none\"\n                  onClick={function () {\n                    console.log(this.state.value)\n                  }}\n                />\n              }\n              <Tag\n                text=\"Rocky road\"\n                margin=\"xxx-small xxx-small xxx-small none\"\n                onClick={function () {\n                  console.log('Rocky road')\n                }}\n              />\n              <Tag\n                text=\"Vanilla\"\n                margin=\"xxx-small xxx-small xxx-small none\"\n                onClick={function () {\n                  console.log('Vanilla')\n                }}\n              />\n              <Tag\n                text=\"Coffee\"\n                margin=\"xxx-small xxx-small xxx-small none\"\n                onClick={function () {\n                  console.log('Coffee')\n                }}\n              />\n              <Tag\n                text=\"Strawberry\"\n                margin=\"xxx-small xxx-small xxx-small none\"\n                onClick={function () {\n                  console.log('Strawberry')\n                }}\n              />\n            </View>\n          }\n          renderAfterInput={() => <Avatar name=\"Paula Panda\" src={avatarSquare} size=\"x-small\" />}\n        />\n      </View>\n    )\n  }\n}\n\nrender(<ExtraContentExample />)\n```\n\n### Setting width and display\n\nTo make the component display inline, set the `display` property to `inline-block`. To constrain the\nsize of the component, use `width`.\n\n```js\n---\nexample: true\n---\n<div>\n  <TextInput\n    renderLabel={<ScreenReaderContent>I am a hidden label</ScreenReaderContent>}\n    display=\"inline-block\"\n    width=\"4rem\"\n  />\n  &nbsp;\n  <Button>I Am Inline Content</Button>\n</div>\n```\n\n### `shouldNotWrap`\n\nIf there is content rendered before the input (via `renderBeforeInput`), the\ninput will wrap to a new line when the browser determines it does\nnot have enough room (for most browsers, this is 20 characters). Wrapping allows\nthe component to accommodate large lists of [Tags](#Tag), for example.\n\nIf not desired, this behavior can be overridden by setting the `shouldNotWrap`\nboolean prop to `true`.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" maxWidth=\"250px\">\n  <TextInput\n    renderLabel=\"I will not wrap\"\n    renderBeforeInput={<IconSearchLine inline={false} />}\n    renderAfterInput={<Avatar name=\"Paula Panda\" src={avatarSquare} size=\"x-small\" />}\n    shouldNotWrap\n  />\n  <View as=\"div\" margin=\"medium none none\">\n    <TextInput\n      renderLabel=\"I will wrap\"\n      renderBeforeInput={\n        <div>\n          <Tag\n            text=\"English 101\"\n            margin=\"xx-small xxx-small\"\n          />\n          <Tag\n            text=\"History 205\"\n            margin=\"xx-small xxx-small\"\n          />\n        </div>\n      }\n      renderAfterInput={<Avatar name=\"Paula Panda\" src={avatarSquare} size=\"x-small\" />}\n    />\n  </View>\n</View>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Left align text (exceptions may apply)</Figure.Item>\n    <Figure.Item>Place labels on top or to the left (inline)</Figure.Item>\n    <Figure.Item>Make placeholder text different than the label</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Place labels to the right of the input</Figure.Item>\n    <Figure.Item>Place inputs in the middle of sentences or phrases</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"TextInput","order":"","relativePath":"packages/ui-text-input/src/TextInput/README.md","extension":".md","srcPath":"packages/ui-text-input/src/TextInput/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text-input/src/TextInput/README.md","packageName":"@instructure/ui-text-input","requirePath":"@instructure/ui-text-input/lib/TextInput/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text-input/src/TextInput/README.md').default","esPath":"@instructure/ui-text-input/es/TextInput/README","id":"TextInput__README","title":"TextInput__README"},"TimeSelect__README":{"description":"\n`TimeSelect` component is a higher level abstraction of [Select](#Select) specifically for selecting time values. The list of possible values can be configured via the component's props. If you need to select times and dates, be sure to check out the documentation around [Time and Date patterns](#TimeDate).\n\n### Uncontrolled\nFor the most basic implementations, `TimeSelect` can be uncontrolled. If desired, the `defaultValue` prop can be used to set the initial selection.\n\n```javascript\n---\nexample: true\nrender: true\n---\n<TimeSelect\n  renderLabel=\"Choose a time\"\n  onChange={(e, { value }) => console.log(value)}\n  // defaultValue={new Date().toISOString()}\n/>\n```\n\n### Controlled\nTo use `TimeSelect` controlled, simply provide the `value` prop an ISO string. The `onChange` callback provides the ISO value of the corresponding option that was selected. Use this value to update the state.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    value: '2020-05-18T23:59:00'\n  }\n\n  handleChange = (e, { value }) => {\n    this.setState({ value })\n  }\n\n  render () {\n    return (\n      <TimeSelect\n        renderLabel=\"Choose a time\"\n        placeholder=\"e.g., 4:00:00 PM\"\n        value={this.state.value}\n        step={15}\n        format=\"LTS\"\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\nrender(\n  <Example />\n)\n```\n\n### Guidelines\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use a default value of 11:59 pm for implementations that have to do with due dates</Figure.Item>\n  </Figure>\n</Guidelines>\n```","describes":"TimeSelect","order":"","relativePath":"packages/ui-time-select/src/TimeSelect/README.md","extension":".md","srcPath":"packages/ui-time-select/src/TimeSelect/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-time-select/src/TimeSelect/README.md","packageName":"@instructure/ui-time-select","requirePath":"@instructure/ui-time-select/lib/TimeSelect/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-time-select/src/TimeSelect/README.md').default","esPath":"@instructure/ui-time-select/es/TimeSelect/README","id":"TimeSelect__README","title":"TimeSelect__README"},"ToggleDetails__README":{"description":"\nThe ToggleDetails component can be used to show/hide content in response to user action.\n\nBy default, ToggleDetails content is hidden. To override, pass in the `defaultExpanded` prop.\n\n```js\n---\nexample: true\n---\n<ToggleDetails\n  summary=\"Click to hide me!\"\n  defaultExpanded\n>\n  <Text weight=\"bold\">I am expanded!</Text> {lorem.paragraph()}\n</ToggleDetails>\n```\n\nToggleDetails can be controlled:\n\n```js\n---\nexample: true\nrender: false\n---\n\nclass Example extends React.Component {\n  state = {\n    expanded: true\n  };\n\n  handleChange = (event, expanded) => this.setState({ expanded });\n\n  handleToggle = () => this.setState({ expanded: !this.state.expanded });\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.handleToggle}>\n          This Button {this.state.expanded ? 'Collapses' : 'Expands'}\n        </Button>\n        <br />\n        <br />\n        <ToggleDetails\n          summary=\"Click to hide me!\"\n          expanded={this.state.expanded}\n          onToggle={this.handleChange}\n        >\n          <Text weight=\"bold\">I am controlled and expanded!</Text> {lorem.paragraph()}\n        </ToggleDetails>\n      </div>\n      )\n  }\n}\n\nrender(<Example />)\n```\n\nSetting ToggleDetails to `filled` will make the toggle use a full-width [Button](#Button) component.\n\n```js\n---\nexample: true\n---\n<ToggleDetails\n  variant=\"filled\"\n  summary=\"Click to expand me!\"\n>\n  {lorem.paragraph()}\n</ToggleDetails>\n```\n\n### Icon size / summary text formatting\n\nIcon size can be adjusted using the `size` prop with small, medium, and large options.\n\nThe `summary` prop accepts any node, allowing you to format the summary text as\nyou see fit. In these examples, we are formatting it with the\n[Text](#Text) component.\n\n```js\n---\nexample: true\n---\n<div>\n  <ToggleDetails\n    size=\"small\"\n    summary=\"Small icon\"\n  >\n    {lorem.paragraph()}\n  </ToggleDetails>\n\n  <br />\n\n  <ToggleDetails summary=\"Medium icon\">\n    {lorem.paragraph()}\n  </ToggleDetails>\n\n  <br />\n\n  <ToggleDetails\n    size=\"large\"\n    summary=\"Large icon\"\n  >\n    {lorem.paragraph()}\n  </ToggleDetails>\n</div>\n```\n\n### Icon positioning and block display\n\nThe `iconPosition` prop determines if the icon comes before or after the summary.\n\nWhen the `fluidWidth` prop is set, the toggle fills the width of its\ncontainer.\n\n```js\n---\nexample: true\n---\n<ToggleDetails\n  summary=\"Block display\"\n  iconPosition=\"end\"\n  defaultExpanded\n  fluidWidth\n>\n  <Text>\n    {lorem.paragraph()}\n  </Text>\n</ToggleDetails>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use ToggleDetails when descriptive text is longer than a short phrase</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Nest ToggleDetails within another ToggleDetails</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"ToggleDetails","order":"","relativePath":"packages/ui-toggle-details/src/ToggleDetails/README.md","extension":".md","srcPath":"packages/ui-toggle-details/src/ToggleDetails/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-toggle-details/src/ToggleDetails/README.md","packageName":"@instructure/ui-toggle-details","requirePath":"@instructure/ui-toggle-details/lib/ToggleDetails/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-toggle-details/src/ToggleDetails/README.md').default","esPath":"@instructure/ui-toggle-details/es/ToggleDetails/README","id":"ToggleDetails__README","title":"ToggleDetails__README"},"ToggleGroup__README":{"description":"\nPerforms the same function as [`ToggleDetails`](#ToggleDetails), but with the summary separated from the\ntoggle button, and built in padding and borders around the summary and main content area.\n\n### Basic example\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n  background=\"default\"\n>\n  <View display=\"block\" padding=\"small\">Here is the expanded content</View>\n</ToggleGroup>\n```\n\n### More detailed examples\n\n#### `defaultExpanded` to make the component `expanded` when it renders\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n  defaultExpanded\n>\n  <View display=\"block\" padding=\"small\">This content is expanded when the component renders</View>\n</ToggleGroup>\n```\n\n#### Passing in your own `icon` and `iconExpanded`\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n  iconExpanded={IconXSolid}\n  icon={IconPlusSolid}\n>\n  <View display=\"block\" padding=\"small\">Here is the expanded content</View>\n</ToggleGroup>\n```\n#### Disable default transition of details\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  transition={false}\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n>\n  <View display=\"block\" padding=\"small\">This content will not fade in</View>\n</ToggleGroup>\n```\n\n#### Disable default border if you want to nest ToggleGroups\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  defaultExpanded\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary={<Heading level=\"h3\">Parent ToggleGroup</Heading>}\n>\n  <ToggleGroup\n    size=\"small\"\n    toggleLabel=\"This is the toggle button label for screenreaders\"\n    summary=\"I am nested inside a parent ToggleGroup\"\n    border={false}\n  >\n    <View display=\"block\" padding=\"small\">\n      This is the details section of the nested ToggleGroup\n    </View>\n  </ToggleGroup>\n</ToggleGroup>\n```\n","describes":"ToggleGroup","order":"","relativePath":"packages/ui-toggle-details/src/ToggleGroup/README.md","extension":".md","srcPath":"packages/ui-toggle-details/src/ToggleGroup/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-toggle-details/src/ToggleGroup/README.md","packageName":"@instructure/ui-toggle-details","requirePath":"@instructure/ui-toggle-details/lib/ToggleGroup/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-toggle-details/src/ToggleGroup/README.md').default","esPath":"@instructure/ui-toggle-details/es/ToggleGroup/README","id":"ToggleGroup__README","title":"ToggleGroup__README"},"Tooltip__README":{"description":"\nTooltips are small text-only contextual overlays that are triggered by hover/focus. Use anywhere additional explanation might be needed but space is limited on the triggering element.\n\n> ### What about 'focusable' elements?\n>\n> Content provided to the `renderTip` prop **should not contain any focusable elements**. If you'd like to do\n> that you should use the [Popover](#Popover) component and handle focus management yourself or\n> consider using a [Modal](#Modal) or a [Tray](#Tray) as those will work better on smaller screens.\n\n#### Uncontrolled Tooltips\n\n```js\n---\nexample: true\n---\n<div>\n  <p>\n    <Tooltip\n      renderTip=\"Hello. I'm a tool tip\"\n      as={Button}\n      onShowContent={() => console.log('showing')}\n      onHideContent={() => console.log('hidden')}\n    >\n      Hover or focus me\n    </Tooltip>\n  </p>\n  <p>\n    <Tooltip\n      color=\"primary-inverse\"\n      renderTip=\"Hello. I'm a tool tip\"\n      placement=\"bottom\"\n      offsetX=\"5px\"\n    >\n      <TextInput\n        display=\"inline-block\"\n        renderLabel=\"Enter some text\"\n      />\n    </Tooltip>\n  </p>\n  <p>\n    <Tooltip\n      renderTip=\"Hello. I'm a tool tip\"\n      placement=\"start\"\n      on={['click', 'hover', 'focus']}\n    >\n      <IconButton\n        renderIcon={IconInfoLine}\n        withBackground={false}\n        withBorder={false}\n        screenReaderLabel=\"Toggle Tooltip\"\n      />\n    </Tooltip>\n  </p>\n</div>\n```\n\n#### Controlled Tooltips\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isShowingContent: false\n    }\n  }\n\n  render () {\n    return (\n      <>\n        <p>\n        <Tooltip\n          renderTip=\"Hello. I'm a tool tip\"\n          isShowingContent={this.state.isShowingContent}\n          onShowContent={(e) => {\n            console.log(\"expecting to show tooltip\")\n          }}\n          onHideContent={(e) => {\n            console.log(\"expecting to hide tooltip\")\n          }}\n        >\n          <Link href=\"#\">This link has a tooltip</Link>\n        </Tooltip>\n        </p>\n        <Checkbox\n          label=\"show tooltip?\"\n          variant=\"toggle\"\n          value=\"toggled\"\n          onChange={(event) => {\n            this.setState({isShowingContent: event.target.checked})\n          }}\n        />\n    </>\n  )\n  }\n}\n\nrender(<Example />)\n\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use on icons with no labels</Figure.Item>\n    <Figure.Item>Use on condensed dates</Figure.Item>\n    <Figure.Item>Use on table content if items are getting truncated</Figure.Item>\n    <Figure.Item>Use to provide more specific data (ie. user hovers over a chart element, Tooltip shows precise info)</Figure.Item>\n    <Figure.Item>Try to stay within 50 characters</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Repeat the exact information contained on the triggering element</Figure.Item>\n    <Figure.Item>Contain links or focusable items</Figure.Item>\n    <Figure.Item>Use icons inside Tooltips</Figure.Item>\n    <Figure.Item>Use in place of a <Link href=\"/#Popover\">Popover</Link> or <Link href=\"/#Menu\">Menu</Link></Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Tooltip","order":"","relativePath":"packages/ui-tooltip/src/Tooltip/README.md","extension":".md","srcPath":"packages/ui-tooltip/src/Tooltip/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tooltip/src/Tooltip/README.md","packageName":"@instructure/ui-tooltip","requirePath":"@instructure/ui-tooltip/lib/Tooltip/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tooltip/src/Tooltip/README.md').default","esPath":"@instructure/ui-tooltip/es/Tooltip/README","id":"Tooltip__README","title":"Tooltip__README"},"Tray__README":{"description":"\nThe Tray is an actionable container that is triggered by click and does not need to be connected to the element that triggered it. The Tray is on the same hierarchy as the Popover but contains more content. The Tray slides out from the top/bottom/start/end of the viewport.\n\n>Note that the `size` property only applies when the Tray is positioned at `start` or `end` and defines the width of the Tray.\n\n```js\n---\nrender: false\nexample: true\n---\nconst FPO = lorem.paragraph()\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      open: false\n    }\n  }\n\n  hideTray = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  renderCloseButton () {\n    return (\n      <Flex>\n        <Flex.Item shouldGrow shouldShrink>\n          <Heading>Hello</Heading>\n        </Flex.Item>\n        <Flex.Item>\n          <CloseButton\n            placement=\"end\"\n            offset=\"small\"\n            screenReaderLabel=\"Close\"\n            onClick={this.hideTray}\n          />\n        </Flex.Item>\n      </Flex>\n    )\n  }\n\n  render () {\n    return (\n      <div style={{ padding: '0 0 16rem 0', margin: '0 auto' }}>\n        <Button\n          onClick={() => { this.setState({ open: true }) }}\n          ref={(c) => this._showButton = c}\n        >\n          Show the Tray\n        </Button>\n        <Tray\n          label=\"Tray Example\"\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          size=\"small\"\n          placement=\"start\"\n        >\n          <View as=\"div\" padding=\"medium\">\n            {this.renderCloseButton()}\n            <Text as=\"p\" lineHeight=\"double\">{FPO}</Text>\n          </View>\n        </Tray>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Configure Tray to enter from the end on desktop, bottom on mobile/tablet</Figure.Item>\n    <Figure.Item>Use when it is useful to still see information contained on the page or not lose context of the page that triggered the Tray</Figure.Item>\n    <Figure.Item>Use 2 tabs max if using TabList in small size</Figure.Item>\n    <Figure.Item>Use 5 tabs max if using TabList in medium/large size</Figure.Item>\n    <Figure.Item>Prefer Tray to close when user clicks outside of the Tray</Figure.Item>\n    <Figure.Item>Keep the close 'x' directly following the Tray title, no matter what side the Tray slides from</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use TabList in the x-small size</Figure.Item>\n    <Figure.Item>Use for Sub Nav or <Link href=\"/#DrawerLayout\">Drawer Layout</Link></Figure.Item>\n    <Figure.Item>Use with an <Link href=\"/#Overlay\">Overlay</Link></Figure.Item>\n    <Figure.Item>Use a Tray on top of a <Link href=\"/#Modal\">Modal</Link></Figure.Item>\n    <Figure.Item>Use for <Link href=\"#Alert\">Alerts</Link> or Confirmation Dialogs</Figure.Item>\n    <Figure.Item>Allow Tray to push the content of the page</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Keyboard focus must be set in the tray when it appears; usually on the first interactive element</Figure.Item>\n    <Figure.Item>Trays must contain keyboard focus until they’re closed. This is to ensure that keyboard or screen reader users won't mistakenly interact with background content that is meant to be hidden or inaccessible</Figure.Item>\n    <Figure.Item>When a user closes a tray, focus must return to a logical place within the page. This is usually the element that triggered opening the tray</Figure.Item>\n    <Figure.Item>We recommend that trays begin with a heading (typically H2)</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"Tray","order":"","relativePath":"packages/ui-tray/src/Tray/README.md","extension":".md","srcPath":"packages/ui-tray/src/Tray/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tray/src/Tray/README.md","packageName":"@instructure/ui-tray","requirePath":"@instructure/ui-tray/lib/Tray/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tray/src/Tray/README.md').default","esPath":"@instructure/ui-tray/es/Tray/README","id":"Tray__README","title":"Tray__README"},"TreeBrowser__README":{"description":"\nThe `<TreeBrowser/>` component provides a keyboard accessible tree structure. The component expects\nto receive a normalized data structure, examples can be seen at https://github.com/paularmstrong/normalizr.\n\n### Size\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      size: 'medium'\n    }\n\n    this.sizes = ['small', 'medium', 'large']\n  }\n\n  handleSizeSelect = (e, size) => {\n    this.setState({ size })\n  };\n\n  render () {\n    return (\n      <>\n        <View display=\"block\" margin=\"none none medium\">\n          <RadioInputGroup\n            name=\"treeBrowserSize\"\n            defaultValue=\"medium\"\n            description={<ScreenReaderContent>TreeBrowser size selector</ScreenReaderContent>}\n            variant=\"toggle\"\n            onChange={this.handleSizeSelect}\n          >\n            {this.sizes.map((size) => <RadioInput key={size} label={size} value={size} />)}\n          </RadioInputGroup>\n        </View>\n\n        <TreeBrowser\n          size={this.state.size}\n          collections={{\n            1: {\n              id: 1,\n              name: \"Assignments\",\n              collections: [2,3],\n              items: [3],\n              descriptor: \"Class Assignments\"\n            },\n            2: { id: 2, name: \"English Assignments\", collections: [4], items: [] },\n            3: { id: 3, name: \"Math Assignments\", collections: [5], items: [1,2] },\n            4: { id: 4, name: \"Reading Assignments\", collections: [], items: [4] },\n            5: { id: 5, name: \"Advanced Math Assignments\", items: [5]}\n          }}\n          items={{\n            1: { id: 1, name: \"Addition Worksheet\" },\n            2: { id: 2, name: \"Subtraction Worksheet\" },\n            3: { id: 3, name: \"General Questions\" },\n            4: { id: 4, name: \"Vogon Poetry\" },\n            5: { id: 5, name: \"Bistromath\", descriptor: \"Explain the Bistromathic Drive\" }\n          }}\n          defaultExpanded={[1, 3]}\n          rootId={1}\n        />\n      </>\n    )\n  }\n}\n\nrender(<Example/>)\n\n```\n\n### Managing State\n\n`<TreeBrowser />` can be fully controlled. The following example uses the `onCollectionToggle` callback function to set the state. It then uses the `expanded` prop to configure which collections are open or closed.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expanded: [2]\n    }\n  }\n\n  handleCollectionClick = (id, collection) => {\n    console.log(collection.id)\n  };\n\n  handleCollectionToggle = (collection) => {\n    this.setState((state) => {\n      const expanded = [...state.expanded]\n      const index = expanded.indexOf(collection.id)\n\n      if (!collection.expanded) {\n        expanded.splice(index, 1)\n      } else if (index < 0) {\n        expanded.push(collection.id)\n      }\n\n      return { expanded }\n    })\n  };\n\n  render () {\n    return (\n      <TreeBrowser\n        variant=\"indent\"\n        selectionType=\"single\"\n        collections={{\n          1: { id: 1, name: \"Grade 1\", collections: [2,3,6] },\n          2: { id: 2, name: \"Math Outcomes\", collections: [4], items: [3,4], descriptor: \"1 Group | 2 Outcomes\" },\n          3: { id: 3, name: \"Reading Outcome\", collections: [5], items: [1,2], descriptor: \"1 Group | 2 Outcomes\" },\n          4: { id: 4, name: \"Advanced Math\", items: [6], descriptor: \"1 Outcome\" },\n          5: { id: 5, name: \"Advanced Reading\", items: [5], descriptor: \"1 Group | 2 Outcomes\" },\n          6: { id: 6, name: \"Advanced Outcomes\", items: [5,6], descriptor: \"2 Outcomes\" },\n        }}\n        items={{\n          1: { id: 1, name: \"Can read\" },\n          2: { id: 2, name: \"Can write\" },\n          3: { id: 3, name: \"Can add\" },\n          4: { id: 4, name: \"Can subtract\" },\n          5: { id: 5, name: \"Can read Shakespeare\" },\n          6: { id: 6, name: \"Can do quantum physics\" }\n        }}\n        showRootCollection={false}\n        rootId={1}\n        expanded={this.state.expanded}\n        onCollectionToggle={this.handleCollectionToggle}\n        onCollectionClick={this.handleCollectionClick}\n      />\n    )\n  }\n}\n\nrender(<Example/>)\n```\n\n### Customizing Icons\n\nAll of the `<TreeBrowser>` icons are customizable.\nThe following example sets custom icons for the expanded and collapsed state of the collections via `collectionIcon` and `collectionIconExpanded` and custom item icons via `itemIcon`.\n\n```js\n---\nexample: true\n---\n<TreeBrowser\n  collections={{\n    1: {\n      id: 1,\n      name: \"Grades\",\n      collections: [],\n      items: [1,2,3]\n    },\n  }}\n  items={{\n    1: { id: 1, name: \"Sarah\" },\n    2: { id: 2, name: \"Jenny\" },\n    3: { id: 3, name: \"Juan\" }\n  }}\n  defaultExpanded={[1]}\n  collectionIcon={IconGradebookLine}\n  collectionIconExpanded={IconXSolid}\n  itemIcon={IconUserSolid}\n  rootId={1}\n  size=\"large\"\n/>\n```\n\n#### Different icons for each item\n\nOne way do this is to use `getItemProps`. This function is called with the props for each item and returns new props you specify. These props are then passed to the item when it is rendered. In the following example, we override the `itemIcon` prop depending on the item name.\n\n```js\n---\nexample: true\n---\n<TreeBrowser\n  collections={{\n    1: {\n      id: 1,\n      name: \"Saved\",\n      collections: [],\n      items: [1,2,3]\n    },\n  }}\n  items={{\n    1: { id: 1, name: \"Modules\" },\n    2: { id: 2, name: \"Videos\" },\n    3: { id: 3, name: \"Students\" }\n  }}\n  defaultExpanded={[1]}\n  rootId={1}\n  size=\"large\"\n  getItemProps={({ name, ...props }) => {\n    let itemIcon = IconUserSolid\n\n    if (name === 'Modules') {\n      itemIcon = IconModuleLine\n    }\n\n    if (name === 'Videos') {\n      itemIcon = IconVideoLine\n    }\n\n    return {\n      ...props, // Be sure to pass the rest of the props along\n      itemIcon,\n      name\n    }\n  }}\n/>\n```\n\nAnother way to do it is to specify the `thumbnail` property in the `items` collection. This also overrides `itemIcon`.\n\n```js\n---\nexample: true\n---\n<TreeBrowser\n  collections={{\n    1: {\n      id: 1,\n      name: \"Pandas\",\n      collections: [],\n      items: [1,2,3]\n    },\n  }}\n  items={{\n    1: { id: 1, name: \"Bao Bao\", thumbnail: avatarSquare },\n    2: { id: 2, name: \"Bei Bei\" },\n    3: { id: 3, name: \"Mei Xiang\", thumbnail: avatarPortrait }\n  }}\n  defaultExpanded={[1]}\n  itemIcon={IconUserSolid}\n  rootId={1}\n  size=\"large\"\n/>\n```\n\n### Rendering custom content in nodes\n\nUsing the `renderContent` property allows you to render custom content in the area where the text and descriptor are.\nTo meet a11y standards make sure to have the right contrast ratio on hovered and selected states; you can use the\n`selected` and `focused` attributes in the given `props`.\n\n```js\n---\nexample: true\n---\n<TreeBrowser\n  collections={{\n    1: {\n      id: 1,\n      name: \"Pandas\",\n      collections: [],\n      items: [1, 2, 3]\n    },\n  }}\n  items={{\n    1: { id: 1, name: \"Bao Bao\" },\n    2: { id: 2, name: \"Bei Bei\" },\n    3: { id: 3, name: \"Mei Xiang\" }\n  }}\n  defaultExpanded={[1]}\n  itemIcon={IconUserSolid}\n  rootId={1}\n  size=\"large\"\n  renderContent={(props)=> {\n    if (props.level > 1) {\n      return <div style={{ display: 'flex', alignItems: 'flex-end', padding: '0.6rem 0 0.6rem 1rem' }}>\n        <span>{props.name}</span>\n        <Tag text=\"done\" size=\"small\" margin=\"0 xx-small 0 xx-small\"/>\n        <Tag text=\"class A\" size=\"small\"/>\n      </div>\n    }\n    return <div style={{padding: '0.6rem 0 0.6rem 1rem'}}>{props.name}</div>\n  }}\n/>\n```\n\n### Rendering custom items before and after nodes\n\nAn example of a `<TreeBrowser />` with a custom item after each collection.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expanded: true\n    }\n  }\n\n  renderInput = () => {\n    const { expanded } = this.state\n    if (expanded) {\n      return (\n        <View as=\"div\" padding=\"xx-small\" onFocus={(e) => e.stopPropagation()} onClick={(e) => e.stopPropagation()}>\n          <TextInput placeholder=\"Enter new group name\" display=\"inline-block\" width=\"12rem\" renderLabel=''/>\n          <IconButton screenReaderLabel=\"Cancel\" onClick={(e) => this.setExpand(e, !expanded)} margin=\"0 0 0 small\" ><IconXSolid/></IconButton>\n          <IconButton screenReaderLabel=\"Add new group\" onClick={(e) => this.setExpand(e, !expanded)} margin=\"0 0 0 small\" ><IconCheckSolid/></IconButton>\n        </View>\n      )\n    }\n\n    return (\n      <View as=\"div\">\n        Create New Group\n      </View>\n    )\n  }\n\n  setExpand = (e, expanded) => {\n    e.stopPropagation()\n    this.setState({expanded})\n    this._node.focus()\n  }\n\n  renderNode = () => {\n    const { expanded } = this.state\n    return (\n      <TreeBrowser.Node\n        containerRef={(el) => this._node = el}\n        onClick={(e) => this.setExpand(e, !expanded)}\n        itemIcon={this.state.expanded ? '' : <IconPlusLine /> }\n        size=\"large\"\n      >\n        {this.renderInput()}\n      </TreeBrowser.Node>\n    )\n  }\n\n  render () {\n    return (\n      <TreeBrowser\n        selectionType=\"single\"\n        size=\"large\"\n        defaultExpanded={[1, 2]}\n        collections={{\n          1: {\n            id: 1,\n            name: \"Grade 1\",\n            collections: [2],\n          },\n          2: {\n            id: 2,\n            name: \"Math Outcomes\",\n            collections: [],\n            items: [1, 2],\n            descriptor: \"1 Group | 2 Outcomes\",\n            renderAfterItems: this.renderNode()\n          }\n        }}\n        items={{\n          1: { id: 1, name: \"Can add\" },\n          2: { id: 2, name: \"Can subtract\" },\n        }}\n        showRootCollection={true}\n        rootId={1}\n      />\n    )\n  }\n}\n\nrender(<Example/>)\n```\n\n### showRootCollection\n\nThe `showRootCollection` prop sets whether the root collection (specified in `rootId` prop) is displayed or to begin with its immediate sub-collections and items instead. It defaults to `true`.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      showRootCollection: true\n    }\n  }\n\n  handleSwitch = () => {\n    this.setState({ showRootCollection: !this.state.showRootCollection })\n  }\n\n  renderNode = () => {\n    return (\n      <TreeBrowser.Node itemIcon={<IconPlusLine />}>\n        More\n      </TreeBrowser.Node>\n    )\n  }\n\n  render () {\n    return (\n      <>\n        <View display=\"block\" margin=\"none none medium\">\n          <Checkbox\n            label=\"showRootCollection\"\n            variant=\"toggle\"\n            size=\"medium\"\n            checked={this.state.showRootCollection}\n            onChange={this.handleSwitch}\n          />\n        </View>\n\n        <TreeBrowser\n          collections={{\n            1: {\n              id: 1,\n              name: \"Assignments\",\n              collections: [2,3],\n              items: [3, 5],\n              descriptor: \"Class Assignments\",\n              renderAfterItems: this.renderNode()\n            },\n            2: { id: 2, name: \"English Assignments\", collections: [4], items: [] },\n            3: { id: 3, name: \"Math Assignments\", collections: [5], items: [1,2] },\n            4: { id: 4, name: \"Reading Assignments\", collections: [], items: [4] },\n            5: { id: 5, name: \"Advanced Math Assignments\", items: [5]}\n          }}\n          items={{\n            1: { id: 1, name: \"Addition Worksheet\" },\n            2: { id: 2, name: \"Subtraction Worksheet\" },\n            3: { id: 3, name: \"General Questions\" },\n            4: { id: 4, name: \"Vogon Poetry\" },\n            5: { id: 5, name: \"Bistromath\", descriptor: \"Explain the Bistromathic Drive\" }\n          }}\n          defaultExpanded={[1, 3]}\n          rootId={1}\n          showRootCollection={this.state.showRootCollection}\n        />\n      </>\n    )\n  }\n}\n\nrender(<Example/>)\n\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use for browsing hierarchical content</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use for site navigation</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"TreeBrowser","order":"","relativePath":"packages/ui-tree-browser/src/TreeBrowser/README.md","extension":".md","srcPath":"packages/ui-tree-browser/src/TreeBrowser/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tree-browser/src/TreeBrowser/README.md","packageName":"@instructure/ui-tree-browser","requirePath":"@instructure/ui-tree-browser/lib/TreeBrowser/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tree-browser/src/TreeBrowser/README.md').default","esPath":"@instructure/ui-tree-browser/es/TreeBrowser/README","id":"TreeBrowser__README","title":"TreeBrowser__README"},"TruncateText__README":{"description":"\nA component for truncating text content.\n\n> For best results, avoid using TruncateText inside parent containers that are inline (`display: inline/inline-block`) or that default to inline display (span, link, etc.).\n\n### Single line\n\n```javascript\n---\nexample: true\n---\n\n<div>\n  <View\n    as=\"div\"\n    padding=\"xx-small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <Heading level=\"h1\">\n      <TruncateText>\n        {lorem.paragraph()}\n      </TruncateText>\n    </Heading>\n    <Text\n      as=\"p\"\n      weight=\"bold\"\n      size=\"large\"\n      transform=\"uppercase\"\n      letterSpacing=\"expanded\"\n    >\n      <TruncateText>\n        {lorem.paragraph()}\n      </TruncateText>\n    </Text>\n    <Text as=\"p\">\n      <TruncateText>\n        {lorem.paragraph()}\n      </TruncateText>\n    </Text>\n\n    <div>\n      <TruncateText\n        onUpdate={(truncated, text) => {\n          console.log(truncated, text)\n        }}\n      >\n        <span>\n          Regular sized text with <Link href=\"#\">A Text Link </Link>and <Text weight=\"bold\">some bold text.</Text>\n        </span>\n      </TruncateText>\n    </div>\n\n  </View>\n</div>\n```\n\n### Multiple lines\n\nYou can set the number of lines to display before truncation begins with the `maxLines` prop. Setting `maxLines` to `auto` will determine the number of lines that will fit.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <View\n    as=\"div\"\n    padding=\"small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <Text as=\"p\" size=\"large\">\n      <TruncateText\n        maxLines={2}\n        truncate=\"word\"\n        ellipsis=\" (...)\"\n      >\n        {lorem.paragraph()}\n      </TruncateText>\n      <Link href=\"#\">Read More</Link>\n    </Text>\n\n    <Text as=\"p\" lineHeight=\"double\">\n      <TruncateText\n        maxLines={4}\n        truncate=\"word\"\n        ellipsis=\" (...)\"\n      >\n        Esse aliqua minim veniam duis consectetur non sunt ea deserunt qui cillum laboris officia. Minim nulla commodo dolore reprehenderit commodo occaecat veniam ad consectetur mollit consectetur partur consectetur eiusmod dolor incididunt incididunt.\n      </TruncateText>\n      <Link href=\"#\">Read More</Link>\n    </Text>\n  </View>\n  <br />\n  <View\n    as=\"div\"\n    padding=\"small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <Text as=\"p\">\n      <TruncateText maxLines={4} ellipsis=\" (...)\">\n        <span>Esse aliqua minim veniam duis consectetur non sunt ea deserunt qui cillum laboris officia. <Link href=\"#\">http://instructure.github.io/instructure-ui/#ui-elements</Link> occaecat veniam ad consectetur mollit consectetur partur consectetur eiusmod dolor incididunt incididunt.</span>\n      </TruncateText>\n    </Text>\n\n    <Text as=\"p\">\n      <TruncateText maxLines={4} ellipsis=\" (...)\">\n        <span>Qui cillum laboris officia. <strong>supercalifragilisticexpialidocious</strong> occaecat veniam ad consectetur mollit consectetur partur consectetur eiusmod dolor incididunt incididunt. Esse aliqua minim veniam duis consectetur non sunt ea deserunt.</span>\n      </TruncateText>\n    </Text>\n  </View>\n  <br />\n  <div style={{height: '78px', border: 'solid 1px red'}}>\n    <Text>\n      <TruncateText maxLines=\"auto\" ellipsis=\" (...)\">\n        Esse aliqua minim veniam duis consectetur non sunt ea deserunt qui cillum laboris officia. Minim nulla commodo dolore reprehenderit commodo occaecat veniam ad consectetur mollit consectetur partur consectetur eiusmod dolor incididunt incididunt.\n      </TruncateText>\n    </Text>\n  </div>\n</div>\n\n```\n\n### Truncate middle\n\nYou can set the position of the truncation using the `position` prop.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <View\n    as=\"div\"\n    padding=\"small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <TruncateText position=\"middle\">\n      <span>This line of text should be truncated from the middle of the string <strong>instead of the end.</strong></span>\n    </TruncateText>\n  </View>\n  <br />\n  <View\n    as=\"div\"\n    padding=\"small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <Link href=\"#\">\n      <TruncateText\n        position=\"middle\"\n        truncate=\"word\"\n        ellipsis=\".../\"\n      >\n        @instructure/ui-elements/somefakedir/tomakethislonger/lib/longer/TruncateText\n      </TruncateText>\n    </Link>\n  </View>\n</div>\n```\n\n### Using tooltips\n\nIt's best practice to make the complete text of a truncated element available via a [Tooltip](#Tooltip).\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = {\n    isTruncated: false\n  }\n\n  handleUpdate = (isTruncated) => {\n    if (this.state.isTruncated !== isTruncated) {\n      this.setState({ isTruncated })\n    }\n  }\n\n  renderLink () {\n    return (\n      <Link href=\"#\">\n        <TruncateText onUpdate={this.handleUpdate}>\n          {this.props.message}\n        </TruncateText>\n      </Link>\n    )\n  }\n\n  render () {\n    return (\n      <View\n        as=\"div\"\n        padding=\"xx-small none\"\n        maxWidth=\"230px\"\n        withVisualDebug\n      >\n        {this.state.isTruncated ? (\n          <Tooltip\n            renderTip={this.props.message}\n            mountNode={() => document.getElementById('main')}\n          >\n            { this.renderLink() }\n          </Tooltip>\n        ) : this.renderLink()}\n      </View>\n    )\n  }\n}\n\nrender(<Example message=\"A tooltip will display only when this text is truncated\" />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use a <Link href=\"/#Tooltip\">Tooltip</Link> for all truncated items</Figure.Item>\n    <Figure.Item>Use when trying to restrict the number of lines that are visible</Figure.Item>\n    <Figure.Item>Use end ellipsis if the unique identifier is at the beginning of the string</Figure.Item>\n    <Figure.Item>Use middle ellipsis if the unique identifier is at the end of the string</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use in <Link href=\"/#Button\">Buttons</Link>, <Link href=\"/#Navigation\">Nav Items</Link>, <Link href=\"/#TabList\">TabLists</Link></Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","describes":"TruncateText","order":"","relativePath":"packages/ui-truncate-text/src/TruncateText/README.md","extension":".md","srcPath":"packages/ui-truncate-text/src/TruncateText/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-truncate-text/src/TruncateText/README.md","packageName":"@instructure/ui-truncate-text","requirePath":"@instructure/ui-truncate-text/lib/TruncateText/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-truncate-text/src/TruncateText/README.md').default","esPath":"@instructure/ui-truncate-text/es/TruncateText/README","id":"TruncateText__README","title":"TruncateText__README"},"ContextView__README":{"description":"`<ContextView/>` is a container that can be rendered inline in the document flow (vs as a [Popover](#Popover)) but with an arrow pointing to something. See [RangeInput](#RangeInput) for an example of how ContextView can be used to display contextual information in conjuction with another component. It is used internally in [Popover](#Popover).\n\n- Defaults to no padding around its content. To add padding, use the `padding` prop.\n\n- Use the `textAlign` prop to change the alignment of the text inside `<ContextView />`.\n\n- In use cases where `<ContextView/>` is not absolutely positioned, use the `margin` prop to set margin around the component.\n\n```js\n---\nexample: true\n---\n<div>\n  <ContextView\n    padding=\"small\"\n    margin=\"large\"\n    placement=\"end top\"\n    shadow=\"resting\"\n  >\n    <Heading level=\"h3\">Hello World</Heading>\n  </ContextView>\n  <ContextView\n    margin=\"0 large 0 0\"\n    padding=\"small\"\n    placement=\"top\"\n  >\n    <Heading level=\"h3\">Hello World</Heading>\n    <Text size=\"small\">Some informational text that is helpful</Text>\n  </ContextView>\n  <ContextView\n    margin=\"0 large 0 0\"\n    padding=\"small\"\n    textAlign=\"end\"\n    placement=\"start\"\n  >\n    <Heading level=\"h3\">Hello World</Heading>\n    <Text size=\"small\">This ContextView is end-text-aligned</Text>\n  </ContextView>\n  <ContextView\n    placement=\"end bottom\"\n    padding=\"medium\"\n    background=\"inverse\"\n    width=\"30rem\"\n    margin=\"x-large 0 0\"\n  >\n    <Text size=\"small\">\n      This ContextView uses the inverse background and medium padding. Its width prop is set to `30rem`, which causes long strings like this to wrap. It also has top margin to separate it from the ContextViews above it.\n    </Text>\n  </ContextView>\n</div>\n```\n","describes":"ContextView","order":"","relativePath":"packages/ui-view/src/ContextView/README.md","extension":".md","srcPath":"packages/ui-view/src/ContextView/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-view/src/ContextView/README.md","packageName":"@instructure/ui-view","requirePath":"@instructure/ui-view/lib/ContextView/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-view/src/ContextView/README.md').default","esPath":"@instructure/ui-view/es/ContextView/README","id":"ContextView__README","title":"ContextView__README"},"View__README":{"description":"\n### View &#151; the visual basis of Instructure UI\n\nView provides the base appearance for most of the components\nin Instructure UI.\n\n> **Because View provides access to so many visual styles, it\n> can be easy to abuse.** Before you use View, ensure that the component\n> you're trying to style doesn't already have access to the same props.\n> For example, don't wrap a `<Button>` in a `<View>` just to add\n> `margin` around the button: Instead, use the `margin` prop on the\n> button itself.\n\n```js\n---\nexample: true\n---\n<View\n  as=\"div\"\n  margin=\"small\"\n  padding=\"large\"\n  textAlign=\"center\"\n  background=\"primary\"\n>\n  {lorem.sentence()}\n</View>\n```\n\n### `background`\n\nChange the background color using the `background` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"transparent\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"secondary\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary-inverse\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"brand\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"alert\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"success\"\n  >\n    {lorem.sentence()}\n  </View>\n    <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"danger\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"warning\"\n  >\n    {lorem.sentence()}\n  </View>\n</div>\n```\n\n### `shadow`\n\nAdd a CSS box-shadow to the View using the `shadow` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"large\"\n    background=\"primary\"\n    shadow=\"resting\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"large\"\n    background=\"primary\"\n    shadow=\"above\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"large\"\n    background=\"primary\"\n    shadow=\"topmost\"\n  >\n    {lorem.sentence()}\n  </View>\n</div>\n```\n\n### `borderWidth`\n\nApply a border with the `borderWidth` prop. Utilize\n[CSS shorthand style](https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties)\nto apply different border styles to individual edges.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"small\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"medium\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large none\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"none none small none\"\n  >\n    {lorem.sentence()}\n  </View>\n</div>\n```\n\n### `borderColor`\n\nChange the color of View's border for different contexts via the `borderColor` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n  >\n    primary\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"info\"\n  >\n    info\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"warning\"\n  >\n    warning\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"danger\"\n  >\n    danger\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"alert\"\n  >\n    alert\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"success\"\n  >\n    success\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"brand\"\n  >\n    brand\n  </View>\n</div>\n```\n\n### `borderRadius`\n\nAdjust the border radius using the `borderRadius` prop. Utilize\n[CSS shorthand style](https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties)\nto apply different border radii to individual corners.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"medium\"\n    textAlign=\"center\"\n  >\n    medium\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"large large none none\"\n    textAlign=\"center\"\n  >\n    large large none none\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"none none large large\"\n    textAlign=\"center\"\n  >\n    none none large large\n  </View>\n  <View\n    display=\"inline-block\"\n    width=\"6rem\"\n    height=\"6rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"circle\"\n    textAlign=\"center\"\n  >\n    circle\n  </View>\n  <View\n    display=\"inline-block\"\n    width=\"10rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"pill\"\n    textAlign=\"center\"\n  >\n    pill\n  </View>\n</div>\n```\n\n### `position`\n\n`position` sets the CSS position rule for the component: `static`, `absolute`, `relative`,\n`sticky`, or `fixed`.\n\n> Note that `position=\"sticky\"` is currently [not as fully supported](https://caniuse.com/#feat=css-sticky)\n> as the other values.\n\n```js\n---\nexample: true\n---\n<View\n  position=\"relative\"\n  as=\"div\"\n  height=\"200px\"\n  borderWidth=\"small\"\n>\n  <View\n    as=\"div\"\n    position=\"absolute\"\n    insetInlineEnd=\"100px\"\n    insetBlockStart=\"10px\"\n    insetBlockEnd=\"0\"\n    background=\"primary-inverse\"\n  >\n    Positioned View inside a View with relative positioning.\n  </View>\n</View>\n```\n\n### Indicating that a View is focused\n\nBy default, if a `View` is rendered as a focusable element, a focus outline will display when it is focused for accessibility.\n\n> Note that `position` must be set to `relative` for the focus ring to display.\n> (This restriction exists because the focus ring requires styling a pseudo element\n> that has absolute positioning.)\n\n```javascript\n---\nexample: true\n---\n<View\n  position=\"relative\"\n  tabIndex=\"0\"\n  role=\"button\"\n  cursor=\"pointer\"\n  display=\"block\"\n  margin=\"large\"\n  padding=\"small\"\n>\n  Tab here to see the focus outline\n</View>\n```\n\nIn some situations, you may want to manually control when the focus outline is displayed instead of leaving it up to the browser.\nThis can be done using the `withFocusOutline` prop. Set it to `true` to make View's focus outline display or `false` to hide it.\nBe careful when overriding the display of the focus outline as it is essential for accessibility.\n\nThe focus outline adjusts to account for the shape of the View. For example, the following values can be set for `borderRadius`:\n`circle`, `pill`, `small`, `medium`, and `large`. In each case, the border radius of the focus outline will automatically adjust\nto match the border radius of the corresponding View. For Views with irregular border radius (e.g., `borderRadius=\"small large none medium\"`), the focus outline will appear with square edges. The color of the focus outline can be\nchanged for different contexts via the `focusColor` property.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass FocusedExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isFocused: true,\n      inset: false\n    }\n  }\n\n  updateFocused = (event) => {\n    this.setState({isFocused: event.target.checked})\n  }\n\n  updateInset = (event) => {\n    this.setState({inset: event.target.checked})\n  }\n\n  render () {\n    const { isFocused, focusPosition } = this.state\n\n    return (\n      <View as=\"div\">\n        <View as=\"div\" background=\"primary\" padding=\"small\" margin=\"0 0 small\" borderWidth=\"small\">\n          <FormFieldGroup\n            rowSpacing=\"small\"\n            description={<ScreenReaderContent>View focus outline examples</ScreenReaderContent>}\n          >\n            <Checkbox\n              label=\"withFocusOutline\"\n              checked={this.state.isFocused}\n              onChange={this.updateFocused}\n            />\n            <Checkbox\n              label=\"focusPosition = inset\"\n              checked={this.state.inset}\n              onChange={this.updateInset}\n            />\n          </FormFieldGroup>\n        </View>\n        <View as=\"div\">\n          <code>borderRadius =</code>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderRadius=\"small\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            small\n          </View>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderRadius=\"medium\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            medium\n          </View>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderRadius=\"large\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            large\n          </View>\n          <View\n            display=\"inline-block\"\n            height=\"100px\"\n            width=\"100px\"\n            margin=\"small\"\n            background=\"primary\"\n            borderRadius=\"circle\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            <Flex\n              width=\"100%\"\n              height=\"100%\"\n              alignItems=\"center\"\n              justifyItems=\"center\"\n            >\n              <Flex.Item>\n                circle\n              </Flex.Item>\n            </Flex>\n          </View>\n          <View background=\"primary-inverse\" display=\"inline-block\" padding=\"small\">\n            <View\n              display=\"block\"\n              margin=\"small\"\n              padding=\"small\"\n              background=\"primary-inverse\"\n              borderRadius=\"large\"\n              borderWidth=\"small\"\n              position=\"relative\"\n              withFocusOutline={this.state.isFocused}\n              focusColor=\"inverse\"\n              focusPosition={this.state.inset ? 'inset' : 'offset'}\n            >\n              medium\n            </View>\n          </View>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderRadius=\"pill\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            focusColor=\"success\"\n            width=\"100px\"\n            textAlign=\"center\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            pill\n          </View>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderWidth=\"small\"\n            borderRadius=\"none large\"\n            focusColor=\"danger\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            none large\n          </View>\n        </View>\n      </View>\n    )\n  }\n}\n\nrender(<FocusedExample />)\n```\n\nHandle vertical and horizontal content overflow with the `overflowX` and `overflowY`\nprops.\n\n> **Important CSS note:** Setting one axis to `visible` and setting the other to a different value results in `visible` behaving as `auto`.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass OverflowExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      overflowY: 'visible'\n    }\n  }\n\n  updateOverflowY = (event, value) => {\n    this.setState({\n      overflowY: value\n    })\n  }\n\n  updateOverflowX = (event, value) => {\n    this.setState({\n      overflowX: value\n    })\n  }\n\n  render () {\n    return (\n      <View as=\"div\">\n        <FormFieldGroup\n          description={<ScreenReaderContent>Overflow example</ScreenReaderContent>}\n          rowSpacing=\"small\"\n          vAlign=\"top\"\n          layout=\"columns\"\n        >\n          <RadioInputGroup\n            onChange={this.updateOverflowY}\n            name=\"overflowY\"\n            defaultValue=\"visible\"\n            variant=\"toggle\"\n            description=\"overflowY =\"\n          >\n            <RadioInput label=\"visible\" value=\"visible\" />\n            <RadioInput label=\"auto\" value=\"auto\" />\n            <RadioInput label=\"hidden\" value=\"hidden\" />\n          </RadioInputGroup>\n          <RadioInputGroup\n            onChange={this.updateOverflowX}\n            name=\"overflowX\"\n            defaultValue=\"visible\"\n            variant=\"toggle\"\n            description=\"overflowX =\"\n          >\n            <RadioInput label=\"visible\" value=\"visible\" />\n            <RadioInput label=\"auto\" value=\"auto\" />\n            <RadioInput label=\"hidden\" value=\"hidden\" />\n          </RadioInputGroup>\n        </FormFieldGroup>\n        <View\n          as=\"div\"\n          height=\"7rem\"\n          width=\"20rem\"\n          margin=\"medium none x-large\"\n          overflowY={this.state.overflowY}\n          overflowX={this.state.overflowX}\n          withVisualDebug\n        >\n          <div style={{width: '30rem', height: '10rem'}}>\n            <Img src={avatarSquare} constrain=\"cover\" />\n          </div>\n\n        </View>\n      </View>\n    )\n  }\n}\n\nrender(<OverflowExample />)\n```\n\n### Debugging\n\nSet the `withVisualDebug` prop to see the View's boundaries.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"div\"\n    padding=\"large\"\n    withVisualDebug\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"flex\"\n    withVisualDebug\n  >\n    <View\n      as=\"div\"\n      margin=\"small\"\n      padding=\"small\"\n      withVisualDebug\n    >\n      {lorem.sentence()}\n    </View>\n    <View\n      as=\"div\"\n      margin=\"small\"\n      padding=\"small\"\n      withVisualDebug\n    >\n      {lorem.sentence()}\n    </View>\n  </View>\n</div>\n```\n\n### The `as` prop\n\nChange the `as` prop to set what element the View should render as.\nIn the example below a `<section>` wraps a `<header>` and a paragraph of content.\nThe outermost `<section>` View provides padding for all the content, while\nthe header and paragraph are separated by bottom margin from the `<header>` View.\n\n```js\n---\nexample: true\n---\n<View\n  as=\"section\"\n  padding=\"small\"\n  withVisualDebug\n>\n  <View\n    as=\"header\"\n    margin=\"0 0 medium\"\n    withVisualDebug\n  >\n  Some header content\n  </View>\n  <Text as=\"p\">{lorem.paragraph()}</Text>\n</View>\n```\n\n### Inline Views\n\nBy default, View will render as a span which displays inline. When using the `as`\nprop to render a block level element, setting `display` to `inline-block`, styles\nthe View to display inline-block with other inline elements.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" textAlign=\"center\" padding=\"x-small\" withVisualDebug>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    withVisualDebug\n    textAlign=\"end\"\n    margin=\"large auto\"\n    padding=\"0 small 0 0\"\n  >\n    {lorem.sentence()}\n  </View>\n  <Button color=\"success\">Some Action</Button>\n</View>\n```\n","describes":"View","order":"","relativePath":"packages/ui-view/src/View/README.md","extension":".md","srcPath":"packages/ui-view/src/View/README.md","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-view/src/View/README.md","packageName":"@instructure/ui-view","requirePath":"@instructure/ui-view/lib/View/README","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-view/src/View/README.md').default","esPath":"@instructure/ui-view/es/View/README","id":"View__README","title":"View__README"},"debounce":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Creates a debounced function that delays invoking func until after wait milliseconds have elapsed\n * since the last time the debounced function was invoked. The debounced function comes with a cancel\n * method to cancel delayed func invocations and a flush method to immediately invoke them. Provide options\n * to indicate whether func should be invoked on the leading and/or trailing edge of the wait timeout.\n * The func is invoked with the last arguments provided to the debounced function. Subsequent calls to the\n * debounced function return the result of the last func invocation.\n *\n * [lodash.debounce](https://github.com/lodash/lodash/blob/master/debounce.js)\n * doesn't work well with [sinon fakeTimers](http://sinonjs.org/releases/v1.17.7/fake-timers/)\n * so this is forked from the lodash source.\n *\n * Note: Modified from the original to check for cancelled boolean before invoking func to prevent React setState\n * on unmounted components.\n *\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n */","meta":{"range":[2708,5972],"filename":"bnrd55daygfsf7sh30jvt.js","lineno":54,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"debounce","type":"FunctionDeclaration","paramnames":["func","wait","options"]},"vars":{"lastArgs":"debounce~lastArgs","lastThis":"debounce~lastThis","result":"debounce~result","lastCallTime":"debounce~lastCallTime","lastInvokeTime":"debounce~lastInvokeTime","timers":"debounce~timers","cancelled":"debounce~cancelled","leading":"debounce~leading","maxing":"debounce~maxing","trailing":"debounce~trailing","maxWait":"debounce~maxWait","invokeFunc":"debounce~invokeFunc","leadingEdge":"debounce~leadingEdge","remainingWait":"debounce~remainingWait","shouldInvoke":"debounce~shouldInvoke","timerExpired":"debounce~timerExpired","trailingEdge":"debounce~trailingEdge","cancel":"debounce~cancel","flush":"debounce~flush","clearAllTimers":"debounce~clearAllTimers","debounced":"debounce~debounced","debounced.cancel":"debounce~debounced.cancel","debounced.flush":"debounce~debounced.flush"}},"description":"Creates a debounced function that delays invoking func until after wait milliseconds have elapsed\nsince the last time the debounced function was invoked. The debounced function comes with a cancel\nmethod to cancel delayed func invocations and a flush method to immediately invoke them. Provide options\nto indicate whether func should be invoked on the leading and/or trailing edge of the wait timeout.\nThe func is invoked with the last arguments provided to the debounced function. Subsequent calls to the\ndebounced function return the result of the last func invocation.\n\n[lodash.debounce](https://github.com/lodash/lodash/blob/master/debounce.js)\ndoesn't work well with [sinon fakeTimers](http://sinonjs.org/releases/v1.17.7/fake-timers/)\nso this is forked from the lodash source.\n\nNote: Modified from the original to check for cancelled boolean before invoking func to prevent React setState\non unmounted components.","params":[{"type":{"names":["function"]},"description":"The function to debounce.","name":"func"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The number of milliseconds to delay.","name":"wait"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The options object.","name":"options"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"description":"Specify invoking on the leading edge of the timeout.","name":"options.leading"},{"type":{"names":["number"]},"optional":true,"description":"The maximum time `func` is allowed to be delayed before it's invoked.","name":"options.maxWait"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Specify invoking on the trailing edge of the timeout.","name":"options.trailing"}],"returns":[{"type":{"names":["function"]},"description":"Returns the new debounced function."}],"name":"debounce","longname":"debounce","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/debounce/src/debounce.js","extension":".js","srcPath":"packages/debounce/src/debounce.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/debounce/src/debounce.js","packageName":"@instructure/debounce","requirePath":"@instructure/debounce/lib/debounce","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/debounce/src/debounce.js').default","esPath":"@instructure/debounce/es/debounce","id":"debounce","title":"debounce"},"withStyle":{"comment":"/**\n * ---\n * category: utilities/themes\n * ---\n * A decorator or higher order component that makes a component themeable.\n *\n * It adds a `makeStyles` function and the generated `styles` object to the decorated Component's props.\n *\n * As a HOC:\n *\n * ```js\n * import { withStyle, jsx } from '@instructure/emotion'\n * import generateStyle from './styles'\n * import generateComponentTheme from './theme'\n *\n * class ExampleComponent extends React.Component {\n *  static propTypes = {\n *    // eslint-disable-next-line react/require-default-props\n *    makeStyles: PropTypes.func,\n *    // eslint-disable-next-line react/require-default-props\n *    styles: PropTypes.object\n *  }\n *\n *  componentDidMount() {\n *    this.props.makeStyles()\n *  }\n *\n *  componentDidUpdate() {\n *    this.props.makeStyles()\n *  }\n *\n *  render() {\n *    const { propVal1, styles, ...props } = this.props\n *\n *    return (\n *      <Element css={styles.exampleComponent} >...</Element>\n *    )\n *  }\n * }\n *\n * export default withStyle(generateStyle, generateComponentTheme)(ExampleComponent)\n * ```\n *\n * Themeable components inject their themed styles into the document\n * when they are mounted.\n *\n * ### Applying themes\n *\n * A themeable component’s theme can be configured via wrapping it in an\n * [EmotionThemeProvider](#EmotionThemeProvider) component, and/or set\n * explicitly via its `themeOverride` prop.\n *\n * EmotionThemeProvider provides a theme object with [global theme variables](#canvas).\n * These variables are mapped to the component's own variables in `theme.js` (see [@instructure/emotion](#emotion) package documentation for more info).\n *\n * With the `themeOverride` prop you can directly set/override the component theme variables declared in theme.js.\n *\n * ```js\n * // ExampleComponent/theme.js\n * const generateComponentTheme = (theme) => {\n *   const { colors } = theme\n *\n *   const componentVariables = {\n *     background: colors?.backgroundMedium,\n *     color: colors?.textDarkest,\n *\n *     hoverColor: colors?.textLightest,\n *     hoverBackground: colors?.backgroundDarkest\n *   }\n *\n *   return componentVariables\n * }\n * export default generateComponentTheme\n * ```\n *\n * ```jsx\n * {// global theme override}\n * <EmotionThemeProvider theme={{\n *   colors: { backgroundMedium: '#888' }\n * }}>\n *  {// component theme override}\n *   <ExampleComponent themeOverride={{ hoverColor: '#eee' }} />\n * </EmotionThemeProvider>\n * ```\n *\n *\n * @param {function} generateStyle - The function that returns the component's style object\n * @param {function} generateComponentTheme - The function that returns the component's theme variables object\n * @returns {ReactElement} The decorated WithStyle Component\n */","meta":{"range":[4328,6589],"filename":"u1z6f99xfkciv10zphmq8.js","lineno":124,"columnno":6,"path":"/tmp","code":{"id":"astnode100000039","name":"withStyle","type":"CallExpression","value":""}},"description":"A decorator or higher order component that makes a component themeable.\n\nIt adds a `makeStyles` function and the generated `styles` object to the decorated Component's props.\n\nAs a HOC:\n\n```js\nimport { withStyle, jsx } from '@instructure/emotion'\nimport generateStyle from './styles'\nimport generateComponentTheme from './theme'\n\nclass ExampleComponent extends React.Component {\n static propTypes = {\n   // eslint-disable-next-line react/require-default-props\n   makeStyles: PropTypes.func,\n   // eslint-disable-next-line react/require-default-props\n   styles: PropTypes.object\n }\n\n componentDidMount() {\n   this.props.makeStyles()\n }\n\n componentDidUpdate() {\n   this.props.makeStyles()\n }\n\n render() {\n   const { propVal1, styles, ...props } = this.props\n\n   return (\n     <Element css={styles.exampleComponent} >...</Element>\n   )\n }\n}\n\nexport default withStyle(generateStyle, generateComponentTheme)(ExampleComponent)\n```\n\nThemeable components inject their themed styles into the document\nwhen they are mounted.\n\n### Applying themes\n\nA themeable component’s theme can be configured via wrapping it in an\n[EmotionThemeProvider](#EmotionThemeProvider) component, and/or set\nexplicitly via its `themeOverride` prop.\n\nEmotionThemeProvider provides a theme object with [global theme variables](#canvas).\nThese variables are mapped to the component's own variables in `theme.js` (see [@instructure/emotion](#emotion) package documentation for more info).\n\nWith the `themeOverride` prop you can directly set/override the component theme variables declared in theme.js.\n\n```js\n// ExampleComponent/theme.js\nconst generateComponentTheme = (theme) => {\n  const { colors } = theme\n\n  const componentVariables = {\n    background: colors?.backgroundMedium,\n    color: colors?.textDarkest,\n\n    hoverColor: colors?.textLightest,\n    hoverBackground: colors?.backgroundDarkest\n  }\n\n  return componentVariables\n}\nexport default generateComponentTheme\n```\n\n```jsx\n{// global theme override}\n<EmotionThemeProvider theme={{\n  colors: { backgroundMedium: '#888' }\n}}>\n {// component theme override}\n  <ExampleComponent themeOverride={{ hoverColor: '#eee' }} />\n</EmotionThemeProvider>\n```","params":[{"type":{"names":["function"]},"description":"The function that returns the component's style object","name":"generateStyle"},{"type":{"names":["function"]},"description":"The function that returns the component's theme variables object","name":"generateComponentTheme"}],"returns":[{"type":{"names":["ReactElement"]},"description":"The decorated WithStyle Component"}],"name":"withStyle","longname":"withStyle","kind":"constant","scope":"global","sections":[],"undocumented":false,"category":"utilities/themes","order":"","relativePath":"packages/emotion/src/withStyle.js","extension":".js","srcPath":"packages/emotion/src/withStyle.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/emotion/src/withStyle.js","packageName":"@instructure/emotion","requirePath":"@instructure/emotion/lib/withStyle","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/emotion/src/withStyle.js').default","esPath":"@instructure/emotion/es/withStyle","id":"withStyle","title":"withStyle"},"FocusRegion":{"comment":"/**\n   * ---\n   * category: utilities/a11y\n   * ---\n   * @module FocusRegion\n   * Class for focus operations.\n   * - Scoping focus within a given context (DOM node),\n   * - Mark active element for focus later\n   * - Return focus to the marked element\n   */","meta":{"filename":"b54ghizihasuclon0lti8j.js","lineno":194,"columnno":2,"path":"/tmp","code":{}},"description":"","kind":"module","name":"FocusRegion\nClass for focus operations.\n- Scoping focus within a given context (DOM node),\n- Mark active element for focus later\n- Return focus to the marked element","longname":"FocusRegion\nClass for focus operations.\n- Scoping focus within a given context (DOM node),\n- Mark active element for focus later\n- Return focus to the marked elementmodule:","sections":[],"undocumented":false,"category":"utilities/a11y","order":"","relativePath":"packages/ui-a11y-utils/src/FocusRegion.js","extension":".js","srcPath":"packages/ui-a11y-utils/src/FocusRegion.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-utils/src/FocusRegion.js","packageName":"@instructure/ui-a11y-utils","requirePath":"@instructure/ui-a11y-utils/lib/FocusRegion","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-utils/src/FocusRegion.js').default","esPath":"@instructure/ui-a11y-utils/es/FocusRegion","id":"FocusRegion","title":"FocusRegion"},"FocusRegionManager":{"comment":"/**\n   * ---\n   * category: utilities/a11y\n   * ---\n   * @module FocusManager\n   * Class for focus operations.\n   * - Scoping focus within a given context,\n   * - Mark active element for focus later\n   * - Return focus to the marked element\n   */","meta":{"filename":"id0x9dtxqocknj472gzgm.js","lineno":159,"columnno":2,"path":"/tmp","code":{}},"description":"","kind":"module","name":"FocusManager\nClass for focus operations.\n- Scoping focus within a given context,\n- Mark active element for focus later\n- Return focus to the marked element","longname":"FocusManager\nClass for focus operations.\n- Scoping focus within a given context,\n- Mark active element for focus later\n- Return focus to the marked elementmodule:","sections":[],"undocumented":false,"category":"utilities/a11y","order":"","relativePath":"packages/ui-a11y-utils/src/FocusRegionManager.js","extension":".js","srcPath":"packages/ui-a11y-utils/src/FocusRegionManager.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-utils/src/FocusRegionManager.js","packageName":"@instructure/ui-a11y-utils","requirePath":"@instructure/ui-a11y-utils/lib/FocusRegionManager","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-utils/src/FocusRegionManager.js').default","esPath":"@instructure/ui-a11y-utils/es/FocusRegionManager","id":"FocusRegionManager","title":"FocusRegionManager"},"KeyboardFocusRegion":{"comment":"/**\n   * ---\n   * category: utilities/a11y\n   * ---\n   * @module KeyboardFocusRegion\n   * Class for focus operations.\n   * - Scoping focus within a given context (DOM node),\n   * - Mark active element for focus later\n   * - Return focus to the marked element\n   */","meta":{"filename":"cnf8d1sxmdo2xazi37s0kb.js","lineno":317,"columnno":2,"path":"/tmp","code":{}},"description":"","kind":"module","name":"KeyboardFocusRegion\nClass for focus operations.\n- Scoping focus within a given context (DOM node),\n- Mark active element for focus later\n- Return focus to the marked element","longname":"KeyboardFocusRegion\nClass for focus operations.\n- Scoping focus within a given context (DOM node),\n- Mark active element for focus later\n- Return focus to the marked elementmodule:","sections":[],"undocumented":false,"category":"utilities/a11y","order":"","relativePath":"packages/ui-a11y-utils/src/KeyboardFocusRegion.js","extension":".js","srcPath":"packages/ui-a11y-utils/src/KeyboardFocusRegion.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-utils/src/KeyboardFocusRegion.js","packageName":"@instructure/ui-a11y-utils","requirePath":"@instructure/ui-a11y-utils/lib/KeyboardFocusRegion","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-utils/src/KeyboardFocusRegion.js').default","esPath":"@instructure/ui-a11y-utils/es/KeyboardFocusRegion","id":"KeyboardFocusRegion","title":"KeyboardFocusRegion"},"ScreenReaderFocusRegion":{"comment":"/**\n   * ---\n   * category: utilities/a11y\n   * ---\n   * @module ScreenReaderFocusRegion\n   * Utility that hides all DOM elements outside of a specified node. Used,\n   * for example, in overlay components where we want to restrict the screen\n   * readers to the overlay content\n   */","meta":{"filename":"u6jok2uy46jmh6bgull5f.js","lineno":225,"columnno":2,"path":"/tmp","code":{}},"description":"","kind":"module","name":"ScreenReaderFocusRegion\nUtility that hides all DOM elements outside of a specified node. Used,\nfor example, in overlay components where we want to restrict the screen\nreaders to the overlay content","longname":"ScreenReaderFocusRegion\nUtility that hides all DOM elements outside of a specified node. Used,\nfor example, in overlay components where we want to restrict the screen\nreaders to the overlay contentmodule:","sections":[],"undocumented":false,"category":"utilities/a11y","order":"","relativePath":"packages/ui-a11y-utils/src/ScreenReaderFocusRegion.js","extension":".js","srcPath":"packages/ui-a11y-utils/src/ScreenReaderFocusRegion.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-utils/src/ScreenReaderFocusRegion.js","packageName":"@instructure/ui-a11y-utils","requirePath":"@instructure/ui-a11y-utils/lib/ScreenReaderFocusRegion","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-utils/src/ScreenReaderFocusRegion.js').default","esPath":"@instructure/ui-a11y-utils/es/ScreenReaderFocusRegion","id":"ScreenReaderFocusRegion","title":"ScreenReaderFocusRegion"},"hasVisibleChildren":{"comment":"/**\n   * ---\n   * category: utilities/a11y\n   * ---\n   * Returns `true` if any of the children are not wrapped with [ScreenReaderContent](#ScreenReaderContent).\n   * @param {ReactChildren} children - A react component's children prop\n   * @return {boolean} whether any of the children are visible\n   */","meta":{"range":[1907,1925],"filename":"w9sfr7g41c901ta5a5hmq1r.js","lineno":52,"columnno":2,"path":"/tmp","code":{"id":"astnode100000052","name":"exports.hasVisibleChildren","type":"Identifier"}},"description":"Returns `true` if any of the children are not wrapped with [ScreenReaderContent](#ScreenReaderContent).","params":[{"type":{"names":["ReactChildren"]},"description":"A react component's children prop","name":"children"}],"returns":[{"type":{"names":["boolean"]},"description":"whether any of the children are visible"}],"name":"hasVisibleChildren","longname":"hasVisibleChildren","kind":"member","scope":"global","sections":[],"undocumented":false,"category":"utilities/a11y","order":"","relativePath":"packages/ui-a11y-utils/src/hasVisibleChildren.js","extension":".js","srcPath":"packages/ui-a11y-utils/src/hasVisibleChildren.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-utils/src/hasVisibleChildren.js","packageName":"@instructure/ui-a11y-utils","requirePath":"@instructure/ui-a11y-utils/lib/hasVisibleChildren","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-utils/src/hasVisibleChildren.js').default","esPath":"@instructure/ui-a11y-utils/es/hasVisibleChildren","id":"hasVisibleChildren","title":"hasVisibleChildren"},"scopeTab":{"comment":"/**\n   * ---\n   * category: utilities/a11y\n   * ---\n   *\n   * Scope tab in order to trap focus within a specified\n   * element.\n   *\n   * @param {ReactElement|DOMNode} element\n   * @param {Event} event the DOM Event that was fired\n   * @param {function} function executed when leaving final tabbable instead of the default behavior\n   */","meta":{"range":[2721,2729],"filename":"ldnhpy3vrbhuwcnlx4b3c.js","lineno":85,"columnno":2,"path":"/tmp","code":{"id":"astnode100000142","name":"exports.scopeTab","type":"Identifier"}},"description":"\nScope tab in order to trap focus within a specified\nelement.","params":[{"type":{"names":["ReactElement","DOMNode"]},"name":"element"},{"type":{"names":["Event"]},"description":"the DOM Event that was fired","name":"event"},{"type":{"names":["function"]},"description":"executed when leaving final tabbable instead of the default behavior","name":"function"}],"name":"scopeTab","longname":"scopeTab","kind":"member","scope":"global","sections":[],"undocumented":false,"category":"utilities/a11y","order":"","relativePath":"packages/ui-a11y-utils/src/scopeTab.js","extension":".js","srcPath":"packages/ui-a11y-utils/src/scopeTab.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-utils/src/scopeTab.js","packageName":"@instructure/ui-a11y-utils","requirePath":"@instructure/ui-a11y-utils/lib/scopeTab","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-utils/src/scopeTab.js').default","esPath":"@instructure/ui-a11y-utils/es/scopeTab","id":"scopeTab","title":"scopeTab"},"alpha":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Adjust the alpha transparency of a color\n * @param {String} color\n * @param {Number} percent\n * @returns {String} color as rgb string\n */","meta":{"range":[1375,1479],"filename":"260zea75jkzdw06v3jg05u.js","lineno":36,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"alpha","type":"FunctionDeclaration","paramnames":["color","percent"]}},"description":"Adjust the alpha transparency of a color","params":[{"type":{"names":["String"]},"name":"color"},{"type":{"names":["Number"]},"name":"percent"}],"returns":[{"type":{"names":["String"]},"description":"color as rgb string"}],"name":"alpha","longname":"alpha","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-color-utils/src/alpha.js","extension":".js","srcPath":"packages/ui-color-utils/src/alpha.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-color-utils/src/alpha.js","packageName":"@instructure/ui-color-utils","requirePath":"@instructure/ui-color-utils/lib/alpha","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-color-utils/src/alpha.js').default","esPath":"@instructure/ui-color-utils/es/alpha","id":"alpha","title":"alpha"},"contrast":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * check the contrast ratio of 2 colors\n * @param {String} color1\n * @param {String} color2\n * @returns {Number} color contrast ratio\n */","meta":{"range":[1372,1452],"filename":"31fd1np2e9vgxn4ccuv7ye.js","lineno":36,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"contrast","type":"FunctionDeclaration","paramnames":["color1","color2"]}},"description":"check the contrast ratio of 2 colors","params":[{"type":{"names":["String"]},"name":"color1"},{"type":{"names":["String"]},"name":"color2"}],"returns":[{"type":{"names":["Number"]},"description":"color contrast ratio"}],"name":"contrast","longname":"contrast","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-color-utils/src/contrast.js","extension":".js","srcPath":"packages/ui-color-utils/src/contrast.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-color-utils/src/contrast.js","packageName":"@instructure/ui-color-utils","requirePath":"@instructure/ui-color-utils/lib/contrast","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-color-utils/src/contrast.js').default","esPath":"@instructure/ui-color-utils/es/contrast","id":"contrast","title":"contrast"},"conversions":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Converts a color string to a hex string like `#FF0000`\n * For possible inputs see https://github.com/bgrins/TinyColor\n * @param {String} rgb a color string\n * @returns {String} a hex string like `#FF0000`\n */","meta":{"range":[1446,1521],"filename":"75p8d2gfjk4u5lbd30pnf.js","lineno":36,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"color2hex","type":"FunctionDeclaration","paramnames":["rgb"]}},"description":"Converts a color string to a hex string like `#FF0000`\nFor possible inputs see https://github.com/bgrins/TinyColor","params":[{"type":{"names":["String"]},"description":"a color string","name":"rgb"}],"returns":[{"type":{"names":["String"]},"description":"a hex string like `#FF0000`"}],"name":"color2hex","longname":"color2hex","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-color-utils/src/conversions.js","extension":".js","srcPath":"packages/ui-color-utils/src/conversions.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-color-utils/src/conversions.js","packageName":"@instructure/ui-color-utils","requirePath":"@instructure/ui-color-utils/lib/conversions","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-color-utils/src/conversions.js').default","esPath":"@instructure/ui-color-utils/es/conversions","id":"conversions","title":"conversions"},"darken":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * darken a color\n * @param {String} color\n * @param {Number} percent\n * @returns {String} color as rgb string\n */","meta":{"range":[1349,1436],"filename":"r2w4gew8fl8ipaxwgipuo.js","lineno":36,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"darken","type":"FunctionDeclaration","paramnames":["color","percent"]}},"description":"darken a color","params":[{"type":{"names":["String"]},"name":"color"},{"type":{"names":["Number"]},"name":"percent"}],"returns":[{"type":{"names":["String"]},"description":"color as rgb string"}],"name":"darken","longname":"darken","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-color-utils/src/darken.js","extension":".js","srcPath":"packages/ui-color-utils/src/darken.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-color-utils/src/darken.js","packageName":"@instructure/ui-color-utils","requirePath":"@instructure/ui-color-utils/lib/darken","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-color-utils/src/darken.js').default","esPath":"@instructure/ui-color-utils/es/darken","id":"darken","title":"darken"},"isValid":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * check if a string is a valid color\n * @param {String} color\n * @returns {Boolean} true if the string is a valid color\n */","meta":{"range":[1359,1418],"filename":"s2jqum9cekhdfektu0y3n.js","lineno":35,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"isValid","type":"FunctionDeclaration","paramnames":["color"]}},"description":"check if a string is a valid color","params":[{"type":{"names":["String"]},"name":"color"}],"returns":[{"type":{"names":["Boolean"]},"description":"true if the string is a valid color"}],"name":"isValid","longname":"isValid","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-color-utils/src/isValid.js","extension":".js","srcPath":"packages/ui-color-utils/src/isValid.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-color-utils/src/isValid.js","packageName":"@instructure/ui-color-utils","requirePath":"@instructure/ui-color-utils/lib/isValid","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-color-utils/src/isValid.js').default","esPath":"@instructure/ui-color-utils/es/isValid","id":"isValid","title":"isValid"},"lighten":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * lighten a color\n * @param {String} color\n * @param {Number} percent\n * @returns {String} color as rgb string\n */","meta":{"range":[1350,1439],"filename":"q28ggydsueq04ku9ue4ilk6.js","lineno":36,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"lighten","type":"FunctionDeclaration","paramnames":["color","percent"]}},"description":"lighten a color","params":[{"type":{"names":["String"]},"name":"color"},{"type":{"names":["Number"]},"name":"percent"}],"returns":[{"type":{"names":["String"]},"description":"color as rgb string"}],"name":"lighten","longname":"lighten","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-color-utils/src/lighten.js","extension":".js","srcPath":"packages/ui-color-utils/src/lighten.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-color-utils/src/lighten.js","packageName":"@instructure/ui-color-utils","requirePath":"@instructure/ui-color-utils/lib/lighten","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-color-utils/src/lighten.js').default","esPath":"@instructure/ui-color-utils/es/lighten","id":"lighten","title":"lighten"},"decorator":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Wraps (decorates) a React component to add additional functionality\n *\n * @module decorator\n * @param {Function} decorator a function that returns a decorated component\n * @returns {Class} a decorated component class\n */","meta":{"filename":"j776s8x6jwbibpp4p2aud.js","lineno":25,"columnno":0,"path":"/tmp","code":{}},"description":"Wraps (decorates) a React component to add additional functionality","kind":"module","name":"decorator","params":[{"type":{"names":["function"]},"description":"a function that returns a decorated component","name":"decorator"}],"returns":[{"type":{"names":["Class"]},"description":"a decorated component class"}],"longname":"module:decorator","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-decorator/src/decorator.js","extension":".js","srcPath":"packages/ui-decorator/src/decorator.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-decorator/src/decorator.js","packageName":"@instructure/ui-decorator","requirePath":"@instructure/ui-decorator/lib/decorator","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-decorator/src/decorator.js').default","esPath":"@instructure/ui-decorator/es/decorator","id":"decorator","title":"decorator"},"addEventListener":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n * Wrapper function for DOM addEventListener\n * @module addEventListener\n * @param {DOMNode} el - DOM node which will have the event listener attached\n * @param {String} event - a string specifying the event name ('click', 'focus', etc)\n * @param {Function} handler - function to run when event occurs\n * @param {Boolean} capture - should the event be executed in the capturing or bubbling phase\n * @returns {Function} a method to remove the event listener\n */","meta":{"filename":"0qpauef6uhprnce6brs769.js","lineno":27,"columnno":0,"path":"/tmp","code":{}},"description":"Wrapper function for DOM addEventListener","kind":"module","name":"addEventListener","params":[{"type":{"names":["DOMNode"]},"description":"DOM node which will have the event listener attached","name":"el"},{"type":{"names":["String"]},"description":"a string specifying the event name ('click', 'focus', etc)","name":"event"},{"type":{"names":["function"]},"description":"function to run when event occurs","name":"handler"},{"type":{"names":["Boolean"]},"description":"should the event be executed in the capturing or bubbling phase","name":"capture"}],"returns":[{"type":{"names":["function"]},"description":"a method to remove the event listener"}],"longname":"module:addEventListener","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/addEventListener.js","extension":".js","srcPath":"packages/ui-dom-utils/src/addEventListener.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/addEventListener.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/addEventListener","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/addEventListener.js').default","esPath":"@instructure/ui-dom-utils/es/addEventListener","id":"addEventListener","title":"addEventListener"},"addPositionChangeListener":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n * Adds a listener to an element and calls a specified handler\n * function whenever the position changes\n * @module\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @param {function} handler - function to run if the position has changed\n * @returns {function} remove - cancel the listener and no longer execute the handler function\n */","meta":{"filename":"t2e27iyku1pxvl26583dt.js","lineno":29,"columnno":0,"path":"/tmp","code":{}},"description":"Adds a listener to an element and calls a specified handler\nfunction whenever the position changes","kind":"module","name":"t2e27iyku1pxvl26583dt","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"},{"type":{"names":["function"]},"description":"function to run if the position has changed","name":"handler"}],"returns":[{"type":{"names":["function"]},"description":"remove - cancel the listener and no longer execute the handler function"}],"longname":"module:t2e27iyku1pxvl26583dt","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/addPositionChangeListener.js","extension":".js","srcPath":"packages/ui-dom-utils/src/addPositionChangeListener.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/addPositionChangeListener.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/addPositionChangeListener","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/addPositionChangeListener.js').default","esPath":"@instructure/ui-dom-utils/es/addPositionChangeListener","id":"addPositionChangeListener","title":"addPositionChangeListener"},"addResizeListener":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n * ### This utility is deprecated since version __8.0__ and will be permanently deleted in version 9.0.\n * *Please use the native [DOM ResizeObserver API](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) instead of this.*\n *\n *\n * Example usage of the `ResizeObserver`:\n *  ```js\n *    const observer = new ResizeObserver((entries) => {\n *    for (let entry of entries) {\n *       const size = {\n *        width: entry.contentRect.width\n *       }\n *\n *       if (size.width !== origSize.width) {\n *         // call your handler function here\n *         this._debounced(size)\n *      }\n *     }\n *   })\n *\n *   observer.observe(content)\n *   ```\n *\n * Adds a listener to an element and calls a specified handler function whenever the size changes.\n * @deprecated since version 8.0\n * @module\n *\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @param {function} handler - function to run when resize occurs\n * @returns {function} remove - cancel the listener and no longer execute the handler function\n */","meta":{"filename":"4fhfqz26z38r5rro7anz5.js","lineno":29,"columnno":0,"path":"/tmp","code":{}},"description":"### This utility is deprecated since version __8.0__ and will be permanently deleted in version 9.0.\n*Please use the native [DOM ResizeObserver API](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) instead of this.*\n\n\nExample usage of the `ResizeObserver`:\n ```js\n   const observer = new ResizeObserver((entries) => {\n   for (let entry of entries) {\n      const size = {\n       width: entry.contentRect.width\n      }\n\n      if (size.width !== origSize.width) {\n        // call your handler function here\n        this._debounced(size)\n     }\n    }\n  })\n\n  observer.observe(content)\n  ```\n\nAdds a listener to an element and calls a specified handler function whenever the size changes.","deprecated":"since version 8.0","kind":"module","name":"4fhfqz26z38r5rro7anz5","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"},{"type":{"names":["function"]},"description":"function to run when resize occurs","name":"handler"}],"returns":[{"type":{"names":["function"]},"description":"remove - cancel the listener and no longer execute the handler function"}],"longname":"module:4fhfqz26z38r5rro7anz5","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/addResizeListener.js","extension":".js","srcPath":"packages/ui-dom-utils/src/addResizeListener.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/addResizeListener.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/addResizeListener","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/addResizeListener.js').default","esPath":"@instructure/ui-dom-utils/es/addResizeListener","id":"addResizeListener","title":"addResizeListener"},"canUseDOM":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Performs simple test to determine if DOM can be accessed\n * @module\n * @returns {boolean} whether the dom can be used\n */","meta":{"filename":"3etnhnciy5wlawvohb0o9a.js","lineno":25,"columnno":0,"path":"/tmp","code":{}},"description":"\nPerforms simple test to determine if DOM can be accessed","kind":"module","name":"3etnhnciy5wlawvohb0o9a","returns":[{"type":{"names":["boolean"]},"description":"whether the dom can be used"}],"longname":"module:3etnhnciy5wlawvohb0o9a","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/canUseDOM.js","extension":".js","srcPath":"packages/ui-dom-utils/src/canUseDOM.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/canUseDOM.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/canUseDOM","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/canUseDOM.js').default","esPath":"@instructure/ui-dom-utils/es/canUseDOM","id":"canUseDOM","title":"canUseDOM"},"contains":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Determine if an element contains another DOM node\n *\n * @param {ReactComponent|DomNode} context - component or DOM node\n * @param {ReactComponent|DomNode} el - component or DOM node which we want to determine if contained within the context\n * @returns {boolean} if the element is contained within the context\n */","meta":{"range":[1611,2082],"filename":"1gep3zoisx83r1owonyixk.js","lineno":39,"columnno":0,"path":"/tmp","code":{"id":"astnode100000010","name":"containsWithDOM","type":"FunctionDeclaration","paramnames":["context","el"]},"vars":{"container":"containsWithDOM~container","node":"containsWithDOM~node"}},"description":"\nDetermine if an element contains another DOM node","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"context"},{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node which we want to determine if contained within the context","name":"el"}],"returns":[{"type":{"names":["boolean"]},"description":"if the element is contained within the context"}],"name":"containsWithDOM","longname":"containsWithDOM","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/contains.js","extension":".js","srcPath":"packages/ui-dom-utils/src/contains.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/contains.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/contains","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/contains.js').default","esPath":"@instructure/ui-dom-utils/es/contains","id":"contains","title":"contains"},"containsActiveElement":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Determine if an element contains the active element\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @returns {boolean} if the element contains the active element\n */","meta":{"range":[1535,1707],"filename":"byaj0ux2r0jv3rppq0pcvf.js","lineno":39,"columnno":0,"path":"/tmp","code":{"id":"astnode100000014","name":"containsActiveElement","type":"FunctionDeclaration","paramnames":["el"]},"vars":{"node":"containsActiveElement~node","active":"containsActiveElement~active"}},"description":"\nDetermine if an element contains the active element","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"}],"returns":[{"type":{"names":["boolean"]},"description":"if the element contains the active element"}],"name":"containsActiveElement","longname":"containsActiveElement","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/containsActiveElement.js","extension":".js","srcPath":"packages/ui-dom-utils/src/containsActiveElement.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/containsActiveElement.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/containsActiveElement","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/containsActiveElement.js').default","esPath":"@instructure/ui-dom-utils/es/containsActiveElement","id":"containsActiveElement","title":"containsActiveElement"},"elementMatches":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Polyfill for Element.matches (https://developer.mozilla.org/en-US/docs/Web/API/Element/matches)\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @param {String} selectorString - a string representing the selector to test\n * @returns {boolean} if the element would be selected by the specified selector string\n */","meta":{"range":[1589,1801],"filename":"spivl45puvkao9qxnvwc.js","lineno":38,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"elementMatches","type":"FunctionDeclaration","paramnames":["el","selectorString"]},"vars":{"node":"elementMatches~node"}},"description":"\nPolyfill for Element.matches (https://developer.mozilla.org/en-US/docs/Web/API/Element/matches)","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"},{"type":{"names":["String"]},"description":"a string representing the selector to test","name":"selectorString"}],"returns":[{"type":{"names":["boolean"]},"description":"if the element would be selected by the specified selector string"}],"name":"elementMatches","longname":"elementMatches","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/elementMatches.js","extension":".js","srcPath":"packages/ui-dom-utils/src/elementMatches.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/elementMatches.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/elementMatches","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/elementMatches.js').default","esPath":"@instructure/ui-dom-utils/es/elementMatches","id":"elementMatches","title":"elementMatches"},"findDOMNode":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Wrapper function for React.findDOMNode\n *\n * @param {ReactComponent|DomNode} el - component, DOM node, or function returning a DOM node\n * @returns {DomNode} The root node of this element\n */","meta":{"range":[1438,1832],"filename":"eb6swt8duzvn6g2lifqvig.js","lineno":37,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"findDOMNode","type":"FunctionDeclaration","paramnames":["el"]},"vars":{"node":"findDOMNode~node"}},"description":"\nWrapper function for React.findDOMNode","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component, DOM node, or function returning a DOM node","name":"el"}],"returns":[{"type":{"names":["DomNode"]},"description":"The root node of this element"}],"name":"findDOMNode","longname":"findDOMNode","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/findDOMNode.js","extension":".js","srcPath":"packages/ui-dom-utils/src/findDOMNode.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/findDOMNode.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/findDOMNode","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/findDOMNode.js').default","esPath":"@instructure/ui-dom-utils/es/findDOMNode","id":"findDOMNode","title":"findDOMNode"},"findFocusable":{"comment":"/**\n   * ---\n   * category: utilities/a11y\n   * ---\n   *\n   * Given an element, finds and returns all visible, focusable children.\n   * Focusable elements include input, select, textarea, button, and object.\n   * Anchor tags are also focusable if they include an href or\n   * tabindex attribute (including tabindeces less than zero).\n   *\n   * @param {ReactComponent|DomNode} el - component or DOM node\n   * @param {Function} filter - a function to filter the matching nodes\n   * @param {Boolean} shouldSearchRootNode - should the root node be included in the search\n   * @returns {Array} array of all tabbable children\n   */","meta":{"range":[3625,3638],"filename":"vbzxngpu3w2tlztahc5ze.js","lineno":118,"columnno":2,"path":"/tmp","code":{"id":"astnode100000220","name":"exports.findFocusable","type":"Identifier"}},"description":"\nGiven an element, finds and returns all visible, focusable children.\nFocusable elements include input, select, textarea, button, and object.\nAnchor tags are also focusable if they include an href or\ntabindex attribute (including tabindeces less than zero).","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"},{"type":{"names":["function"]},"description":"a function to filter the matching nodes","name":"filter"},{"type":{"names":["Boolean"]},"description":"should the root node be included in the search","name":"shouldSearchRootNode"}],"returns":[{"type":{"names":["Array"]},"description":"array of all tabbable children"}],"name":"findFocusable","longname":"findFocusable","kind":"member","scope":"global","sections":[],"undocumented":false,"category":"utilities/a11y","order":"","relativePath":"packages/ui-dom-utils/src/findFocusable.js","extension":".js","srcPath":"packages/ui-dom-utils/src/findFocusable.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/findFocusable.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/findFocusable","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/findFocusable.js').default","esPath":"@instructure/ui-dom-utils/es/findFocusable","id":"findFocusable","title":"findFocusable"},"findTabbable":{"comment":"/**\n   * ---\n   * category: utilities/a11y\n   * ---\n   *\n   * Given an element, finds and returns all visible, tabbable children.\n   * Tabbable elements include input, select, textarea, button, and object.\n   * Anchor tags are also tabbable if they include an href or zero or positive\n   * tabindex attribute (to include elements with negative tabindex attributes,\n   * use findFocusable).\n   *\n   * @param {ReactComponent|DomNode} el - component or DOM node\n   * @param {Boolean} shouldSearchRootNode - should the root node be included in the search\n   * @returns {Array} array of all tabbable children\n   */","meta":{"range":[2151,2163],"filename":"eeepph37gnuictispqxkpl.js","lineno":58,"columnno":2,"path":"/tmp","code":{"id":"astnode100000044","name":"exports.findTabbable","type":"Identifier"}},"description":"\nGiven an element, finds and returns all visible, tabbable children.\nTabbable elements include input, select, textarea, button, and object.\nAnchor tags are also tabbable if they include an href or zero or positive\ntabindex attribute (to include elements with negative tabindex attributes,\nuse findFocusable).","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"},{"type":{"names":["Boolean"]},"description":"should the root node be included in the search","name":"shouldSearchRootNode"}],"returns":[{"type":{"names":["Array"]},"description":"array of all tabbable children"}],"name":"findTabbable","longname":"findTabbable","kind":"member","scope":"global","sections":[],"undocumented":false,"category":"utilities/a11y","order":"","relativePath":"packages/ui-dom-utils/src/findTabbable.js","extension":".js","srcPath":"packages/ui-dom-utils/src/findTabbable.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/findTabbable.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/findTabbable","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/findTabbable.js').default","esPath":"@instructure/ui-dom-utils/es/findTabbable","id":"findTabbable","title":"findTabbable"},"getActiveElement":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Get the active element of the specified document\n *\n * @param {DomNode} doc - document by default or user specified doc\n * @throws Will throw an error in ie if no active element\n * @return {DomNode} the active element\n */","meta":{"range":[1434,1580],"filename":"k3cjzclts5hcu272q9dy3o.js","lineno":36,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"getActiveElement","type":"FunctionDeclaration","paramnames":["doc"]}},"description":"\nGet the active element of the specified document","params":[{"type":{"names":["DomNode"]},"description":"document by default or user specified doc","name":"doc"}],"exceptions":[{"description":"Will throw an error in ie if no active element"}],"returns":[{"type":{"names":["DomNode"]},"description":"the active element"}],"name":"getActiveElement","longname":"getActiveElement","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/getActiveElement.js","extension":".js","srcPath":"packages/ui-dom-utils/src/getActiveElement.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/getActiveElement.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/getActiveElement","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/getActiveElement.js').default","esPath":"@instructure/ui-dom-utils/es/getActiveElement","id":"getActiveElement","title":"getActiveElement"},"getBoundingClientRect":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Gets the bounding rectangle of an element\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @return {object} rect - object with top, left coords and height and width\n */","meta":{"range":[1571,3288],"filename":"i1iqhmik84ehdtfp8e7sua.js","lineno":40,"columnno":0,"path":"/tmp","code":{"id":"astnode100000018","name":"getBoundingClientRect","type":"FunctionDeclaration","paramnames":["el"]},"vars":{"rect":"getBoundingClientRect~rect","node":"getBoundingClientRect~node","doc":"getBoundingClientRect~doc","docEl":"getBoundingClientRect~docEl","boundingRect":"getBoundingClientRect~boundingRect","k":"getBoundingClientRect~k","rect[undefined]":"getBoundingClientRect~rect.undefined]","frameElement":"getBoundingClientRect~frameElement","frameRect":"getBoundingClientRect~frameRect","rect.top":"getBoundingClientRect~rect.top","rect.bottom":"getBoundingClientRect~rect.bottom","rect.left":"getBoundingClientRect~rect.left","rect.right":"getBoundingClientRect~rect.right"}},"description":"\nGets the bounding rectangle of an element","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"}],"returns":[{"type":{"names":["object"]},"description":"rect - object with top, left coords and height and width"}],"name":"getBoundingClientRect","longname":"getBoundingClientRect","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/getBoundingClientRect.js","extension":".js","srcPath":"packages/ui-dom-utils/src/getBoundingClientRect.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/getBoundingClientRect.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/getBoundingClientRect","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/getBoundingClientRect.js').default","esPath":"@instructure/ui-dom-utils/es/getBoundingClientRect","id":"getBoundingClientRect","title":"getBoundingClientRect"},"getClassList":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Produces a classList object containing functions\n * for both adding and removing classes from an element.\n * Also provides a contains function to query if the\n * element contains a specified class name.\n *\n * @param {ReactComponent|DomNode} element - component or DOM node\n * @return {Object} object containing classList functions 'contains', 'add', and 'remove'\n */","meta":{"range":[1765,2192],"filename":"wvhor92l0udn2dlfi5zr4.js","lineno":49,"columnno":0,"path":"/tmp","code":{"id":"astnode100000026","name":"getClassList","type":"FunctionDeclaration","paramnames":["element"]},"vars":{"node":"getClassList~node","classListApi":"getClassList~classListApi","":null}},"description":"\nProduces a classList object containing functions\nfor both adding and removing classes from an element.\nAlso provides a contains function to query if the\nelement contains a specified class name.","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"element"}],"returns":[{"type":{"names":["Object"]},"description":"object containing classList functions 'contains', 'add', and 'remove'"}],"name":"getClassList","longname":"getClassList","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/getClassList.js","extension":".js","srcPath":"packages/ui-dom-utils/src/getClassList.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/getClassList.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/getClassList","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/getClassList.js').default","esPath":"@instructure/ui-dom-utils/es/getClassList","id":"getClassList","title":"getClassList"},"getComputedStyle":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Get the associated CSS properties and values for a\n * specified element\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @returns {Object} object containing css properties and values for the element\n */","meta":{"range":[1563,1755],"filename":"f3yboue6m2fewh5nsfsk36.js","lineno":40,"columnno":0,"path":"/tmp","code":{"id":"astnode100000014","name":"getComputedStyle","type":"FunctionDeclaration","paramnames":["el"]},"vars":{"style":"getComputedStyle~style","node":"getComputedStyle~node"}},"description":"\nGet the associated CSS properties and values for a\nspecified element","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"}],"returns":[{"type":{"names":["Object"]},"description":"object containing css properties and values for the element"}],"name":"getComputedStyle","longname":"getComputedStyle","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/getComputedStyle.js","extension":".js","srcPath":"packages/ui-dom-utils/src/getComputedStyle.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/getComputedStyle.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/getComputedStyle","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/getComputedStyle.js').default","esPath":"@instructure/ui-dom-utils/es/getComputedStyle","id":"getComputedStyle","title":"getComputedStyle"},"getFontSize":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Gets font size in px\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @returns {Object} font size in px\n */","meta":{"range":[1508,2019],"filename":"y2n20481smta78tc475d.js","lineno":40,"columnno":0,"path":"/tmp","code":{"id":"astnode100000018","name":"getFontSize","type":"FunctionDeclaration","paramnames":["el","ignoreCache"]},"vars":{"container":"getFontSize~container","fontSize":"getFontSize~fontSize","COMPUTED_CACHE[undefined]":null}},"description":"\nGets font size in px","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"}],"returns":[{"type":{"names":["Object"]},"description":"font size in px"}],"name":"getFontSize","longname":"getFontSize","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/getFontSize.js","extension":".js","srcPath":"packages/ui-dom-utils/src/getFontSize.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/getFontSize.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/getFontSize","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/getFontSize.js').default","esPath":"@instructure/ui-dom-utils/es/getFontSize","id":"getFontSize","title":"getFontSize"},"getOffsetParents":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Retrieves the offset parents of a specified element.\n * Includes parents of nodeType 1 (Element nodes such\n * as <p> or <div>) that have either been transformed\n * or that do not have static position.\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @returns {Array} offset parents\n */","meta":{"range":[1704,2779],"filename":"pkvt4qqga1s1o68ku4txsg.js","lineno":43,"columnno":0,"path":"/tmp","code":{"id":"astnode100000018","name":"getOffsetParents","type":"FunctionDeclaration","paramnames":["el"]},"vars":{"parents":"getOffsetParents~parents","node":"getOffsetParents~node","parent":"getOffsetParents~parent","style":"getOffsetParents~style","transform":"getOffsetParents~transform","transformDefault":"getOffsetParents~transformDefault"}},"description":"\nRetrieves the offset parents of a specified element.\nIncludes parents of nodeType 1 (Element nodes such\nas <p> or <div>) that have either been transformed\nor that do not have static position.","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"}],"returns":[{"type":{"names":["Array"]},"description":"offset parents"}],"name":"getOffsetParents","longname":"getOffsetParents","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/getOffsetParents.js","extension":".js","srcPath":"packages/ui-dom-utils/src/getOffsetParents.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/getOffsetParents.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/getOffsetParents","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/getOffsetParents.js').default","esPath":"@instructure/ui-dom-utils/es/getOffsetParents","id":"getOffsetParents","title":"getOffsetParents"},"getScrollParents":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Retrieves the scroll parents of a specified element.\n * Includes parents of nodeType 1 (Element nodes such\n * as <p> or <div>) that have overflow css properties\n * set to auto, scroll, or overlay\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @returns {Array} scroll parents\n */","meta":{"range":[1651,3101],"filename":"wu6halm4icq8zamcc6jpr.js","lineno":42,"columnno":0,"path":"/tmp","code":{"id":"astnode100000014","name":"getScrollParents","type":"FunctionDeclaration","paramnames":["el"]},"vars":{"parents":"getScrollParents~parents","node":"getScrollParents~node","computedStyle":"getScrollParents~computedStyle","position":"getScrollParents~position","parent":"getScrollParents~parent","style":"getScrollParents~style","undefined":null}},"description":"\nRetrieves the scroll parents of a specified element.\nIncludes parents of nodeType 1 (Element nodes such\nas <p> or <div>) that have overflow css properties\nset to auto, scroll, or overlay","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"}],"returns":[{"type":{"names":["Array"]},"description":"scroll parents"}],"name":"getScrollParents","longname":"getScrollParents","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/getScrollParents.js","extension":".js","srcPath":"packages/ui-dom-utils/src/getScrollParents.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/getScrollParents.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/getScrollParents","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/getScrollParents.js').default","esPath":"@instructure/ui-dom-utils/es/getScrollParents","id":"getScrollParents","title":"getScrollParents"},"handleMouseOverOut":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Simple implementation of mouseEnter and mouseLeave.\n * React's built version is broken: https://github.com/facebook/react/issues/4251\n * for cases when the trigger is disabled and mouseOut/Over can cause flicker moving\n * from one child element to another.\n *\n * @param handler {function} Callback function for handling the event\n * @param event {Event} The DOM Event that was fired\n */","meta":{"range":[1638,1887],"filename":"84mcpwgji55le346ieizts.js","lineno":40,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"handleMouseOverOut","type":"FunctionDeclaration","paramnames":["handler","event"]},"vars":{"target":"handleMouseOverOut~target","related":"handleMouseOverOut~related"}},"description":"\nSimple implementation of mouseEnter and mouseLeave.\nReact's built version is broken: https://github.com/facebook/react/issues/4251\nfor cases when the trigger is disabled and mouseOut/Over can cause flicker moving\nfrom one child element to another.","params":[{"type":{"names":["function"]},"description":"Callback function for handling the event","name":"handler"},{"type":{"names":["Event"]},"description":"The DOM Event that was fired","name":"event"}],"name":"handleMouseOverOut","longname":"handleMouseOverOut","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/handleMouseOverOut.js","extension":".js","srcPath":"packages/ui-dom-utils/src/handleMouseOverOut.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/handleMouseOverOut.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/handleMouseOverOut","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/handleMouseOverOut.js').default","esPath":"@instructure/ui-dom-utils/es/handleMouseOverOut","id":"handleMouseOverOut","title":"handleMouseOverOut"},"isActiveElement":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Determine if an element is the active element\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @returns {boolean} if the element is the active element\n */","meta":{"range":[1485,1599],"filename":"bzkqfrvvved5ay6wcbxjvj.js","lineno":38,"columnno":0,"path":"/tmp","code":{"id":"astnode100000010","name":"isActiveElement","type":"FunctionDeclaration","paramnames":["el"]},"vars":{"node":"isActiveElement~node"}},"description":"\nDetermine if an element is the active element","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"}],"returns":[{"type":{"names":["boolean"]},"description":"if the element is the active element"}],"name":"isActiveElement","longname":"isActiveElement","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/isActiveElement.js","extension":".js","srcPath":"packages/ui-dom-utils/src/isActiveElement.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/isActiveElement.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/isActiveElement","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/isActiveElement.js').default","esPath":"@instructure/ui-dom-utils/es/isActiveElement","id":"isActiveElement","title":"isActiveElement"},"isVisible":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Determine if an element is visible.\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @param {boolean} recursive - by default all parent elements are checked\n * recursively to accurately determine visibility. setting this to `false`\n * will determine visibility based only on the styles of the given node.\n * @returns {boolean} if the element is visible\n */","meta":{"range":[1687,2759],"filename":"0q17cg3q68qf1348er8ezfih.js","lineno":41,"columnno":0,"path":"/tmp","code":{"id":"astnode100000010","name":"isVisible","type":"FunctionDeclaration","paramnames":["el","recursive"]},"vars":{"node":"isVisible~node","parent":"isVisible~parent","style":"isVisible~style","rect":"isVisible~rect","zeros":"isVisible~zeros","":null}},"description":"\nDetermine if an element is visible.","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"},{"type":{"names":["boolean"]},"description":"by default all parent elements are checked\nrecursively to accurately determine visibility. setting this to `false`\nwill determine visibility based only on the styles of the given node.","name":"recursive","defaultvalue":true}],"returns":[{"type":{"names":["boolean"]},"description":"if the element is visible"}],"name":"isVisible","longname":"isVisible","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/isVisible.js","extension":".js","srcPath":"packages/ui-dom-utils/src/isVisible.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/isVisible.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/isVisible","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/isVisible.js').default","esPath":"@instructure/ui-dom-utils/es/isVisible","id":"isVisible","title":"isVisible"},"matchMedia":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Wrapper function for window.matchMedia\n *\n * see https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n *\n * @param {string} query - media query string\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @returns {Object} a media query list object\n */","meta":{"range":[1619,1754],"filename":"uho8gxy2e24oo8r4bp2q4.js","lineno":42,"columnno":0,"path":"/tmp","code":{"id":"astnode100000014","name":"matchMedia","type":"FunctionDeclaration","paramnames":["query","el"]},"vars":{"node":"matchMedia~node"}},"description":"\nWrapper function for window.matchMedia\n\nsee https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia","params":[{"type":{"names":["string"]},"description":"media query string","name":"query"},{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"}],"returns":[{"type":{"names":["Object"]},"description":"a media query list object"}],"name":"matchMedia","longname":"matchMedia","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/matchMedia.js","extension":".js","srcPath":"packages/ui-dom-utils/src/matchMedia.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/matchMedia.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/matchMedia","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/matchMedia.js').default","esPath":"@instructure/ui-dom-utils/es/matchMedia","id":"matchMedia","title":"matchMedia"},"ownerDocument":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Retrieve the owner document of a specified element\n *\n * @param {ReactElement|DOMNode} el\n * @returns {DomNode} the owner document\n */","meta":{"range":[1392,1509],"filename":"8gdk2j41cpl5w8kvj6p1ps.js","lineno":37,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"ownerDocument","type":"FunctionDeclaration","paramnames":["el"]},"vars":{"node":"ownerDocument~node"}},"description":"\nRetrieve the owner document of a specified element","params":[{"type":{"names":["ReactElement","DOMNode"]},"name":"el"}],"returns":[{"type":{"names":["DomNode"]},"description":"the owner document"}],"name":"ownerDocument","longname":"ownerDocument","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/ownerDocument.js","extension":".js","srcPath":"packages/ui-dom-utils/src/ownerDocument.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/ownerDocument.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/ownerDocument","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/ownerDocument.js').default","esPath":"@instructure/ui-dom-utils/es/ownerDocument","id":"ownerDocument","title":"ownerDocument"},"ownerWindow":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n * Retrieve the owner window object associated with\n * the owner document of the specified element\n * @param {ReactElement|DOMNode} el\n * @returns {Object} the owner window\n */","meta":{"range":[1476,1629],"filename":"ceidqkemgyv6q4e6ugftj8.js","lineno":37,"columnno":0,"path":"/tmp","code":{"id":"astnode100000010","name":"ownerWindow","type":"FunctionDeclaration","paramnames":["el"]},"vars":{"node":"ownerWindow~node","doc":"ownerWindow~doc"}},"description":"Retrieve the owner window object associated with\nthe owner document of the specified element","params":[{"type":{"names":["ReactElement","DOMNode"]},"name":"el"}],"returns":[{"type":{"names":["Object"]},"description":"the owner window"}],"name":"ownerWindow","longname":"ownerWindow","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/ownerWindow.js","extension":".js","srcPath":"packages/ui-dom-utils/src/ownerWindow.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/ownerWindow.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/ownerWindow","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/ownerWindow.js').default","esPath":"@instructure/ui-dom-utils/es/ownerWindow","id":"ownerWindow","title":"ownerWindow"},"requestAnimationFrame":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * If DOM is usable, returns a function wrapper for\n * window.requestAnimationFrame. Otherwise sets\n * a manual timeout.\n *\n * @returns {function} requestAnimationFrame takes a callback function as an argument and returns a cancel method\n */","meta":{"range":[1498,2247],"filename":"5zilhzn48vfmpd0w0g9n2e.js","lineno":38,"columnno":6,"path":"/tmp","code":{"id":"astnode100000007","name":"requestAnimationFrame","type":"CallExpression","value":""}},"description":"\nIf DOM is usable, returns a function wrapper for\nwindow.requestAnimationFrame. Otherwise sets\na manual timeout.","returns":[{"type":{"names":["function"]},"description":"requestAnimationFrame takes a callback function as an argument and returns a cancel method"}],"name":"requestAnimationFrame","longname":"requestAnimationFrame","kind":"constant","scope":"global","params":[],"sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/requestAnimationFrame.js","extension":".js","srcPath":"packages/ui-dom-utils/src/requestAnimationFrame.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/requestAnimationFrame.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/requestAnimationFrame","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/requestAnimationFrame.js').default","esPath":"@instructure/ui-dom-utils/es/requestAnimationFrame","id":"requestAnimationFrame","title":"requestAnimationFrame"},"supportsObjectFit":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Performs simple test to determine the browser supports CSS object-fit.\n *\n * https://caniuse.com/#feat=object-fit\n *\n * @module\n * @returns {boolean} true if object-fit is supported\n */","meta":{"filename":"p8736j0yb9hoh0xyuho1il.js","lineno":26,"columnno":0,"path":"/tmp","code":{}},"description":"\nPerforms simple test to determine the browser supports CSS object-fit.\n\nhttps://caniuse.com/#feat=object-fit","kind":"module","name":"p8736j0yb9hoh0xyuho1il","returns":[{"type":{"names":["boolean"]},"description":"true if object-fit is supported"}],"longname":"module:p8736j0yb9hoh0xyuho1il","sections":[],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/supportsObjectFit.js","extension":".js","srcPath":"packages/ui-dom-utils/src/supportsObjectFit.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/supportsObjectFit.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/supportsObjectFit","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/supportsObjectFit.js').default","esPath":"@instructure/ui-dom-utils/es/supportsObjectFit","id":"supportsObjectFit","title":"supportsObjectFit"},"transformSelection":{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * transformSelection - Calculate the resulting text selection\n * of a changing text-containing HTML element\n * @module transformSelection\n * @param {DomNode} element - HTML element with selection capabilities\n * @param {string} cleanedValue - new value that will be given to the HTML element\n * @return {Object} resulting selection values\n */","meta":{"filename":"f5w6n3ez6ttv2625gfk2.js","lineno":25,"columnno":0,"path":"/tmp","code":{}},"description":"\ntransformSelection - Calculate the resulting text selection\nof a changing text-containing HTML element","kind":"module","name":"transformSelection","params":[{"type":{"names":["DomNode"]},"description":"HTML element with selection capabilities","name":"element"},{"type":{"names":["string"]},"description":"new value that will be given to the HTML element","name":"cleanedValue"}],"returns":[{"type":{"names":["Object"]},"description":"resulting selection values"}],"longname":"module:transformSelection","sections":[{"comment":"/**\n * Calculate the resulting cursor position\n * within a string when some characters are removed\n *\n * @param {number} cursorIndex - original cursor index\n * @param {string} dirtyValue - original string\n * @param {string} cleanedValue - original string with some characters removed\n * @returns {number} resulting cursor index\n */","meta":{"range":[2202,2673],"filename":"f5w6n3ez6ttv2625gfk2.js","lineno":56,"columnno":0,"path":"/tmp","code":{"id":"astnode100000035","name":"transformCursor","type":"FunctionDeclaration","paramnames":["cursorIndex","dirtyValue","cleanedValue"]},"vars":{"":null}},"description":"Calculate the resulting cursor position\nwithin a string when some characters are removed","params":[{"type":{"names":["number"]},"description":"original cursor index","name":"cursorIndex"},{"type":{"names":["string"]},"description":"original string","name":"dirtyValue"},{"type":{"names":["string"]},"description":"original string with some characters removed","name":"cleanedValue"}],"returns":[{"type":{"names":["number"]},"description":"resulting cursor index"}],"name":"transformCursor","longname":"module:transformSelection~transformCursor","kind":"function","scope":"inner","memberof":"module:transformSelection","id":"module:transformSelection~transformCursor","title":"module:transformSelection~transformCursor"}],"undocumented":false,"category":"utilities/DOM","order":"","relativePath":"packages/ui-dom-utils/src/transformSelection.js","extension":".js","srcPath":"packages/ui-dom-utils/src/transformSelection.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/transformSelection.js","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/transformSelection","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/transformSelection.js').default","esPath":"@instructure/ui-dom-utils/es/transformSelection","id":"transformSelection","title":"transformSelection"},"FormPropTypes":{"comment":"/**\n * ---\n * category: utilities/form\n * ---\n * Custom prop types for React components.\n * @module FormPropTypes\n */","meta":{"filename":"0qmcghu3s2eho0ruk6st7cq.js","lineno":27,"columnno":0,"path":"/tmp","code":{}},"description":"Custom prop types for React components.","kind":"module","name":"FormPropTypes","longname":"module:FormPropTypes","sections":[],"undocumented":false,"category":"utilities/form","order":"","relativePath":"packages/ui-form-field/src/FormPropTypes.js","extension":".js","srcPath":"packages/ui-form-field/src/FormPropTypes.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormPropTypes.js","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormPropTypes","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormPropTypes.js').default","esPath":"@instructure/ui-form-field/es/FormPropTypes","id":"FormPropTypes","title":"FormPropTypes"},"DateTime":{"comment":"/**\n * ---\n * category: utilities/i18n\n * ---\n * A wrapper for [moment](https://momentjs.com/) utils.\n * @module DateTime\n */","meta":{"filename":"k3qhxjemtch2ld8p8ylfb.js","lineno":27,"columnno":0,"path":"/tmp","code":{}},"description":"A wrapper for [moment](https://momentjs.com/) utils.","kind":"module","name":"DateTime","longname":"module:DateTime","sections":[{"comment":"/**\n * Return an instance of a [moment](https://momentjs.com) initialized with the current date + time\n * @param {String} locale\n * @param {String} timezone\n * @returns {Object} an instance of a moment.\n */","meta":{"range":[1533,1646],"filename":"k3qhxjemtch2ld8p8ylfb.js","lineno":41,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"now","type":"FunctionDeclaration","paramnames":["locale","timezone"]}},"description":"Return an instance of a [moment](https://momentjs.com) initialized with the current date + time","params":[{"type":{"names":["String"]},"name":"locale"},{"type":{"names":["String"]},"name":"timezone"}],"returns":[{"type":{"names":["Object"]},"description":"an instance of a moment."}],"name":"now","longname":"module:DateTime~now","kind":"function","scope":"inner","memberof":"module:DateTime","id":"module:DateTime~now","title":"module:DateTime~now"},{"comment":"/**\n * Parses a string into a localized ISO 8601 string with timezone\n * @param {String} dateString\n * @param {String} locale\n * @param {String} timezone\n * @returns {String} ISO 8601 string\n */","meta":{"range":[1843,2135],"filename":"k3qhxjemtch2ld8p8ylfb.js","lineno":53,"columnno":0,"path":"/tmp","code":{"id":"astnode100000027","name":"parse","type":"FunctionDeclaration","paramnames":["dateString","locale","timezone"]}},"description":"Parses a string into a localized ISO 8601 string with timezone","params":[{"type":{"names":["String"]},"name":"dateString"},{"type":{"names":["String"]},"name":"locale"},{"type":{"names":["String"]},"name":"timezone"}],"returns":[{"type":{"names":["String"]},"description":"ISO 8601 string"}],"name":"parse","longname":"module:DateTime~parse","kind":"function","scope":"inner","memberof":"module:DateTime","id":"module:DateTime~parse","title":"module:DateTime~parse"},{"comment":"/**\n * Determines if a string is a valid ISO 8601 string\n * @param {String} dateString\n * @returns {Boolean} true if dateString is a valid ISO 8601 string\n */","meta":{"range":[2296,2385],"filename":"k3qhxjemtch2ld8p8ylfb.js","lineno":69,"columnno":0,"path":"/tmp","code":{"id":"astnode100000058","name":"isValid","type":"FunctionDeclaration","paramnames":["dateString"]}},"description":"Determines if a string is a valid ISO 8601 string","params":[{"type":{"names":["String"]},"name":"dateString"}],"returns":[{"type":{"names":["Boolean"]},"description":"true if dateString is a valid ISO 8601 string"}],"name":"isValid","longname":"module:DateTime~isValid","kind":"function","scope":"inner","memberof":"module:DateTime","id":"module:DateTime~isValid","title":"module:DateTime~isValid"},{"comment":"/**\n * Get the users's time zone (or guess)\n * see https://momentjs.com/timezone/docs/#/using-timezones/guessing-user-timezone/\n * @returns {String} a time zone identifier (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n */","meta":{"range":[2630,2687],"filename":"k3qhxjemtch2ld8p8ylfb.js","lineno":78,"columnno":0,"path":"/tmp","code":{"id":"astnode100000073","name":"browserTimeZone","type":"FunctionDeclaration","paramnames":[]}},"description":"Get the users's time zone (or guess)\nsee https://momentjs.com/timezone/docs/#/using-timezones/guessing-user-timezone/","returns":[{"type":{"names":["String"]},"description":"a time zone identifier (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"}],"name":"browserTimeZone","longname":"module:DateTime~browserTimeZone","kind":"function","scope":"inner","memberof":"module:DateTime","params":[],"id":"module:DateTime~browserTimeZone","title":"module:DateTime~browserTimeZone"},{"comment":"/**\n * Return a localized date + time with timezone as a ISO 8601 string\n * @param {String} dateString\n * @param {String} locale\n * @param {String} timezone\n * @param {String} format\n * @returns {String} Localized ISO 8601 string\n */","meta":{"range":[2923,3148],"filename":"k3qhxjemtch2ld8p8ylfb.js","lineno":90,"columnno":0,"path":"/tmp","code":{"id":"astnode100000083","name":"toLocaleString","type":"FunctionDeclaration","paramnames":["dateString","locale","timezone","format"]},"vars":{"d":"module:DateTime~toLocaleString~d","iso8601format":"module:DateTime~toLocaleString~iso8601format"}},"description":"Return a localized date + time with timezone as a ISO 8601 string","params":[{"type":{"names":["String"]},"name":"dateString"},{"type":{"names":["String"]},"name":"locale"},{"type":{"names":["String"]},"name":"timezone"},{"type":{"names":["String"]},"name":"format"}],"returns":[{"type":{"names":["String"]},"description":"Localized ISO 8601 string"}],"name":"toLocaleString","longname":"module:DateTime~toLocaleString","kind":"function","scope":"inner","memberof":"module:DateTime","id":"module:DateTime~toLocaleString","title":"module:DateTime~toLocaleString"}],"undocumented":false,"category":"utilities/i18n","order":"","relativePath":"packages/ui-i18n/src/DateTime.js","extension":".js","srcPath":"packages/ui-i18n/src/DateTime.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/src/DateTime.js","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/lib/DateTime","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/src/DateTime.js').default","esPath":"@instructure/ui-i18n/es/DateTime","id":"DateTime","title":"DateTime"},"I18nPropTypes":{"comment":"/**\n   * ---\n   * category: utilities/i18n\n   * ---\n   * @module I18nPropTypes\n   * Custom I18n prop types for React components.\n   */","meta":{"filename":"u7u3chf9v71bjrfmhv1y3.js","lineno":66,"columnno":2,"path":"/tmp","code":{}},"description":"","kind":"module","name":"I18nPropTypes\nCustom I18n prop types for React components.","longname":"I18nPropTypes\nCustom I18n prop types for React components.module:","sections":[{"comment":"/**\n   *\n   * Verify that the given prop is a correctly formatted ISO 8601 formatted string.\n   *\n   * @param {Object} props - object containing the component props\n   * @param {string} propName - name of the given prop\n   * @param {string} componentName - name of the component\n   * @param {string} location\n   * @param {string} propFullName\n   * @returns {Error} if prop is an invalid ISO 8601 string\n   */","meta":{"range":[1659,2683],"filename":"u7u3chf9v71bjrfmhv1y3.js","lineno":39,"columnno":2,"path":"/tmp","code":{"id":"astnode100000010","name":"iso8601","type":"FunctionExpression"},"vars":{"propValue":"I18nPropTypes.iso8601~propValue","propValueType":"I18nPropTypes.iso8601~propValueType","iso8601regex":"I18nPropTypes.iso8601~iso8601regex"}},"description":"Verify that the given prop is a correctly formatted ISO 8601 formatted string.","params":[{"type":{"names":["Object"]},"description":"object containing the component props","name":"props"},{"type":{"names":["string"]},"description":"name of the given prop","name":"propName"},{"type":{"names":["string"]},"description":"name of the component","name":"componentName"},{"type":{"names":["string"]},"name":"location"},{"type":{"names":["string"]},"name":"propFullName"}],"returns":[{"type":{"names":["Error"]},"description":"if prop is an invalid ISO 8601 string"}],"name":"iso8601","longname":"I18nPropTypes.iso8601","kind":"function","memberof":"I18nPropTypes","scope":"static","id":"I18nPropTypes.iso8601","title":"I18nPropTypes.iso8601"}],"undocumented":false,"category":"utilities/i18n","order":"","relativePath":"packages/ui-i18n/src/I18nPropTypes.js","extension":".js","srcPath":"packages/ui-i18n/src/I18nPropTypes.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/src/I18nPropTypes.js","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/lib/I18nPropTypes","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/src/I18nPropTypes.js').default","esPath":"@instructure/ui-i18n/es/I18nPropTypes","id":"I18nPropTypes","title":"I18nPropTypes"},"Locale":{"comment":"/**\n * ---\n * category: utilities/i18n\n * ---\n * Localization utilities\n * @module Locale\n */","meta":{"filename":"x7i1c687laer224fsk6ucs.js","lineno":29,"columnno":0,"path":"/tmp","code":{}},"description":"Localization utilities","kind":"module","name":"Locale","longname":"module:Locale","sections":[{"comment":"/**\n   * Return the locale from the browser\n   * @returns {String} locale (defaults to 'en-US')\n   */","meta":{"range":[1482,2129],"filename":"x7i1c687laer224fsk6ucs.js","lineno":43,"columnno":2,"path":"/tmp","code":{"id":"astnode100000016","name":"browserLocale","type":"FunctionExpression"},"vars":{"documentLanguage":"module:Locale~Locale.browserLocale~documentLanguage","hasNavigatorLanguages":"module:Locale~Locale.browserLocale~hasNavigatorLanguages","hasNavigatorLanguage":"module:Locale~Locale.browserLocale~hasNavigatorLanguage"}},"description":"Return the locale from the browser","returns":[{"type":{"names":["String"]},"description":"locale (defaults to 'en-US')"}],"name":"browserLocale","longname":"module:Locale~Locale.browserLocale","kind":"function","memberof":"module:Locale~Locale","scope":"static","id":"module:Locale~Locale.browserLocale","title":"module:Locale~Locale.browserLocale"}],"undocumented":false,"category":"utilities/i18n","order":"","relativePath":"packages/ui-i18n/src/Locale.js","extension":".js","srcPath":"packages/ui-i18n/src/Locale.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/src/Locale.js","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/lib/Locale","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/src/Locale.js').default","esPath":"@instructure/ui-i18n/es/Locale","id":"Locale","title":"Locale"},"bidirectional":{"comment":"/**\n * ---\n * category: utilities/i18n\n * ---\n * A decorator or higher order component that makes a component `bidirectional`.\n *\n * As a HOC:\n *\n * ```js\n * import { bidirectional } from '@instructure/ui-i18n'\n *\n * class Example extends React.Component {\n *   render () {\n *     return this.props.dir === bidirectional.DIRECTION.rtl ? <div>rtl</div> : <div>ltr</div>\n *   }\n * }\n *\n * export default bidirectional()(Example)\n * ```\n *\n * When used as a child of [ApplyTextDirection](#ApplyTextDirection), bidirectional components use\n * the direction provided in the context. When used without [ApplyTextDirection](#ApplyTextDirection),\n * the direction can be supplied explicitly via the `dir` prop. If no `dir` prop is provided,\n * bidirectional components query the documentElement for the `dir` attribute, defaulting to `ltr`\n * if it is not present.\n *\n * @return {function} composes the bidirectional component.\n */","meta":{"range":[2320,3327],"filename":"k4842lt9i29ia9dr0oj9d.js","lineno":58,"columnno":6,"path":"/tmp","code":{"id":"astnode100000023","name":"bidirectional","type":"CallExpression","value":""}},"description":"A decorator or higher order component that makes a component `bidirectional`.\n\nAs a HOC:\n\n```js\nimport { bidirectional } from '@instructure/ui-i18n'\n\nclass Example extends React.Component {\n  render () {\n    return this.props.dir === bidirectional.DIRECTION.rtl ? <div>rtl</div> : <div>ltr</div>\n  }\n}\n\nexport default bidirectional()(Example)\n```\n\nWhen used as a child of [ApplyTextDirection](#ApplyTextDirection), bidirectional components use\nthe direction provided in the context. When used without [ApplyTextDirection](#ApplyTextDirection),\nthe direction can be supplied explicitly via the `dir` prop. If no `dir` prop is provided,\nbidirectional components query the documentElement for the `dir` attribute, defaulting to `ltr`\nif it is not present.","returns":[{"type":{"names":["function"]},"description":"composes the bidirectional component."}],"name":"bidirectional","longname":"bidirectional","kind":"constant","scope":"global","params":[],"sections":[],"undocumented":false,"category":"utilities/i18n","order":"","relativePath":"packages/ui-i18n/src/bidirectional.js","extension":".js","srcPath":"packages/ui-i18n/src/bidirectional.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/src/bidirectional.js","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/lib/bidirectional","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/src/bidirectional.js').default","esPath":"@instructure/ui-i18n/es/bidirectional","id":"bidirectional","title":"bidirectional"},"getTextDirection":{"comment":"/**\n * ---\n * category: utilities/i18n\n * ---\n *\n * Return the direction ('ltr' or 'rtl') of an element\n * @param {Element} element will use the <html> element by default\n * @returns {String} 'ltr' or 'rtl' (or `undefined` if no DOM is present)\n */","meta":{"range":[2257,2505],"filename":"bx1key3oa4mez7wc7t2ocs.js","lineno":67,"columnno":0,"path":"/tmp","code":{"id":"astnode100000095","name":"getTextDirection","type":"FunctionDeclaration","paramnames":["element"]}},"description":"\nReturn the direction ('ltr' or 'rtl') of an element","params":[{"type":{"names":["Element"]},"description":"will use the <html> element by default","name":"element"}],"returns":[{"type":{"names":["String"]},"description":"'ltr' or 'rtl' (or `undefined` if no DOM is present)"}],"name":"getTextDirection","longname":"getTextDirection","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/i18n","order":"","relativePath":"packages/ui-i18n/src/getTextDirection.js","extension":".js","srcPath":"packages/ui-i18n/src/getTextDirection.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/src/getTextDirection.js","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/lib/getTextDirection","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/src/getTextDirection.js').default","esPath":"@instructure/ui-i18n/es/getTextDirection","id":"getTextDirection","title":"getTextDirection"},"PositionPropTypes":{"comment":"/**\n   * ---\n   * category: utilities/position\n   * ---\n   * Custom prop types for `ui-position` components.\n   * @module PositionPropTypes\n   */","meta":{"filename":"efozgacnnj5ralx06a3xv8.js","lineno":74,"columnno":2,"path":"/tmp","code":{}},"description":"Custom prop types for `ui-position` components.","kind":"module","name":"PositionPropTypes","longname":"module:PositionPropTypes","sections":[{"comment":"/**\n   * The placement of the content in relation to the trigger\n   */","meta":{"range":[1354,1788],"filename":"efozgacnnj5ralx06a3xv8.js","lineno":33,"columnno":2,"path":"/tmp","code":{"id":"astnode100000014","name":"placement","type":"CallExpression","value":""}},"description":"The placement of the content in relation to the trigger","name":"placement","longname":"PositionPropTypes.placement","kind":"member","memberof":"PositionPropTypes","scope":"static","id":"PositionPropTypes.placement","title":"PositionPropTypes.placement"},{"comment":"/**\n   * An element or a function returning an element to use as the mount node\n   */","meta":{"range":[1880,1937],"filename":"efozgacnnj5ralx06a3xv8.js","lineno":61,"columnno":2,"path":"/tmp","code":{"id":"astnode100000043","name":"mountNode","type":"CallExpression","value":""}},"description":"An element or a function returning an element to use as the mount node","name":"mountNode","longname":"PositionPropTypes.mountNode","kind":"member","memberof":"PositionPropTypes","scope":"static","id":"PositionPropTypes.mountNode","title":"PositionPropTypes.mountNode"},{"comment":"/**\n   * The parent in which to constrain a placement\n   */","meta":{"range":[2003,2140],"filename":"efozgacnnj5ralx06a3xv8.js","lineno":65,"columnno":2,"path":"/tmp","code":{"id":"astnode100000053","name":"constrain","type":"CallExpression","value":""}},"description":"The parent in which to constrain a placement","name":"constrain","longname":"PositionPropTypes.constrain","kind":"member","memberof":"PositionPropTypes","scope":"static","id":"PositionPropTypes.constrain","title":"PositionPropTypes.constrain"}],"undocumented":false,"category":"utilities/position","order":"","relativePath":"packages/ui-position/src/PositionPropTypes.js","extension":".js","srcPath":"packages/ui-position/src/PositionPropTypes.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-position/src/PositionPropTypes.js","packageName":"@instructure/ui-position","requirePath":"@instructure/ui-position/lib/PositionPropTypes","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-position/src/PositionPropTypes.js').default","esPath":"@instructure/ui-position/es/PositionPropTypes","id":"PositionPropTypes","title":"PositionPropTypes"},"calculateElementPosition":{"comment":"/**\n   * ---\n   * category: utilities/position\n   * ---\n   *\n   * Calculate the coordinates to attach an element\n   * to a designated target with specified constraints\n   * @module\n   * @param {ReactComponent|DomNode} el - component or DOM node\n   * @param {DomNode} target - the target DOM node\n   * @param {Object} options - constraints for the positioning\n   * @param {string} options.placement - designates where the element will be attached\n   *  ('top', 'bottom', 'left', 'right', 'top left' etc.)\n   * @param {DomNode} options.container - DOM node where the element is contained\n   * @param {boolean} options.over - whether or not you want the element to position over the target\n   * @param {string} options.constrain - if the element should be constrained to 'window',\n   *  'scroll-parent', 'parent', or 'none'\n   * @param {string|number} options.offsetX - the horizontal offset for the positioned element\n   * @param {string|number} options.offsetY - the vertical offset for the positioned element\n   * @returns {Object} object containing style with the calculated position in the 'transform'\n   *  property\n   */","meta":{"filename":"nym7x9434sne547su6b8dq.js","lineno":531,"columnno":2,"path":"/tmp","code":{}},"description":"\nCalculate the coordinates to attach an element\nto a designated target with specified constraints","kind":"module","name":"nym7x9434sne547su6b8dq","params":[{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"},{"type":{"names":["DomNode"]},"description":"the target DOM node","name":"target"},{"type":{"names":["Object"]},"description":"constraints for the positioning","name":"options"},{"type":{"names":["string"]},"description":"designates where the element will be attached\n ('top', 'bottom', 'left', 'right', 'top left' etc.)","name":"options.placement"},{"type":{"names":["DomNode"]},"description":"DOM node where the element is contained","name":"options.container"},{"type":{"names":["boolean"]},"description":"whether or not you want the element to position over the target","name":"options.over"},{"type":{"names":["string"]},"description":"if the element should be constrained to 'window',\n 'scroll-parent', 'parent', or 'none'","name":"options.constrain"},{"type":{"names":["string","number"]},"description":"the horizontal offset for the positioned element","name":"options.offsetX"},{"type":{"names":["string","number"]},"description":"the vertical offset for the positioned element","name":"options.offsetY"}],"returns":[{"type":{"names":["Object"]},"description":"object containing style with the calculated position in the 'transform'\n property"}],"longname":"module:nym7x9434sne547su6b8dq","sections":[],"undocumented":false,"category":"utilities/position","order":"","relativePath":"packages/ui-position/src/calculateElementPosition.js","extension":".js","srcPath":"packages/ui-position/src/calculateElementPosition.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-position/src/calculateElementPosition.js","packageName":"@instructure/ui-position","requirePath":"@instructure/ui-position/lib/calculateElementPosition","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-position/src/calculateElementPosition.js').default","esPath":"@instructure/ui-position/es/calculateElementPosition","id":"calculateElementPosition","title":"calculateElementPosition"},"mirrorPlacement":{"comment":"/**\n   * ---\n   * category: utilities/position\n   * ---\n   * Given a string or array of one or two placement values, mirrors the placement\n   * vertically or horizontally based on the first value.\n   *\n   * Examples\n   * ```js\n   * mirrorPlacement('top start') // input\n   * ['bottom', 'start'] // output\n   *\n   * mirrorPlacement('top start', ' ') // input\n   * 'bottom start' //output\n   * ```\n   *\n   * @param {string|Array} placement - a string of the form '<value> <value>' or array [<value>, <value>]\n   * @param {string} delimiter - when provided, a value with which the result array will be joined\n   * @returns {string|Array} - an array of values or, if the delimiter was supplied, a string of\n   *  delimiter separated values\n   *\n   * @module mirrorPlacement\n   **/","meta":{"filename":"9mat6y2m5ul2g4wtzkgyug.js","lineno":85,"columnno":2,"path":"/tmp","code":{}},"description":"Given a string or array of one or two placement values, mirrors the placement\nvertically or horizontally based on the first value.\n\nExamples\n```js\nmirrorPlacement('top start') // input\n['bottom', 'start'] // output\n\nmirrorPlacement('top start', ' ') // input\n'bottom start' //output\n```","params":[{"type":{"names":["string","Array"]},"description":"a string of the form '<value> <value>' or array [<value>, <value>]","name":"placement"},{"type":{"names":["string"]},"description":"when provided, a value with which the result array will be joined","name":"delimiter"}],"returns":[{"type":{"names":["string","Array"]},"description":"- an array of values or, if the delimiter was supplied, a string of\n delimiter separated values"}],"kind":"module","name":"mirrorPlacement","longname":"module:mirrorPlacement","sections":[{"comment":"/**\n * Given a string or array of one or two placement values, mirrors the placement\n * horizontally.\n *\n * Examples\n * ```js\n * mirrorHorizontalPlacement('top start') // input\n * ['top', 'end'] // output\n *\n * mirrorPlacement('top start', ' ') // input\n * 'top end' //output\n * ```\n *\n * @param {string|Array} placement - a string of the form '<value> <value>' or array [<value>, <value>]\n * @param {string} delimiter - when provided, a value with which the result array will be joined\n * @returns {string|Array} - an array of values or, if the delimiter was supplied, a string of\n *  delimiter separated values\n */","meta":{"range":[2117,2405],"filename":"9mat6y2m5ul2g4wtzkgyug.js","lineno":63,"columnno":0,"path":"/tmp","code":{"id":"astnode100000040","name":"mirrorHorizontalPlacement","type":"FunctionDeclaration","paramnames":["placement","delimiter"]},"vars":{"":null}},"description":"Given a string or array of one or two placement values, mirrors the placement\nhorizontally.\n\nExamples\n```js\nmirrorHorizontalPlacement('top start') // input\n['top', 'end'] // output\n\nmirrorPlacement('top start', ' ') // input\n'top end' //output\n```","params":[{"type":{"names":["string","Array"]},"description":"a string of the form '<value> <value>' or array [<value>, <value>]","name":"placement"},{"type":{"names":["string"]},"description":"when provided, a value with which the result array will be joined","name":"delimiter"}],"returns":[{"type":{"names":["string","Array"]},"description":"- an array of values or, if the delimiter was supplied, a string of\n delimiter separated values"}],"name":"mirrorHorizontalPlacement","longname":"mirrorHorizontalPlacement","kind":"function","scope":"global","id":"mirrorHorizontalPlacement","title":"mirrorHorizontalPlacement"}],"undocumented":false,"category":"utilities/position","order":"","relativePath":"packages/ui-position/src/mirrorPlacement.js","extension":".js","srcPath":"packages/ui-position/src/mirrorPlacement.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-position/src/mirrorPlacement.js","packageName":"@instructure/ui-position","requirePath":"@instructure/ui-position/lib/mirrorPlacement","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-position/src/mirrorPlacement.js').default","esPath":"@instructure/ui-position/es/mirrorPlacement","id":"mirrorPlacement","title":"mirrorPlacement"},"Children":{"comment":"/**\n   * ---\n   * category: utilities/PropTypes\n   * ---\n   * @module Children\n   */","meta":{"filename":"wxhz737vlu9zbsixn06x0h.js","lineno":357,"columnno":2,"path":"/tmp","code":{}},"description":"","kind":"module","name":"Children","longname":"module:Children","sections":[{"comment":"/**\n   * Validate that the children of a component are one of the specified types.\n   *\n   * ```js\n   *  import { Children } from '@instructure/ui-prop-types'\n   *\n   *  class Example extends Component {\n   *    static propTypes = {\n   *      children: Children.oneOf([Foo, Bar, Baz])\n   *    }\n   *\n   *    render () {\n   *      return <div>{this.props.children}</div>\n   *    }\n   *  }\n   * ```\n   *\n   * This will allow children such as:\n   *\n   * ```jsx\n   *  <Example>\n   *    <Foo />\n   *  </Example>\n   * ```\n   *\n   *  OR\n   *\n   * ```jsx\n   *  <Example>\n   *    <Bar />\n   *    <Foo />\n   *  </Example>\n   * ```\n   *\n   * But will fail on something like:\n   *\n   * ```jsx\n   *  <Example>\n   *    <h1>Example</h1>\n   *    <Foo />\n   *  </Example>\n   * ```\n   * @returns {Error} if validation failed\n   */","meta":{"range":[2074,3071],"filename":"wxhz737vlu9zbsixn06x0h.js","lineno":73,"columnno":2,"path":"/tmp","code":{"id":"astnode100000014","name":"oneOf","type":"FunctionExpression"},"vars":{"validator":"Children.oneOf~validator","validator.isRequired":"Children.oneOf~validator.isRequired"}},"description":"Validate that the children of a component are one of the specified types.\n\n```js\n import { Children } from '@instructure/ui-prop-types'\n\n class Example extends Component {\n   static propTypes = {\n     children: Children.oneOf([Foo, Bar, Baz])\n   }\n\n   render () {\n     return <div>{this.props.children}</div>\n   }\n }\n```\n\nThis will allow children such as:\n\n```jsx\n <Example>\n   <Foo />\n </Example>\n```\n\n OR\n\n```jsx\n <Example>\n   <Bar />\n   <Foo />\n </Example>\n```\n\nBut will fail on something like:\n\n```jsx\n <Example>\n   <h1>Example</h1>\n   <Foo />\n </Example>\n```","returns":[{"type":{"names":["Error"]},"description":"if validation failed"}],"name":"oneOf","longname":"Children.oneOf","kind":"function","memberof":"Children","scope":"static","id":"Children.oneOf","title":"Children.oneOf"},{"comment":"/**\n   * Ensures that there is exactly one of each specified child\n   *\n   * ```js\n   *  import { Children } from '@instructure/ui-prop-types'\n   *\n   *  class Example extends Component {\n   *    static propTypes = {\n   *      children: Children.oneOfEach([Foo, Bar, Baz])\n   *    }\n   *\n   *    render () {\n   *      return <div>{this.props.children}</div>\n   *    }\n   *  }\n   * ```\n   *\n   * This will enforce the following:\n   *\n   * ```jsx\n   *  <Example>\n   *    <Foo />\n   *    <Bar />\n   *    <Baz />\n   *  </Example>\n   * ```\n   * An error will be thrown\n   *  - If any of the children are not provided (ex. Foo, Bar, but missing Baz)\n   *  - If multiple children of the same type are provided (ex. Foo, Foo, Bar, and Baz)\n   *\n   * @param {Array} validTypes - Array of child types\n   * @returns {Error} if validation failed\n   */","meta":{"range":[3918,5601],"filename":"wxhz737vlu9zbsixn06x0h.js","lineno":140,"columnno":2,"path":"/tmp","code":{"id":"astnode100000137","name":"oneOfEach","type":"FunctionExpression"},"vars":{"":null}},"description":"Ensures that there is exactly one of each specified child\n\n```js\n import { Children } from '@instructure/ui-prop-types'\n\n class Example extends Component {\n   static propTypes = {\n     children: Children.oneOfEach([Foo, Bar, Baz])\n   }\n\n   render () {\n     return <div>{this.props.children}</div>\n   }\n }\n```\n\nThis will enforce the following:\n\n```jsx\n <Example>\n   <Foo />\n   <Bar />\n   <Baz />\n </Example>\n```\nAn error will be thrown\n - If any of the children are not provided (ex. Foo, Bar, but missing Baz)\n - If multiple children of the same type are provided (ex. Foo, Foo, Bar, and Baz)","params":[{"type":{"names":["Array"]},"description":"Array of child types","name":"validTypes"}],"returns":[{"type":{"names":["Error"]},"description":"if validation failed"}],"name":"oneOfEach","longname":"Children.oneOfEach","kind":"function","memberof":"Children","scope":"static","id":"Children.oneOfEach","title":"Children.oneOfEach"},{"comment":"/**\n   * Validate the type and order of children for a component.\n   *\n   * ```js\n   *  import { Children } from '@instructure/ui-prop-types'\n   *\n   *  class Example extends Component {\n   *    static propTypes = {\n   *      children: Children.enforceOrder([Foo, Bar, Baz])\n   *    }\n   *\n   *    render () {\n   *      return <div>{this.props.children}</div>\n   *    }\n   *  }\n   * ```\n   *\n   * This will enforce the following:\n   *\n   * ```jsx\n   *  <Example>\n   *    <Foo />\n   *    <Bar />\n   *    <Baz />\n   *  </Example>\n   * ```\n   *\n   * This validator will also allow various permutations of the order.\n   *\n   * ```js\n   *  import { Children } from '@instructure/ui-prop-types'\n   *\n   *  class Example extends Component {\n   *    static propTypes = {\n   *      children: Children.enforceOrder(\n   *        [Foo, Bar, Baz],\n   *        [Foo, Bar],\n   *        [Bar, Baz],\n   *      )\n   *    }\n   *\n   *    render () {\n   *      return <div>{this.props.children}</div>\n   *    }\n   *  }\n   * ```\n   *\n   * This will enforce one of the following:\n   *\n   * ```jsx\n   *  <Example>\n   *    <Foo />\n   *    <Bar />\n   *    <Baz />\n   *  </Example>\n   * ```\n   *\n   *  OR\n   *\n   * ```jsx\n   *  <Example>\n   *    <Foo />\n   *    <Bar />\n   *  </Example>\n   * ```\n   *\n   *  OR\n   *\n   * ```jsx\n   *  <Example>\n   *    <Bar />\n   *    <Baz />\n   *  </Example>\n   * ```\n   *\n   * @param {...Array} validTypeGroups One or more Arrays of valid types\n   * @returns {Error} if validation failed\n   */","meta":{"range":[7109,8989],"filename":"wxhz737vlu9zbsixn06x0h.js","lineno":275,"columnno":2,"path":"/tmp","code":{"id":"astnode100000353","name":"enforceOrder","type":"FunctionExpression"},"vars":{"validateTypes":"Children.enforceOrder~validateTypes","formatGroupTypes":"Children.enforceOrder~formatGroupTypes","formatTypes":"Children.enforceOrder~formatTypes","validator":"Children.enforceOrder~validator","validator.isRequired":"Children.enforceOrder~validator.isRequired"}},"description":"Validate the type and order of children for a component.\n\n```js\n import { Children } from '@instructure/ui-prop-types'\n\n class Example extends Component {\n   static propTypes = {\n     children: Children.enforceOrder([Foo, Bar, Baz])\n   }\n\n   render () {\n     return <div>{this.props.children}</div>\n   }\n }\n```\n\nThis will enforce the following:\n\n```jsx\n <Example>\n   <Foo />\n   <Bar />\n   <Baz />\n </Example>\n```\n\nThis validator will also allow various permutations of the order.\n\n```js\n import { Children } from '@instructure/ui-prop-types'\n\n class Example extends Component {\n   static propTypes = {\n     children: Children.enforceOrder(\n       [Foo, Bar, Baz],\n       [Foo, Bar],\n       [Bar, Baz],\n     )\n   }\n\n   render () {\n     return <div>{this.props.children}</div>\n   }\n }\n```\n\nThis will enforce one of the following:\n\n```jsx\n <Example>\n   <Foo />\n   <Bar />\n   <Baz />\n </Example>\n```\n\n OR\n\n```jsx\n <Example>\n   <Foo />\n   <Bar />\n </Example>\n```\n\n OR\n\n```jsx\n <Example>\n   <Bar />\n   <Baz />\n </Example>\n```","params":[{"type":{"names":["Array"]},"variable":true,"description":"One or more Arrays of valid types","name":"validTypeGroups"}],"returns":[{"type":{"names":["Error"]},"description":"if validation failed"}],"name":"enforceOrder","longname":"Children.enforceOrder","kind":"function","memberof":"Children","scope":"static","id":"Children.enforceOrder","title":"Children.enforceOrder"}],"undocumented":false,"category":"utilities/PropTypes","order":"","relativePath":"packages/ui-prop-types/src/Children.js","extension":".js","srcPath":"packages/ui-prop-types/src/Children.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-prop-types/src/Children.js","packageName":"@instructure/ui-prop-types","requirePath":"@instructure/ui-prop-types/lib/Children","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-prop-types/src/Children.js').default","esPath":"@instructure/ui-prop-types/es/Children","id":"Children","title":"Children"},"childrenOrValue":{"comment":"/**\n * ---\n * category: utilities/PropTypes\n * ---\n * Verify that either value is provided as a prop if as=\"input\", and children\n * if provided otherwise\n *\n * ```js\n *  import { childrenOrValue } from '@instructure/ui-prop-types'\n *\n *  class Foo extends Component {\n *    static propTypes = {\n *      children: childrenOrValue,\n *      value: childrenOrValue\n *    }\n *  ...\n * ```\n */","meta":{"range":[1549,2253],"filename":"u8ax9batuqdqdx0mzdi47.js","lineno":43,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"childrenOrValue","type":"FunctionDeclaration","paramnames":["props","propName","componentName"]}},"description":"Verify that either value is provided as a prop if as=\"input\", and children\nif provided otherwise\n\n```js\n import { childrenOrValue } from '@instructure/ui-prop-types'\n\n class Foo extends Component {\n   static propTypes = {\n     children: childrenOrValue,\n     value: childrenOrValue\n   }\n ...\n```","name":"childrenOrValue","longname":"childrenOrValue","kind":"function","scope":"global","params":[],"sections":[],"undocumented":false,"category":"utilities/PropTypes","order":"","relativePath":"packages/ui-prop-types/src/childrenOrValue.js","extension":".js","srcPath":"packages/ui-prop-types/src/childrenOrValue.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-prop-types/src/childrenOrValue.js","packageName":"@instructure/ui-prop-types","requirePath":"@instructure/ui-prop-types/lib/childrenOrValue","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-prop-types/src/childrenOrValue.js').default","esPath":"@instructure/ui-prop-types/es/childrenOrValue","id":"childrenOrValue","title":"childrenOrValue"},"controllable":{"comment":"/**\n * ---\n * category: utilities/PropTypes\n * ---\n * Ensure that a corresponding handler function is provided for the given prop if the\n * component does not manage its own state.\n *\n * ```js\n *  import { controllable } from '@instructure/ui-prop-types'\n *\n *  class Foo extends Component {\n *    static propTypes = {\n *      selected: controllable(PropTypes.bool, 'onSelect', 'defaultSelected'),\n *      onSelect: PropTypes.func,\n *      defaultSelected: PropTypes.bool\n *    }\n *  ...\n * ```\n *\n * This will throw an error if the 'selected' prop is supplied without a corresponding\n * 'onSelect' handler and will recommend using 'defaultSelected' instead.\n *\n * @param {function} propType - validates the prop type. Returns null if valid, error otherwise\n * @param {string} handlerName - name of the handler function\n * @param {string} defaultPropName - name of the default prop\n * @returns {Error} if designated prop is supplied without a corresponding handler function\n */","meta":{"range":[2139,2807],"filename":"lxyj3e74zdrgcr72doboc.js","lineno":52,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"controllable","type":"FunctionDeclaration","paramnames":["propType","handlerName","defaultPropName"]},"vars":{"":null}},"description":"Ensure that a corresponding handler function is provided for the given prop if the\ncomponent does not manage its own state.\n\n```js\n import { controllable } from '@instructure/ui-prop-types'\n\n class Foo extends Component {\n   static propTypes = {\n     selected: controllable(PropTypes.bool, 'onSelect', 'defaultSelected'),\n     onSelect: PropTypes.func,\n     defaultSelected: PropTypes.bool\n   }\n ...\n```\n\nThis will throw an error if the 'selected' prop is supplied without a corresponding\n'onSelect' handler and will recommend using 'defaultSelected' instead.","params":[{"type":{"names":["function"]},"description":"validates the prop type. Returns null if valid, error otherwise","name":"propType"},{"type":{"names":["string"]},"description":"name of the handler function","name":"handlerName","defaultvalue":"onChange"},{"type":{"names":["string"]},"description":"name of the default prop","name":"defaultPropName","defaultvalue":"defaultValue"}],"returns":[{"type":{"names":["Error"]},"description":"if designated prop is supplied without a corresponding handler function"}],"name":"controllable","longname":"controllable","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/PropTypes","order":"","relativePath":"packages/ui-prop-types/src/controllable.js","extension":".js","srcPath":"packages/ui-prop-types/src/controllable.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-prop-types/src/controllable.js","packageName":"@instructure/ui-prop-types","requirePath":"@instructure/ui-prop-types/lib/controllable","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-prop-types/src/controllable.js').default","esPath":"@instructure/ui-prop-types/es/controllable","id":"controllable","title":"controllable"},"cursor":{"comment":"/**\n * ---\n * category: utilities/PropTypes\n * ---\n * Verify that the given prop is a valid css `cursor` value.\n *\n * The list of possible cursor values is taken from\n * https://developer.mozilla.org/en-US/docs/Web/CSS/cursor.\n *\n * Note that this does not currently support `url(...)` values.\n */","meta":{"range":[1501,2021],"filename":"knkezlqjpdhazrkjacpdr.js","lineno":38,"columnno":6,"path":"/tmp","code":{"id":"astnode100000007","name":"cursor","type":"CallExpression","value":""}},"description":"Verify that the given prop is a valid css `cursor` value.\n\nThe list of possible cursor values is taken from\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/cursor.\n\nNote that this does not currently support `url(...)` values.","name":"cursor","longname":"cursor","kind":"constant","scope":"global","params":[],"sections":[],"undocumented":false,"category":"utilities/PropTypes","order":"","relativePath":"packages/ui-prop-types/src/cursor.js","extension":".js","srcPath":"packages/ui-prop-types/src/cursor.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-prop-types/src/cursor.js","packageName":"@instructure/ui-prop-types","requirePath":"@instructure/ui-prop-types/lib/cursor","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-prop-types/src/cursor.js').default","esPath":"@instructure/ui-prop-types/es/cursor","id":"cursor","title":"cursor"},"element":{"comment":"/**\n * ---\n * category: utilities/PropTypes\n * ---\n * Verify that the given prop is a valid React element. If the DOM is accessible,\n * also verify if the prop is an instance of `Element`.\n */","meta":{"range":[1616,1733],"filename":"r3fmg9ix0d7z3mkd651nh.js","lineno":42,"columnno":6,"path":"/tmp","code":{"id":"astnode100000026","name":"element","type":"ConditionalExpression","value":""}},"description":"Verify that the given prop is a valid React element. If the DOM is accessible,\nalso verify if the prop is an instance of `Element`.","name":"element","longname":"element","kind":"constant","scope":"global","params":[],"sections":[],"undocumented":false,"category":"utilities/PropTypes","order":"","relativePath":"packages/ui-prop-types/src/element.js","extension":".js","srcPath":"packages/ui-prop-types/src/element.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-prop-types/src/element.js","packageName":"@instructure/ui-prop-types","requirePath":"@instructure/ui-prop-types/lib/element","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-prop-types/src/element.js').default","esPath":"@instructure/ui-prop-types/es/element","id":"element","title":"element"},"makeRequirable":{"comment":"/**\n * ---\n * category: utilities/PropTypes\n * ---\n * Given a validator function, extends the validator functionality to also\n * ensure that the prop has been provided if `.isRequired` is specified.\n *\n * ```js\n * function validator (props, propName, componentName) {\n *   const propValue = props[propName]\n *   if (propValue === 'purple') {\n *     return new Error(`Purple is not accepted in ${componentName}!`)\n *   }\n * }\n *\n * validator.isRequired = makeRequirable(validator)\n * ```\n *\n * @param {function} validator - a validator function\n * @returns {Error} if designated prop is not provided\n */","meta":{"range":[1764,2204],"filename":"kme5ns9ibfbi9kqog04fp.js","lineno":46,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"makeRequirable","type":"FunctionDeclaration","paramnames":["validator"]},"vars":{"":null}},"description":"Given a validator function, extends the validator functionality to also\nensure that the prop has been provided if `.isRequired` is specified.\n\n```js\nfunction validator (props, propName, componentName) {\n  const propValue = props[propName]\n  if (propValue === 'purple') {\n    return new Error(`Purple is not accepted in ${componentName}!`)\n  }\n}\n\nvalidator.isRequired = makeRequirable(validator)\n```","params":[{"type":{"names":["function"]},"description":"a validator function","name":"validator"}],"returns":[{"type":{"names":["Error"]},"description":"if designated prop is not provided"}],"name":"makeRequirable","longname":"makeRequirable","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/PropTypes","order":"","relativePath":"packages/ui-prop-types/src/makeRequirable.js","extension":".js","srcPath":"packages/ui-prop-types/src/makeRequirable.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-prop-types/src/makeRequirable.js","packageName":"@instructure/ui-prop-types","requirePath":"@instructure/ui-prop-types/lib/makeRequirable","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-prop-types/src/makeRequirable.js').default","esPath":"@instructure/ui-prop-types/es/makeRequirable","id":"makeRequirable","title":"makeRequirable"},"xor":{"comment":"/**\n * ---\n * category: utilities/PropTypes\n * ---\n * Verify that a prop cannot be given if one or more other props are also\n * given.\n *\n * ```js\n *  import { xor } from '@instructure/ui-prop-types'\n *\n *  class Foo extends Component {\n *    static propTypes = {\n *      decimalPrecision: xor(PropTypes.number, 'significantDigits'),\n *      significantDigits: xor(PropTypes.number, 'decimalPrecision')\n *    }\n *  ...\n * ```\n *\n * This will throw an error if both the `decimalPrecision` and\n * `significantDigits` props are provided.\n *\n * @param {function} propType - validates the prop type. Returns null if valid, error otherwise\n * @param {...string} otherPropNames - reject if any of these other props are also given\n * @returns {Error} if any of the other props are also given\n */","meta":{"range":[1949,2577],"filename":"yeaiw2fx5us5ryop1r98pi.js","lineno":50,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"xor","type":"FunctionDeclaration","paramnames":["propType","otherPropNames"]},"vars":{"":null}},"description":"Verify that a prop cannot be given if one or more other props are also\ngiven.\n\n```js\n import { xor } from '@instructure/ui-prop-types'\n\n class Foo extends Component {\n   static propTypes = {\n     decimalPrecision: xor(PropTypes.number, 'significantDigits'),\n     significantDigits: xor(PropTypes.number, 'decimalPrecision')\n   }\n ...\n```\n\nThis will throw an error if both the `decimalPrecision` and\n`significantDigits` props are provided.","params":[{"type":{"names":["function"]},"description":"validates the prop type. Returns null if valid, error otherwise","name":"propType"},{"type":{"names":["string"]},"variable":true,"description":"reject if any of these other props are also given","name":"otherPropNames"}],"returns":[{"type":{"names":["Error"]},"description":"if any of the other props are also given"}],"name":"xor","longname":"xor","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/PropTypes","order":"","relativePath":"packages/ui-prop-types/src/xor.js","extension":".js","srcPath":"packages/ui-prop-types/src/xor.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-prop-types/src/xor.js","packageName":"@instructure/ui-prop-types","requirePath":"@instructure/ui-prop-types/lib/xor","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-prop-types/src/xor.js').default","esPath":"@instructure/ui-prop-types/es/xor","id":"xor","title":"xor"},"ComponentIdentifier":{"description":"Abstract component identifier. Helpful for picking out a specific child.\n\n  ```js\n  class App extends Component {\n    render () {\n      const title = pick(Title, this.props.children)\n      const content = pick(Content, this.props.children)\n\n      return (\n        <div>\n          {title}\n          <ContextView>\n            {content}\n          </ContextView>\n         </div>\n     )\n    }\n  }\n\n  class Title extends ComponentIdentifier { static displayName = 'Title' }\n  class Content extends ComponentIdentifier { static displayName = 'Content' }\n\n  ReactDOM.render(\n    <App>\n      <Title><h2>Hello World!</h2></Title>\n      <Content><div>This text gets decorated within `App`.</div></Content>\n    </App>,\n    document.getElementById('container')\n  )\n  ```\n  @module ComponentIdentifier","displayName":"ComponentIdentifier","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}},"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/ComponentIdentifier.js","extension":".js","srcPath":"packages/ui-react-utils/src/ComponentIdentifier.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/ComponentIdentifier.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/ComponentIdentifier","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/ComponentIdentifier.js').default","esPath":"@instructure/ui-react-utils/es/ComponentIdentifier","id":"ComponentIdentifier","title":"ComponentIdentifier"},"callRenderProp":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Evaluate a provided value to create a renderable React element.\n *\n * @param {ReactElement|ReactClass|function} value\n * @param {object} props\n * @return {ReactElement} A renderable React element\n */","meta":{"range":[1438,1998],"filename":"gsu01a7mxyb5gba1u3yxjj.js","lineno":37,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"callRenderProp","type":"FunctionDeclaration","paramnames":["value","props"]}},"description":"Evaluate a provided value to create a renderable React element.","params":[{"type":{"names":["ReactElement","ReactClass","function"]},"name":"value"},{"type":{"names":["object"]},"name":"props"}],"returns":[{"type":{"names":["ReactElement"]},"description":"A renderable React element"}],"name":"callRenderProp","longname":"callRenderProp","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/callRenderProp.js","extension":".js","srcPath":"packages/ui-react-utils/src/callRenderProp.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/callRenderProp.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/callRenderProp","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/callRenderProp.js').default","esPath":"@instructure/ui-react-utils/es/callRenderProp","id":"callRenderProp","title":"callRenderProp"},"deprecated":{"comment":"/**\n       * ---\n       * category: utilities/react\n       * ---\n       * Deprecate React component props. Warnings will display in the console when deprecated\n       * props are used. Include the version number when the deprecated component will be removed.\n       *\n       * ```js\n       *  class Example extends Component {\n       *    static propTypes = {\n       *      currentProp: PropTypes.func\n       *    }\n       *  }\n       *  export default deprecated('7.0.0', {\n       *    deprecatedProp: 'currentProp',\n       *    nowNonExistentProp: true\n       *  })(Example)\n       * ```\n       *\n       * @param {string} version\n       * @param {object} oldProps (if this argument is null or undefined, the entire component is deprecated)\n       * @param {string} message\n       * @return {function} React component with deprecated props behavior\n       * @module deprecated\n       */","meta":{"filename":"gvmr84j01nkb93nk7pitp.js","lineno":43,"columnno":6,"path":"/tmp","code":{}},"description":"Deprecate React component props. Warnings will display in the console when deprecated\nprops are used. Include the version number when the deprecated component will be removed.\n\n```js\n class Example extends Component {\n   static propTypes = {\n     currentProp: PropTypes.func\n   }\n }\n export default deprecated('7.0.0', {\n   deprecatedProp: 'currentProp',\n   nowNonExistentProp: true\n })(Example)\n```","params":[{"type":{"names":["string"]},"name":"version"},{"type":{"names":["object"]},"description":"(if this argument is null or undefined, the entire component is deprecated)","name":"oldProps"},{"type":{"names":["string"]},"name":"message"}],"returns":[{"type":{"names":["function"]},"description":"React component with deprecated props behavior"}],"kind":"module","name":"deprecated","longname":"module:deprecated","sections":[{"comment":"/**\n   * ---\n   * category: utilities\n   * ---\n   * Trigger a console warning if the specified prop variant is deprecated\n   *\n   * @param {function} propType - validates the prop type. Returns null if valid, error otherwise\n   * @param {array} deprecated - an array of the deprecated variant names\n   * @param {string|function} message - a string with additional information (like the version the prop will be removed) or a function returning a string\n   */","meta":{"range":[4402,5112],"filename":"gvmr84j01nkb93nk7pitp.js","lineno":128,"columnno":2,"path":"/tmp","code":{"id":"astnode100000188","name":"deprecated.deprecatePropValues","type":"ArrowFunctionExpression","funcscope":"<anonymous>","paramnames":["propType","deprecated","message"]},"vars":{"":null}},"description":"---\ncategory: utilities\n---\nTrigger a console warning if the specified prop variant is deprecated","params":[{"type":{"names":["function"]},"description":"validates the prop type. Returns null if valid, error otherwise","name":"propType"},{"type":{"names":["array"]},"description":"an array of the deprecated variant names","name":"deprecated"},{"type":{"names":["string","function"]},"description":"a string with additional information (like the version the prop will be removed) or a function returning a string","name":"message"}],"name":"deprecatePropValues","longname":"module:deprecated~deprecated.deprecatePropValues","kind":"function","scope":"static","memberof":"module:deprecated~deprecated","id":"module:deprecated~deprecated.deprecatePropValues","title":"module:deprecated~deprecated.deprecatePropValues"},{"comment":"/**\n   * ---\n   * category: utilities\n   * ---\n   * @param {String} version the version of the package in which the component or function was deprecated\n   * @param {String} componentName the name of the component or Function.name of the utility function\n   * @param {String} message a message to display as a console error in DEV env when condition is false\n   */","meta":{"range":[6360,6420],"filename":"gvmr84j01nkb93nk7pitp.js","lineno":188,"columnno":2,"path":"/tmp","code":{"id":"astnode100000369","name":"deprecated.warnDeprecatedComponent","type":"Identifier","funcscope":"<anonymous>","value":"warnDeprecatedComponent","paramnames":[]}},"description":"---\ncategory: utilities\n---","params":[{"type":{"names":["String"]},"description":"the version of the package in which the component or function was deprecated","name":"version"},{"type":{"names":["String"]},"description":"the name of the component or Function.name of the utility function","name":"componentName"},{"type":{"names":["String"]},"description":"a message to display as a console error in DEV env when condition is false","name":"message"}],"name":"warnDeprecatedComponent","longname":"module:deprecated~deprecated.warnDeprecatedComponent","kind":"member","scope":"static","memberof":"module:deprecated~deprecated","id":"module:deprecated~deprecated.warnDeprecatedComponent","title":"module:deprecated~deprecated.warnDeprecatedComponent"},{"comment":"/**\n   * ---\n   * category: utilities\n   * ---\n   * @param {String} prevPackage the previous name of the package\n   * @param {String} newPackage the new version of the package\n   * @return {String} the formatted warning string\n   */","meta":{"range":[6659,6823],"filename":"gvmr84j01nkb93nk7pitp.js","lineno":198,"columnno":2,"path":"/tmp","code":{"id":"astnode100000375","name":"deprecated.changedPackageWarning","type":"ArrowFunctionExpression","funcscope":"<anonymous>","paramnames":["prevPackage","newPackage"]}},"description":"---\ncategory: utilities\n---","params":[{"type":{"names":["String"]},"description":"the previous name of the package","name":"prevPackage"},{"type":{"names":["String"]},"description":"the new version of the package","name":"newPackage"}],"returns":[{"type":{"names":["String"]},"description":"the formatted warning string"}],"name":"changedPackageWarning","longname":"module:deprecated~deprecated.changedPackageWarning","kind":"function","scope":"static","memberof":"module:deprecated~deprecated","id":"module:deprecated~deprecated.changedPackageWarning","title":"module:deprecated~deprecated.changedPackageWarning"}],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/deprecated.js","extension":".js","srcPath":"packages/ui-react-utils/src/deprecated.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/deprecated.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/deprecated","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/deprecated.js').default","esPath":"@instructure/ui-react-utils/es/deprecated","id":"deprecated","title":"deprecated"},"ensureSingleChild":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n *\n * Ensure a single child. If it is a child of length 1, return a\n * cloned instance of the child. If it is a child of length > 1,\n * wrap in a span and return the child. Return null if child has\n * no length.\n *\n * @param {ReactElement} child\n * @param {Object} props - props for child\n * @returns {ReactElement} cloned instance for a single child, or children wrapped in a span\n */","meta":{"range":[1689,2052],"filename":"8e91dh7u8dnpz3pa4x02s.js","lineno":42,"columnno":0,"path":"/tmp","code":{"id":"astnode100000012","name":"ensureSingleChild","type":"FunctionDeclaration","paramnames":["child","props"]},"vars":{"childCount":"ensureSingleChild~childCount"}},"description":"\nEnsure a single child. If it is a child of length 1, return a\ncloned instance of the child. If it is a child of length > 1,\nwrap in a span and return the child. Return null if child has\nno length.","params":[{"type":{"names":["ReactElement"]},"name":"child"},{"type":{"names":["Object"]},"description":"props for child","name":"props"}],"returns":[{"type":{"names":["ReactElement"]},"description":"cloned instance for a single child, or children wrapped in a span"}],"name":"ensureSingleChild","longname":"ensureSingleChild","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/ensureSingleChild.js","extension":".js","srcPath":"packages/ui-react-utils/src/ensureSingleChild.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/ensureSingleChild.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/ensureSingleChild","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/ensureSingleChild.js').default","esPath":"@instructure/ui-react-utils/es/ensureSingleChild","id":"ensureSingleChild","title":"ensureSingleChild"},"experimental":{"comment":"/**\n   * ---\n   * category: utilities/react\n   * ---\n   * Flag React component and component props as experimental.\n   * Warnings will display in the console when experimental components/props\n   * props are used.\n   *\n   * ```js\n   *  class Example extends Component {\n   *    static propTypes = {\n   *      currentProp: PropTypes.func\n   *    }\n   *  }\n   *  export default experimental(['experimentalProp'])(Example)\n   * ```\n   *\n   * @module experimental\n   * @param {array} experimentalProps (if this argument is null or undefined, the entire component is flagged)\n   * @param {string} message\n   * @return {function} React component flagged as experimental\n   */","meta":{"filename":"lign9x3kjiysabvdbx12s.js","lineno":90,"columnno":2,"path":"/tmp","code":{}},"description":"Flag React component and component props as experimental.\nWarnings will display in the console when experimental components/props\nprops are used.\n\n```js\n class Example extends Component {\n   static propTypes = {\n     currentProp: PropTypes.func\n   }\n }\n export default experimental(['experimentalProp'])(Example)\n```","kind":"module","name":"experimental","params":[{"type":{"names":["array"]},"description":"(if this argument is null or undefined, the entire component is flagged)","name":"experimentalProps"},{"type":{"names":["string"]},"name":"message"}],"returns":[{"type":{"names":["function"]},"description":"React component flagged as experimental"}],"longname":"module:experimental","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/experimental.js","extension":".js","srcPath":"packages/ui-react-utils/src/experimental.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/experimental.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/experimental","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/experimental.js').default","esPath":"@instructure/ui-react-utils/es/experimental","id":"experimental","title":"experimental"},"getDisplayName":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Get the displayName of a React component.\n * needs a babel plugin to work https://github.com/facebook/react/issues/4915 !!\n * @param {ReactComponent|String} Component\n * @returns {String} the component displayName\n */","meta":{"range":[1429,1568],"filename":"5tciv5bgi6knzfy0d1iikp.js","lineno":34,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"getDisplayName","type":"FunctionDeclaration","paramnames":["Component"]}},"description":"Get the displayName of a React component.\nneeds a babel plugin to work https://github.com/facebook/react/issues/4915 !!","params":[{"type":{"names":["ReactComponent","String"]},"name":"Component"}],"returns":[{"type":{"names":["String"]},"description":"the component displayName"}],"name":"getDisplayName","longname":"getDisplayName","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/getDisplayName.js","extension":".js","srcPath":"packages/ui-react-utils/src/getDisplayName.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/getDisplayName.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/getDisplayName","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/getDisplayName.js').default","esPath":"@instructure/ui-react-utils/es/getDisplayName","id":"getDisplayName","title":"getDisplayName"},"getElementType":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Get the React element type for a component.\n *\n * @module getElementType\n * @param {ReactComponent} Component\n * @param {Object} props\n * @param {Function} getDefault an optional function that returns the default element type\n * @returns {String} the element type\n */","meta":{"filename":"6frningq2z3aai44wn08m.js","lineno":27,"columnno":0,"path":"/tmp","code":{}},"description":"Get the React element type for a component.","kind":"module","name":"getElementType","params":[{"type":{"names":["ReactComponent"]},"name":"Component"},{"type":{"names":["Object"]},"name":"props"},{"type":{"names":["function"]},"description":"an optional function that returns the default element type","name":"getDefault"}],"returns":[{"type":{"names":["String"]},"description":"the element type"}],"longname":"module:getElementType","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/getElementType.js","extension":".js","srcPath":"packages/ui-react-utils/src/getElementType.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/getElementType.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/getElementType","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/getElementType.js').default","esPath":"@instructure/ui-react-utils/es/getElementType","id":"getElementType","title":"getElementType"},"getInteraction":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Parse the component props for the interaction type. It will return one of 'enabled', 'disabled', or 'readonly'.\n * This is useful for form elements where consumers are able to either use the interaction prop as specified or the\n * native html disabled or readonly attributes\n *\n * @param {Object} args\n * @param {Object} args.props - the component props\n * @param {string} args.props.interaction - specifies the interaction mode, one of 'enabled', 'disabled', or 'readonly'\n * @param {boolean} args.props.disabled - specifies if the component is disabled. Will take precedence over readOnly\n * @param {boolean} args.props.readOnly - specifies if the component is readOnly\n * @param {Array} args.interactionTypes - an array specifying the interaction types available to the component, ['disabled', 'readOnly'] by default\n * @returns {String} one of 'enabled', 'disabled', or 'readonly'\n */","meta":{"range":[2100,2747],"filename":"qw53qcrraleru9khbaqr1.js","lineno":41,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"exports.getInteraction","type":"FunctionDeclaration","paramnames":[""]}},"description":"Parse the component props for the interaction type. It will return one of 'enabled', 'disabled', or 'readonly'.\nThis is useful for form elements where consumers are able to either use the interaction prop as specified or the\nnative html disabled or readonly attributes","params":[{"type":{"names":["Object"]},"name":"args"},{"type":{"names":["Object"]},"description":"the component props","name":"args.props"},{"type":{"names":["string"]},"description":"specifies the interaction mode, one of 'enabled', 'disabled', or 'readonly'","name":"args.props.interaction"},{"type":{"names":["boolean"]},"description":"specifies if the component is disabled. Will take precedence over readOnly","name":"args.props.disabled"},{"type":{"names":["boolean"]},"description":"specifies if the component is readOnly","name":"args.props.readOnly"},{"type":{"names":["Array"]},"description":"an array specifying the interaction types available to the component, ['disabled', 'readOnly'] by default","name":"args.interactionTypes"}],"returns":[{"type":{"names":["String"]},"description":"one of 'enabled', 'disabled', or 'readonly'"}],"name":"getInteraction","longname":"getInteraction","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/getInteraction.js","extension":".js","srcPath":"packages/ui-react-utils/src/getInteraction.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/getInteraction.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/getInteraction","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/getInteraction.js').default","esPath":"@instructure/ui-react-utils/es/getInteraction","id":"getInteraction","title":"getInteraction"},"hack":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Flag React component props as hack props.\n * Warnings will display in the console when hack props are used.\n *\n * ```js\n *  class Example extends Component {\n *    static propTypes = {\n *      currentProp: PropTypes.func\n *    }\n *  }\n *  export default hack(['hackProp'])(Example)\n * ```\n *\n * @module hack\n * @param {array} hackProps\n * @param {string} message\n * @return {function} React component flagged as having hack props\n */","meta":{"filename":"x1h2su9y7igxt4zi0k827b.js","lineno":28,"columnno":0,"path":"/tmp","code":{}},"description":"Flag React component props as hack props.\nWarnings will display in the console when hack props are used.\n\n```js\n class Example extends Component {\n   static propTypes = {\n     currentProp: PropTypes.func\n   }\n }\n export default hack(['hackProp'])(Example)\n```","kind":"module","name":"hack","params":[{"type":{"names":["array"]},"name":"hackProps"},{"type":{"names":["string"]},"name":"message"}],"returns":[{"type":{"names":["function"]},"description":"React component flagged as having hack props"}],"longname":"module:hack","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/hack.js","extension":".js","srcPath":"packages/ui-react-utils/src/hack.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/hack.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/hack","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/hack.js').default","esPath":"@instructure/ui-react-utils/es/hack","id":"hack","title":"hack"},"matchComponentTypes":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Check if a React component instance (React element) matches one of the\n * specified types.\n *\n * @param {ReactComponent} componentInstance\n * @param {Array} types an array of React components\n * @returns {Boolean} true if the component matches at least one of the types\n */","meta":{"range":[1536,1828],"filename":"dzcjgc6jil87lyx75o3am2.js","lineno":38,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"matchComponentTypes","type":"FunctionDeclaration","paramnames":["componentInstance","types"]},"vars":{"displayNames":"matchComponentTypes~displayNames","":null}},"description":"Check if a React component instance (React element) matches one of the\nspecified types.","params":[{"type":{"names":["ReactComponent"]},"name":"componentInstance"},{"type":{"names":["Array"]},"description":"an array of React components","name":"types"}],"returns":[{"type":{"names":["Boolean"]},"description":"true if the component matches at least one of the types"}],"name":"matchComponentTypes","longname":"matchComponentTypes","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/matchComponentTypes.js","extension":".js","srcPath":"packages/ui-react-utils/src/matchComponentTypes.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/matchComponentTypes.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/matchComponentTypes","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/matchComponentTypes.js').default","esPath":"@instructure/ui-react-utils/es/matchComponentTypes","id":"matchComponentTypes","title":"matchComponentTypes"},"omitProps":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Return an object with the remaining props after propTypes (and additionally specified props) omitted.\n *\n * Automatically excludes the following props: 'theme', 'children', 'className', 'style', 'styles', 'makeStyles', 'themeOverride'\n *\n * @param {Object} props React component props\n * @param {Object} propTypes React component propTypes\n * @param {Array} exclude an optional array of prop names to exclude\n * @returns {Object} props object without the excluded props\n */","meta":{"range":[1731,1755],"filename":"cx30u5y8zkwxj9nefkrek.js","lineno":38,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"module.exports","type":"Identifier"}},"description":"Return an object with the remaining props after propTypes (and additionally specified props) omitted.\n\nAutomatically excludes the following props: 'theme', 'children', 'className', 'style', 'styles', 'makeStyles', 'themeOverride'","params":[{"type":{"names":["Object"]},"description":"React component props","name":"props"},{"type":{"names":["Object"]},"description":"React component propTypes","name":"propTypes"},{"type":{"names":["Array"]},"description":"an optional array of prop names to exclude","name":"exclude"}],"returns":[{"type":{"names":["Object"]},"description":"props object without the excluded props"}],"name":"exports","longname":"module.exports","kind":"member","memberof":"module","scope":"static","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/omitProps.js","extension":".js","srcPath":"packages/ui-react-utils/src/omitProps.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/omitProps.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/omitProps","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/omitProps.js').default","esPath":"@instructure/ui-react-utils/es/omitProps","id":"omitProps","title":"omitProps"},"pickProps":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Return a props object with only specified propTypes.\n *\n * @param {Object} props React component props\n * @param {Object} propTypes React component propTypes\n * @param {Array} include an optional array of prop names to include\n * @returns {Object} props object with only the included props\n */","meta":{"range":[1552,1576],"filename":"xysfi7zjyt9h1l2hv1on86.js","lineno":37,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"module.exports","type":"Identifier"}},"description":"Return a props object with only specified propTypes.","params":[{"type":{"names":["Object"]},"description":"React component props","name":"props"},{"type":{"names":["Object"]},"description":"React component propTypes","name":"propTypes"},{"type":{"names":["Array"]},"description":"an optional array of prop names to include","name":"include"}],"returns":[{"type":{"names":["Object"]},"description":"props object with only the included props"}],"name":"exports","longname":"module.exports","kind":"member","memberof":"module","scope":"static","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/pickProps.js","extension":".js","srcPath":"packages/ui-react-utils/src/pickProps.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/pickProps.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/pickProps","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/pickProps.js').default","esPath":"@instructure/ui-react-utils/es/pickProps","id":"pickProps","title":"pickProps"},"safeCloneElement":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Clone a React element without overwriting refs.\n * @module safeCloneElement\n * @param {ReactElement} element\n * @param {object} props\n * @return {ReactElement}\n */","meta":{"filename":"oe5fuiy3kga98nl62o01qk.js","lineno":30,"columnno":0,"path":"/tmp","code":{}},"description":"Clone a React element without overwriting refs.","kind":"module","name":"safeCloneElement","params":[{"type":{"names":["ReactElement"]},"name":"element"},{"type":{"names":["object"]},"name":"props"}],"returns":[{"type":{"names":["ReactElement"]}}],"longname":"module:safeCloneElement","sections":[],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/safeCloneElement.js","extension":".js","srcPath":"packages/ui-react-utils/src/safeCloneElement.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/safeCloneElement.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/safeCloneElement","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/safeCloneElement.js').default","esPath":"@instructure/ui-react-utils/es/safeCloneElement","id":"safeCloneElement","title":"safeCloneElement"},"windowMessageListener":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * A decorator or higher order component that provides methods\n * for cross-origin communication (between iframes/windows).\n *\n * see https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n * @module windowMessageListener\n * @param {Function} messageHandler a handler for messages recieved by the component\n * @param {Function} validSource an optional function that would restrict message handling to a specified source.\n * @returns {Function} a function that decorates a React component with the behavior\n */","meta":{"filename":"n29wak2org7vlx4rk60m6.js","lineno":27,"columnno":0,"path":"/tmp","code":{}},"description":"A decorator or higher order component that provides methods\nfor cross-origin communication (between iframes/windows).\n\nsee https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage","kind":"module","name":"windowMessageListener","params":[{"type":{"names":["function"]},"description":"a handler for messages recieved by the component","name":"messageHandler"},{"type":{"names":["function"]},"description":"an optional function that would restrict message handling to a specified source.","name":"validSource"}],"returns":[{"type":{"names":["function"]},"description":"a function that decorates a React component with the behavior"}],"longname":"module:windowMessageListener","sections":[{"comment":"/**\n * Return the origin of the owner window of the DOM element\n *\n * see https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n *\n * @param {DOMElement} node\n * @returns {String} the origin\n */","meta":{"range":[3529,3914],"filename":"n29wak2org7vlx4rk60m6.js","lineno":105,"columnno":0,"path":"/tmp","code":{"id":"astnode100000183","name":"origin","type":"FunctionDeclaration","paramnames":["node"]},"vars":{"ownWindow":"module:windowMessageListener~origin~ownWindow","undefined":null}},"description":"Return the origin of the owner window of the DOM element\n\nsee https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage","params":[{"type":{"names":["DOMElement"]},"name":"node"}],"returns":[{"type":{"names":["String"]},"description":"the origin"}],"name":"origin","longname":"module:windowMessageListener~origin","kind":"function","scope":"inner","memberof":"module:windowMessageListener","id":"module:windowMessageListener~origin","title":"module:windowMessageListener~origin"}],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-react-utils/src/windowMessageListener.js","extension":".js","srcPath":"packages/ui-react-utils/src/windowMessageListener.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-react-utils/src/windowMessageListener.js","packageName":"@instructure/ui-react-utils","requirePath":"@instructure/ui-react-utils/lib/windowMessageListener","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-react-utils/src/windowMessageListener.js').default","esPath":"@instructure/ui-react-utils/es/windowMessageListener","id":"windowMessageListener","title":"windowMessageListener"},"ResponsivePropTypes":{"comment":"/**\n   * ---\n   * category: utilities/layout\n   * ---\n   * Custom prop types for `ui-responsive` components.\n   * @module ResponsivePropTypes\n   */","meta":{"filename":"h55don2qyhjrixeywtfr.js","lineno":68,"columnno":2,"path":"/tmp","code":{}},"description":"Custom prop types for `ui-responsive` components.","kind":"module","name":"ResponsivePropTypes","longname":"module:ResponsivePropTypes","sections":[{"comment":"/**\n   * Verify that the given prop is a properly formatted query object\n   * with exactly one key and one corresponding valid value of type\n   * string or number. The object key should be one of `minWidth`,\n   * `maxWidth`, `minHeight`, or `maxHeight`. Note that key values\n   * should be camel cased.\n   *\n   *\n   * The following are examples of valid query objects:\n   *\n   * ```js\n   * { minWidth: 350 }\n   * { maxHeight: '400px' }\n   * { maxWidth: '20rem' }\n   * ```\n   *\n   * The following are examples of invalid query objects:\n   *\n   * ```js\n   * { minwidth: 300 } // should be minWidth (case sensitive)\n   * { minHeight: 200, maxHeight: 300 } // should consist of exactly one key\n   * ```\n   * @param {Object} props - object containing the component props\n   * @param {string} propName - name of the given prop\n   * @param {string} componentName - name of the component\n   * @returns {Error} if prop is an invalid query\n   */","meta":{"range":[2186,2416],"filename":"h55don2qyhjrixeywtfr.js","lineno":55,"columnno":2,"path":"/tmp","code":{"id":"astnode100000010","name":"validQuery","type":"FunctionExpression"}},"description":"Verify that the given prop is a properly formatted query object\nwith exactly one key and one corresponding valid value of type\nstring or number. The object key should be one of `minWidth`,\n`maxWidth`, `minHeight`, or `maxHeight`. Note that key values\nshould be camel cased.\n\n\nThe following are examples of valid query objects:\n\n```js\n{ minWidth: 350 }\n{ maxHeight: '400px' }\n{ maxWidth: '20rem' }\n```\n\nThe following are examples of invalid query objects:\n\n```js\n{ minwidth: 300 } // should be minWidth (case sensitive)\n{ minHeight: 200, maxHeight: 300 } // should consist of exactly one key\n```","params":[{"type":{"names":["Object"]},"description":"object containing the component props","name":"props"},{"type":{"names":["string"]},"description":"name of the given prop","name":"propName"},{"type":{"names":["string"]},"description":"name of the component","name":"componentName"}],"returns":[{"type":{"names":["Error"]},"description":"if prop is an invalid query"}],"name":"validQuery","longname":"ResponsivePropTypes.validQuery","kind":"function","memberof":"ResponsivePropTypes","scope":"static","id":"ResponsivePropTypes.validQuery","title":"ResponsivePropTypes.validQuery"}],"undocumented":false,"category":"utilities/layout","order":"","relativePath":"packages/ui-responsive/src/ResponsivePropTypes.js","extension":".js","srcPath":"packages/ui-responsive/src/ResponsivePropTypes.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/ResponsivePropTypes.js","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/lib/ResponsivePropTypes","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/src/ResponsivePropTypes.js').default","esPath":"@instructure/ui-responsive/es/ResponsivePropTypes","id":"ResponsivePropTypes","title":"ResponsivePropTypes"},"addElementQueryMatchListener":{"comment":"/**\n * ---\n * category: utilities/layout\n * ---\n * Given an object of named queries, listens for changes in the\n * element size and notifies which queries match via a function\n * callback. The callback method is only called when the query\n * matches change, not on all element resizes. (If you are looking\n * to call a method on all element resizes use\n * [ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) instead)\n *\n *\n * This function shares an interface with\n * [addMediaQueryMatchListener](#addMediaQueryMatchListener)\n * so that they can be used interchangeably.\n *\n * The [Responsive](#Responsive) component with the `match` prop\n * set to `element` utilizes this function. This is a low level\n * utility method and, in most cases, [Responsive](#Responsive)\n * should be used instead.\n *\n * ```js\n * class MyComponent extends Component {\n *   state = {\n *     matches: []\n *   }\n *\n *   _listener = null\n *\n *   componentDidMount () {\n *     const query = {myFirstQuery: { minWidth: 100 }, mySecondQuery: { maxHeight: '30rem'}}\n *     const el = findDOMNode(this)\n *\n *     this._listener = addElementQueryMatchListener(query, el, this.updateMatches)\n *   }\n *\n *   componentWillUnmount () {\n *     if (this._listener) {\n *       this._listener.remove()\n *     }\n *   }\n *\n *   updateMatches = (matches) => {\n *     this.setState({ matches })\n *   }\n *   ...\n * }\n * ```\n *\n * @param {Object} query - object consisting of names and query objects\n * @param {ReactComponent|DomNode} el - a DOM node or a function returning a DOM node\n * @param {function} cb - called with an array of the names of the currently\n * matching queries whenever a matching query changes\n * @returns {function} remove() function to call to remove the listener\n */","meta":{"range":[3110,4082],"filename":"4x13w1nghdnv77h2l2mrf.js","lineno":84,"columnno":0,"path":"/tmp","code":{"id":"astnode100000016","name":"addElementQueryMatchListener","type":"FunctionDeclaration","paramnames":["query","el","cb"]},"vars":{"node":"addElementQueryMatchListener~node","undefined":null,"matches":"addElementQueryMatchListener~matches","update":"addElementQueryMatchListener~update","":null,"debounced":"addElementQueryMatchListener~debounced","elementResizeListener":"addElementQueryMatchListener~elementResizeListener"}},"description":"Given an object of named queries, listens for changes in the\nelement size and notifies which queries match via a function\ncallback. The callback method is only called when the query\nmatches change, not on all element resizes. (If you are looking\nto call a method on all element resizes use\n[ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) instead)\n\n\nThis function shares an interface with\n[addMediaQueryMatchListener](#addMediaQueryMatchListener)\nso that they can be used interchangeably.\n\nThe [Responsive](#Responsive) component with the `match` prop\nset to `element` utilizes this function. This is a low level\nutility method and, in most cases, [Responsive](#Responsive)\nshould be used instead.\n\n```js\nclass MyComponent extends Component {\n  state = {\n    matches: []\n  }\n\n  _listener = null\n\n  componentDidMount () {\n    const query = {myFirstQuery: { minWidth: 100 }, mySecondQuery: { maxHeight: '30rem'}}\n    const el = findDOMNode(this)\n\n    this._listener = addElementQueryMatchListener(query, el, this.updateMatches)\n  }\n\n  componentWillUnmount () {\n    if (this._listener) {\n      this._listener.remove()\n    }\n  }\n\n  updateMatches = (matches) => {\n    this.setState({ matches })\n  }\n  ...\n}\n```","params":[{"type":{"names":["Object"]},"description":"object consisting of names and query objects","name":"query"},{"type":{"names":["ReactComponent","DomNode"]},"description":"a DOM node or a function returning a DOM node","name":"el"},{"type":{"names":["function"]},"description":"called with an array of the names of the currently\nmatching queries whenever a matching query changes","name":"cb"}],"returns":[{"type":{"names":["function"]},"description":"remove() function to call to remove the listener"}],"name":"addElementQueryMatchListener","longname":"addElementQueryMatchListener","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/layout","order":"","relativePath":"packages/ui-responsive/src/addElementQueryMatchListener.js","extension":".js","srcPath":"packages/ui-responsive/src/addElementQueryMatchListener.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/addElementQueryMatchListener.js","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/lib/addElementQueryMatchListener","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/src/addElementQueryMatchListener.js').default","esPath":"@instructure/ui-responsive/es/addElementQueryMatchListener","id":"addElementQueryMatchListener","title":"addElementQueryMatchListener"},"addMediaQueryMatchListener":{"comment":"/**\n * ---\n * category: utilities/layout\n * ---\n * Given an object of named queries, listens for changes in the\n * window size and notifies which queries match via a function\n * callback. The callback method is only called when the query\n * matches change, not on all window resizes.\n *\n * This function shares an interface with\n * [addElementQueryMatchListener](#addElementQueryMatchListener)\n * so that they can be used interchangeably.\n *\n * The [Responsive](#Responsive) component with the `match` prop\n * set to `media` utilizes this function. This is a low level utility\n * method and, in most cases, [Responsive](#Responsive) should be\n * used instead.\n *\n * ```js\n * class MyComponent extends Component {\n *   state = {\n *     matches: []\n *   }\n *\n *   _listener = null\n *\n *   componentDidMount () {\n *     const query = {myFirstQuery: { minWidth: 100 }, mySecondQuery: { maxHeight: '30rem'}}\n *     const el = findDOMNode(this)\n *\n *     this._listener = addMediaQueryMatchListener(query, el, this.updateMatches)\n *   }\n *\n *   componentWillUnmount () {\n *     if (this._listener) {\n *       this._listener.remove()\n *     }\n *   }\n *\n *   updateMatches = (matches) => {\n *     this.setState({ matches })\n *   }\n *   ...\n * }\n * ```\n *\n * @param {Object} query - object consisting of names and query objects\n * @param {ReactComponent|DomNode} el - a DOM node or a function returning a DOM node\n * @param {function} cb - called with an array of the names of the currently\n * matching queries whenever a matching query changes\n * @returns {function} remove() function to call to remove the listener\n */","meta":{"range":[2904,3823],"filename":"208g6c85oeip0n2daame6.js","lineno":80,"columnno":0,"path":"/tmp","code":{"id":"astnode100000010","name":"addMediaQueryMatchListener","type":"FunctionDeclaration","paramnames":["query","el","cb","matchMedia"]},"vars":{"node":"addMediaQueryMatchListener~node","updateMediaMatches":"addMediaQueryMatchListener~updateMediaMatches","":null,"mediaQueryLists":"addMediaQueryMatchListener~mediaQueryLists","listenerCallback":"addMediaQueryMatchListener~listenerCallback"}},"description":"Given an object of named queries, listens for changes in the\nwindow size and notifies which queries match via a function\ncallback. The callback method is only called when the query\nmatches change, not on all window resizes.\n\nThis function shares an interface with\n[addElementQueryMatchListener](#addElementQueryMatchListener)\nso that they can be used interchangeably.\n\nThe [Responsive](#Responsive) component with the `match` prop\nset to `media` utilizes this function. This is a low level utility\nmethod and, in most cases, [Responsive](#Responsive) should be\nused instead.\n\n```js\nclass MyComponent extends Component {\n  state = {\n    matches: []\n  }\n\n  _listener = null\n\n  componentDidMount () {\n    const query = {myFirstQuery: { minWidth: 100 }, mySecondQuery: { maxHeight: '30rem'}}\n    const el = findDOMNode(this)\n\n    this._listener = addMediaQueryMatchListener(query, el, this.updateMatches)\n  }\n\n  componentWillUnmount () {\n    if (this._listener) {\n      this._listener.remove()\n    }\n  }\n\n  updateMatches = (matches) => {\n    this.setState({ matches })\n  }\n  ...\n}\n```","params":[{"type":{"names":["Object"]},"description":"object consisting of names and query objects","name":"query"},{"type":{"names":["ReactComponent","DomNode"]},"description":"a DOM node or a function returning a DOM node","name":"el"},{"type":{"names":["function"]},"description":"called with an array of the names of the currently\nmatching queries whenever a matching query changes","name":"cb"}],"returns":[{"type":{"names":["function"]},"description":"remove() function to call to remove the listener"}],"name":"addMediaQueryMatchListener","longname":"addMediaQueryMatchListener","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/layout","order":"","relativePath":"packages/ui-responsive/src/addMediaQueryMatchListener.js","extension":".js","srcPath":"packages/ui-responsive/src/addMediaQueryMatchListener.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/addMediaQueryMatchListener.js","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/lib/addMediaQueryMatchListener","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/src/addMediaQueryMatchListener.js').default","esPath":"@instructure/ui-responsive/es/addMediaQueryMatchListener","id":"addMediaQueryMatchListener","title":"addMediaQueryMatchListener"},"jsonToMediaQuery":{"comment":"/**\n * ---\n * category: utilities/layout\n * ---\n *\n * Given a valid json query object, converts it to a standard media query\n * string. Valid queries should be an object consisting of exactly one of\n * the following `minWidth`, `maxWidth`, `minHeight`, or `maxHeight` and\n * a value as a string or number.\n *\n * Example input\n * ```js\n * { minWidth: 350 }\n * ```\n * Example output\n * ```js\n * '(min-width: 350px)'\n * ```\n *\n * @param {Object} query - an object consisting of the query type and value\n * @param {ReactComponent|DomNode} el - component or DOM node which will be\n *  passed to the pixel conversion if the unit type is `em`\n * @returns {string} media query string\n */","meta":{"range":[1884,2749],"filename":"a74rn2qai781wkrmr7gm3r.js","lineno":50,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"jsonToMediaQuery","type":"FunctionDeclaration","paramnames":["query","el"]},"vars":{"keys":"jsonToMediaQuery~keys","key":"jsonToMediaQuery~key","validKeys":"jsonToMediaQuery~validKeys","value":"jsonToMediaQuery~value"}},"description":"\nGiven a valid json query object, converts it to a standard media query\nstring. Valid queries should be an object consisting of exactly one of\nthe following `minWidth`, `maxWidth`, `minHeight`, or `maxHeight` and\na value as a string or number.\n\nExample input\n```js\n{ minWidth: 350 }\n```\nExample output\n```js\n'(min-width: 350px)'\n```","params":[{"type":{"names":["Object"]},"description":"an object consisting of the query type and value","name":"query"},{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node which will be\n passed to the pixel conversion if the unit type is `em`","name":"el"}],"returns":[{"type":{"names":["string"]},"description":"media query string"}],"name":"jsonToMediaQuery","longname":"jsonToMediaQuery","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/layout","order":"","relativePath":"packages/ui-responsive/src/jsonToMediaQuery.js","extension":".js","srcPath":"packages/ui-responsive/src/jsonToMediaQuery.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/jsonToMediaQuery.js","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/lib/jsonToMediaQuery","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/src/jsonToMediaQuery.js').default","esPath":"@instructure/ui-responsive/es/jsonToMediaQuery","id":"jsonToMediaQuery","title":"jsonToMediaQuery"},"parseQuery":{"comment":"/**\n * ---\n * category: utilities/layout\n * ---\n *\n * Given a query and an element, return a function that takes\n * size as an argument and returns an object consisting of\n * query names and a boolean true false if it matches.\n *\n * @param {Object} query - an object consisting of query names\n *  mapped to individual queries\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @returns {function} takes size {width, height} as an argument\n *  and returns an object consisting of query names and boolean\n *  true false if it matches\n */","meta":{"range":[1754,2545],"filename":"92b4kv318kreyx6zl6p3ep.js","lineno":42,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"parseQuery","type":"FunctionDeclaration","paramnames":["query","el"]},"vars":{"rules":"parseQuery~rules","":null}},"description":"\nGiven a query and an element, return a function that takes\nsize as an argument and returns an object consisting of\nquery names and a boolean true false if it matches.","params":[{"type":{"names":["Object"]},"description":"an object consisting of query names\n mapped to individual queries","name":"query"},{"type":{"names":["ReactComponent","DomNode"]},"description":"component or DOM node","name":"el"}],"returns":[{"type":{"names":["function"]},"description":"takes size {width, height} as an argument\n and returns an object consisting of query names and boolean\n true false if it matches"}],"name":"parseQuery","longname":"parseQuery","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/layout","order":"","relativePath":"packages/ui-responsive/src/parseQuery.js","extension":".js","srcPath":"packages/ui-responsive/src/parseQuery.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/parseQuery.js","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/lib/parseQuery","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/src/parseQuery.js').default","esPath":"@instructure/ui-responsive/es/parseQuery","id":"parseQuery","title":"parseQuery"},"Browser":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * A wrapper for [bowser](https://www.npmjs.com/package/bowser) browser\n * detection library.\n */","meta":{"range":[1329,1351],"filename":"uw6c6rqq967obmyn2fvfw.js","lineno":33,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"module.exports","type":"Identifier"}},"description":"A wrapper for [bowser](https://www.npmjs.com/package/bowser) browser\ndetection library.","name":"exports","longname":"module.exports","kind":"member","memberof":"module","scope":"static","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/Browser.js","extension":".js","srcPath":"packages/ui-utils/src/Browser.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/Browser.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/Browser","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/Browser.js').default","esPath":"@instructure/ui-utils/es/Browser","id":"Browser","title":"Browser"},"camelize":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Converts a hyphenated string to camel case\n *\n * Example inputs:\n *  - 'foo-bar'\n *  - 'baz-qux'\n *\n * Example outputs:\n *  - 'fooBar'\n *  - 'bazQux'\n *\n * @param {String} str\n * @returns {String} Returns camel cased string\n */","meta":{"range":[1433,1520],"filename":"7pth9mlr90d20p12l28gcs.js","lineno":42,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"camelize","type":"FunctionDeclaration","paramnames":["str"]},"vars":{"":null}},"description":"Converts a hyphenated string to camel case\n\nExample inputs:\n - 'foo-bar'\n - 'baz-qux'\n\nExample outputs:\n - 'fooBar'\n - 'bazQux'","params":[{"type":{"names":["String"]},"name":"str"}],"returns":[{"type":{"names":["String"]},"description":"Returns camel cased string"}],"name":"camelize","longname":"camelize","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/camelize.js","extension":".js","srcPath":"packages/ui-utils/src/camelize.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/camelize.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/camelize","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/camelize.js').default","esPath":"@instructure/ui-utils/es/camelize","id":"camelize","title":"camelize"},"capitalizeFirstLetter":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Capitalize the first letter in a string\n * @param {String} str\n */","meta":{"range":[1272,1375],"filename":"wywxif53dmi81v1reeeom.js","lineno":32,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"capitalizeFirstLetter","type":"FunctionDeclaration","paramnames":["str"]}},"description":"Capitalize the first letter in a string","params":[{"type":{"names":["String"]},"name":"str"}],"name":"capitalizeFirstLetter","longname":"capitalizeFirstLetter","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/capitalizeFirstLetter.js","extension":".js","srcPath":"packages/ui-utils/src/capitalizeFirstLetter.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/capitalizeFirstLetter.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/capitalizeFirstLetter","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/capitalizeFirstLetter.js').default","esPath":"@instructure/ui-utils/es/capitalizeFirstLetter","id":"capitalizeFirstLetter","title":"capitalizeFirstLetter"},"cloneArray":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Deep clones an array with sub arrays\n *\n * @param {Array} arr\n * @returns {Array} Returns a copy of the array\n */","meta":{"range":[1320,1543],"filename":"mxjiobe26mjv2t2zpo6rb9.js","lineno":35,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"cloneArray","type":"FunctionDeclaration","paramnames":["arr"]},"vars":{"copy":"cloneArray~copy","i":"cloneArray~i","copy[undefined]":"cloneArray~copy.undefined]"}},"description":"Deep clones an array with sub arrays","params":[{"type":{"names":["Array"]},"name":"arr"}],"returns":[{"type":{"names":["Array"]},"description":"Returns a copy of the array"}],"name":"cloneArray","longname":"cloneArray","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/cloneArray.js","extension":".js","srcPath":"packages/ui-utils/src/cloneArray.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/cloneArray.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/cloneArray","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/cloneArray.js').default","esPath":"@instructure/ui-utils/es/cloneArray","id":"cloneArray","title":"cloneArray"},"createChainedFunction":{"comment":"/**\n * ---\n * category: utilities/react\n * ---\n * Safe chained functions\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * Forked from: https://github.com/react-bootstrap/react-overlays/blob/master/src/utils/createChainedFunction.js\n * @module createChainedFunction\n * @param {function} functions to chain\n * @returns {function|null}\n */","meta":{"filename":"864hu8mmc7xh5rdme5gfp.js","lineno":25,"columnno":0,"path":"/tmp","code":{}},"description":"Safe chained functions\n\nWill only create a new function if needed,\notherwise will pass back existing functions or null.\n\nForked from: https://github.com/react-bootstrap/react-overlays/blob/master/src/utils/createChainedFunction.js","kind":"module","name":"createChainedFunction","params":[{"type":{"names":["function"]},"description":"to chain","name":"functions"}],"returns":[{"type":{"names":["function","null"]}}],"longname":"module:createChainedFunction","sections":[{"comment":"/**\n * Find all indexes for a value in an Array\n *\n * @param {array} arr The Array to search for val\n * @param {*} val The value to find indexes for\n * @return {array} All the indexes of the Array matching val\n */","meta":{"range":[2443,2599],"filename":"864hu8mmc7xh5rdme5gfp.js","lineno":75,"columnno":0,"path":"/tmp","code":{"id":"astnode100000087","name":"getAllIndexes","type":"FunctionDeclaration","paramnames":["arr","val"]},"vars":{"indexes":"module:createChainedFunction~getAllIndexes~indexes","":null}},"description":"Find all indexes for a value in an Array","params":[{"type":{"names":["array"]},"description":"The Array to search for val","name":"arr"},{"type":{"names":["*"]},"description":"The value to find indexes for","name":"val"}],"returns":[{"type":{"names":["array"]},"description":"All the indexes of the Array matching val"}],"name":"getAllIndexes","longname":"module:createChainedFunction~getAllIndexes","kind":"function","scope":"inner","memberof":"module:createChainedFunction","id":"module:createChainedFunction~getAllIndexes","title":"module:createChainedFunction~getAllIndexes"}],"undocumented":false,"category":"utilities/react","order":"","relativePath":"packages/ui-utils/src/createChainedFunction.js","extension":".js","srcPath":"packages/ui-utils/src/createChainedFunction.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/createChainedFunction.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/createChainedFunction","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/createChainedFunction.js').default","esPath":"@instructure/ui-utils/es/createChainedFunction","id":"createChainedFunction","title":"createChainedFunction"},"deepEqual":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * A wrapper for [fast-deep-equal](https://www.npmjs.com/package/fast-deep-equal)\n */","meta":{"range":[1329,1353],"filename":"j9vpox0fpxl0f2ikvobk.js","lineno":33,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"module.exports","type":"Identifier"}},"description":"A wrapper for [fast-deep-equal](https://www.npmjs.com/package/fast-deep-equal)","name":"exports","longname":"module.exports","kind":"member","memberof":"module","scope":"static","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/deepEqual.js","extension":".js","srcPath":"packages/ui-utils/src/deepEqual.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/deepEqual.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/deepEqual","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/deepEqual.js').default","esPath":"@instructure/ui-utils/es/deepEqual","id":"deepEqual","title":"deepEqual"},"isEdge":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * A minimal check to see if the browser is Edge. Use when you don't need all\n * of [bowser](https://www.npmjs.com/package/bowser).\n */","meta":{"range":[1423,1467],"filename":"2v8j1zrv502dz8cz8xb6ew.js","lineno":35,"columnno":0,"path":"/tmp","code":{"id":"astnode100000015","name":"exports.isEdge","type":"VariableDeclaration"}},"description":"A minimal check to see if the browser is Edge. Use when you don't need all\nof [bowser](https://www.npmjs.com/package/bowser).","name":"isEdge","longname":"isEdge","kind":"constant","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/isEdge.js","extension":".js","srcPath":"packages/ui-utils/src/isEdge.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/isEdge.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/isEdge","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/isEdge.js').default","esPath":"@instructure/ui-utils/es/isEdge","id":"isEdge","title":"isEdge"},"isIE11":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * A minimal check for IE11, since that's mostly all the browser detecting we do.\n * Use when you don't need all of [bowser](https://www.npmjs.com/package/bowser).\n */","meta":{"range":[1455,1508],"filename":"r7bjzbdu0pfg1urudyl4o.js","lineno":35,"columnno":0,"path":"/tmp","code":{"id":"astnode100000015","name":"exports.isIE11","type":"VariableDeclaration"}},"description":"A minimal check for IE11, since that's mostly all the browser detecting we do.\nUse when you don't need all of [bowser](https://www.npmjs.com/package/bowser).","name":"isIE11","longname":"isIE11","kind":"constant","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/isIE11.js","extension":".js","srcPath":"packages/ui-utils/src/isIE11.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/isIE11.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/isIE11","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/isIE11.js').default","esPath":"@instructure/ui-utils/es/isIE11","id":"isIE11","title":"isIE11"},"mergeDeep":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Deep merge N objects into a single result object.\n * Merging creates a new object, so that none of the arguments are modified.\n *\n * @param {Object} arguments objects to merge\n * @returns {Object} a new object with items from all arguments\n */","meta":{"range":[1449,1618],"filename":"unkvmj37s6kegw5ywhet8f.js","lineno":35,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"mergeDeep","type":"FunctionDeclaration","paramnames":[]},"vars":{"args":"mergeDeep~args","target":"mergeDeep~target","":null}},"description":"Deep merge N objects into a single result object.\nMerging creates a new object, so that none of the arguments are modified.","params":[{"type":{"names":["Object"]},"description":"objects to merge","name":"arguments"}],"returns":[{"type":{"names":["Object"]},"description":"a new object with items from all arguments"}],"name":"mergeDeep","longname":"mergeDeep","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/mergeDeep.js","extension":".js","srcPath":"packages/ui-utils/src/mergeDeep.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/mergeDeep.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/mergeDeep","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/mergeDeep.js').default","esPath":"@instructure/ui-utils/es/mergeDeep","id":"mergeDeep","title":"mergeDeep"},"ms":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Converts a unit value time combination (s, ms) to a number representing ms\n *\n * @module ms\n *\n * Example inputs:\n *  - '100s'\n *  - '20ms'\n *\n * @param {String} val\n * @returns {Number} Returns numerical representation of milliseconds\n */","meta":{"filename":"redo48blqctlj0szywaw.js","lineno":27,"columnno":0,"path":"/tmp","code":{}},"description":"Converts a unit value time combination (s, ms) to a number representing ms","kind":"module","name":"ms\n\nExample inputs:\n - '100s'\n - '20ms'","params":[{"type":{"names":["String"]},"name":"val"}],"returns":[{"type":{"names":["Number"]},"description":"Returns numerical representation of milliseconds"}],"longname":"ms\n\nExample inputs:\n - '100s'\n - '20ms'module:","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/ms.js","extension":".js","srcPath":"packages/ui-utils/src/ms.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/ms.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/ms","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/ms.js').default","esPath":"@instructure/ui-utils/es/ms","id":"ms","title":"ms"},"parseUnit":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Converts a CSS unit value combination into an array of type [ value, unit ]\n *\n * @module parseUnit\n *\n * Example inputs:\n *  - '100px'\n *  - '20rem'\n *  - '10vh'\n *  - '400vmin'\n *\n * @param {string} str\n * @returns {Array} Returns array of shape [ value, unit ]\n */","meta":{"filename":"vpx9yzd803qeu5wvgb6il.js","lineno":25,"columnno":0,"path":"/tmp","code":{}},"description":"Converts a CSS unit value combination into an array of type [ value, unit ]","kind":"module","name":"parseUnit\n\nExample inputs:\n - '100px'\n - '20rem'\n - '10vh'\n - '400vmin'","params":[{"type":{"names":["string"]},"name":"str"}],"returns":[{"type":{"names":["Array"]},"description":"Returns array of shape [ value, unit ]"}],"longname":"parseUnit\n\nExample inputs:\n - '100px'\n - '20rem'\n - '10vh'\n - '400vmin'module:","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/parseUnit.js","extension":".js","srcPath":"packages/ui-utils/src/parseUnit.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/parseUnit.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/parseUnit","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/parseUnit.js').default","esPath":"@instructure/ui-utils/es/parseUnit","id":"parseUnit","title":"parseUnit"},"pascalize":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Converts a hyphenated or camel cased string to pascal case\n *\n * Example inputs:\n *  - 'foo-bar'\n *  - 'baz-qux'\n *\n * Example outputs:\n *  - 'FooBar'\n *  - 'BazQux'\n *\n * @param {String} str\n * @returns {String} Returns pascal cased string\n */","meta":{"range":[1552,1625],"filename":"hu6t3k505sr7ndcxz2aztg.js","lineno":44,"columnno":0,"path":"/tmp","code":{"id":"astnode100000010","name":"pascalize","type":"FunctionDeclaration","paramnames":["str"]}},"description":"Converts a hyphenated or camel cased string to pascal case\n\nExample inputs:\n - 'foo-bar'\n - 'baz-qux'\n\nExample outputs:\n - 'FooBar'\n - 'BazQux'","params":[{"type":{"names":["String"]},"name":"str"}],"returns":[{"type":{"names":["String"]},"description":"Returns pascal cased string"}],"name":"pascalize","longname":"pascalize","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/pascalize.js","extension":".js","srcPath":"packages/ui-utils/src/pascalize.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/pascalize.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/pascalize","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/pascalize.js').default","esPath":"@instructure/ui-utils/es/pascalize","id":"pascalize","title":"pascalize"},"px":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Converts a unit value size combination (em, rem, px) to a number representing px\n *\n * Example inputs:\n *  - '100rem'\n *  - '20em'\n *  - '40px'\n *\n * @module px\n *\n * @param {String} val\n * @param {DomNode} el - containing element, for context measure is em (defaults to document.body)\n * @returns {Number} Returns numerical representation of pixels\n */","meta":{"filename":"2py08ncrgzqnidgvcg8ibr.js","lineno":28,"columnno":0,"path":"/tmp","code":{}},"description":"Converts a unit value size combination (em, rem, px) to a number representing px\n\nExample inputs:\n - '100rem'\n - '20em'\n - '40px'","kind":"module","name":"px","params":[{"type":{"names":["String"]},"name":"val"},{"type":{"names":["DomNode"]},"description":"containing element, for context measure is em (defaults to document.body)","name":"el"}],"returns":[{"type":{"names":["Number"]},"description":"Returns numerical representation of pixels"}],"longname":"module:px","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/px.js","extension":".js","srcPath":"packages/ui-utils/src/px.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/px.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/px","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/px.js').default","esPath":"@instructure/ui-utils/es/px","id":"px","title":"px"},"shallowEqual":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n *\n * @module shallowEqual\n *\n * @param {Object} objA\n * @param {Object} objB\n * @returns {Boolean} Returns true when the values of all keys are strictly equal\n */","meta":{"filename":"m7j9qhrrpvb7q0fa5v549.js","lineno":28,"columnno":0,"path":"/tmp","code":{}},"description":"Performs equality by iterating through keys on an object and returning false\nwhen any key has values which are not strictly equal between the arguments.","kind":"module","name":"shallowEqual","params":[{"type":{"names":["Object"]},"name":"objA"},{"type":{"names":["Object"]},"name":"objB"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true when the values of all keys are strictly equal"}],"longname":"module:shallowEqual","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/shallowEqual.js","extension":".js","srcPath":"packages/ui-utils/src/shallowEqual.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/shallowEqual.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/shallowEqual","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/shallowEqual.js').default","esPath":"@instructure/ui-utils/es/shallowEqual","id":"shallowEqual","title":"shallowEqual"},"within":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Determines if one numerical value (a) is within a designated range (diff) of another (b)\n *\n * @module within\n *\n * @param {number} a\n * @param {number} b\n * @param {number} [diff=1]\n * @returns {Boolean} Returns true if a is within the diff range of b\n */","meta":{"filename":"migukn5dh6l7aifw6fluyp.js","lineno":25,"columnno":0,"path":"/tmp","code":{}},"description":"Determines if one numerical value (a) is within a designated range (diff) of another (b)","kind":"module","name":"within","params":[{"type":{"names":["number"]},"name":"a"},{"type":{"names":["number"]},"name":"b"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"name":"diff"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true if a is within the diff range of b"}],"longname":"module:within","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/ui-utils/src/within.js","extension":".js","srcPath":"packages/ui-utils/src/within.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-utils/src/within.js","packageName":"@instructure/ui-utils","requirePath":"@instructure/ui-utils/lib/within","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-utils/src/within.js').default","esPath":"@instructure/ui-utils/es/within","id":"within","title":"within"},"uid":{"comment":"/**\n * ---\n * category: utilities\n * ---\n * Generate a unique (CSS-safe) id string\n *\n * @module uid\n * @param {String} prefix a string to prefix the id for debugging in non-production env\n * @param {Number} length id length (in characters, minus the prefix)\n * @returns {String} a unique id\n */","meta":{"filename":"ik7zkkr86ar05e0te4jxo68.js","lineno":31,"columnno":0,"path":"/tmp","code":{}},"description":"Generate a unique (CSS-safe) id string","kind":"module","name":"uid","params":[{"type":{"names":["String"]},"description":"a string to prefix the id for debugging in non-production env","name":"prefix"},{"type":{"names":["Number"]},"description":"id length (in characters, minus the prefix)","name":"length"}],"returns":[{"type":{"names":["String"]},"description":"a unique id"}],"longname":"module:uid","sections":[],"undocumented":false,"category":"utilities","order":"","relativePath":"packages/uid/src/uid.js","extension":".js","srcPath":"packages/uid/src/uid.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/uid/src/uid.js","packageName":"@instructure/uid","requirePath":"@instructure/uid/lib/uid","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/uid/src/uid.js').default","esPath":"@instructure/uid/es/uid","id":"uid","title":"uid"},"EmotionThemeProvider":{"description":"Wrapper for the [ThemeProvider](https://emotion.sh/docs/theming#themeprovider-reactcomponenttype) of emotion js.\n\nApplies the given theme. It handles either a full theme, or an overrides object.\n\n```js\nimport { canvas, instructure } from '@instructure/ui-themes'\nimport { EmotionThemeProvider } from '@instructure/emotion'\n\n@example\n<EmotionThemeProvider theme={canvas}>\n  <div>Canvas themed part</div>\n\n  <EmotionThemeProvider\n    theme={{\n      themeOverrides: {\n        canvas: {\n          colors: {\n            backgroundLightest: '#fefefe'\n          },\n          borders: {\n            style: 'dashed'\n          }\n        }\n      }\n    }}\n  >\n    <div>Canvas with new 'backgroundLightest'</div>\n  </EmotionThemeProvider>\n\n  <EmotionThemeProvider theme={instructure}>\n    <div>Instructure themed part</div>\n  </EmotionThemeProvider>\n</EmotionThemeProvider>\n```\n\n@param {object} theme - A full theme or an override object","displayName":"EmotionThemeProvider","methods":[],"props":{"theme":{"defaultValue":{"value":"{}","computed":false},"required":false}},"category":"components/utilities","order":"","relativePath":"packages/emotion/src/EmotionThemeProvider/index.js","extension":".js","srcPath":"packages/emotion/src/EmotionThemeProvider/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/emotion/src/EmotionThemeProvider/index.js","packageName":"@instructure/emotion","requirePath":"@instructure/emotion/lib/EmotionThemeProvider","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/emotion/src/EmotionThemeProvider/index.js').default","esPath":"@instructure/emotion/es/EmotionThemeProvider","id":"EmotionThemeProvider","title":"EmotionThemeProvider"},"ThemeablePropTypes":{"comment":"/**\n * ---\n * category: utilities/themes\n * ---\n * Custom prop types for themeable React components.\n * @module ThemeablePropTypes\n */","meta":{"filename":"jxuz4mxvo1enpyd34mmk.js","lineno":39,"columnno":0,"path":"/tmp","code":{}},"description":"Custom prop types for themeable React components.","kind":"module","name":"ThemeablePropTypes","longname":"module:ThemeablePropTypes","sections":[],"undocumented":false,"category":"utilities/themes","order":"","relativePath":"packages/emotion/src/styleUtils/ThemeablePropTypes.js","extension":".js","srcPath":"packages/emotion/src/styleUtils/ThemeablePropTypes.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/emotion/src/styleUtils/ThemeablePropTypes.js","packageName":"@instructure/emotion","requirePath":"@instructure/emotion/lib/styleUtils/ThemeablePropTypes","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/emotion/src/styleUtils/ThemeablePropTypes.js').default","esPath":"@instructure/emotion/es/styleUtils/ThemeablePropTypes","id":"ThemeablePropTypes","title":"ThemeablePropTypes"},"bidirectionalPolyfill":{"comment":"/**\n * ---\n * category: utilities/themes\n * ---\n * Polyfills Bi-directional [CSS proposal from W3C](https://drafts.csswg.org/css-logical-props/) to support direction-sensitive rules, a.k.a Left-To-Right (LTR) and Right-To-Left (RTL) in all browsers.\n *\n * Based on formerly used [postcss-bidirection](https://github.com/gasolin/postcss-bidirection) plugin.\n *\n * @param {object} styles - styles object of a component\n * @param {string} dir - \"ltr\" of \"rtl\" direction\n * @returns {{}} styles object with Bi-directional properties polyfilled\n */","meta":{"range":[1796,1809],"filename":"zehb48dm5o2d9nkc38zmu.js","lineno":41,"columnno":6,"path":"/tmp","code":{"id":"astnode100000011","name":"DEBUG","type":"Literal","value":false}},"description":"Polyfills Bi-directional [CSS proposal from W3C](https://drafts.csswg.org/css-logical-props/) to support direction-sensitive rules, a.k.a Left-To-Right (LTR) and Right-To-Left (RTL) in all browsers.\n\nBased on formerly used [postcss-bidirection](https://github.com/gasolin/postcss-bidirection) plugin.","params":[{"type":{"names":["object"]},"description":"styles object of a component","name":"styles"},{"type":{"names":["string"]},"description":"\"ltr\" of \"rtl\" direction","name":"dir"}],"returns":[{"type":{"names":["Object"]},"description":"styles object with Bi-directional properties polyfilled"}],"name":"DEBUG","longname":"DEBUG","kind":"constant","scope":"global","sections":[],"undocumented":false,"category":"utilities/themes","order":"","relativePath":"packages/emotion/src/styleUtils/bidirectionalPolyfill.js","extension":".js","srcPath":"packages/emotion/src/styleUtils/bidirectionalPolyfill.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/emotion/src/styleUtils/bidirectionalPolyfill.js","packageName":"@instructure/emotion","requirePath":"@instructure/emotion/lib/styleUtils/bidirectionalPolyfill","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/emotion/src/styleUtils/bidirectionalPolyfill.js').default","esPath":"@instructure/emotion/es/styleUtils/bidirectionalPolyfill","id":"bidirectionalPolyfill","title":"bidirectionalPolyfill"},"getShorthandPropValue":{"comment":"/**\n * ---\n * category: utilities/themes\n * ---\n * Given a theme object, a string of space delimited prop values,\n * and a propName prefix, combines each prop value with the\n * propName prefix and replaces it with a corresponding value\n * from the theme object.\n *\n * @param {String} componentName - the name of the component (for error messages)\n * @param {Object} componentTheme - a theme object of keys and values\n * @param {String} propValue - a space delimited string of values\n * @param {String} propName - a prefix to combine with each propValue\n * @returns {String} a string with each value replaced with a value from the theme object\n */","meta":{"range":[1917,2827],"filename":"ztqmnz8ydehctyde6qcv6a.js","lineno":42,"columnno":0,"path":"/tmp","code":{"id":"astnode100000012","name":"getShorthandPropValue","type":"FunctionDeclaration","paramnames":["componentName","componentTheme","propValue","propName"]},"vars":{"":null}},"description":"Given a theme object, a string of space delimited prop values,\nand a propName prefix, combines each prop value with the\npropName prefix and replaces it with a corresponding value\nfrom the theme object.","params":[{"type":{"names":["String"]},"description":"the name of the component (for error messages)","name":"componentName"},{"type":{"names":["Object"]},"description":"a theme object of keys and values","name":"componentTheme"},{"type":{"names":["String"]},"description":"a space delimited string of values","name":"propValue"},{"type":{"names":["String"]},"description":"a prefix to combine with each propValue","name":"propName"}],"returns":[{"type":{"names":["String"]},"description":"a string with each value replaced with a value from the theme object"}],"name":"getShorthandPropValue","longname":"getShorthandPropValue","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/themes","order":"","relativePath":"packages/emotion/src/styleUtils/getShorthandPropValue.js","extension":".js","srcPath":"packages/emotion/src/styleUtils/getShorthandPropValue.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/emotion/src/styleUtils/getShorthandPropValue.js","packageName":"@instructure/emotion","requirePath":"@instructure/emotion/lib/styleUtils/getShorthandPropValue","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/emotion/src/styleUtils/getShorthandPropValue.js').default","esPath":"@instructure/emotion/es/styleUtils/getShorthandPropValue","id":"getShorthandPropValue","title":"getShorthandPropValue"},"makeThemeVars":{"comment":"/**\n * ---\n * category: utilities/themes\n * ---\n * Given a prefix and a theme object, prepends the object keys with\n * the designated prefix and camel cases the concatenation.\n *\n * @param {String} prefix - a string to prepend to object keys\n * @param {Object} vars - an object\n * @returns {Object} a modified object with prefixed keys\n */","meta":{"range":[1551,1748],"filename":"agbhooxv4i4604cac2dtr3.js","lineno":38,"columnno":0,"path":"/tmp","code":{"id":"astnode100000006","name":"makeThemeVars","type":"FunctionDeclaration","paramnames":["prefix","vars"]},"vars":{"themeVars":"makeThemeVars~themeVars","":null}},"description":"Given a prefix and a theme object, prepends the object keys with\nthe designated prefix and camel cases the concatenation.","params":[{"type":{"names":["String"]},"description":"a string to prepend to object keys","name":"prefix"},{"type":{"names":["Object"]},"description":"an object","name":"vars"}],"returns":[{"type":{"names":["Object"]},"description":"a modified object with prefixed keys"}],"name":"makeThemeVars","longname":"makeThemeVars","kind":"function","scope":"global","sections":[],"undocumented":false,"category":"utilities/themes","order":"","relativePath":"packages/emotion/src/styleUtils/makeThemeVars.js","extension":".js","srcPath":"packages/emotion/src/styleUtils/makeThemeVars.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/emotion/src/styleUtils/makeThemeVars.js","packageName":"@instructure/emotion","requirePath":"@instructure/emotion/lib/styleUtils/makeThemeVars","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/emotion/src/styleUtils/makeThemeVars.js').default","esPath":"@instructure/emotion/es/styleUtils/makeThemeVars","id":"makeThemeVars","title":"makeThemeVars"},"mirrorShorthand":{"comment":"/**\n * ---\n * category: utilities/themes\n * ---\n * @module mirrorShorthand\n */","meta":{"filename":"69il3pu2ge4212nf4plfk9.js","lineno":25,"columnno":0,"path":"/tmp","code":{}},"description":"","kind":"module","name":"mirrorShorthand","longname":"module:mirrorShorthand","sections":[{"comment":"/**\n * Mirror shorthand CSS properties for bidirectional text\n *\n * Given a string representing a CSS shorthand for edges,\n * swaps the values such that 4 value syntax is RTL instead\n * of LTR.\n *\n * See the following for further reference:\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties\n *\n * @param {String} values - space delimited string values representing a CSS shorthand\n * @returns {String} a space delimited CSS shorthand string converted to RTL\n */","meta":{"range":[1726,2023],"filename":"69il3pu2ge4212nf4plfk9.js","lineno":45,"columnno":0,"path":"/tmp","code":{"id":"astnode100000002","name":"mirrorShorthandEdges","type":"FunctionDeclaration","paramnames":["values"]},"vars":{"valuesArr":"module:mirrorShorthand~mirrorShorthandEdges~valuesArr","":null}},"description":"Mirror shorthand CSS properties for bidirectional text\n\nGiven a string representing a CSS shorthand for edges,\nswaps the values such that 4 value syntax is RTL instead\nof LTR.\n\nSee the following for further reference:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties","params":[{"type":{"names":["String"]},"description":"space delimited string values representing a CSS shorthand","name":"values"}],"returns":[{"type":{"names":["String"]},"description":"a space delimited CSS shorthand string converted to RTL"}],"name":"mirrorShorthandEdges","longname":"module:mirrorShorthand~mirrorShorthandEdges","kind":"function","scope":"inner","memberof":"module:mirrorShorthand","id":"module:mirrorShorthand~mirrorShorthandEdges","title":"module:mirrorShorthand~mirrorShorthandEdges"},{"comment":"/**\n * Convert shorthand CSS properties for corners to rtl\n *\n * Given a string representing a CSS shorthand for corners,\n * swaps the values such that 2,3 and 4 value syntax is rtl\n * instead of ltr.\n *\n * See the following for further reference:\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties\n *\n * @param {String} values - space delimited string values representing a CSS shorthand\n * @returns {String} a space delimited CSS shorthand string converted to RTL\n */","meta":{"range":[2517,3122],"filename":"69il3pu2ge4212nf4plfk9.js","lineno":72,"columnno":0,"path":"/tmp","code":{"id":"astnode100000051","name":"mirrorShorthandCorners","type":"FunctionDeclaration","paramnames":["values"]},"vars":{"valuesArr":"module:mirrorShorthand~mirrorShorthandCorners~valuesArr","":null}},"description":"Convert shorthand CSS properties for corners to rtl\n\nGiven a string representing a CSS shorthand for corners,\nswaps the values such that 2,3 and 4 value syntax is rtl\ninstead of ltr.\n\nSee the following for further reference:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties","params":[{"type":{"names":["String"]},"description":"space delimited string values representing a CSS shorthand","name":"values"}],"returns":[{"type":{"names":["String"]},"description":"a space delimited CSS shorthand string converted to RTL"}],"name":"mirrorShorthandCorners","longname":"module:mirrorShorthand~mirrorShorthandCorners","kind":"function","scope":"inner","memberof":"module:mirrorShorthand","id":"module:mirrorShorthand~mirrorShorthandCorners","title":"module:mirrorShorthand~mirrorShorthandCorners"}],"undocumented":false,"category":"utilities/themes","order":"","relativePath":"packages/emotion/src/styleUtils/mirrorShorthand.js","extension":".js","srcPath":"packages/emotion/src/styleUtils/mirrorShorthand.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/emotion/src/styleUtils/mirrorShorthand.js","packageName":"@instructure/emotion","requirePath":"@instructure/emotion/lib/styleUtils/mirrorShorthand","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/emotion/src/styleUtils/mirrorShorthand.js').default","esPath":"@instructure/emotion/es/styleUtils/mirrorShorthand","id":"mirrorShorthand","title":"mirrorShorthand"},"AccessibleContent":{"description":"@module AccessibleContent","displayName":"AccessibleContent","methods":[],"props":{"alt":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render the screen reader content as","defaultValue":{"value":"'span'","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}},"category":"components/utilities","order":"","relativePath":"packages/ui-a11y-content/src/AccessibleContent/index.js","extension":".js","srcPath":"packages/ui-a11y-content/src/AccessibleContent/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-content/src/AccessibleContent/index.js","packageName":"@instructure/ui-a11y-content","requirePath":"@instructure/ui-a11y-content/lib/AccessibleContent","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-content/src/AccessibleContent/index.js').default","esPath":"@instructure/ui-a11y-content/es/AccessibleContent","id":"AccessibleContent","title":"AccessibleContent"},"PresentationContent":{"description":"@module PresentationContent","displayName":"PresentationContent","methods":[],"props":{"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'span'","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}},"category":"components/utilities","order":"","relativePath":"packages/ui-a11y-content/src/PresentationContent/index.js","extension":".js","srcPath":"packages/ui-a11y-content/src/PresentationContent/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-content/src/PresentationContent/index.js","packageName":"@instructure/ui-a11y-content","requirePath":"@instructure/ui-a11y-content/lib/PresentationContent","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-content/src/PresentationContent/index.js').default","esPath":"@instructure/ui-a11y-content/es/PresentationContent","id":"PresentationContent","title":"PresentationContent"},"ScreenReaderContent":{"description":"@module ScreenReaderContent","displayName":"ScreenReaderContent","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'span'","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"content meant for screen readers only","defaultValue":{"value":"null","computed":false}}},"category":"components/utilities","order":"","relativePath":"packages/ui-a11y-content/src/ScreenReaderContent/index.js","extension":".js","srcPath":"packages/ui-a11y-content/src/ScreenReaderContent/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-a11y-content/src/ScreenReaderContent/index.js","packageName":"@instructure/ui-a11y-content","requirePath":"@instructure/ui-a11y-content/lib/ScreenReaderContent","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-a11y-content/src/ScreenReaderContent/index.js').default","esPath":"@instructure/ui-a11y-content/es/ScreenReaderContent","id":"ScreenReaderContent","title":"ScreenReaderContent"},"Alert":{"description":"","displayName":"Alert","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":false,"description":"content to be rendered within Alert","defaultValue":{"value":"null","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'info'","computed":false},{"value":"'success'","computed":false},{"value":"'warning'","computed":false},{"value":"'error'","computed":false}]},"required":false,"description":"Determines color and icon","defaultValue":{"value":"'info'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"'x-small 0'","computed":false}},"liveRegion":{"type":{"name":"func"},"required":false,"description":"Function that returns the DIV where screenreader alerts will be placed.","defaultValue":{"value":"undefined","computed":true}},"liveRegionPoliteness":{"type":{"name":"enum","value":[{"value":"'polite'","computed":false},{"value":"'assertive'","computed":false}]},"required":false,"description":"Choose the politeness level of screenreader alerts.","defaultValue":{"value":"'assertive'","computed":false}},"isLiveRegionAtomic":{"type":{"name":"bool"},"required":false,"description":"If the screenreader alert should be atomic","defaultValue":{"value":"false","computed":false}},"screenReaderOnly":{"type":{"name":"bool"},"required":false,"description":"If the alert should only be visible to screen readers","defaultValue":{"value":"false","computed":false}},"timeout":{"type":{"name":"number"},"required":false,"description":"Milliseconds until the Alert is dismissed automatically","defaultValue":{"value":"0","computed":false}},"renderCloseButtonLabel":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"Close button label. Can be a React component","defaultValue":{"value":"undefined","computed":true}},"onDismiss":{"type":{"name":"func"},"required":false,"description":"Callback after the alert is closed","defaultValue":{"value":"undefined","computed":true}},"transition":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'fade'","computed":false}]},"required":false,"description":"Transition used to make the alert appear and disappear","defaultValue":{"value":"'fade'","computed":false}},"open":{"type":{"name":"bool"},"required":false,"description":"if open transitions from truthy to falsey, it's a signal to close and unmount the alert.\nThis is necessary to close the alert from the outside and still run the transition.","defaultValue":{"value":"true","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-alerts/src/Alert/index.js","extension":".js","srcPath":"packages/ui-alerts/src/Alert/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-alerts/src/Alert/index.js","packageName":"@instructure/ui-alerts","requirePath":"@instructure/ui-alerts/lib/Alert","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-alerts/src/Alert/index.js').default","esPath":"@instructure/ui-alerts/es/Alert","id":"Alert","title":"Alert"},"Avatar":{"description":"","displayName":"Avatar","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"name":{"type":{"name":"string"},"required":true,"description":""},"src":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"alt":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"shape":{"type":{"name":"enum","value":[{"value":"'circle'","computed":false},{"value":"'rectangle'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'circle'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"display":{"type":{"name":"enum","value":[{"value":"'inline-block'","computed":false},{"value":"'block'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'inline-block'","computed":false}},"onImageLoaded":{"type":{"name":"func"},"required":false,"description":"Callback fired when the avatar image has loaded","defaultValue":{"value":"(event) => {}","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as"},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html element","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-avatar/src/Avatar/index.js","extension":".js","srcPath":"packages/ui-avatar/src/Avatar/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-avatar/src/Avatar/index.js","packageName":"@instructure/ui-avatar","requirePath":"@instructure/ui-avatar/lib/Avatar","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-avatar/src/Avatar/index.js').default","esPath":"@instructure/ui-avatar/es/Avatar","id":"Avatar","title":"Avatar"},"Badge":{"description":"","displayName":"Badge","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"count":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"countUntil":{"type":{"name":"number"},"required":false,"description":"The number at which the count gets truncated by\nformatOverflowText. For example, a countUntil of 100\nwould stop the count at 99.","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"element"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'count'","computed":false},{"value":"'notification'","computed":false}]},"required":false,"description":"Render Badge as a counter (`count`) or as a smaller dot (`notification`) with\nno count number displayed.","defaultValue":{"value":"'count'","computed":false}},"standalone":{"type":{"name":"bool"},"required":false,"description":"Render Badge as an inline html element that is not positioned relative\nto a child.","defaultValue":{"value":"false","computed":false}},"pulse":{"type":{"name":"bool"},"required":false,"description":"Make the Badge slowly pulse twice to get the user's attention.","defaultValue":{"value":"false","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'success'","computed":false},{"value":"'danger'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'primary'","computed":false}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"Supported values are `top start`, `top end`, `end center`, `bottom end`,\n`bottom start`, and `start center`","defaultValue":{"value":"'top end'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","defaultValue":{"value":"(el) => {}","computed":false}},"formatOverflowText":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(count, countUntil) => `${countUntil - 1} +`","computed":false}},"formatOutput":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-badge/src/Badge/index.js","extension":".js","srcPath":"packages/ui-badge/src/Badge/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-badge/src/Badge/index.js","packageName":"@instructure/ui-badge","requirePath":"@instructure/ui-badge/lib/Badge","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-badge/src/Badge/index.js').default","esPath":"@instructure/ui-badge/es/Badge","id":"Badge","title":"Badge"},"Billboard":{"description":"","displayName":"Billboard","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"hero":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"Provide an <Img> component or Instructure Icon for the hero image","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"If you're using an icon, this prop will size it. Also sets the font-size\nof the headline and message.","defaultValue":{"value":"'medium'","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'span'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","defaultValue":{"value":"(el) => {}","computed":false}},"heading":{"type":{"name":"string"},"required":false,"description":"The headline for the Billboard. Is styled as an h1 element by default","defaultValue":{"value":"undefined","computed":true}},"headingAs":{"type":{"name":"enum","value":[{"value":"'h1'","computed":false},{"value":"'h2'","computed":false},{"value":"'h3'","computed":false},{"value":"'span'","computed":false}]},"required":false,"description":"Choose the appropriately semantic tag for the heading","defaultValue":{"value":"'span'","computed":false}},"headingLevel":{"type":{"name":"enum","value":[{"value":"'h1'","computed":false},{"value":"'h2'","computed":false},{"value":"'h3'","computed":false},{"value":"'h4'","computed":false}]},"required":false,"description":"Choose the font-size for the heading (see the Heading component)","defaultValue":{"value":"'h1'","computed":false}},"message":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Instructions or information for the Billboard. Note: you should not pass\ninteractive content to this prop if you are also providing an `href` or\n`onClick`. That would cause the Billboard to render as a button or link\nand would result in nested interactive content.","defaultValue":{"value":"undefined","computed":true}},"onClick":{"type":{"name":"func"},"required":false,"description":"If you add an onClick prop, the Billboard renders as a clickable button","defaultValue":{"value":"undefined","computed":true}},"href":{"type":{"name":"string"},"required":false,"description":"If `href` is provided, Billboard will render as a link","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Whether or not to disable the billboard","defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"Works just like disabled but keeps the same styles as if it were active","defaultValue":{"value":"false","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-billboard/src/Billboard/index.js","extension":".js","srcPath":"packages/ui-billboard/src/Billboard/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-billboard/src/Billboard/index.js","packageName":"@instructure/ui-billboard","requirePath":"@instructure/ui-billboard/lib/Billboard","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-billboard/src/Billboard/index.js').default","esPath":"@instructure/ui-billboard/es/Billboard","id":"Billboard","title":"Billboard"},"Breadcrumb":{"description":"","displayName":"Breadcrumb","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"Children.oneOf([BreadcrumbLink])"},"required":false,"description":"children of type Breadcrumb.Link","defaultValue":{"value":"null","computed":false}},"label":{"type":{"name":"string"},"required":true,"description":"An accessible label for the navigation"},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"Sets the font-size of the breadcrumb text","defaultValue":{"value":"'medium'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-breadcrumb/src/Breadcrumb/index.js","extension":".js","srcPath":"packages/ui-breadcrumb/src/Breadcrumb/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-breadcrumb/src/Breadcrumb/index.js","packageName":"@instructure/ui-breadcrumb","requirePath":"@instructure/ui-breadcrumb/lib/Breadcrumb","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-breadcrumb/src/Breadcrumb/index.js').default","esPath":"@instructure/ui-breadcrumb/es/Breadcrumb","id":"Breadcrumb","title":"Breadcrumb"},"BaseButton":{"description":"","displayName":"BaseButton","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":false,"description":"Specifies the `Button` children.","defaultValue":{"value":"null","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'button'","computed":false},{"value":"'submit'","computed":false},{"value":"'reset'","computed":false}]},"required":false,"description":"Specifies the type of the `Button`'s underlying html element.","defaultValue":{"value":"'button'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the `Button`","defaultValue":{"value":"'medium'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the `Button`'s underlying html element.","defaultValue":{"value":"(el) => {}","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root, `Button` by default.","defaultValue":{"value":"'button'","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the `Button` is enabled, disabled, or readonly.","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'secondary'","computed":false},{"value":"'success'","computed":false},{"value":"'danger'","computed":false}]},"required":false,"description":"Specifies the color for the `Button`.","defaultValue":{"value":"'secondary'","computed":false}},"focusColor":{"type":{"name":"enum","value":[{"value":"'info'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"Override the `Button`'s default focus outline color.","defaultValue":{"value":"undefined","computed":true}},"display":{"type":{"name":"enum","value":[{"value":"'inline-block'","computed":false},{"value":"'block'","computed":false}]},"required":false,"description":"The `Button` display property. When set to `inline-block`, the `Button` displays inline with other elements.\nWhen set to block, the `Button` expands to fill the width of the container.","defaultValue":{"value":"'inline-block'","computed":false}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false}]},"required":false,"description":"Sets the alignment of the `Button` children and/or icon.","defaultValue":{"value":"'start'","computed":false}},"shape":{"type":{"name":"enum","value":[{"value":"'rectangle'","computed":false},{"value":"'circle'","computed":false}]},"required":false,"description":"Specifies if the `Button` shape should be a circle or rectangle.","defaultValue":{"value":"'rectangle'","computed":false}},"withBackground":{"type":{"name":"bool"},"required":false,"description":"Specifies if the `Button` should render with a solid background. When false, the background is transparent.","defaultValue":{"value":"true","computed":false}},"withBorder":{"type":{"name":"bool"},"required":false,"description":"Specifies if the `Button` should render with a border.","defaultValue":{"value":"true","computed":false}},"isCondensed":{"type":{"name":"bool"},"required":false,"description":"Designates if the `Button` should render without padding. This option should only be set when `withBorder` and\n`withBackground` are also set to false.","defaultValue":{"value":"false","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"'0'","computed":false}},"cursor":{"type":{"name":"string"},"required":false,"description":"Specify a mouse cursor to use when hovering over the button.\nThe `pointer` cursor is used by default.","defaultValue":{"value":"'pointer'","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"Specifies an href attribute for the `Button`'s underlying html element.","defaultValue":{"value":"undefined","computed":true}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `Button` is clicked.","defaultValue":{"value":"undefined","computed":true}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `Button` receives a keydown event.","defaultValue":{"value":"(event) => {}","computed":false}},"renderIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"An icon, or function that returns an icon.","defaultValue":{"value":"undefined","computed":true}},"tabIndex":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":"Specifies the tabindex of the `Button`.","defaultValue":{"value":"undefined","computed":true}}},"category":"components/utilities","order":"","relativePath":"packages/ui-buttons/src/BaseButton/index.js","extension":".js","srcPath":"packages/ui-buttons/src/BaseButton/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/BaseButton/index.js","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/BaseButton","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/BaseButton/index.js').default","esPath":"@instructure/ui-buttons/es/BaseButton","id":"BaseButton","title":"BaseButton"},"Button":{"description":"","displayName":"Button","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"Specifies the `Button` children.","defaultValue":{"value":"null","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'button'","computed":false},{"value":"'submit'","computed":false},{"value":"'reset'","computed":false}]},"required":false,"description":"Specifies the type of the `Button`'s underlying html element.","defaultValue":{"value":"'button'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the `Button`","defaultValue":{"value":"'medium'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the `Button`'s underlying html element.","defaultValue":{"value":"(el) => {}","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root, `Button` by default.","defaultValue":{"value":"'button'","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the `Button` is enabled, disabled, or readonly.","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'secondary'","computed":false},{"value":"'success'","computed":false},{"value":"'danger'","computed":false}]},"required":false,"description":"Specifies the color for the `Button`.","defaultValue":{"value":"'secondary'","computed":false}},"focusColor":{"type":{"name":"enum","value":[{"value":"'info'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"Override the `Button`'s default focus outline color.","defaultValue":{"value":"undefined","computed":true}},"display":{"type":{"name":"enum","value":[{"value":"'inline-block'","computed":false},{"value":"'block'","computed":false}]},"required":false,"description":"The `Button` display property. When set to `inline-block`, the `Button` displays inline with other elements.\nWhen set to block, the `Button` expands to fill the width of the container.","defaultValue":{"value":"'inline-block'","computed":false}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false}]},"required":false,"description":"Sets the alignment of the `Button` children and/or icon.","defaultValue":{"value":"'center'","computed":false}},"withBackground":{"type":{"name":"bool"},"required":false,"description":"Specifies if the `Button` should render with a solid background. When false, the background is transparent.","defaultValue":{"value":"true","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"'0'","computed":false}},"cursor":{"type":{"name":"string"},"required":false,"description":"Specify a mouse cursor to use when hovering over the button.\nThe `pointer` cursor is used by default.","defaultValue":{"value":"'pointer'","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"Specifies an href attribute for the `Button`'s underlying html element.","defaultValue":{"value":"undefined","computed":true}},"renderIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"An icon, or function that returns an icon.","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-buttons/src/Button/index.js","extension":".js","srcPath":"packages/ui-buttons/src/Button/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/Button/index.js","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/Button","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/Button/index.js').default","esPath":"@instructure/ui-buttons/es/Button","id":"Button","title":"Button"},"CloseButton":{"description":"","displayName":"CloseButton","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"screenReaderLabel":{"type":{"name":"union","value":[{"name":"string"},{"name":"node"}]},"required":false,"description":"An accessible label for the `CloseButton` (required)","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-inverse'","computed":false}]},"required":false,"description":"Specifies the color for the `CloseButton`.","defaultValue":{"value":"undefined","computed":true}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the `CloseButton` is enabled, disabled, or readonly.","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the `CloseButton`'s underlying html element.","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the `CloseButton`","defaultValue":{"value":"'small'","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `CloseButton` is clicked.","defaultValue":{"value":"(event) => {}","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"'0'","computed":false}},"placement":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'end'","computed":false},{"value":"'static'","computed":false}]},"required":false,"description":"Specifies the placement of the `CloseButton`","defaultValue":{"value":"'static'","computed":false}},"offset":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false}]},"required":false,"description":"Specifies the offset distance for the `CloseButton` with respect to both the top and start/end of the container.\nNote that for this property to have an effect, the `placement` prop must be set to either `start` or `end`. The\noffset will also be created with respect to a positioned parent. If it does not appear to be working, try setting\nthe `position` of the parent container to `relative`.","defaultValue":{"value":"'x-small'","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'button'","computed":false},{"value":"'submit'","computed":false},{"value":"'reset'","computed":false}]},"required":false,"description":"Specifies the type of the `Button`'s underlying html element.","defaultValue":{"value":"'button'","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root, `CloseButton` by default.","defaultValue":{"value":"'button'","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"Specifies an href attribute for the `CloseButton`'s underlying html element.","defaultValue":{"value":"undefined","computed":true}},"cursor":{"type":{"name":"string"},"required":false,"description":"Specify a mouse cursor to use when hovering over the `CloseButton`.","defaultValue":{"value":"'pointer'","computed":false}},"tabIndex":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":"Specifies the tabindex of the `CloseButton`.","defaultValue":{"value":"undefined","computed":true}},"disabled":{"defaultValue":{"value":"undefined","computed":true},"required":false},"readOnly":{"defaultValue":{"value":"undefined","computed":true},"required":false}},"category":"components","order":"","relativePath":"packages/ui-buttons/src/CloseButton/index.js","extension":".js","srcPath":"packages/ui-buttons/src/CloseButton/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/CloseButton/index.js","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/CloseButton","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/CloseButton/index.js').default","esPath":"@instructure/ui-buttons/es/CloseButton","id":"CloseButton","title":"CloseButton"},"CondensedButton":{"description":"","displayName":"CondensedButton","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"Specifies the `CondensedButton` children.","defaultValue":{"value":"null","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'button'","computed":false},{"value":"'submit'","computed":false},{"value":"'reset'","computed":false}]},"required":false,"description":"Specifies the type of the `CondensedButton`'s underlying html element.","defaultValue":{"value":"'button'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the `CondensedButton`","defaultValue":{"value":"'medium'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the `CondensedButton`'s underlying html element.","defaultValue":{"value":"(el) => {}","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root, `button` by default.","defaultValue":{"value":"'button'","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the `CondensedButton` is enabled, disabled, or readonly.","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-inverse'","computed":false}]},"required":false,"description":"Specifies the color for the `CondensedButton`.","defaultValue":{"value":"'primary'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"'0'","computed":false}},"cursor":{"type":{"name":"string"},"required":false,"description":"Specify a mouse cursor to use when hovering over the button.\nThe `pointer` cursor is used by default.","defaultValue":{"value":"'pointer'","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"Specifies an href attribute for the `CondensedButton`'s underlying html element.","defaultValue":{"value":"undefined","computed":true}},"renderIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"An icon, or function that returns an icon.","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-buttons/src/CondensedButton/index.js","extension":".js","srcPath":"packages/ui-buttons/src/CondensedButton/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/CondensedButton/index.js","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/CondensedButton","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/CondensedButton/index.js').default","esPath":"@instructure/ui-buttons/es/CondensedButton","id":"CondensedButton","title":"CondensedButton"},"IconButton":{"description":"","displayName":"IconButton","methods":[],"props":{"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"An icon, or function returning an icon (identical to the `renderIcon` prop).","defaultValue":{"value":"null","computed":false}},"renderIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"An icon, or function that returns an icon (identical to the `children` prop).","defaultValue":{"value":"undefined","computed":true}},"screenReaderLabel":{"type":{"name":"string"},"required":true,"description":"An accessible label for the `IconButton`."},"type":{"type":{"name":"enum","value":[{"value":"'button'","computed":false},{"value":"'submit'","computed":false},{"value":"'reset'","computed":false}]},"required":false,"description":"Specifies the type of the `IconButton`'s underlying html element.","defaultValue":{"value":"'button'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the `IconButton`","defaultValue":{"value":"'medium'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the `IconButton`'s underlying html element.","defaultValue":{"value":"(el) => {}","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root, `button` by default.","defaultValue":{"value":"'button'","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the `IconButton` is enabled, disabled, or readonly.","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'secondary'","computed":false},{"value":"'success'","computed":false},{"value":"'danger'","computed":false}]},"required":false,"description":"Specifies the color for the `IconButton`.","defaultValue":{"value":"'secondary'","computed":false}},"focusColor":{"type":{"name":"enum","value":[{"value":"'info'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"Override the `Button`'s default focus outline color.","defaultValue":{"value":"undefined","computed":true}},"shape":{"type":{"name":"enum","value":[{"value":"'rectangle'","computed":false},{"value":"'circle'","computed":false}]},"required":false,"description":"Specifies if the `IconButton` shape should be a circle or rectangle.","defaultValue":{"value":"'rectangle'","computed":false}},"withBackground":{"type":{"name":"bool"},"required":false,"description":"Specifies if the `IconButton` should render with a solid background. When false, the background is transparent.","defaultValue":{"value":"true","computed":false}},"withBorder":{"type":{"name":"bool"},"required":false,"description":"Specifies if the `IconButton` should render with a border.","defaultValue":{"value":"true","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"'0'","computed":false}},"cursor":{"type":{"name":"string"},"required":false,"description":"Specify a mouse cursor to use when hovering over the button.\nThe `pointer` cursor is used by default.","defaultValue":{"value":"'pointer'","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"Specifies an href attribute for the `IconButton`'s underlying html element.","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-buttons/src/IconButton/index.js","extension":".js","srcPath":"packages/ui-buttons/src/IconButton/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/IconButton/index.js","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/IconButton","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/IconButton/index.js').default","esPath":"@instructure/ui-buttons/es/IconButton","id":"IconButton","title":"IconButton"},"ToggleButton":{"description":"","displayName":"ToggleButton","methods":[],"props":{"screenReaderLabel":{"type":{"name":"string"},"required":true,"description":"Text to output only to screen readers"},"renderTooltipContent":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"Text to render in the tooltip shown on hover/focus"},"renderIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"An icon or function that returns an icon","defaultValue":{"value":"() => {}","computed":false}},"status":{"type":{"name":"enum","value":[{"value":"'pressed'","computed":false},{"value":"'unpressed'","computed":false}]},"required":true,"description":"Toggles the `aria-pressed` attribute on the button (`true` if `pressed`; `false` if `unpressed`)"},"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root; `button` by default","defaultValue":{"value":"'button'","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with `ToggleButton` is `enabled`, `disabled`, or `readonly`","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the `ToggleButton`","defaultValue":{"value":"'medium'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to `ToggleButton`'s underlying HTML element","defaultValue":{"value":"(el) => {}","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `ToggleButton` is clicked","defaultValue":{"value":"() => {}","computed":false}},"color":{"type":{"name":"string"},"required":false,"description":"The color in which to display the icon","defaultValue":{"value":"'secondary'","computed":false}},"isShowingTooltip":{"type":{"name":"bool"},"required":false,"description":"By default, the tooltip will show on hover/focus. Use this prop if you need to override that behavior.","defaultValue":{"value":"undefined","computed":true}},"mountNode":{"type":{"name":"custom","raw":"PositionPropTypes.mountNode"},"required":false,"description":"An element or a function returning an element to use as the mount node","defaultValue":{"value":"null","computed":false}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"The placement of the tooltip in relation to the button","defaultValue":{"value":"'top center'","computed":false}},"constrain":{"type":{"name":"custom","raw":"PositionPropTypes.constrain"},"required":false,"description":"The parent in which to constrain the tooltip.\nOne of: 'window', 'scroll-parent', 'parent', 'none', an element,\nor a function returning an element.","defaultValue":{"value":"'window'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-buttons/src/ToggleButton/index.js","extension":".js","srcPath":"packages/ui-buttons/src/ToggleButton/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/ToggleButton/index.js","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/ToggleButton","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/ToggleButton/index.js').default","esPath":"@instructure/ui-buttons/es/ToggleButton","id":"ToggleButton","title":"ToggleButton"},"Byline":{"description":"","displayName":"Byline","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":true,"description":"the Byline visual/object"},"title":{"type":{"name":"node"},"required":false,"description":"the Byline title","defaultValue":{"value":"undefined","computed":true}},"description":{"type":{"name":"union","value":[{"name":"string"},{"name":"node"}]},"required":false,"description":"the Byline description","defaultValue":{"value":"undefined","computed":true}},"alignContent":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'center'","computed":false}]},"required":false,"description":"how should the title and description align","defaultValue":{"value":"'center'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-byline/src/Byline/index.js","extension":".js","srcPath":"packages/ui-byline/src/Byline/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-byline/src/Byline/index.js","packageName":"@instructure/ui-byline","requirePath":"@instructure/ui-byline/lib/Byline","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-byline/src/Byline/index.js').default","esPath":"@instructure/ui-byline/es/Byline","id":"Byline","title":"Byline"},"Calendar":{"description":"","displayName":"Calendar","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Day])"},"required":false,"description":"children of type `<Calendar.Day />` There should be exactly 42 provided (6\nweeks).","defaultValue":{"value":"null","computed":false}},"renderNextMonthButton":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"A button to render in the navigation header. The recommendation is to\ncompose it with the [IconButton](#IconButton) component by setting the `size`\nprop to `small`, `withBorder` and `withBackground` to `false`, and setting\n`renderIcon` to [IconArrowOpenEnd](#iconography).","defaultValue":{"value":"undefined","computed":true}},"renderPrevMonthButton":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"A button to render in the navigation header. The recommendation is to\ncompose it with the [IconButton](#Button) component by setting the `size`\nprop to `small`, `withBorder` and `withBackground` to `false`, and setting\n`renderIcon` to [IconArrowOpenStart](#iconography).","defaultValue":{"value":"undefined","computed":true}},"renderNavigationLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to render in the navigation header. The recommendation is to include\nthe name of the current rendered month along with the year.","defaultValue":{"value":"undefined","computed":true}},"renderWeekdayLabels":{"type":{"name":"arrayOf","value":{"name":"union","value":[{"name":"node"},{"name":"func"}]}},"required":true,"description":"An array of labels containing the name of each day of the week. The visible\nportion of the label should be abbreviated (no longer than three characters).\nNote that screen readers will read this content preceding each date as the\n`<Calendar />` is navigated. Consider using\n[AccessibleContent](#AccessibleContent) with the `alt` prop containing the\nfull day name for assistive technologies and the children containing the\nabbreviation. ex. `[<AccessibleContent alt=\"Sunday\">Sun</AccessibleContent>, ...]`"},"onRequestRenderNextMonth":{"type":{"name":"func"},"required":false,"description":"Callback fired when the next month button is clicked in the navigation\nheader, requesting to render the next month.","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestRenderPrevMonth":{"type":{"name":"func"},"required":false,"description":"Callback fired when the previous month button is clicked in the navigation\nheader, requesting to render the previous month.","defaultValue":{"value":"(event) => {}","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the `Calendar` root, `span` by default","defaultValue":{"value":"'span'","computed":false}},"role":{"type":{"name":"enum","value":[{"value":"'table'","computed":false},{"value":"'listbox'","computed":false}]},"required":false,"description":"The role of the underlying table. This can be set to 'listbox' when\nassistive technologies need to read the `<Calendar.Day />` children as a list.","defaultValue":{"value":"'table'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-calendar/src/Calendar/index.js","extension":".js","srcPath":"packages/ui-calendar/src/Calendar/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-calendar/src/Calendar/index.js","packageName":"@instructure/ui-calendar","requirePath":"@instructure/ui-calendar/lib/Calendar","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-calendar/src/Calendar/index.js').default","esPath":"@instructure/ui-calendar/es/Calendar","id":"Calendar","title":"Calendar"},"Checkbox":{"description":"","displayName":"Checkbox","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"label":{"type":{"name":"node"},"required":true,"description":""},"id":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\ntext: PropTypes.string,\ntype: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n  }`","defaultValue":{"value":"undefined","computed":true}},"defaultChecked":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"checked":{"type":{"name":"custom","raw":"controllable(PropTypes.bool, 'onChange', 'defaultChecked')"},"required":false,"description":"whether the input is checked or not (must be accompanied by an `onChange` prop)","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"when used with the `checked` prop, the component will not control its own state","defaultValue":{"value":"undefined","computed":true}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onFocus":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onBlur":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onMouseOver":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onMouseOut":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Whether or not to disable the checkbox","defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"Works just like disabled but keeps the same styles as if it were active","defaultValue":{"value":"false","computed":false}},"indeterminate":{"type":{"name":"bool"},"required":false,"description":"Visual state showing that child checkboxes are a combination of checked and unchecked","defaultValue":{"value":"false","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'simple'","computed":false},{"value":"'toggle'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'simple'","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"labelPlacement":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'start'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'end'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-checkbox/src/Checkbox/index.js","extension":".js","srcPath":"packages/ui-checkbox/src/Checkbox/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-checkbox/src/Checkbox/index.js","packageName":"@instructure/ui-checkbox","requirePath":"@instructure/ui-checkbox/lib/Checkbox","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-checkbox/src/Checkbox/index.js').default","esPath":"@instructure/ui-checkbox/es/Checkbox","id":"Checkbox","title":"Checkbox"},"CheckboxGroup":{"description":"","displayName":"CheckboxGroup","methods":[],"props":{"name":{"type":{"name":"string"},"required":true,"description":""},"description":{"type":{"name":"node"},"required":true,"description":""},"defaultValue":{"type":{"name":"array"},"required":false,"description":"value to set on initial render","defaultValue":{"value":"undefined","computed":true}},"value":{"type":{"name":"custom","raw":"controllable(PropTypes.array)"},"required":false,"description":"the selected values (must be accompanied by an `onChange` prop)","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"when used with the `value` prop, the component will not control its own state","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\n    text: PropTypes.string,\n    type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n      }`","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Checkbox])"},"required":false,"description":"children of type `Checkbox`","defaultValue":{"value":"null","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'columns'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'stacked'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-checkbox/src/CheckboxGroup/index.js","extension":".js","srcPath":"packages/ui-checkbox/src/CheckboxGroup/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-checkbox/src/CheckboxGroup/index.js","packageName":"@instructure/ui-checkbox","requirePath":"@instructure/ui-checkbox/lib/CheckboxGroup","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-checkbox/src/CheckboxGroup/index.js').default","esPath":"@instructure/ui-checkbox/es/CheckboxGroup","id":"CheckboxGroup","title":"CheckboxGroup"},"CodeEditor":{"description":"","displayName":"CodeEditor","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"label":{"type":{"name":"string"},"required":true,"description":""},"language":{"type":{"name":"enum","value":[{"value":"'sh'","computed":false},{"value":"'js'","computed":false},{"value":"'json'","computed":false},{"value":"'javascript'","computed":false},{"value":"'jsx'","computed":false},{"value":"'shell'","computed":false},{"value":"'css'","computed":false},{"value":"'html'","computed":false},{"value":"'markdown'","computed":false},{"value":"'yaml'","computed":false},{"value":"'yml'","computed":false},{"value":"'bash'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'jsx'","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(value) => {}","computed":false}},"options":{"type":{"name":"object"},"required":false,"description":"","defaultValue":{"value":"{\n  styleActiveLine: true\n}","computed":false}},"attachment":{"type":{"name":"enum","value":[{"value":"'bottom'","computed":false},{"value":"'top'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"value":{"type":{"name":"string"},"required":false,"description":"the selected value (when controlled via the `onChange` prop)","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-code-editor/src/CodeEditor/index.js","extension":".js","srcPath":"packages/ui-code-editor/src/CodeEditor/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-code-editor/src/CodeEditor/index.js","packageName":"@instructure/ui-code-editor","requirePath":"@instructure/ui-code-editor/lib/CodeEditor","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-code-editor/src/CodeEditor/index.js').default","esPath":"@instructure/ui-code-editor/es/CodeEditor","id":"CodeEditor","title":"CodeEditor"},"DateInput":{"description":"","displayName":"DateInput","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"Specifies the input label."},"value":{"type":{"name":"custom","raw":"controllable(PropTypes.string)"},"required":false,"description":"Specifies the input value.","defaultValue":{"value":"''","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"Specifies the input size.","defaultValue":{"value":"'medium'","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Html placeholder text to display when the input has no value. This should\nbe hint text, not a label replacement.","defaultValue":{"value":"null","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback executed when the input fires a change event.\n@param {Object} event - the event object\n@param {Object} data - additional data\n@param data.value - the new value","defaultValue":{"value":"(event) => {}","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"Callback executed when the input fires a blur event.","defaultValue":{"value":"(event) => {}","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the input is enabled, disabled, or readonly.\nWhen \"disabled\", the input changes visibly to indicate that it cannot\nreceive user interactions. When \"readonly\" the input still cannot receive\nuser interactions but it keeps the same styles as if it were enabled.","defaultValue":{"value":"undefined","computed":true}},"isRequired":{"type":{"name":"bool"},"required":false,"description":"Specifies if the input is required.","defaultValue":{"value":"false","computed":false}},"isInline":{"type":{"name":"bool"},"required":false,"description":"Controls whether the input is rendered inline with other elements or if it\nis rendered as a block level element.","defaultValue":{"value":"false","computed":false}},"assistiveText":{"type":{"name":"string"},"required":false,"description":"Additional helpful text to provide to screen readers about the operation\nof the component.","defaultValue":{"value":"undefined","computed":true}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"Controls the layout. When set to `stacked`, the label rests on top of the\ninput. When set to `inline` the label is next to the input.","defaultValue":{"value":"'stacked'","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"Specifies the width of the input.","defaultValue":{"value":"null","computed":false}},"inputRef":{"type":{"name":"func"},"required":false,"description":"Provides a ref to the underlying input element.","defaultValue":{"value":"(el) => {}","computed":false}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"Displays messages and validation for the input. It should be an object\nwith the following shape:\n`{\n  text: PropTypes.string,\n  type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n}`","defaultValue":{"value":"undefined","computed":true}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"The placement of the calendar in relation to the input.","defaultValue":{"value":"'bottom center'","computed":false}},"isShowingCalendar":{"type":{"name":"bool"},"required":false,"description":"Controls whether or not the calendar is showing.","defaultValue":{"value":"false","computed":false}},"onRequestValidateDate":{"type":{"name":"func"},"required":false,"description":"Callback fired when the input is blurred. Feedback should be provided\nto the user when this function is called if the selected date or input\nvalue is not valid.","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestShowCalendar":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting the calendar be shown.","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestHideCalendar":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting the calendar be hidden.","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestSelectNextDay":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting the next day be selected. If no date is currently\nselected should default to the first day of the currently rendered month.","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestSelectPrevDay":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting the previous day be selected. If no date is currently\nselected should default to the first day of the currently rendered month.","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestRenderNextMonth":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting the next month be rendered.","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestRenderPrevMonth":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting the previous month be rendered.","defaultValue":{"value":"(event) => {}","computed":false}},"renderNavigationLabel":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"Content to render in the calendar navigation header. The recommendation is\nto include the name of the current rendered month along with the year.","defaultValue":{"value":"null","computed":false}},"renderWeekdayLabels":{"type":{"name":"arrayOf","value":{"name":"union","value":[{"name":"func"},{"name":"node"}]}},"required":true,"description":"An array of labels containing the name of each day of the week. The visible\nportion of the label should be abbreviated (no longer than three characters).\nNote that screen readers will read this content preceding each date as the\n`<Calendar />` is navigated. Consider using\n[AccessibleContent](#AccessibleContent) with the `alt` prop containing the\nfull day name for assistive technologies and the children containing the\nabbreviation. ex. `[<AccessibleContent alt=\"Sunday\">Sun</AccessibleContent>, ...]`"},"renderNextMonthButton":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"A button to render in the calendar navigation header. The recommendation is\nto compose it with the [Button](#Button) component, setting the `variant`\nprop to `icon`, the `size` prop to `small`, and setting the `icon` prop to\n[IconArrowOpenEnd](#iconography).","defaultValue":{"value":"null","computed":false}},"renderPrevMonthButton":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"A button to render in the calendar navigation header. The recommendation is\nto compose it with the [Button](#Button) component, setting the `variant`\nprop to `icon`, the `size` prop to `small`, and setting the `icon` prop to\n[IconArrowOpenStart](#iconography).","defaultValue":{"value":"null","computed":false}},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Calendar.Day])"},"required":false,"description":"children of type `<DateInput.Day />` There should be exactly 42 provided (6\nweeks).","defaultValue":{"value":"null","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-date-input/src/DateInput/index.js","extension":".js","srcPath":"packages/ui-date-input/src/DateInput/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-date-input/src/DateInput/index.js","packageName":"@instructure/ui-date-input","requirePath":"@instructure/ui-date-input/lib/DateInput","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-date-input/src/DateInput/index.js').default","esPath":"@instructure/ui-date-input/es/DateInput","id":"DateInput","title":"DateInput"},"Dialog":{"description":"@module Dialog","displayName":"Dialog","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"The children to be rendered within the `<Dialog />`","defaultValue":{"value":"null","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root, `span` by default"},"display":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'block'","computed":false},{"value":"'inline-block'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"label":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"open":{"type":{"name":"bool"},"required":false,"description":"Whether or not the `<Dialog />` is open","defaultValue":{"value":"false","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"Function called when tab focus leaves the `<Dialog />` focusable content. This only\noccurs when `shouldContainFocus` is set to false.","defaultValue":{"value":"(event) => {}","computed":false}},"onDismiss":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(event) => {}","computed":false}},"defaultFocusElement":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to focus by default","defaultValue":{"value":"null","computed":false}},"contentElement":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element that wraps the content of the `<Dialog />`","defaultValue":{"value":"null","computed":false}},"liveRegion":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"element"}},{"name":"element"},{"name":"func"}]},"required":false,"description":"An element, function returning an element, or array of elements that will not be hidden from\nthe screen reader when the `<Dialog />` is open","defaultValue":{"value":"null","computed":false}},"shouldContainFocus":{"type":{"name":"union","value":[{"name":"bool"},{"name":"enum","value":[{"value":"'keyboard'","computed":false},{"value":"'screenreader'","computed":false}]}]},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"shouldReturnFocus":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"shouldCloseOnDocumentClick":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"true","computed":false}},"shouldCloseOnEscape":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"true","computed":false}},"shouldFocusOnOpen":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"true","computed":false}}},"category":"components/utilities","order":"","relativePath":"packages/ui-dialog/src/Dialog/index.js","extension":".js","srcPath":"packages/ui-dialog/src/Dialog/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dialog/src/Dialog/index.js","packageName":"@instructure/ui-dialog","requirePath":"@instructure/ui-dialog/lib/Dialog","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dialog/src/Dialog/index.js').default","esPath":"@instructure/ui-dialog/es/Dialog","id":"Dialog","title":"Dialog"},"DrawerLayout":{"description":"","displayName":"DrawerLayout","methods":[],"props":{"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOfEach([DrawerContent, DrawerTray])"},"required":false,"description":"Exactly one of each of the following child types: `DrawerLayout.Content`, `DrawerLayout.Tray`","defaultValue":{"value":"null","computed":false}},"minWidth":{"type":{"name":"string"},"required":false,"description":"Min width for the `<DrawerLayout.Content />`","defaultValue":{"value":"'30rem'","computed":false}},"onOverlayTrayChange":{"type":{"name":"func"},"required":false,"description":"Function called when the `<DrawerLayout.Content />` is resized and hits the `minWidth` breakpoint\nCalled with a boolean value, `true` if the tray is now overlaying the content or `false` if\nit is side by side","defaultValue":{"value":"(shouldOverlayTray) => {}","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"dir":{"type":{"name":"enum","computed":true,"value":"Object.values(bidirectional.DIRECTION)"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-drawer-layout/src/DrawerLayout/index.js","extension":".js","srcPath":"packages/ui-drawer-layout/src/DrawerLayout/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drawer-layout/src/DrawerLayout/index.js","packageName":"@instructure/ui-drawer-layout","requirePath":"@instructure/ui-drawer-layout/lib/DrawerLayout","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-drawer-layout/src/DrawerLayout/index.js').default","esPath":"@instructure/ui-drawer-layout/es/DrawerLayout","id":"DrawerLayout","title":"DrawerLayout"},"Editable":{"description":"","displayName":"Editable","methods":[],"props":{"mode":{"type":{"name":"enum","value":[{"value":"'view'","computed":false},{"value":"'edit'","computed":false}]},"required":true,"description":"If `'view'`: the view component is rendered,\nif `'edit'`: the edit component is rendered"},"onChangeMode":{"type":{"name":"func"},"required":true,"description":"Called when the component's mode changes\n@param {string} new_mode"},"children":{"type":{"name":"func"},"required":false,"description":"@param {Object} renderProps\n@param {Boolean} mode\n@param {Function} renderProps.getContainerProps - Props to be spread onto the container element\n@param {Function} renderProps.getEditorProps - Props to be spread onto the editor element\n@param {Function} renderProps.getEditButtonProps - Props to be spread onto the edit button element","defaultValue":{"value":"null","computed":false}},"render":{"type":{"name":"func"},"required":false,"description":"Identical to children","defaultValue":{"value":"undefined","computed":true}},"value":{"type":{"name":"any"},"required":false,"description":"The current value.\nThe value is managed by the consuming app, but we need to tell Editable\nit's changed or it won't re-render","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"Called when Editable switches from edit to view mode and the value has changed.\n@param {any} value","defaultValue":{"value":"undefined","computed":true}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"The mode is fixed as 'view'","defaultValue":{"value":"false","computed":false}}},"category":"components","experimental":true,"order":"","relativePath":"packages/ui-editable/src/Editable/index.js","extension":".js","srcPath":"packages/ui-editable/src/Editable/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-editable/src/Editable/index.js","packageName":"@instructure/ui-editable","requirePath":"@instructure/ui-editable/lib/Editable","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-editable/src/Editable/index.js').default","esPath":"@instructure/ui-editable/es/Editable","id":"Editable","title":"Editable"},"InPlaceEdit":{"description":"","displayName":"InPlaceEdit","methods":[],"props":{"renderViewer":{"type":{"name":"func"},"required":true,"description":"Function to render the view mode component.\nIt is the consumer's responsibility to provide the\ncurrent value or children.\n\n@returns {element} the viewer DOM sub-tree."},"renderEditor":{"type":{"name":"func"},"required":true,"description":"Function to render the edit mode component\nIt is the consumer's responsibility to provide the\ncurrent value, and to attach the appropriate onChange\nevent handler needed to capture the updated value. This\nnew value must then be forwarded to the view mode component.\n\n@returns {element} the editor DOM sub-tree."},"renderEditButton":{"type":{"name":"func"},"required":true,"description":"Function to render the edit button.\n\n@param {Object} { isVisible, onClick, onFocus, onBlur, buttonRef }\n@returns {element} the edit button DOM sub-tree\n\nIf you choose to use the default edit button, add `label` to the\nincoming `props` parameter and call `InPlaceEdit.renderDefaultEditButton(props)`\n\nIf you choose to render a custom button, attach the on* event handlers\nand set `buttonRef` as a `ref` type property on the `button` element.\n\n`isVisible` is a hint as to whether the button is _typically_ shown,\nbut you're free to ignore it for your use-case."},"mode":{"type":{"name":"enum","value":[{"value":"'view'","computed":false},{"value":"'edit'","computed":false}]},"required":true,"description":"If `'view'`: the view component is rendered,\nif `'edit'`: the edit component is rendered"},"onChangeMode":{"type":{"name":"func"},"required":true,"description":"Called when the component's mode changes\n@param {string} newMode"},"value":{"type":{"name":"any"},"required":false,"description":"The current value.\nThe value is managed by the consuming app, but we need to tell InPlaceEdit\nit's changed or it won't re-render","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"Called when Editable switches from edit to view mode and the value has changed.\n@param {any} value","defaultValue":{"value":"undefined","computed":true}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"The mode is fixed as 'view'","defaultValue":{"value":"false","computed":false}},"showFocusRing":{"type":{"name":"bool"},"required":false,"description":"Show a focus outline when the input is focused","defaultValue":{"value":"true","computed":false}},"editButtonPlacement":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Put the edit button before or after the view","defaultValue":{"value":"'end'","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"Render outermost element inline v. block","defaultValue":{"value":"true","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-editable/src/InPlaceEdit/index.js","extension":".js","srcPath":"packages/ui-editable/src/InPlaceEdit/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-editable/src/InPlaceEdit/index.js","packageName":"@instructure/ui-editable","requirePath":"@instructure/ui-editable/lib/InPlaceEdit","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-editable/src/InPlaceEdit/index.js').default","esPath":"@instructure/ui-editable/es/InPlaceEdit","id":"InPlaceEdit","title":"InPlaceEdit"},"Expandable":{"description":"","displayName":"Expandable","methods":[],"props":{"expanded":{"type":{"name":"custom","raw":"controllable(PropTypes.bool, 'onToggle', 'defaultExpanded')"},"required":false,"description":"Whether the content is expanded or hidden","defaultValue":{"value":"undefined","computed":true}},"defaultExpanded":{"type":{"name":"bool"},"required":false,"description":"Whether the content is initially expanded or hidden (uncontrolled)","defaultValue":{"value":"false","computed":false}},"onToggle":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function (event, expanded) {}","computed":false}},"children":{"type":{"name":"func"},"required":false,"description":"@param {Object} renderProps\n@param {Boolean} expanded\n@param {Function} renderProps.getToggleProps - Props to be spread onto the trigger element\n@param {Function} renderProps.getDetailsProps - Props to be spread onto the details element","defaultValue":{"value":"null","computed":false}},"render":{"type":{"name":"func"},"required":false,"description":"Identical to children","defaultValue":{"value":"undefined","computed":true}}},"category":"components/utilities","order":"","relativePath":"packages/ui-expandable/src/Expandable/index.js","extension":".js","srcPath":"packages/ui-expandable/src/Expandable/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-expandable/src/Expandable/index.js","packageName":"@instructure/ui-expandable","requirePath":"@instructure/ui-expandable/lib/Expandable","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-expandable/src/Expandable/index.js').default","esPath":"@instructure/ui-expandable/es/Expandable","id":"Expandable","title":"Expandable"},"FileDrop":{"description":"","displayName":"FileDrop","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The id of the input (to link it to its label for a11y)","defaultValue":{"value":"undefined","computed":true}},"renderLabel":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":true,"description":"The content of FileDrop; can be a component or React node.\nComponents receive `isDragAccepted` and `isDragRejected` as props."},"accept":{"type":{"name":"union","value":[{"name":"string"},{"name":"arrayOf","value":{"name":"string"}}]},"required":false,"description":"The mime media type/s or file extension/s allowed to be dropped inside","defaultValue":{"value":"undefined","computed":true}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\ntext: PropTypes.string,\ntype: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n  }`","defaultValue":{"value":"[]","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Called when clicking on drop area to select files to upload","defaultValue":{"value":"function (e) {}","computed":false}},"onDrop":{"type":{"name":"func"},"required":false,"description":"Called when dropping files or when file dialog window exits successfully","defaultValue":{"value":"function (accepted, rejected, e) {}","computed":false}},"onDropAccepted":{"type":{"name":"func"},"required":false,"description":"Called when dropping allowed files","defaultValue":{"value":"function (accepted, e) {}","computed":false}},"onDropRejected":{"type":{"name":"func"},"required":false,"description":"Called when dropping rejected files","defaultValue":{"value":"function (rejected, e) {}","computed":false}},"onDragEnter":{"type":{"name":"func"},"required":false,"description":"Called when dragging files\nand passing through FileDrop's content for the first time","defaultValue":{"value":"function (e) {}","computed":false}},"onDragOver":{"type":{"name":"func"},"required":false,"description":"Called when dragging files and passing through FileDrop's content","defaultValue":{"value":"function (e) {}","computed":false}},"onDragLeave":{"type":{"name":"func"},"required":false,"description":"Called when dragging files and leaving FileDrop's content","defaultValue":{"value":"function (e) {}","computed":false}},"shouldEnablePreview":{"type":{"name":"bool"},"required":false,"description":"Flag to use window.URL.createObjectURL for each dropped file and pass it through file.preview","defaultValue":{"value":"false","computed":false}},"shouldAllowMultiple":{"type":{"name":"bool"},"required":false,"description":"Flag to allow multiple files to drop at once","defaultValue":{"value":"false","computed":false}},"shouldAllowRepeats":{"type":{"name":"bool"},"required":false,"description":"Flag to allow upload of the same file more than once","defaultValue":{"value":"true","computed":false}},"maxSize":{"type":{"name":"number"},"required":false,"description":"the maximum file size allowed","defaultValue":{"value":"Infinity","computed":true}},"minSize":{"type":{"name":"number"},"required":false,"description":"the minimum file size allowed","defaultValue":{"value":"0","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the input is enabled, disabled, or readonly.","defaultValue":{"value":"undefined","computed":true}},"display":{"type":{"name":"enum","value":[{"value":"'block'","computed":false},{"value":"'inline-block'","computed":false}]},"required":false,"description":"Set the CSS `display` property on FileInput's outermost element","defaultValue":{"value":"'block'","computed":false}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Set the CSS `height` property on FileInput's outermost element","defaultValue":{"value":"undefined","computed":true}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Set the CSS `width` property on FileInput's outermost element","defaultValue":{"value":"undefined","computed":true}},"maxWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Set the CSS `maxWidth` property on FileInput's outermost element","defaultValue":{"value":"undefined","computed":true}},"minWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Set the CSS `minWidth` property on FileInput's outermost element","defaultValue":{"value":"undefined","computed":true}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are 0, none, auto, xxx-small, xx-small, x-small, small,\nmedium, large, x-large, xx-large. Apply these values via familiar\nCSS-like shorthand. For example: margin=\"small auto large\".","defaultValue":{"value":"undefined","computed":true}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-file-drop/src/FileDrop/index.js","extension":".js","srcPath":"packages/ui-file-drop/src/FileDrop/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-file-drop/src/FileDrop/index.js","packageName":"@instructure/ui-file-drop","requirePath":"@instructure/ui-file-drop/lib/FileDrop","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-file-drop/src/FileDrop/index.js').default","esPath":"@instructure/ui-file-drop/es/FileDrop","id":"FileDrop","title":"FileDrop"},"Flex":{"description":"@module Flex","displayName":"Flex","methods":[],"props":{"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"It's recommended that you use `Flex.Item` for children, but you can also pass any markup or a function\nreturning markup. Note that if you do not use `Flex.Item`, the `withVisualDebug` and `direction` props\nwill not automatically be set on the children.","defaultValue":{"value":"null","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'span'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","defaultValue":{"value":"(el) => {}","computed":false}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Sets the height of the component's container (optional)","defaultValue":{"value":"undefined","computed":true}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Sets the width of the component's container (optional)","defaultValue":{"value":"undefined","computed":true}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `padding=\"small x-large large\"`.","defaultValue":{"value":"undefined","computed":true}},"display":{"type":{"name":"enum","value":[{"value":"'flex'","computed":false},{"value":"'inline-flex'","computed":false}]},"required":false,"description":"Sets the CSS display rule for the component's container","defaultValue":{"value":"'flex'","computed":false}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Designates the text alignment","defaultValue":{"value":"undefined","computed":true}},"direction":{"type":{"name":"enum","value":[{"value":"'row'","computed":false},{"value":"'column'","computed":false},{"value":"'row-reverse'","computed":false},{"value":"'column-reverse'","computed":false}]},"required":false,"description":"Sets the flex-direction to row (horizontal) or column (vertical)","defaultValue":{"value":"'row'","computed":false}},"alignItems":{"type":{"name":"enum","value":[{"value":"'center'","computed":false},{"value":"'start'","computed":false},{"value":"'end'","computed":false},{"value":"'stretch'","computed":false}]},"required":false,"description":"Aligns Flex.Items on the vertical axis (horizontal if direction is column)","defaultValue":{"value":"undefined","computed":true}},"justifyItems":{"type":{"name":"enum","value":[{"value":"'center'","computed":false},{"value":"'start'","computed":false},{"value":"'end'","computed":false},{"value":"'space-around'","computed":false},{"value":"'space-between'","computed":false}]},"required":false,"description":"Aligns Flex.Items on the horizontal axis (vertical if direction is column)","defaultValue":{"value":"'start'","computed":false}},"wrap":{"type":{"name":"enum","value":[{"value":"'wrap'","computed":false},{"value":"'no-wrap'","computed":false},{"value":"'wrap-reverse'","computed":false}]},"required":false,"description":"Determines if the Flex.Items should wrap when they exceed their container's width","defaultValue":{"value":"'no-wrap'","computed":false}},"withVisualDebug":{"type":{"name":"bool"},"required":false,"description":"Activate a dotted outline around the component to make building your\nlayout easier","defaultValue":{"value":"false","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-flex/src/Flex/index.js","extension":".js","srcPath":"packages/ui-flex/src/Flex/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-flex/src/Flex/index.js","packageName":"@instructure/ui-flex","requirePath":"@instructure/ui-flex/lib/Flex","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-flex/src/Flex/index.js').default","esPath":"@instructure/ui-flex/es/Flex","id":"Flex","title":"Flex"},"Focusable":{"description":"","displayName":"Focusable","methods":[],"props":{"children":{"type":{"name":"func"},"required":false,"description":"@param {Object} renderProps\n@param {Boolean} renderProps.focused - Is the element focused (via keyboard only)?\n@param {HTMLElement} renderProps.focusable - The focusable element\n@param {Boolean} renderProps.focusVisible - Whether the focus state should be visible or not","defaultValue":{"value":"null","computed":false}},"render":{"type":{"name":"func"},"required":false,"description":"Identical to children","defaultValue":{"value":"undefined","computed":true}}},"category":"components/utilities","order":"","relativePath":"packages/ui-focusable/src/Focusable/index.js","extension":".js","srcPath":"packages/ui-focusable/src/Focusable/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-focusable/src/Focusable/index.js","packageName":"@instructure/ui-focusable","requirePath":"@instructure/ui-focusable/lib/Focusable","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-focusable/src/Focusable/index.js').default","esPath":"@instructure/ui-focusable/es/Focusable","id":"Focusable","title":"Focusable"},"FormField":{"description":"","displayName":"FormField","methods":[],"props":{"label":{"type":{"name":"node"},"required":true,"description":""},"id":{"type":{"name":"string"},"required":true,"description":"the id of the input (to link it to its label for a11y)"},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\n  text: PropTypes.string,\n  type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n}`","defaultValue":{"value":"undefined","computed":true}},"messagesId":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'stacked'","computed":false}},"labelAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'end'","computed":false}},"vAlign":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'middle'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'middle'","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"inputContainerRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-form-field/src/FormField/index.js","extension":".js","srcPath":"packages/ui-form-field/src/FormField/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormField/index.js","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormField","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormField/index.js').default","esPath":"@instructure/ui-form-field/es/FormField","id":"FormField","title":"FormField"},"FormFieldGroup":{"description":"","displayName":"FormFieldGroup","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"description":{"type":{"name":"node"},"required":true,"description":""},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'fieldset'","computed":false}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\ntext: PropTypes.string,\ntype: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n  }`","defaultValue":{"value":"undefined","computed":true}},"messagesId":{"type":{"name":"string"},"required":false,"description":"id for the form field messages","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'columns'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"rowSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"colSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'small'","computed":false}},"vAlign":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'middle'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'middle'","computed":false}},"startAt":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"null","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-form-field/src/FormFieldGroup/index.js","extension":".js","srcPath":"packages/ui-form-field/src/FormFieldGroup/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormFieldGroup/index.js","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormFieldGroup","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormFieldGroup/index.js').default","esPath":"@instructure/ui-form-field/es/FormFieldGroup","id":"FormFieldGroup","title":"FormFieldGroup"},"FormFieldLabel":{"description":"\nThis is a helper component that is used by most of the custom form\ncomponents. In most cases it shouldn't be used directly.\n\n```js\n---\nexample: true\n---\n<FormFieldLabel>Hello</FormFieldLabel>\n```","displayName":"FormFieldLabel","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"as":{"type":{"name":"elementType"},"required":false,"description":"","defaultValue":{"value":"'span'","computed":false}},"children":{"type":{"name":"node"},"required":true,"description":""}},"parent":"FormField","order":"","relativePath":"packages/ui-form-field/src/FormFieldLabel/index.js","extension":".js","srcPath":"packages/ui-form-field/src/FormFieldLabel/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormFieldLabel/index.js","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormFieldLabel","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormFieldLabel/index.js').default","esPath":"@instructure/ui-form-field/es/FormFieldLabel","id":"FormFieldLabel","title":"FormFieldLabel"},"FormFieldLayout":{"description":"","displayName":"FormFieldLayout","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"label":{"type":{"name":"node"},"required":true,"description":""},"id":{"type":{"name":"string"},"required":false,"description":"the id of the input (to link it to its label for a11y)","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'label'","computed":false}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\ntext: PropTypes.string,\ntype: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n  }`","defaultValue":{"value":"undefined","computed":true}},"messagesId":{"type":{"name":"string"},"required":false,"description":"id for the form field messages","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'stacked'","computed":false}},"labelAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'end'","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"inputContainerRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"parent":"FormField","order":"","relativePath":"packages/ui-form-field/src/FormFieldLayout/index.js","extension":".js","srcPath":"packages/ui-form-field/src/FormFieldLayout/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormFieldLayout/index.js","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormFieldLayout","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormFieldLayout/index.js').default","esPath":"@instructure/ui-form-field/es/FormFieldLayout","id":"FormFieldLayout","title":"FormFieldLayout"},"FormFieldMessage":{"description":"\nThis is a helper component that is used by most of the custom form\ncomponents. In most cases it shouldn't be used directly.\n\n```js\n---\nexample: true\n---\n<FormFieldMessage variant=\"error\">Invalid value</FormFieldMessage>\n```","displayName":"FormFieldMessage","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"variant":{"type":{"name":"enum","value":[{"value":"'error'","computed":false},{"value":"'hint'","computed":false},{"value":"'success'","computed":false},{"value":"'screenreader-only'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'hint'","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}},"parent":"FormField","order":"","relativePath":"packages/ui-form-field/src/FormFieldMessage/index.js","extension":".js","srcPath":"packages/ui-form-field/src/FormFieldMessage/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormFieldMessage/index.js","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormFieldMessage","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormFieldMessage/index.js').default","esPath":"@instructure/ui-form-field/es/FormFieldMessage","id":"FormFieldMessage","title":"FormFieldMessage"},"FormFieldMessages":{"description":"\nA FormFieldMessages component\n\n```js\n---\nexample: true\n---\n<FormFieldMessages messages={[\n  { text: 'Invalid name', type: 'error' },\n  { text: 'Good job!', type: 'success' },\n  { text: 'Full name, first and last', type: 'hint' },\n]} />\n```","displayName":"FormFieldMessages","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\ntext: PropTypes.string,\ntype: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n  }`","defaultValue":{"value":"undefined","computed":true}}},"parent":"FormField","order":"","relativePath":"packages/ui-form-field/src/FormFieldMessages/index.js","extension":".js","srcPath":"packages/ui-form-field/src/FormFieldMessages/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormFieldMessages/index.js","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormFieldMessages","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormFieldMessages/index.js').default","esPath":"@instructure/ui-form-field/es/FormFieldMessages","id":"FormFieldMessages","title":"FormFieldMessages"},"Grid":{"description":"","displayName":"Grid","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([GridRow, ScreenReaderContent])"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"colSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"rowSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"hAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false},{"value":"'space-around'","computed":false},{"value":"'space-between'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'start'","computed":false}},"vAlign":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'middle'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'top'","computed":false}},"startAt":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"null","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'small'","computed":false}},"visualDebug":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-grid/src/Grid/index.js","extension":".js","srcPath":"packages/ui-grid/src/Grid/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-grid/src/Grid/index.js","packageName":"@instructure/ui-grid","requirePath":"@instructure/ui-grid/lib/Grid","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-grid/src/Grid/index.js').default","esPath":"@instructure/ui-grid/es/Grid","id":"Grid","title":"Grid"},"Grid.Col":{"description":"","displayName":"GridCol","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"colSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":""},"rowSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":""},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'end'","computed":false},{"value":"'center'","computed":false},{"value":"'inherit'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'inherit'","computed":false}},"hAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false},{"value":"'space-around'","computed":false},{"value":"'space-between'","computed":false}]},"required":false,"description":""},"vAlign":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'middle'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":""},"startAt":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"null","computed":false}]},"required":false,"description":""},"visualDebug":{"type":{"name":"bool"},"required":false,"description":""},"width":{"type":{"name":"union","value":[{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}]},{"name":"shape","value":{"small":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}],"required":false},"medium":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}],"required":false},"large":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}],"required":false},"xLarge":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}],"required":false}}}]},"required":false,"description":""},"offset":{"type":{"name":"union","value":[{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}]},{"name":"shape","value":{"small":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}],"required":false},"medium":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}],"required":false},"large":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}],"required":false},"xLarge":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false},{"value":"11","computed":false},{"value":"12","computed":false}],"required":false}}}]},"required":false,"description":""},"isLastRow":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"isLastCol":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"parent":"Grid","id":"Grid.Col","order":"","relativePath":"packages/ui-grid/src/GridCol/index.js","extension":".js","srcPath":"packages/ui-grid/src/GridCol/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-grid/src/GridCol/index.js","packageName":"@instructure/ui-grid","requirePath":"@instructure/ui-grid/lib/GridCol","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-grid/src/GridCol/index.js').default","esPath":"@instructure/ui-grid/es/GridCol","title":"Grid.Col"},"Grid.Row":{"description":"","displayName":"GridRow","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([GridCol, ScreenReaderContent])"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"rowSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":""},"colSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":""},"hAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false},{"value":"'space-around'","computed":false},{"value":"'space-between'","computed":false}]},"required":false,"description":""},"vAlign":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'middle'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":""},"startAt":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"null","computed":false}]},"required":false,"description":""},"visualDebug":{"type":{"name":"bool"},"required":false,"description":""},"isLastRow":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}}},"parent":"Grid","id":"Grid.Row","order":"","relativePath":"packages/ui-grid/src/GridRow/index.js","extension":".js","srcPath":"packages/ui-grid/src/GridRow/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-grid/src/GridRow/index.js","packageName":"@instructure/ui-grid","requirePath":"@instructure/ui-grid/lib/GridRow","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-grid/src/GridRow/index.js').default","esPath":"@instructure/ui-grid/es/GridRow","title":"Grid.Row"},"Heading":{"description":"","displayName":"Heading","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"border":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'top'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":"Add a top- or bottom-border to the Heading","defaultValue":{"value":"'none'","computed":false}},"children":{"type":{"name":"custom","raw":"childrenOrValue"},"required":false,"description":"The text content of the Heading","defaultValue":{"value":"null","computed":false}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'secondary-inverse'","computed":false},{"value":"'inherit'","computed":false}]},"required":false,"description":"The font color to render","defaultValue":{"value":"'inherit'","computed":false}},"level":{"type":{"name":"enum","value":[{"value":"'h1'","computed":false},{"value":"'h2'","computed":false},{"value":"'h3'","computed":false},{"value":"'h4'","computed":false},{"value":"'h5'","computed":false},{"value":"'reset'","computed":false}]},"required":false,"description":"The *visual* appearance of the Heading: h1 is largest; h5 is smallest.","defaultValue":{"value":"'h2'","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"Choose the element Heading should render as. Will default to the `level` prop\nif not specified."},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a ref to the underlying HTML element","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-heading/src/Heading/index.js","extension":".js","srcPath":"packages/ui-heading/src/Heading/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-heading/src/Heading/index.js","packageName":"@instructure/ui-heading","requirePath":"@instructure/ui-heading/lib/Heading","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-heading/src/Heading/index.js').default","esPath":"@instructure/ui-heading/es/Heading","id":"Heading","title":"Heading"},"ApplyLocale":{"description":"","displayName":"ApplyLocale","methods":[],"props":{"locale":{"type":{"name":"string"},"required":false,"description":"A standard language id","defaultValue":{"value":"undefined","computed":true}},"timezone":{"type":{"name":"string"},"required":false,"description":"A timezone identifier in the format: Area/Location","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"node"},"required":false,"description":"accepts only one child (children must be wrapped in a single component/element)","defaultValue":{"value":"undefined","computed":true}}},"category":"components/utilities","order":"","relativePath":"packages/ui-i18n/src/ApplyLocale/index.js","extension":".js","srcPath":"packages/ui-i18n/src/ApplyLocale/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/src/ApplyLocale/index.js","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/lib/ApplyLocale","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/src/ApplyLocale/index.js').default","esPath":"@instructure/ui-i18n/es/ApplyLocale","id":"ApplyLocale","title":"ApplyLocale"},"ApplyTextDirection":{"description":"","displayName":"ApplyTextDirection","methods":[],"props":{"dir":{"type":{"name":"enum","value":[{"value":"'ltr'","computed":false},{"value":"'rtl'","computed":false}]},"required":false,"description":"string 'ltr' or 'rtl' representing the document direction","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"a single child (children must be wrapped in a single component/element) or function\nreturning a child called with the following arguments:\n@param {string} dir - the string value 'rtl' or 'ltr'\n@param {Boolean} rtl - boolean value true if the direction is 'rtl'","defaultValue":{"value":"null","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"accepts only one child (children must be wrapped in a single component/element)","defaultValue":{"value":"'span'","computed":false}}},"category":"components/utilities","order":"","relativePath":"packages/ui-i18n/src/ApplyTextDirection/index.js","extension":".js","srcPath":"packages/ui-i18n/src/ApplyTextDirection/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-i18n/src/ApplyTextDirection/index.js","packageName":"@instructure/ui-i18n","requirePath":"@instructure/ui-i18n/lib/ApplyTextDirection","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-i18n/src/ApplyTextDirection/index.js').default","esPath":"@instructure/ui-i18n/es/ApplyTextDirection","id":"ApplyTextDirection","title":"ApplyTextDirection"},"Img":{"description":"","displayName":"Img","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"src":{"type":{"name":"string"},"required":true,"description":""},"alt":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"display":{"type":{"name":"enum","value":[{"value":"'inline-block'","computed":false},{"value":"'block'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'inline-block'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"overlay":{"type":{"name":"shape","value":{"color":{"name":"string","required":true},"opacity":{"name":"enum","value":[{"value":"0","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false}],"required":true},"blend":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'multiply'","computed":false},{"value":"'screen'","computed":false},{"value":"'overlay'","computed":false},{"value":"'color-burn'","computed":false}],"required":false}}},"required":false,"description":"Valid values for `opacity` are `0` - `10`. Valid values for `blend` are\n`normal` (default), `multiply`, `screen`, `overlay`, and `color-burn`.","defaultValue":{"value":"undefined","computed":true}},"withGrayscale":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"withBlur":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"constrain":{"type":{"name":"enum","value":[{"value":"'cover'","computed":false},{"value":"'contain'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-img/src/Img/index.js","extension":".js","srcPath":"packages/ui-img/src/Img/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-img/src/Img/index.js","packageName":"@instructure/ui-img","requirePath":"@instructure/ui-img/lib/Img","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-img/src/Img/index.js').default","esPath":"@instructure/ui-img/es/Img","id":"Img","title":"Img"},"Link":{"description":"","displayName":"Link","methods":[],"props":{"children":{"type":{"name":"node"},"required":true,"description":"The text and/or icon displayed by the link"},"href":{"type":{"name":"string"},"required":false,"description":"Sets the link's `href` attribute","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'link'","computed":false},{"value":"'link-inverse'","computed":false}]},"required":false,"description":"Designates Link's text color to accommodate light and dark backgrounds","defaultValue":{"value":"'link'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the underlying HTML element","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element type to render as (will default to `<a>` if href is provided)","defaultValue":{"value":"undefined","computed":true}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false}]},"required":false,"description":"Determines if the link is enabled or disabled","defaultValue":{"value":"undefined","computed":true}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"renderIcon":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"Add an SVG icon to the Link. Do not add icons directly as\nchildren.","defaultValue":{"value":"undefined","computed":true}},"iconPlacement":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Place the icon before or after the text in the Link.","defaultValue":{"value":"'start'","computed":false}},"display":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'block'","computed":false},{"value":"'inline-block'","computed":false},{"value":"'flex'","computed":false},{"value":"'inline-flex'","computed":false}]},"required":false,"description":"Set the CSS display property of the Link element. 'auto' sets no display property.","defaultValue":{"value":"undefined","computed":true}},"isWithinText":{"type":{"name":"bool"},"required":false,"description":"Set `false` to remove default underline if Link does not appear inline with text","defaultValue":{"value":"true","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Fires when the Link is clicked","defaultValue":{"value":"undefined","computed":true}},"onFocus":{"type":{"name":"func"},"required":false,"description":"Fires when the Link gains focus","defaultValue":{"value":"undefined","computed":true}},"onBlur":{"type":{"name":"func"},"required":false,"description":"Fires when the Link loses focus","defaultValue":{"value":"undefined","computed":true}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-link/src/Link/index.js","extension":".js","srcPath":"packages/ui-link/src/Link/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-link/src/Link/index.js","packageName":"@instructure/ui-link","requirePath":"@instructure/ui-link/lib/Link","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-link/src/Link/index.js').default","esPath":"@instructure/ui-link/es/Link","id":"Link","title":"Link"},"InlineList":{"description":"","displayName":"InlineList","methods":[],"props":{"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([InlineListItem])"},"required":false,"description":"Only accepts `<InlineList.Item>` as a child","defaultValue":{"value":"null","computed":false}},"as":{"type":{"name":"enum","value":[{"value":"'ul'","computed":false},{"value":"'ol'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'ul'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"'none'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"delimiter":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'pipe'","computed":false},{"value":"'slash'","computed":false},{"value":"'arrow'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'none'","computed":false}},"itemSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'xxx-small'","computed":false},{"value":"'xx-small'","computed":false},{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"'xx-large'","computed":false}]},"required":false,"description":"Sets the margin separating each ListItem.","defaultValue":{"value":"'none'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(el) => {}","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-list/src/InlineList/index.js","extension":".js","srcPath":"packages/ui-list/src/InlineList/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-list/src/InlineList/index.js","packageName":"@instructure/ui-list","requirePath":"@instructure/ui-list/lib/InlineList","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-list/src/InlineList/index.js').default","esPath":"@instructure/ui-list/es/InlineList","id":"InlineList","title":"InlineList"},"List":{"description":"","displayName":"List","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([ListItem])"},"required":false,"description":"Only accepts `<List.Item>` as a child","defaultValue":{"value":"null","computed":false}},"as":{"type":{"name":"enum","value":[{"value":"'ul'","computed":false},{"value":"'ol'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'ul'","computed":false}},"delimiter":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'dashed'","computed":false},{"value":"'solid'","computed":false}]},"required":false,"description":"One of: none, dashed, solid","defaultValue":{"value":"'none'","computed":false}},"isUnstyled":{"type":{"name":"bool"},"required":false,"description":"When set, renders the List Items without a list style type.","defaultValue":{"value":"false","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"itemSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'xxx-small'","computed":false},{"value":"'xx-small'","computed":false},{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"'xx-large'","computed":false}]},"required":false,"description":"Sets the margin separating each ListItem.","defaultValue":{"value":"'none'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(el) => {}","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-list/src/List/index.js","extension":".js","srcPath":"packages/ui-list/src/List/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-list/src/List/index.js","packageName":"@instructure/ui-list","requirePath":"@instructure/ui-list/lib/List","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-list/src/List/index.js').default","esPath":"@instructure/ui-list/es/List","id":"List","title":"List"},"Menu":{"description":"","displayName":"Menu","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([\n  'MenuItem',\n  'MenuItemGroup',\n  'MenuItemSeparator',\n  'Menu'\n])"},"required":false,"description":"Children of type `Menu.Item`, `Menu.Group`, `Menu.Separator`, or `Menu`","defaultValue":{"value":"null","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"Description of the `<Menu />`","defaultValue":{"value":"null","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Is the `<Menu />` disabled","defaultValue":{"value":"false","computed":false}},"trigger":{"type":{"name":"node"},"required":false,"description":"The trigger element, if the `<Menu />` is to render as a popover","defaultValue":{"value":"null","computed":false}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"If a trigger is supplied, where should the `<Menu />` be placed (relative to the trigger)","defaultValue":{"value":"'bottom center'","computed":false}},"defaultShow":{"type":{"name":"bool"},"required":false,"description":"Should the `<Menu />` be open for the initial render","defaultValue":{"value":"false","computed":false}},"show":{"type":{"name":"custom","raw":"controllable(PropTypes.bool, 'onToggle', 'defaultShow')"},"required":false,"description":"Is the `<Menu />` open (should be accompanied by `onToggle`)","defaultValue":{"value":"undefined","computed":true}},"onToggle":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `<Menu />` is toggled open/closed. When used with `show`,\nthe component will not control its own state.","defaultValue":{"value":"(shown, menu) => {}","computed":false}},"onSelect":{"type":{"name":"func"},"required":false,"description":"Callback fired when an item within the `<Menu />` is selected","defaultValue":{"value":"(event, value, selected, item) => {}","computed":false}},"onDismiss":{"type":{"name":"func"},"required":false,"description":"If a trigger is supplied, callback fired when the `<Menu />` is closed","defaultValue":{"value":"(event, documentClick) => {}","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"If a trigger is supplied, callback fired when the `<Menu />` trigger is blurred","defaultValue":{"value":"(event) => {}","computed":false}},"onFocus":{"type":{"name":"func"},"required":false,"description":"If a trigger is supplied, callback fired when the `<Menu />` trigger is focused","defaultValue":{"value":"(event) => {}","computed":false}},"onMouseOver":{"type":{"name":"func"},"required":false,"description":"If a trigger is supplied, callback fired onMouseOver for the `<Menu />` trigger","defaultValue":{"value":"(event) => {}","computed":false}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"Callback fired on the onKeyDown of the `<Menu />`","defaultValue":{"value":"(event) => {}","computed":false}},"onKeyUp":{"type":{"name":"func"},"required":false,"description":"Callback fired on the onKeyUp of the `<Menu />`","defaultValue":{"value":"(event) => {}","computed":false}},"menuRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(el) => {}","computed":false}},"popoverRef":{"type":{"name":"func"},"required":false,"description":"A function that returns a reference to the `<Popover />`","defaultValue":{"value":"(el) => {}","computed":false}},"mountNode":{"type":{"name":"custom","raw":"PositionPropTypes.mountNode"},"required":false,"description":"If a trigger is supplied, an element or a function returning an element to use as the mount node\nfor the `<Menu />` (defaults to `document.body`)","defaultValue":{"value":"null","computed":false}},"constrain":{"type":{"name":"custom","raw":"PositionPropTypes.constrain"},"required":false,"description":"The parent in which to constrain the menu.\nOne of: 'window', 'scroll-parent', 'parent', 'none', an element,\nor a function returning an element","defaultValue":{"value":"'window'","computed":false}},"liveRegion":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"element"}},{"name":"element"},{"name":"func"}]},"required":false,"description":"If a trigger is supplied, an element, function returning an element, or array of elements that will not\nbe hidden from the screen reader when the `<Menu />` is open","defaultValue":{"value":"null","computed":false}},"shouldHideOnSelect":{"type":{"name":"bool"},"required":false,"description":"If a trigger is supplied, should the `<Menu />` hide when an item is selected","defaultValue":{"value":"true","computed":false}},"shouldFocusTriggerOnClose":{"type":{"name":"bool"},"required":false,"description":"If a trigger is supplied, should the `<Menu />` focus the trigger on after closing","defaultValue":{"value":"true","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"'flyout'","computed":false}]},"required":false,"description":"The type of `<Menu />`","defaultValue":{"value":"undefined","computed":true}},"id":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"withArrow":{"type":{"name":"bool"},"required":false,"description":"Whether or not an arrow pointing to the trigger should be rendered","defaultValue":{"value":"true","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-menu/src/Menu/index.js","extension":".js","srcPath":"packages/ui-menu/src/Menu/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-menu/src/Menu/index.js","packageName":"@instructure/ui-menu","requirePath":"@instructure/ui-menu/lib/Menu","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-menu/src/Menu/index.js').default","esPath":"@instructure/ui-menu/es/Menu","id":"Menu","title":"Menu"},"Metric":{"description":"","displayName":"Metric","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'center'","computed":false}},"renderLabel":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"renderValue":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"isGroupChild":{"type":{"name":"bool"},"required":false,"description":"Set to true when a child of MetricGroup so the appropriate\naria labels get set","defaultValue":{"value":"false","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-metric/src/Metric/index.js","extension":".js","srcPath":"packages/ui-metric/src/Metric/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-metric/src/Metric/index.js","packageName":"@instructure/ui-metric","requirePath":"@instructure/ui-metric/lib/Metric","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-metric/src/Metric/index.js').default","esPath":"@instructure/ui-metric/es/Metric","id":"Metric","title":"Metric"},"MetricGroup":{"description":"","displayName":"MetricGroup","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Metric])"},"required":false,"description":"children of type `Metric`","defaultValue":{"value":"null","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-metric/src/MetricGroup/index.js","extension":".js","srcPath":"packages/ui-metric/src/MetricGroup/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-metric/src/MetricGroup/index.js","packageName":"@instructure/ui-metric","requirePath":"@instructure/ui-metric/lib/MetricGroup","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-metric/src/MetricGroup/index.js').default","esPath":"@instructure/ui-metric/es/MetricGroup","id":"MetricGroup","title":"MetricGroup"},"Modal":{"description":"","displayName":"Modal","methods":[],"props":{"label":{"type":{"name":"string"},"required":true,"description":"An accessible label for the `<Modal />` content"},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.enforceOrder(\n  [ModalHeader, ModalBody, ModalFooter],\n  [ModalHeader, ModalBody],\n  [ModalBody, ModalFooter],\n  [ModalBody]\n)"},"required":false,"description":"The children to be rendered within the `<Modal />`","defaultValue":{"value":"null","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render the dialog as, `span` by default","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'fullscreen'","computed":false}]},"required":false,"description":"The size of the `<Modal />` content","defaultValue":{"value":"'auto'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"Designates the background style of the `<Modal />`","defaultValue":{"value":"'default'","computed":false}},"open":{"type":{"name":"bool"},"required":false,"description":"Whether or not the `<Modal />` is open","defaultValue":{"value":"false","computed":false}},"defaultFocusElement":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to focus by default","defaultValue":{"value":"null","computed":false}},"shouldReturnFocus":{"type":{"name":"bool"},"required":false,"description":"Whether focus should be returned to the trigger when the `<Modal/>` is closed","defaultValue":{"value":"true","computed":false}},"shouldCloseOnDocumentClick":{"type":{"name":"bool"},"required":false,"description":"Whether the `<Modal/>` should request close when the document is clicked","defaultValue":{"value":"true","computed":false}},"onOpen":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Modal />` content has been mounted in the DOM","defaultValue":{"value":"(event) => {}","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Modal />` has been unmounted from the DOM","defaultValue":{"value":"(event) => {}","computed":false}},"onDismiss":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `<Modal />` is requesting to be closed","defaultValue":{"value":"(event) => {}","computed":false}},"contentRef":{"type":{"name":"func"},"required":false,"description":"A function that returns a reference to the content element","defaultValue":{"value":"(el) => {}","computed":false}},"mountNode":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to use as the mount node\nfor the `<Modal />` (defaults to `document.body`)","defaultValue":{"value":"null","computed":false}},"insertAt":{"type":{"name":"enum","value":[{"value":"'bottom'","computed":false},{"value":"'top'","computed":false}]},"required":false,"description":"Insert the element at the 'top' of the mountNode or at the 'bottom'","defaultValue":{"value":"'bottom'","computed":false}},"liveRegion":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"element"}},{"name":"element"},{"name":"func"}]},"required":false,"description":"An element, function returning an element, or array of elements that will not be hidden from\nthe screen reader when the `<Modal />` is open","defaultValue":{"value":"null","computed":false}},"transition":{"type":{"name":"custom","raw":"Transition.propTypes.type"},"required":false,"description":"","defaultValue":{"value":"'fade'","computed":false}},"onEnter":{"type":{"name":"func"},"required":false,"description":"Callback fired before the <Modal /> transitions in","defaultValue":{"value":"() => {}","computed":false}},"onEntering":{"type":{"name":"func"},"required":false,"description":"Callback fired as the <Modal /> begins to transition in","defaultValue":{"value":"() => {}","computed":false}},"onEntered":{"type":{"name":"func"},"required":false,"description":"Callback fired after the <Modal /> finishes transitioning in","defaultValue":{"value":"() => {}","computed":false}},"onExit":{"type":{"name":"func"},"required":false,"description":"Callback fired right before the <Modal /> transitions out","defaultValue":{"value":"() => {}","computed":false}},"onExiting":{"type":{"name":"func"},"required":false,"description":"Callback fired as the <Modal /> begins to transition out","defaultValue":{"value":"() => {}","computed":false}},"onExited":{"type":{"name":"func"},"required":false,"description":"Callback fired after the <Modal /> finishes transitioning out","defaultValue":{"value":"() => {}","computed":false}},"constrain":{"type":{"name":"enum","value":[{"value":"'window'","computed":false},{"value":"'parent'","computed":false}]},"required":false,"description":"Constrain the Modal to the document window or its closest positioned parent","defaultValue":{"value":"'window'","computed":false}},"overflow":{"type":{"name":"enum","value":[{"value":"'scroll'","computed":false},{"value":"'fit'","computed":false}]},"required":false,"description":"Should ModalBody handle overflow with scrollbars, or fit its\ncontent within its own height?","defaultValue":{"value":"'scroll'","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","tags":"overlay, portal, dialog","order":"","relativePath":"packages/ui-modal/src/Modal/index.js","extension":".js","srcPath":"packages/ui-modal/src/Modal/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-modal/src/Modal/index.js","packageName":"@instructure/ui-modal","requirePath":"@instructure/ui-modal/lib/Modal","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-modal/src/Modal/index.js').default","esPath":"@instructure/ui-modal/es/Modal","id":"Modal","title":"Modal"},"Transition":{"description":"@module Transition","displayName":"Transition","methods":[{"name":"renderTransitionHelper","docblock":"Transition helper:\nAfter emotion migration the only way to keep\nthe old BaseTransition functionality with adding and removing\nclasses was to add the `Global` helper of `emotion`\n\nTodo: try to refactor or replace Transition/BaseTransition component in v9.0.0. so that it is not class based","modifiers":[],"params":[],"returns":null,"description":"Transition helper:\nAfter emotion migration the only way to keep\nthe old BaseTransition functionality with adding and removing\nclasses was to add the `Global` helper of `emotion`\n\nTodo: try to refactor or replace Transition/BaseTransition component in v9.0.0. so that it is not class based"}],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"type":{"type":{"name":"enum","value":[{"value":"'fade'","computed":false},{"value":"'scale'","computed":false},{"value":"'slide-down'","computed":false},{"value":"'slide-up'","computed":false},{"value":"'slide-left'","computed":false},{"value":"'slide-right'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'fade'","computed":false}},"children":{"type":{"name":"element"},"required":false,"description":"A single element to animate in and out","defaultValue":{"value":"null","computed":false}},"in":{"type":{"name":"bool"},"required":false,"description":"Show the component; triggers the enter or exit animation","defaultValue":{"value":"false","computed":false}},"unmountOnExit":{"type":{"name":"bool"},"required":false,"description":"Unmount the component (remove it from the DOM) when it is not shown","defaultValue":{"value":"false","computed":false}},"transitionOnMount":{"type":{"name":"bool"},"required":false,"description":"Run the enter animation when the component mounts, if it is initially\nshown","defaultValue":{"value":"false","computed":false}},"transitionEnter":{"type":{"name":"bool"},"required":false,"description":"Run the enter animation","defaultValue":{"value":"true","computed":false}},"transitionExit":{"type":{"name":"bool"},"required":false,"description":"Run the exit animation","defaultValue":{"value":"true","computed":false}},"onTransition":{"type":{"name":"func"},"required":false,"description":"Callback fired when transitioning to the next state","defaultValue":{"value":"function (toState, fromState) {}","computed":false}},"onEnter":{"type":{"name":"func"},"required":false,"description":"Callback fired before the \"entering\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onEntering":{"type":{"name":"func"},"required":false,"description":"Callback fired after the \"entering\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onEntered":{"type":{"name":"func"},"required":false,"description":"Callback fired after the \"enter\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onExit":{"type":{"name":"func"},"required":false,"description":"Callback fired before the \"exiting\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onExiting":{"type":{"name":"func"},"required":false,"description":"Callback fired after the \"exiting\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onExited":{"type":{"name":"func"},"required":false,"description":"Callback fired after the \"exited\" classes are applied","defaultValue":{"value":"function () {}","computed":false}}},"category":"components/utilities","order":"","relativePath":"packages/ui-motion/src/Transition/index.js","extension":".js","srcPath":"packages/ui-motion/src/Transition/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-motion/src/Transition/index.js","packageName":"@instructure/ui-motion","requirePath":"@instructure/ui-motion/lib/Transition","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-motion/src/Transition/index.js').default","esPath":"@instructure/ui-motion/es/Transition","id":"Transition","title":"Transition"},"AppNav":{"description":"","displayName":"AppNav","methods":[],"props":{"screenReaderLabel":{"type":{"name":"string"},"required":true,"description":"Screenreader label for the overall navigation"},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Item])"},"required":false,"description":"Only accepts `AppNav.Item` as children","defaultValue":{"value":"null","computed":false}},"debounce":{"type":{"name":"number"},"required":false,"description":"The rate (in ms) the component responds to container resizing or\nan update to one of its child items","defaultValue":{"value":"300","computed":false}},"renderBeforeItems":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display before the navigation items, such as a logo","defaultValue":{"value":"undefined","computed":true}},"renderAfterItems":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display after the navigation items, aligned to the far end\nof the navigation","defaultValue":{"value":"undefined","computed":true}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"'0'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the underlying nav element","defaultValue":{"value":"(el) => {}","computed":false}},"renderTruncateLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Customize the text displayed in the menu trigger when links overflow\nthe overall nav width.","defaultValue":{"value":"() => 'More'","computed":false}},"onUpdate":{"type":{"name":"func"},"required":false,"description":"Called whenever the navigation items are updated or the size of\nthe navigation changes. Passes in the `visibleItemsCount` as\na parameter.","defaultValue":{"value":"() => {}","computed":false}},"visibleItemsCount":{"type":{"name":"number"},"required":false,"description":"Sets the number of navigation items that are visible.","defaultValue":{"value":"0","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-navigation/src/AppNav/index.js","extension":".js","srcPath":"packages/ui-navigation/src/AppNav/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-navigation/src/AppNav/index.js","packageName":"@instructure/ui-navigation","requirePath":"@instructure/ui-navigation/lib/AppNav","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-navigation/src/AppNav/index.js').default","esPath":"@instructure/ui-navigation/es/AppNav","id":"AppNav","title":"AppNav"},"Navigation":{"description":"","displayName":"Navigation","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([NavigationItem])"},"required":false,"description":"children of type Navigation.Item","defaultValue":{"value":"null","computed":false}},"minimized":{"type":{"name":"custom","raw":"controllable(PropTypes.bool, 'onMinimized', 'defaultMinimized')"},"required":false,"description":"When minimized is set to true, the `<Navigation />` shows icons only while the text becomes a tooltip. When it is set to false, the `<Navigation />` shows text in addition to the icons","defaultValue":{"value":"undefined","computed":true}},"defaultMinimized":{"type":{"name":"bool"},"required":false,"description":"Whether the `<Navigation />` is initially minimized (uncontrolled)","defaultValue":{"value":"false","computed":false}},"onMinimized":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function (event, minimized) {}","computed":false}},"label":{"type":{"name":"string"},"required":true,"description":"Screen reader label for the main Navigation"},"toggleLabel":{"type":{"name":"shape","value":{"expandedLabel":{"name":"string","required":false},"minimizedLabel":{"name":"string","required":false}}},"required":true,"description":"Screen reader label for the toggle button expanded/minimized state"},"href":{"type":{"name":"string"},"required":false,"description":"If the `<Navigation.Item>` goes to a new page, pass an href","defaultValue":{"value":"undefined","computed":true}},"onClick":{"type":{"name":"func"},"required":false,"description":"If the `<Navigation.Item>` does not go to a new page pass an onClick","defaultValue":{"value":"function (e) {}","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-navigation/src/Navigation/index.js","extension":".js","srcPath":"packages/ui-navigation/src/Navigation/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-navigation/src/Navigation/index.js","packageName":"@instructure/ui-navigation","requirePath":"@instructure/ui-navigation/lib/Navigation","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-navigation/src/Navigation/index.js').default","esPath":"@instructure/ui-navigation/es/Navigation","id":"Navigation","title":"Navigation"},"NumberInput":{"description":"","displayName":"NumberInput","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"The form field label."},"id":{"type":{"name":"string"},"required":false,"description":"The id of the input. One is generated if not supplied.","defaultValue":{"value":"null","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the input is enabled, disabled, or readonly.\nWhen \"disabled\", the input changes visibly to indicate that it cannot\nreceive user interactions. When \"readonly\" the input still cannot receive\nuser interactions but it keeps the same styles as if it were enabled.","defaultValue":{"value":"undefined","computed":true}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"Object with shape: `{\n  text: PropTypes.string,\n  type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n}`","defaultValue":{"value":"[]","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Html placeholder text to display when the input has no value. This\nshould be hint text, not a label replacement.","defaultValue":{"value":"null","computed":false}},"isRequired":{"type":{"name":"bool"},"required":false,"description":"Whether or not the text input is required.","defaultValue":{"value":"false","computed":false}},"showArrows":{"type":{"name":"bool"},"required":false,"description":"Whether or not to display the up/down arrow buttons.","defaultValue":{"value":"true","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the input.","defaultValue":{"value":"'medium'","computed":false}},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The value of the input (should be accompanied by an `onChange` prop).","defaultValue":{"value":"undefined","computed":true}},"width":{"type":{"name":"string"},"required":false,"description":"The width of the input.","defaultValue":{"value":"undefined","computed":true}},"display":{"type":{"name":"enum","value":[{"value":"'inline-block'","computed":false},{"value":"'block'","computed":false}]},"required":false,"description":"The display of the root element.","defaultValue":{"value":"'block'","computed":false}},"inputRef":{"type":{"name":"func"},"required":false,"description":"A function that provides a reference to the actual input element.","defaultValue":{"value":"(event) => {}","computed":false}},"onFocus":{"type":{"name":"func"},"required":false,"description":"Callback fired when input receives focus.","defaultValue":{"value":"(event) => {}","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"Callback fired when the input loses focus.","defaultValue":{"value":"(event) => {}","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback executed when the input fires a change event.\n@param {Object} event - the event object\n@param {Object} value - the string value of the input","defaultValue":{"value":"(event, value) => {}","computed":false}},"onDecrement":{"type":{"name":"func"},"required":false,"description":"Called when the down arrow button is clicked, or the down arrow key is\npressed.","defaultValue":{"value":"(event) => {}","computed":false}},"onIncrement":{"type":{"name":"func"},"required":false,"description":"Called when the up arrow button is clicked, or the up arrow key is\npressed.","defaultValue":{"value":"(event) => {}","computed":false}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"Callback fired when a key is pressed.","defaultValue":{"value":"(event) => {}","computed":false}},"disabled":{"defaultValue":{"value":"undefined","computed":true},"required":false},"readOnly":{"defaultValue":{"value":"undefined","computed":true},"required":false}},"category":"components","id":"NumberInput","order":"","relativePath":"packages/ui-number-input/src/NumberInput/index.js","extension":".js","srcPath":"packages/ui-number-input/src/NumberInput/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-number-input/src/NumberInput/index.js","packageName":"@instructure/ui-number-input","requirePath":"@instructure/ui-number-input/lib/NumberInput","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-number-input/src/NumberInput/index.js').default","esPath":"@instructure/ui-number-input/es/NumberInput","title":"NumberInput"},"Options":{"description":"","displayName":"Options","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"as":{"type":{"name":"elementType"},"required":false,"description":"Element type to render as","defaultValue":{"value":"'span'","computed":false}},"role":{"type":{"name":"string"},"required":false,"description":"The aria role of the element","defaultValue":{"value":"'list'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"The the actual list element","defaultValue":{"value":"(node) => {}","computed":false}},"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to render as a label. Mostly for when the component is nested","defaultValue":{"value":"null","computed":false}},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf(['Options', 'Item', 'Separator'])"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-options/src/Options/index.js","extension":".js","srcPath":"packages/ui-options/src/Options/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-options/src/Options/index.js","packageName":"@instructure/ui-options","requirePath":"@instructure/ui-options/lib/Options","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-options/src/Options/index.js').default","esPath":"@instructure/ui-options/es/Options","id":"Options","title":"Options"},"Mask":{"description":"","displayName":"Mask","methods":[],"props":{"onDismiss":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"placement":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'center'","computed":false},{"value":"'bottom'","computed":false},{"value":"'stretch'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'center'","computed":false}},"fullscreen":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(el) => {}","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components/utilities","order":"","relativePath":"packages/ui-overlays/src/Mask/index.js","extension":".js","srcPath":"packages/ui-overlays/src/Mask/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-overlays/src/Mask/index.js","packageName":"@instructure/ui-overlays","requirePath":"@instructure/ui-overlays/lib/Mask","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-overlays/src/Mask/index.js').default","esPath":"@instructure/ui-overlays/es/Mask","id":"Mask","title":"Mask"},"Overlay":{"description":"","displayName":"Overlay","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"open":{"type":{"name":"bool"},"required":false,"description":"Whether or not the `<Overlay />` is open","defaultValue":{"value":"false","computed":false}},"onOpen":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Portal />` content has been mounted in the DOM","defaultValue":{"value":"() => {}","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Portal />` has been unmounted from the DOM","defaultValue":{"value":"() => {}","computed":false}},"mountNode":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to use as the mount node\nfor the `<Portal />` (defaults to `document.body`)","defaultValue":{"value":"null","computed":false}},"insertAt":{"type":{"name":"enum","value":[{"value":"'bottom'","computed":false},{"value":"'top'","computed":false}]},"required":false,"description":"Insert the element at the 'top' of the mountNode or at the 'bottom'","defaultValue":{"value":"'bottom'","computed":false}},"label":{"type":{"name":"string"},"required":true,"description":"An accessible label for the `<Overlay />` content"},"onDismiss":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `<Overlay />` is requesting to be closed","defaultValue":{"value":"() => {}","computed":false}},"defaultFocusElement":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to focus by default","defaultValue":{"value":"null","computed":false}},"applicationElement":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"element"}},{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to apply `aria-hidden` to","defaultValue":{"value":"null","computed":false}},"contentElement":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element that wraps the content of the `<Overlay />`","defaultValue":{"value":"null","computed":false}},"shouldContainFocus":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"shouldReturnFocus":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"shouldCloseOnDocumentClick":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"shouldCloseOnEscape":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"true","computed":false}},"transition":{"type":{"name":"custom","raw":"Transition.propTypes.type"},"required":false,"description":"The type of `<Transition />` to use for animating in/out","defaultValue":{"value":"null","computed":false}},"in":{"type":{"name":"bool"},"required":false,"description":"Show the component; triggers the enter or exit animation","defaultValue":{"value":"false","computed":false}},"unmountOnExit":{"type":{"name":"bool"},"required":false,"description":"Unmount the component (remove it from the DOM) when it is not shown","defaultValue":{"value":"false","computed":false}},"transitionOnMount":{"type":{"name":"bool"},"required":false,"description":"Run the enter animation when the component mounts, if it is initially\nshown","defaultValue":{"value":"false","computed":false}},"transitionEnter":{"type":{"name":"bool"},"required":false,"description":"Run the enter animation","defaultValue":{"value":"true","computed":false}},"transitionExit":{"type":{"name":"bool"},"required":false,"description":"Run the exit animation","defaultValue":{"value":"true","computed":false}},"onEnter":{"type":{"name":"func"},"required":false,"description":"Callback fired before the \"entering\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onEntering":{"type":{"name":"func"},"required":false,"description":"Callback fired after the \"entering\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onEntered":{"type":{"name":"func"},"required":false,"description":"Callback fired after the \"enter\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onExit":{"type":{"name":"func"},"required":false,"description":"Callback fired before the \"exiting\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onExiting":{"type":{"name":"func"},"required":false,"description":"Callback fired after the \"exiting\" classes are applied","defaultValue":{"value":"function () {}","computed":false}},"onExited":{"type":{"name":"func"},"required":false,"description":"Callback fired after the \"exited\" classes are applied","defaultValue":{"value":"function () {}","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-overlays/src/Overlay/index.js","extension":".js","srcPath":"packages/ui-overlays/src/Overlay/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-overlays/src/Overlay/index.js","packageName":"@instructure/ui-overlays","requirePath":"@instructure/ui-overlays/lib/Overlay","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-overlays/src/Overlay/index.js').default","esPath":"@instructure/ui-overlays/es/Overlay","id":"Overlay","title":"Overlay"},"Pages":{"description":"","displayName":"Pages","methods":[],"props":{"children":{"type":{"name":"custom","raw":"Children.oneOf([Page])"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"defaultPageIndex":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"activePageIndex":{"type":{"name":"custom","raw":"controllable(\n  PropTypes.number,\n  'onPageIndexChange',\n  'defaultPageIndex'\n)"},"required":false,"description":"The currently active page index","defaultValue":{"value":"0","computed":false}},"onPageIndexChange":{"type":{"name":"func"},"required":false,"description":"Event handler fired anytime page index has changed due to back button being clicked","defaultValue":{"value":"function () {}","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-pages/src/Pages/index.js","extension":".js","srcPath":"packages/ui-pages/src/Pages/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pages/src/Pages/index.js","packageName":"@instructure/ui-pages","requirePath":"@instructure/ui-pages/lib/Pages","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pages/src/Pages/index.js').default","esPath":"@instructure/ui-pages/es/Pages","id":"Pages","title":"Pages"},"Pagination":{"description":"","displayName":"Pagination","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"Children.oneOf([PaginationButton])"},"required":false,"description":"children of type Pagination.Page","defaultValue":{"value":"null","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disables interaction with all pages","defaultValue":{"value":"false","computed":false}},"label":{"type":{"name":"node"},"required":false,"description":"Visible label for component","defaultValue":{"value":"undefined","computed":true}},"labelNext":{"type":{"name":"string"},"required":false,"description":"Accessible label for next button","defaultValue":{"value":"undefined","computed":true}},"labelPrev":{"type":{"name":"string"},"required":false,"description":"Accessible label for previous button","defaultValue":{"value":"undefined","computed":true}},"variant":{"type":{"name":"enum","value":[{"value":"'full'","computed":false},{"value":"'compact'","computed":false}]},"required":false,"description":"The compact variant truncates the page navigation to show only the first,\nlast, and pages immediately surrounding the current page. Fewer than 5 pages,\nno next/previous arrow buttons will be shown, and all pages will be listed","defaultValue":{"value":"'full'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'div'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","defaultValue":{"value":"(el) => {}","computed":false}},"shouldHandleFocus":{"type":{"name":"bool"},"required":false,"description":"For accessibility, Pagination sets focus on the first or last Pagination.Pages,\nrespectively, when the Previous or Next arrow buttons are removed from the DOM.\nSet this property to `false` to prevent this behavior.","defaultValue":{"value":"true","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-pagination/src/Pagination/index.js","extension":".js","srcPath":"packages/ui-pagination/src/Pagination/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pagination/src/Pagination/index.js","packageName":"@instructure/ui-pagination","requirePath":"@instructure/ui-pagination/lib/Pagination","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pagination/src/Pagination/index.js').default","esPath":"@instructure/ui-pagination/es/Pagination","id":"Pagination","title":"Pagination"},"Pill":{"description":"","displayName":"Pill","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"as":{"type":{"name":"elementType"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'success'","computed":false},{"value":"'danger'","computed":false},{"value":"'info'","computed":false},{"value":"'warning'","computed":false},{"value":"'alert'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'primary'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-pill/src/Pill/index.js","extension":".js","srcPath":"packages/ui-pill/src/Pill/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pill/src/Pill/index.js","packageName":"@instructure/ui-pill","requirePath":"@instructure/ui-pill/lib/Pill","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pill/src/Pill/index.js').default","esPath":"@instructure/ui-pill/es/Pill","id":"Pill","title":"Pill"},"Popover":{"description":"","displayName":"Popover","methods":[],"props":{"isShowingContent":{"type":{"name":"bool"},"required":false,"description":"Whether or not the `<Popover />` content is shown","defaultValue":{"value":"undefined","computed":true}},"defaultIsShowingContent":{"type":{"name":"bool"},"required":false,"description":"Whether or not to show the content by default, when uncontrolled","defaultValue":{"value":"false","computed":false}},"on":{"type":{"name":"union","value":[{"name":"enum","value":[{"value":"'click'","computed":false},{"value":"'hover'","computed":false},{"value":"'focus'","computed":false}]},{"name":"arrayOf","value":{"name":"enum","value":[{"value":"'click'","computed":false},{"value":"'hover'","computed":false},{"value":"'focus'","computed":false}]}}]},"required":false,"description":"The action that causes the content to display (`click`, `hover`, `focus`)","defaultValue":{"value":"['hover', 'focus']","computed":false}},"withArrow":{"type":{"name":"bool"},"required":false,"description":"Whether or not an arrow pointing to the trigger should be rendered","defaultValue":{"value":"true","computed":false}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-inverse'","computed":false}]},"required":false,"description":"Color variant of the popover content","defaultValue":{"value":"'primary'","computed":false}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"The placement of the content in relation to the trigger","defaultValue":{"value":"'bottom center'","computed":false}},"shadow":{"type":{"name":"custom","raw":"ThemeablePropTypes.shadow"},"required":false,"description":"Controls the shadow depth for the `<Popover />`","defaultValue":{"value":"'resting'","computed":false}},"stacking":{"type":{"name":"custom","raw":"ThemeablePropTypes.stacking"},"required":false,"description":"Controls the z-index depth for the `<Popover />` content","defaultValue":{"value":"'topmost'","computed":false}},"contentRef":{"type":{"name":"func"},"required":false,"description":"A function that returns a reference to the content element","defaultValue":{"value":"(el) => {}","computed":false}},"defaultFocusElement":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to focus by default","defaultValue":{"value":"undefined","computed":true}},"screenReaderLabel":{"type":{"name":"string"},"required":false,"description":"An accessible label for the `<Popover />` content","defaultValue":{"value":"undefined","computed":true}},"offsetX":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The horizontal offset for the positioned content","defaultValue":{"value":"0","computed":false}},"offsetY":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The vertical offset for the positioned content","defaultValue":{"value":"0","computed":false}},"constrain":{"type":{"name":"custom","raw":"PositionPropTypes.constrain"},"required":false,"description":"The parent in which to constrain the popover.\nOne of: 'window', 'scroll-parent', 'parent', 'none', an element,\nor a function returning an element","defaultValue":{"value":"'window'","computed":false}},"positionTarget":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"Target element for positioning the Popover (if it differs from the trigger)","defaultValue":{"value":"undefined","computed":true}},"mountNode":{"type":{"name":"custom","raw":"PositionPropTypes.mountNode"},"required":false,"description":"An element or a function returning an element to use as the mount node\nfor the `<Popover />` (defaults to `document.body`)","defaultValue":{"value":"undefined","computed":true}},"insertAt":{"type":{"name":"enum","value":[{"value":"'bottom'","computed":false},{"value":"'top'","computed":false}]},"required":false,"description":"Insert the element at the 'top' of the mountNode or at the 'bottom'","defaultValue":{"value":"'bottom'","computed":false}},"liveRegion":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"element"}},{"name":"element"},{"name":"func"}]},"required":false,"description":"An element, function returning an element, or array of elements that will\nnot be hidden from the screen reader when the `<Popover />` is open","defaultValue":{"value":"undefined","computed":true}},"id":{"type":{"name":"string"},"required":false,"description":"An id is generated if not supplied.","defaultValue":{"value":"undefined","computed":true}},"shouldAlignArrow":{"type":{"name":"bool"},"required":false,"description":"Whether or not the content should offset to align by its arrow","defaultValue":{"value":"false","computed":false}},"shouldTrackPosition":{"type":{"name":"bool"},"required":false,"description":"Whether or not position should be tracked or just set on initial render","defaultValue":{"value":"true","computed":false}},"shouldRenderOffscreen":{"type":{"name":"bool"},"required":false,"description":"Should the `<Popover />` render offscreen when visually hidden","defaultValue":{"value":"false","computed":false}},"shouldContainFocus":{"type":{"name":"bool"},"required":false,"description":"Whether focus should contained within the `<Popover/>` when it is open","defaultValue":{"value":"false","computed":false}},"shouldReturnFocus":{"type":{"name":"bool"},"required":false,"description":"Whether focus should be returned to the trigger when the `<Popover/>` is closed","defaultValue":{"value":"true","computed":false}},"shouldCloseOnDocumentClick":{"type":{"name":"bool"},"required":false,"description":"Should the `<Popover />` hide when clicks occur outside the content","defaultValue":{"value":"true","computed":false}},"shouldCloseOnEscape":{"type":{"name":"bool"},"required":false,"description":"Should the `<Popover />` hide when the escape key is pressed","defaultValue":{"value":"true","computed":false}},"shouldFocusContentOnTriggerBlur":{"type":{"name":"bool"},"required":false,"description":"Should the content become focused when the trigger is blurred","defaultValue":{"value":"false","computed":false}},"onShowContent":{"type":{"name":"func"},"required":false,"description":"Callback fired when content is shown. When controlled, this callback is\nfired when the Popover expects to be shown","defaultValue":{"value":"(event) => {}","computed":false}},"onHideContent":{"type":{"name":"func"},"required":false,"description":"Callback fired when content is hidden. When controlled, this callback is\nfired when the Popover expects to be hidden","defaultValue":{"value":"(event, { documentClick }) => {}","computed":false}},"onPositioned":{"type":{"name":"func"},"required":false,"description":"Callback fired when content has been is initially positioned.\nIf `shouldRenderOffscreen` is true, it will only fire once, the first\ntime the content is shown","defaultValue":{"value":"(position) => {}","computed":false}},"onPositionChanged":{"type":{"name":"func"},"required":false,"description":"Callback fired when the position changes","defaultValue":{"value":"(position) => {}","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback fired when component is clicked","defaultValue":{"value":"(event) => {}","computed":false}},"onFocus":{"type":{"name":"func"},"required":false,"description":"Callback fired when trigger is focused","defaultValue":{"value":"(event) => {}","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"Callback fired when component is blurred","defaultValue":{"value":"(event) => {}","computed":false}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"Callback fired on keydown","defaultValue":{"value":"(event) => {}","computed":false}},"onKeyUp":{"type":{"name":"func"},"required":false,"description":"Callback fired on keyup","defaultValue":{"value":"(event) => {}","computed":false}},"onMouseOver":{"type":{"name":"func"},"required":false,"description":"/**\nCallback fired when mouse is over trigger","defaultValue":{"value":"(event) => {}","computed":false}},"onMouseOut":{"type":{"name":"func"},"required":false,"description":"Callback fired when mouse leaves trigger","defaultValue":{"value":"(event) => {}","computed":false}},"renderTrigger":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The element that triggers the popover","defaultValue":{"value":"null","computed":false}},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The content to be shown by the popover","defaultValue":{"value":"null","computed":false}},"dir":{"type":{"name":"enum","computed":true,"value":"Object.values(bidirectional.DIRECTION)"},"required":false,"description":""}},"category":"components","tags":"overlay, portal, dialog","order":"","relativePath":"packages/ui-popover/src/Popover/index.js","extension":".js","srcPath":"packages/ui-popover/src/Popover/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-popover/src/Popover/index.js","packageName":"@instructure/ui-popover","requirePath":"@instructure/ui-popover/lib/Popover","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-popover/src/Popover/index.js').default","esPath":"@instructure/ui-popover/es/Popover","id":"Popover","title":"Popover"},"Portal":{"description":"@module Portal","displayName":"Portal","methods":[],"props":{"open":{"type":{"name":"bool"},"required":false,"description":"Wheter or not the `<Portal />` is open","defaultValue":{"value":"false","computed":false}},"onOpen":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Portal />` content has been mounted in the DOM","defaultValue":{"value":"(DOMNode) => {}","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Portal />` has been unmounted from the DOM","defaultValue":{"value":"() => {}","computed":false}},"mountNode":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to use as the mount node\nfor the `<Portal />` (defaults to `document.body`)","defaultValue":{"value":"null","computed":false}},"insertAt":{"type":{"name":"enum","value":[{"value":"'bottom'","computed":false},{"value":"'top'","computed":false}]},"required":false,"description":"Insert the element at the 'top' of the mountNode or at the 'bottom'","defaultValue":{"value":"'bottom'","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"The children to be rendered within the `<Portal />`","defaultValue":{"value":"null","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html element","defaultValue":{"value":"(el) => {}","computed":false}}},"category":"components/utilities","order":"","relativePath":"packages/ui-portal/src/Portal/index.js","extension":".js","srcPath":"packages/ui-portal/src/Portal/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-portal/src/Portal/index.js","packageName":"@instructure/ui-portal","requirePath":"@instructure/ui-portal/lib/Portal","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-portal/src/Portal/index.js').default","esPath":"@instructure/ui-portal/es/Portal","id":"Portal","title":"Portal"},"Position":{"description":"","displayName":"Position","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"renderTarget":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The node to use as the position target","defaultValue":{"value":"undefined","computed":true}},"target":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"The target to be used when not using `renderTarget`","defaultValue":{"value":"undefined","computed":true}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"The placement of the content in relation to the target","defaultValue":{"value":"'bottom center'","computed":false}},"mountNode":{"type":{"name":"custom","raw":"PositionPropTypes.mountNode"},"required":false,"description":"An element or a function returning an element to use as the mount node\nfor the `<Position />` (defaults to `document.body`)","defaultValue":{"value":"null","computed":false}},"insertAt":{"type":{"name":"enum","value":[{"value":"'bottom'","computed":false},{"value":"'top'","computed":false}]},"required":false,"description":"Insert the element at the 'top' of the mountNode or at the 'bottom'","defaultValue":{"value":"'bottom'","computed":false}},"constrain":{"type":{"name":"custom","raw":"PositionPropTypes.constrain"},"required":false,"description":"The parent in which to constrain the placement.\nOne of: 'window', 'scroll-parent', 'parent', 'none', an element,\nor a function returning an element","defaultValue":{"value":"'window'","computed":false}},"offsetX":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The horizontal offset for the positioned content","defaultValue":{"value":"0","computed":false}},"offsetY":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The vertical offset for the positioned content","defaultValue":{"value":"0","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"An id will be generated if not provided","defaultValue":{"value":"undefined","computed":true}},"shouldTrackPosition":{"type":{"name":"bool"},"required":false,"description":"Whether or not position of the target should be tracked or just set statically on render","defaultValue":{"value":"true","computed":false}},"shouldPositionOverTarget":{"type":{"name":"bool"},"required":false,"description":"Whether or not you want the content to position over the target","defaultValue":{"value":"false","computed":false}},"onPositionChanged":{"type":{"name":"func"},"required":false,"description":"Callback fired when the position changes","defaultValue":{"value":"(position) => {}","computed":false}},"onPositioned":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Position />` content has been mounted and is initially positioned","defaultValue":{"value":"(position) => {}","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"The content to be positioned","defaultValue":{"value":"null","computed":false}}},"category":"components/utilities","order":"","relativePath":"packages/ui-position/src/Position/index.js","extension":".js","srcPath":"packages/ui-position/src/Position/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-position/src/Position/index.js","packageName":"@instructure/ui-position","requirePath":"@instructure/ui-position/lib/Position","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-position/src/Position/index.js').default","esPath":"@instructure/ui-position/es/Position","id":"Position","title":"Position"},"ProgressBar":{"description":"","displayName":"ProgressBar","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"screenReaderLabel":{"type":{"name":"string"},"required":true,"description":"A label is required for accessibility"},"size":{"type":{"name":"enum","value":[{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"Control the height of the progress bar","defaultValue":{"value":"'medium'","computed":false}},"valueMax":{"type":{"name":"number"},"required":false,"description":"Maximum value (defaults to 100)","defaultValue":{"value":"100","computed":false}},"valueNow":{"type":{"name":"number"},"required":false,"description":"Receives the progress of the event","defaultValue":{"value":"0","computed":false}},"formatScreenReaderValue":{"type":{"name":"func"},"required":false,"description":"A function for formatting the text provided to screen readers via `aria-valuenow`","defaultValue":{"value":"({ valueNow, valueMax }) =>\n`${valueNow} / ${valueMax}`","computed":false}},"renderValue":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"A function to format the displayed value. If null the value will not display.\nTakes `valueNow` and `valueMax` as parameters.","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-inverse'","computed":false}]},"required":false,"description":"Controls the overall color scheme of the component","defaultValue":{"value":"'primary'","computed":false}},"meterColor":{"type":{"name":"union","value":[{"name":"func"},{"name":"enum","value":[{"value":"'info'","computed":false},{"value":"'warning'","computed":false},{"value":"'danger'","computed":false},{"value":"'alert'","computed":false},{"value":"'success'","computed":false},{"value":"'brand'","computed":false}]}]},"required":false,"description":"Control the color of the progress meter. Defaults to showing theme success\ncolor on completion, based on `valueNow` and `valueMax`.","defaultValue":{"value":"({ valueNow, valueMax }) =>\nvalueNow / valueMax >= 1 ? 'success' : 'brand'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the component's root HTML element","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":"Set the element type of the component's root","defaultValue":{"value":"'div'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-progress/src/ProgressBar/index.js","extension":".js","srcPath":"packages/ui-progress/src/ProgressBar/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-progress/src/ProgressBar/index.js","packageName":"@instructure/ui-progress","requirePath":"@instructure/ui-progress/lib/ProgressBar","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-progress/src/ProgressBar/index.js').default","esPath":"@instructure/ui-progress/es/ProgressBar","id":"ProgressBar","title":"ProgressBar"},"ProgressCircle":{"description":"","displayName":"ProgressCircle","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"screenReaderLabel":{"type":{"name":"string"},"required":true,"description":"A label is required for accessibility"},"size":{"type":{"name":"enum","value":[{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"Control the size of the progress circle","defaultValue":{"value":"'medium'","computed":false}},"valueMax":{"type":{"name":"number"},"required":false,"description":"Maximum value (defaults to 100)","defaultValue":{"value":"100","computed":false}},"valueNow":{"type":{"name":"number"},"required":false,"description":"Receives the progress of the event","defaultValue":{"value":"0","computed":false}},"formatScreenReaderValue":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"A function for formatting the text provided to screen readers via `aria-valuenow`","defaultValue":{"value":"({ valueNow, valueMax }) =>\n`${valueNow} / ${valueMax}`","computed":false}},"renderValue":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"A function to format the displayed value. If null the value will not display.\nTakes `valueNow` and `valueMax` as parameters.","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-inverse'","computed":false}]},"required":false,"description":"Controls the overall color scheme of the component","defaultValue":{"value":"'primary'","computed":false}},"meterColor":{"type":{"name":"union","value":[{"name":"func"},{"name":"enum","value":[{"value":"'info'","computed":false},{"value":"'warning'","computed":false},{"value":"'danger'","computed":false},{"value":"'alert'","computed":false},{"value":"'success'","computed":false},{"value":"'brand'","computed":false}]}]},"required":false,"description":"Control the color of the progress meter. Defaults to showing theme success\ncolor on completion, based on `valueNow` and `valueMax`.","defaultValue":{"value":"({ valueNow, valueMax }) =>\nvalueNow / valueMax >= 1 ? 'success' : 'brand'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the component's root HTML element","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":"Set the element type of the component's root","defaultValue":{"value":"'div'","computed":false}},"shouldAnimateOnMount":{"type":{"name":"bool"},"required":false,"description":"Animate the progress meter to the current value when the component\nhas mounted","defaultValue":{"value":"false","computed":false}},"animationDelay":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-progress/src/ProgressCircle/index.js","extension":".js","srcPath":"packages/ui-progress/src/ProgressCircle/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-progress/src/ProgressCircle/index.js","packageName":"@instructure/ui-progress","requirePath":"@instructure/ui-progress/lib/ProgressCircle","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-progress/src/ProgressCircle/index.js').default","esPath":"@instructure/ui-progress/es/ProgressCircle","id":"ProgressCircle","title":"ProgressCircle"},"RadioInput":{"description":"","displayName":"RadioInput","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"label":{"type":{"name":"node"},"required":true,"description":""},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"id":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"name":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"checked":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Whether or not to disable the input","defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"Works just like disabled but keeps the same styles as if it were active","defaultValue":{"value":"false","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'simple'","computed":false},{"value":"'toggle'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'simple'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"context":{"type":{"name":"enum","value":[{"value":"'success'","computed":false},{"value":"'warning'","computed":false},{"value":"'danger'","computed":false},{"value":"'off'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'success'","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function (event) {}","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function (event) {}","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-radio-input/src/RadioInput/index.js","extension":".js","srcPath":"packages/ui-radio-input/src/RadioInput/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-radio-input/src/RadioInput/index.js","packageName":"@instructure/ui-radio-input","requirePath":"@instructure/ui-radio-input/lib/RadioInput","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-radio-input/src/RadioInput/index.js').default","esPath":"@instructure/ui-radio-input/es/RadioInput","id":"RadioInput","title":"RadioInput"},"RadioInputGroup":{"description":"","displayName":"RadioInputGroup","methods":[],"props":{"name":{"type":{"name":"string"},"required":true,"description":""},"description":{"type":{"name":"node"},"required":true,"description":""},"defaultValue":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"value to set on initial render","defaultValue":{"value":"undefined","computed":true}},"value":{"type":{"name":"custom","raw":"controllable(\n  PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n)"},"required":false,"description":"the selected value (must be accompanied by an `onChange` prop)","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"when used with the `value` prop, the component will not control its own state","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"works just like disabled but keeps the same styles as if it were active","defaultValue":{"value":"false","computed":false}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\ntext: PropTypes.string,\ntype: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n  }`","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"node"},"required":false,"description":"any children (ones that aren't `RadioInput` are passed through)","defaultValue":{"value":"null","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'simple'","computed":false},{"value":"'toggle'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'simple'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'columns'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'stacked'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-radio-input/src/RadioInputGroup/index.js","extension":".js","srcPath":"packages/ui-radio-input/src/RadioInputGroup/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-radio-input/src/RadioInputGroup/index.js","packageName":"@instructure/ui-radio-input","requirePath":"@instructure/ui-radio-input/lib/RadioInputGroup","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-radio-input/src/RadioInputGroup/index.js').default","esPath":"@instructure/ui-radio-input/es/RadioInputGroup","id":"RadioInputGroup","title":"RadioInputGroup"},"RangeInput":{"description":"","displayName":"RangeInput","methods":[],"props":{"min":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"0","computed":false}},"max":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"0","computed":false}},"defaultValue":{"type":{"name":"number"},"required":false,"description":"value to set on initial render","defaultValue":{"value":"undefined","computed":true}},"value":{"type":{"name":"custom","raw":"controllable(PropTypes.number)"},"required":false,"description":"the selected value (must be accompanied by an `onChange` prop)","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"when used with the `value` prop, the component will not control its own state","defaultValue":{"value":"undefined","computed":true}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the value label","defaultValue":{"value":"'medium'","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'stacked'","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"label":{"type":{"name":"node"},"required":true,"description":""},"displayValue":{"type":{"name":"bool"},"required":false,"description":"whether to display the current value","defaultValue":{"value":"true","computed":false}},"step":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"1","computed":false}},"formatValue":{"type":{"name":"func"},"required":false,"description":"A function to format the displayed value","defaultValue":{"value":"(val) => val","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-range-input/src/RangeInput/index.js","extension":".js","srcPath":"packages/ui-range-input/src/RangeInput/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-range-input/src/RangeInput/index.js","packageName":"@instructure/ui-range-input","requirePath":"@instructure/ui-range-input/lib/RangeInput","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-range-input/src/RangeInput/index.js').default","esPath":"@instructure/ui-range-input/es/RangeInput","id":"RangeInput","title":"RangeInput"},"Rating":{"description":"","displayName":"Rating","methods":[],"props":{"label":{"type":{"name":"string"},"required":true,"description":"A label is required for accessibility"},"formatValueText":{"type":{"name":"func"},"required":false,"description":"A function that returns the current value formatted for screen readers","defaultValue":{"value":"(filled, iconCount) => `${filled} / ${iconCount}`","computed":false}},"iconCount":{"type":{"name":"enum","value":[{"value":"3","computed":false},{"value":"5","computed":false}]},"required":false,"description":"Choose from a 0-3 or 0-5 rating system","defaultValue":{"value":"3","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"Choose from different rating icon sizes","defaultValue":{"value":"'medium'","computed":false}},"valueMax":{"type":{"name":"number"},"required":false,"description":"The maximum rating (defaults to iconCount)","defaultValue":{"value":"undefined","computed":true}},"valueNow":{"type":{"name":"number"},"required":false,"description":"The current rating","defaultValue":{"value":"0","computed":false}},"animateFill":{"type":{"name":"bool"},"required":false,"description":"Set to make the icons animate when they become filled","defaultValue":{"value":"false","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-rating/src/Rating/index.js","extension":".js","srcPath":"packages/ui-rating/src/Rating/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-rating/src/Rating/index.js","packageName":"@instructure/ui-rating","requirePath":"@instructure/ui-rating/lib/Rating","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-rating/src/Rating/index.js').default","esPath":"@instructure/ui-rating/es/Rating","id":"Rating","title":"Rating"},"Rating.Icon":{"description":"","displayName":"RatingIcon","methods":[],"props":{"animationDelay":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"200","computed":false}},"animateFill":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"filled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"parent":"Rating","id":"Rating.Icon","order":"","relativePath":"packages/ui-rating/src/RatingIcon/index.js","extension":".js","srcPath":"packages/ui-rating/src/RatingIcon/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-rating/src/RatingIcon/index.js","packageName":"@instructure/ui-rating","requirePath":"@instructure/ui-rating/lib/RatingIcon","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-rating/src/RatingIcon/index.js').default","esPath":"@instructure/ui-rating/es/RatingIcon","title":"Rating.Icon"},"Responsive":{"description":"","displayName":"Responsive","methods":[],"props":{"match":{"type":{"name":"enum","value":[{"value":"'element'","computed":false},{"value":"'media'","computed":false}]},"required":false,"description":"Specifies if the `<Responsive />` component should use element or media queries","defaultValue":{"value":"'element'","computed":false}},"query":{"type":{"name":"objectOf","value":{"name":"custom","raw":"ResponsivePropTypes.validQuery"}},"required":true,"description":"Consists of an object where the keys define the names of breakpoints. The values are query objects\nwith keys representing the breakpoint condition and values representing a breakpoint value as a\nstring or number. Ex. `{small: { maxWidth: 400 }, large: { minWidth: '600em'}}`"},"props":{"type":{"name":"objectOf","value":{"name":"object"}},"required":false,"description":"Consists of an object where the keys match the breakpoint names used in the query. The values\nare objects with keys representing prop names and values representing prop values Ex.\n`{small: { myProp: 'fillscreen' }, large: { myProp: 'fillcontainer' }}`","defaultValue":{"value":"null","computed":false}},"render":{"type":{"name":"func"},"required":false,"description":"Function called on render with the following form `(props, matches) => {...}` where the props\nare the current props to be applied and matches is an array of current matches from the query\nprop. Either this or a `children` prop function must be supplied.","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"func"},"required":false,"description":"Function that takes the same form and arguments as the render prop. Either this or a `render`\nprop function must be supplied.","defaultValue":{"value":"null","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-responsive/src/Responsive/index.js","extension":".js","srcPath":"packages/ui-responsive/src/Responsive/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/Responsive/index.js","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/lib/Responsive","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/src/Responsive/index.js').default","esPath":"@instructure/ui-responsive/es/Responsive","id":"Responsive","title":"Responsive"},"Select":{"description":"","displayName":"Select","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"The form field label."},"inputValue":{"type":{"name":"string"},"required":false,"description":"The value to display in the text input.","defaultValue":{"value":"''","computed":false}},"isShowingOptions":{"type":{"name":"bool"},"required":false,"description":"Whether or not to show the options list.","defaultValue":{"value":"false","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"The id of the text input. One is generated if not supplied.","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the text input.","defaultValue":{"value":"'medium'","computed":false}},"assistiveText":{"type":{"name":"string"},"required":false,"description":"Additional helpful text to provide to screen readers about the operation\nof the component.","defaultValue":{"value":"undefined","computed":true}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Html placeholder text to display when the input has no value. This should\nbe hint text, not a label replacement.","defaultValue":{"value":"null","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the input is enabled, disabled, or readonly.\nWhen \"disabled\", the input changes visibly to indicate that it cannot\nreceive user interactions. When \"readonly\" the input still cannot receive\nuser interactions but it keeps the same styles as if it were enabled.","defaultValue":{"value":"undefined","computed":true}},"isRequired":{"type":{"name":"bool"},"required":false,"description":"Whether or not the text input is required.","defaultValue":{"value":"false","computed":false}},"isInline":{"type":{"name":"bool"},"required":false,"description":"Whether the input is rendered inline with other elements or if it\nis rendered as a block level element.","defaultValue":{"value":"false","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"The width of the text input.","defaultValue":{"value":"undefined","computed":true}},"htmlSize":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The width of the text input, in characters, if a width is not explicitly\nprovided via the `width` prop. Only applicable if `isInline={true}`.","defaultValue":{"value":"undefined","computed":true}},"optionsMaxWidth":{"type":{"name":"string"},"required":false,"description":"The max width the options list can be before option text wraps. If not\nset, the list will only display as wide as the text input.","defaultValue":{"value":"undefined","computed":true}},"visibleOptionsCount":{"type":{"name":"number"},"required":false,"description":"The number of options that should be visible before having to scroll.","defaultValue":{"value":"8","computed":false}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"Displays messages and validation for the input. It should be an object\nwith the following shape:\n`{\n  text: PropTypes.string,\n  type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n}`","defaultValue":{"value":"undefined","computed":true}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"The placement of the options list.","defaultValue":{"value":"'bottom stretch'","computed":false}},"constrain":{"type":{"name":"custom","raw":"PositionPropTypes.constrain"},"required":false,"description":"The parent in which to constrain the placement.","defaultValue":{"value":"'window'","computed":false}},"mountNode":{"type":{"name":"custom","raw":"PositionPropTypes.mountNode"},"required":false,"description":"An element or a function returning an element to use mount the options\nlist to in the DOM (defaults to `document.body`)","defaultValue":{"value":"undefined","computed":true}},"onFocus":{"type":{"name":"func"},"required":false,"description":"Callback fired when text input receives focus.","defaultValue":{"value":"(event) => {}","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"Callback fired when text input loses focus.","defaultValue":{"value":"(event) => {}","computed":false}},"onInputChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when text input value changes.","defaultValue":{"value":"undefined","computed":true}},"onRequestShowOptions":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting that the options list be shown.","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestHideOptions":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting that the options list be hidden.","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestHighlightOption":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting a particular option be highlighted.","defaultValue":{"value":"(event, data) => {}","computed":false}},"onRequestSelectOption":{"type":{"name":"func"},"required":false,"description":"Callback fired requesting a particular option be selected.","defaultValue":{"value":"(event, data) => {}","computed":false}},"inputRef":{"type":{"name":"func"},"required":false,"description":"A ref to the html `input` element.","defaultValue":{"value":"(node) => {}","computed":false}},"listRef":{"type":{"name":"func"},"required":false,"description":"A ref to the html `ul` element.","defaultValue":{"value":"(node) => {}","computed":false}},"renderBeforeInput":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display before the text input. This will commonly be an icon or\ntags to show multiple selections.","defaultValue":{"value":"null","computed":false}},"renderAfterInput":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display after the text input. This content will replace the\ndefault arrow icons.","defaultValue":{"value":"null","computed":false}},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Group, Option])"},"required":false,"description":"Children of type `<Select.Option />` or `<Select.Group />`.","defaultValue":{"value":"null","computed":false}},"shouldNotWrap":{"type":{"name":"bool"},"required":false,"description":"Prevents the default behavior of wrapping the input and rendered content\nwhen available space is exceeded.","defaultValue":{"value":"false","computed":false}}},"category":"components","tags":"autocomplete, typeahead, combobox, dropdown, search, form","order":"","relativePath":"packages/ui-select/src/Select/index.js","extension":".js","srcPath":"packages/ui-select/src/Select/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-select/src/Select/index.js","packageName":"@instructure/ui-select","requirePath":"@instructure/ui-select/lib/Select","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-select/src/Select/index.js').default","esPath":"@instructure/ui-select/es/Select","id":"Select","title":"Select"},"Selectable":{"description":"","displayName":"Selectable","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The id of the trigger element. Set automatically if not provided","defaultValue":{"value":"null","computed":false}},"highlightedOptionId":{"type":{"name":"string"},"required":false,"description":"The id of the option in the list that should be considered highlighted","defaultValue":{"value":"null","computed":false}},"selectedOptionId":{"type":{"name":"union","value":[{"name":"string"},{"name":"array"}]},"required":false,"description":"The id of the option(s) in the list that should be considered selected","defaultValue":{"value":"null","computed":false}},"isShowingOptions":{"type":{"name":"bool"},"required":false,"description":"Whether or not the options should be visible","defaultValue":{"value":"false","computed":false}},"onRequestShowOptions":{"type":{"name":"func"},"required":false,"description":"Callback fired when the options want to become visible","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestHideOptions":{"type":{"name":"func"},"required":false,"description":"Callback fired when the options no longer want to be visible","defaultValue":{"value":"(event) => {}","computed":false}},"onRequestHighlightOption":{"type":{"name":"func"},"required":false,"description":"Callback fired when option is hovered or highlighted via keyboard","defaultValue":{"value":"(event, data) => {}","computed":false}},"onRequestHighlightFirstOption":{"type":{"name":"func"},"required":false,"description":"Callback fired when first option should be highlighted","defaultValue":{"value":"(event, data) => {}","computed":false}},"onRequestHighlightLastOption":{"type":{"name":"func"},"required":false,"description":"Callback fired when last option should be highlighted","defaultValue":{"value":"(event, data) => {}","computed":false}},"onRequestSelectOption":{"type":{"name":"func"},"required":false,"description":"Callback fired when option clicked or selected via keyboard","defaultValue":{"value":"(event, data) => {}","computed":false}},"children":{"type":{"name":"func"},"required":false,"description":"@param {Object} renderProps\n@param {Function} renderProps.getRootProps - Prop getter for root element\n@param {Function} renderProps.getLabelProps - Prop getter for label element\n@param {Function} renderProps.getTriggerProps - Prop getter for trigger element\n@param {Function} renderProps.getInputProps - Prop getter for input element\n@param {Function} renderProps.getListProps - Prop getter for list element\n@param {Function} renderProps.getOptionProps - Prop getter for option elements\n@param {Function} renderProps.getDisabledOptionProps - Prop getter for disabled option elements\n@param {Function} renderProps.getDescriptionProps - Prop getter for screenreader description element","defaultValue":{"value":"null","computed":false}},"render":{"type":{"name":"func"},"required":false,"description":"Identical to children","defaultValue":{"value":"undefined","computed":true}}},"category":"components","tags":"autocomplete, typeahead, combobox, dropdown, search","order":"","relativePath":"packages/ui-selectable/src/Selectable/index.js","extension":".js","srcPath":"packages/ui-selectable/src/Selectable/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-selectable/src/Selectable/index.js","packageName":"@instructure/ui-selectable","requirePath":"@instructure/ui-selectable/lib/Selectable","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-selectable/src/Selectable/index.js').default","esPath":"@instructure/ui-selectable/es/Selectable","id":"Selectable","title":"Selectable"},"SimpleSelect":{"description":"","displayName":"SimpleSelect","methods":[],"props":{"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"The form field label."},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The value corresponding to the value of the selected option. If defined,\nthe component will act controlled and will not manage its own state.","defaultValue":{"value":"undefined","computed":true}},"defaultValue":{"type":{"name":"string"},"required":false,"description":"The value of the option to select by default, when uncontrolled.","defaultValue":{"value":"undefined","computed":true}},"id":{"type":{"name":"string"},"required":false,"description":"The id of the text input. One is generated if not supplied.","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the text input.","defaultValue":{"value":"'medium'","computed":false}},"assistiveText":{"type":{"name":"string"},"required":false,"description":"Additional helpful text to provide to screen readers about the operation\nof the component. Provided via aria-describedby.","defaultValue":{"value":"undefined","computed":true}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Html placeholder text to display when the input has no value. This should\nbe hint text, not a label replacement.","defaultValue":{"value":"null","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the input is enabled, disabled, or readonly.\nWhen \"disabled\", the input changes visibly to indicate that it cannot\nreceive user interactions. When \"readonly\" the input still cannot receive\nuser interactions but it keeps the same styles as if it were enabled.","defaultValue":{"value":"undefined","computed":true}},"isRequired":{"type":{"name":"bool"},"required":false,"description":"Whether or not the text input is required.","defaultValue":{"value":"false","computed":false}},"isInline":{"type":{"name":"bool"},"required":false,"description":"Whether the input is rendered inline with other elements or if it\nis rendered as a block level element.","defaultValue":{"value":"false","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"The width of the text input.","defaultValue":{"value":"undefined","computed":true}},"optionsMaxWidth":{"type":{"name":"string"},"required":false,"description":"The max width the options list can be before option text wraps. If not\nset, the list will only display as wide as the text input.","defaultValue":{"value":"undefined","computed":true}},"visibleOptionsCount":{"type":{"name":"number"},"required":false,"description":"The number of options that should be visible before having to scroll.","defaultValue":{"value":"8","computed":false}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"Displays messages and validation for the input. It should be an object\nwith the following shape:\n`{\n  text: PropTypes.string,\n  type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n}`","defaultValue":{"value":"undefined","computed":true}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"The placement of the options list.","defaultValue":{"value":"'bottom stretch'","computed":false}},"constrain":{"type":{"name":"custom","raw":"PositionPropTypes.constrain"},"required":false,"description":"The parent in which to constrain the placement.","defaultValue":{"value":"'window'","computed":false}},"mountNode":{"type":{"name":"custom","raw":"PositionPropTypes.mountNode"},"required":false,"description":"An element or a function returning an element to use mount the options\nlist to in the DOM (defaults to `document.body`)","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when a new option is selected.\n@param {Object} event - the event object\n@param {Object} data - additional data\n@param data.value - the value of selected option\n@param data.id - the id of the selected option","defaultValue":{"value":"(event, data) => {}","computed":false}},"onFocus":{"type":{"name":"func"},"required":false,"description":"Callback fired when text input receives focus.","defaultValue":{"value":"(event) => {}","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"Callback fired when text input loses focus.","defaultValue":{"value":"(event) => {}","computed":false}},"onShowOptions":{"type":{"name":"func"},"required":false,"description":"Callback fired when the options list is shown.","defaultValue":{"value":"(event) => {}","computed":false}},"onHideOptions":{"type":{"name":"func"},"required":false,"description":"Callback fired when the options list is hidden.","defaultValue":{"value":"(event) => {}","computed":false}},"inputRef":{"type":{"name":"func"},"required":false,"description":"A ref to the html `input` element.","defaultValue":{"value":"(node) => {}","computed":false}},"listRef":{"type":{"name":"func"},"required":false,"description":"A ref to the html `ul` element.","defaultValue":{"value":"(node) => {}","computed":false}},"renderEmptyOption":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display in the list when no options are available.","defaultValue":{"value":"'---'","computed":false}},"renderBeforeInput":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display before the text input. This will commonly be an icon.","defaultValue":{"value":"null","computed":false}},"renderAfterInput":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display after the text input. This content will replace the\ndefault arrow icons.","defaultValue":{"value":"null","computed":false}},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Group, Option])"},"required":false,"description":"Children of type `<SimpleSelect.Option />` or `<SimpleSelect.Group />`.","defaultValue":{"value":"null","computed":false}}},"category":"components","tags":"form, field, dropdown","order":"","relativePath":"packages/ui-simple-select/src/SimpleSelect/index.js","extension":".js","srcPath":"packages/ui-simple-select/src/SimpleSelect/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-simple-select/src/SimpleSelect/index.js","packageName":"@instructure/ui-simple-select","requirePath":"@instructure/ui-simple-select/lib/SimpleSelect","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-simple-select/src/SimpleSelect/index.js').default","esPath":"@instructure/ui-simple-select/es/SimpleSelect","id":"SimpleSelect","title":"SimpleSelect"},"Spinner":{"description":"","displayName":"Spinner","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"renderTitle":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"Give the spinner a title to be read by screenreaders","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"Different-sized spinners","defaultValue":{"value":"'medium'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"Different color schemes for use with light or dark backgrounds","defaultValue":{"value":"'default'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":"","defaultValue":{"value":"'div'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-spinner/src/Spinner/index.js","extension":".js","srcPath":"packages/ui-spinner/src/Spinner/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-spinner/src/Spinner/index.js","packageName":"@instructure/ui-spinner","requirePath":"@instructure/ui-spinner/lib/Spinner","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-spinner/src/Spinner/index.js').default","esPath":"@instructure/ui-spinner/es/Spinner","id":"Spinner","title":"Spinner"},"InlineSVG":{"description":"","displayName":"InlineSVG","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"src":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"title":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"description":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"focusable":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"To let the SVG expand to fill its container, use `auto`","defaultValue":{"value":"'1em'","computed":false}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"To let the SVG expand to fill its container, use `auto`","defaultValue":{"value":"'1em'","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"true","computed":false}},"color":{"type":{"name":"enum","value":[{"value":"'inherit'","computed":false},{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'secondary-inverse'","computed":false},{"value":"'success'","computed":false},{"value":"'error'","computed":false},{"value":"'alert'","computed":false},{"value":"'warning'","computed":false},{"value":"'brand'","computed":false},{"value":"'auto'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'inherit'","computed":false}}},"category":"components/utilities","order":"","relativePath":"packages/ui-svg-images/src/InlineSVG/index.js","extension":".js","srcPath":"packages/ui-svg-images/src/InlineSVG/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-svg-images/src/InlineSVG/index.js","packageName":"@instructure/ui-svg-images","requirePath":"@instructure/ui-svg-images/lib/InlineSVG","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-svg-images/src/InlineSVG/index.js').default","esPath":"@instructure/ui-svg-images/es/InlineSVG","id":"InlineSVG","title":"InlineSVG"},"SVGIcon":{"description":"","displayName":"SVGIcon","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"rotate":{"type":{"name":"enum","value":[{"value":"'0'","computed":false},{"value":"'90'","computed":false},{"value":"'180'","computed":false},{"value":"'270'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'0'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"bidirectional":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}}},"composes":["../InlineSVG"],"category":"components/utilities","order":"","relativePath":"packages/ui-svg-images/src/SVGIcon/index.js","extension":".js","srcPath":"packages/ui-svg-images/src/SVGIcon/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-svg-images/src/SVGIcon/index.js","packageName":"@instructure/ui-svg-images","requirePath":"@instructure/ui-svg-images/lib/SVGIcon","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-svg-images/src/SVGIcon/index.js').default","esPath":"@instructure/ui-svg-images/es/SVGIcon","id":"SVGIcon","title":"SVGIcon"},"Table":{"description":"","displayName":"Table","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"caption":{"type":{"name":"node"},"required":true,"description":"Provide a screen reader friendly description. Anything passed to this\nprop will be wrapped by `<ScreenReaderContent>` when it is rendered."},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Head, Body])"},"required":false,"description":"Build table via `Table.Head` and `Table.Body`","defaultValue":{"value":"null","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provide a reference to the underlying html element","defaultValue":{"value":"undefined","computed":true}},"hover":{"type":{"name":"bool"},"required":false,"description":"Highlight each row on hover","defaultValue":{"value":"false","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'fixed'","computed":false},{"value":"'stacked'","computed":false}]},"required":false,"description":"`auto` lets the browser determine table column widths based on cell content,\nwhile `fixed` forces columns of equal width. `stacked` renders table in one\ncolumn to be more readable on narrow screens","defaultValue":{"value":"'auto'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-table/src/Table/index.js","extension":".js","srcPath":"packages/ui-table/src/Table/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-table/src/Table/index.js","packageName":"@instructure/ui-table","requirePath":"@instructure/ui-table/lib/Table","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-table/src/Table/index.js').default","esPath":"@instructure/ui-table/es/Table","id":"Table","title":"Table"},"Tabs":{"description":"","displayName":"Tabs","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"Children.oneOf([Panel, null])"},"required":false,"description":"children of type `Tabs.Panel`","defaultValue":{"value":"null","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'secondary'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'default'","computed":false}},"screenReaderLabel":{"type":{"name":"string"},"required":false,"description":"A screen ready only label for the list of tabs","defaultValue":{"value":"undefined","computed":true}},"onRequestTabChange":{"type":{"name":"func"},"required":false,"description":"Called when the selected tab should change","defaultValue":{"value":"(event, { index, id }) => {}","computed":false}},"maxWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"maxHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"minHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `padding=\"small x-large large\"`.","defaultValue":{"value":"undefined","computed":true}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(el) => {}","computed":false}},"tabOverflow":{"type":{"name":"enum","value":[{"value":"'stack'","computed":false},{"value":"'scroll'","computed":false}]},"required":false,"description":"Choose whether Tabs should stack or scroll when they exceed the width of their\ncontainer.","defaultValue":{"value":"'stack'","computed":false}},"shouldFocusOnRender":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"dir":{"type":{"name":"enum","computed":true,"value":"Object.values(bidirectional.DIRECTION)"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-tabs/src/Tabs/index.js","extension":".js","srcPath":"packages/ui-tabs/src/Tabs/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tabs/src/Tabs/index.js","packageName":"@instructure/ui-tabs","requirePath":"@instructure/ui-tabs/lib/Tabs","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tabs/src/Tabs/index.js').default","esPath":"@instructure/ui-tabs/es/Tabs","id":"Tabs","title":"Tabs"},"Tag":{"description":"","displayName":"Tag","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"text":{"type":{"name":"union","value":[{"name":"string"},{"name":"node"}]},"required":true,"description":""},"title":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Whether or not to disable the tag","defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"Works just like disabled but keeps the same styles as if it were active","defaultValue":{"value":"false","computed":false}},"dismissible":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"onClick":{"type":{"name":"func"},"required":false,"description":"If you add an onClick prop, Tag renders as a clickable button","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the underlying html root element","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'default'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-tag/src/Tag/index.js","extension":".js","srcPath":"packages/ui-tag/src/Tag/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tag/src/Tag/index.js","packageName":"@instructure/ui-tag","requirePath":"@instructure/ui-tag/lib/Tag","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tag/src/Tag/index.js').default","esPath":"@instructure/ui-tag/es/Tag","id":"Tag","title":"Tag"},"Text":{"description":"","displayName":"Text","methods":[],"props":{"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'span'","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false},{"value":"'brand'","computed":false},{"value":"'success'","computed":false},{"value":"'warning'","computed":false},{"value":"'danger'","computed":false},{"value":"'alert'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'secondary-inverse'","computed":false}]},"required":false,"description":"Color of the text","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"fontStyle":{"type":{"name":"enum","value":[{"value":"'italic'","computed":false},{"value":"'normal'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"letterSpacing":{"type":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'condensed'","computed":false},{"value":"'expanded'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'normal'","computed":false}},"lineHeight":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'fit'","computed":false},{"value":"'condensed'","computed":false},{"value":"'double'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"'xx-large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"transform":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'capitalize'","computed":false},{"value":"'uppercase'","computed":false},{"value":"'lowercase'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"weight":{"type":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'light'","computed":false},{"value":"'bold'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"wrap":{"type":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'break-word'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'normal'","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-text/src/Text/index.js","extension":".js","srcPath":"packages/ui-text/src/Text/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text/src/Text/index.js","packageName":"@instructure/ui-text","requirePath":"@instructure/ui-text/lib/Text","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text/src/Text/index.js').default","esPath":"@instructure/ui-text/es/Text","id":"Text","title":"Text"},"TextArea":{"description":"","displayName":"TextArea","methods":[],"props":{"label":{"type":{"name":"node"},"required":true,"description":""},"id":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"sets the font-size for the textarea","defaultValue":{"value":"'medium'","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'stacked'","computed":false}},"autoGrow":{"type":{"name":"bool"},"required":false,"description":"the textarea will expand vertically to fit the height of the content,\nunless its content exceeds `maxHeight`","defaultValue":{"value":"true","computed":false}},"resize":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'both'","computed":false},{"value":"'horizontal'","computed":false},{"value":"'vertical'","computed":false}]},"required":false,"description":"is the textarea resizable (in supported browsers)","defaultValue":{"value":"'none'","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"a fixed width for the textarea","defaultValue":{"value":"undefined","computed":true}},"height":{"type":{"name":"string"},"required":false,"description":"Initial height for the textarea (if autoGrow is true it will grow vertically)\nAccepts CSS units, e.g. '55px'","defaultValue":{"value":"undefined","computed":true}},"maxHeight":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":"when autoGrow is true, the textarea will never grow beyond this value","defaultValue":{"value":"undefined","computed":true}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\ntext: PropTypes.string,\ntype: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n  }`","defaultValue":{"value":"[]","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Html placeholder text to display when the input has no value. This should be hint text, not a label\nreplacement.","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Whether or not to disable the textarea","defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"Works just like disabled but keeps the same styles as if it were active","defaultValue":{"value":"false","computed":false}},"required":{"type":{"name":"bool"},"required":false,"description":"Sets the required property on the underlying native textArea","defaultValue":{"value":"false","computed":false}},"textareaRef":{"type":{"name":"func"},"required":false,"description":"a function that provides a reference to the actual textarea element","defaultValue":{"value":"function (textarea) {}","computed":false}},"defaultValue":{"type":{"name":"string"},"required":false,"description":"value to set on initial render","defaultValue":{"value":"undefined","computed":true}},"value":{"type":{"name":"custom","raw":"controllable(PropTypes.string)"},"required":false,"description":"the selected value (must be accompanied by an `onChange` prop)","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"when used with the `value` prop, the component will not control its own state","defaultValue":{"value":"undefined","computed":true}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-text-area/src/TextArea/index.js","extension":".js","srcPath":"packages/ui-text-area/src/TextArea/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text-area/src/TextArea/index.js","packageName":"@instructure/ui-text-area","requirePath":"@instructure/ui-text-area/lib/TextArea","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text-area/src/TextArea/index.js').default","esPath":"@instructure/ui-text-area/es/TextArea","id":"TextArea","title":"TextArea"},"TextInput":{"description":"","displayName":"TextInput","methods":[],"props":{"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The form field label.","defaultValue":{"value":"undefined","computed":true}},"type":{"type":{"name":"enum","value":[{"value":"'text'","computed":false},{"value":"'email'","computed":false},{"value":"'url'","computed":false},{"value":"'tel'","computed":false},{"value":"'search'","computed":false},{"value":"'password'","computed":false}]},"required":false,"description":"Determines the underlying native HTML `<input>` element's `type`.\nFor more see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/url","defaultValue":{"value":"'text'","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"The id of the text input. One is generated if not supplied.","defaultValue":{"value":"undefined","computed":true}},"value":{"type":{"name":"custom","raw":"controllable(PropTypes.string)"},"required":false,"description":"the selected value (must be accompanied by an `onChange` prop)","defaultValue":{"value":"undefined","computed":true}},"defaultValue":{"type":{"name":"string"},"required":false,"description":"value to set on initial render","defaultValue":{"value":"undefined","computed":true}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the input is enabled, disabled, or readonly.\nWhen \"disabled\", the input changes visibly to indicate that it cannot\nreceive user interactions. When \"readonly\" the input still cannot receive\nuser interactions but it keeps the same styles as if it were enabled.","defaultValue":{"value":"undefined","computed":true}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"object with shape: `{\ntext: PropTypes.string,\ntype: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n  }`","defaultValue":{"value":"[]","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the text input.","defaultValue":{"value":"'medium'","computed":false}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false}]},"required":false,"description":"The text alignment of the input.","defaultValue":{"value":"'start'","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"The width of the input.","defaultValue":{"value":"undefined","computed":true}},"htmlSize":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The width of the input, in characters, if a width is not explicitly\nprovided via the `width` prop. Only applicable if `isInline={true}`.","defaultValue":{"value":"undefined","computed":true}},"display":{"type":{"name":"enum","value":[{"value":"'inline-block'","computed":false},{"value":"'block'","computed":false}]},"required":false,"description":"The display of the root element.","defaultValue":{"value":"'block'","computed":false}},"shouldNotWrap":{"type":{"name":"bool"},"required":false,"description":"Prevents the default behavior of wrapping the input and rendered content\nwhen available space is exceeded.","defaultValue":{"value":"false","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Html placeholder text to display when the input has no value. This should be hint text, not a label\nreplacement.","defaultValue":{"value":"undefined","computed":true}},"isRequired":{"type":{"name":"bool"},"required":false,"description":"Whether or not the text input is required.","defaultValue":{"value":"false","computed":false}},"inputRef":{"type":{"name":"func"},"required":false,"description":"a function that provides a reference to the actual input element","defaultValue":{"value":"function (input) {}","computed":false}},"inputContainerRef":{"type":{"name":"func"},"required":false,"description":"a function that provides a reference a parent of the input element","defaultValue":{"value":"function (container) {}","computed":false}},"renderBeforeInput":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display before the input text, such as an icon","defaultValue":{"value":"undefined","computed":true}},"renderAfterInput":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display after the input text, such as an icon","defaultValue":{"value":"undefined","computed":true}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback executed when the input fires a change event.\n@param {Object} event - the event object\n@param {Object} value - the string value of the input","defaultValue":{"value":"function (event, value) {}","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"Callback fired when input loses focus.","defaultValue":{"value":"function (event) {}","computed":false}},"onFocus":{"type":{"name":"func"},"required":false,"description":"Callback fired when input receives focus.","defaultValue":{"value":"function (event) {}","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","tags":"form, field","order":"","relativePath":"packages/ui-text-input/src/TextInput/index.js","extension":".js","srcPath":"packages/ui-text-input/src/TextInput/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text-input/src/TextInput/index.js","packageName":"@instructure/ui-text-input","requirePath":"@instructure/ui-text-input/lib/TextInput","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text-input/src/TextInput/index.js').default","esPath":"@instructure/ui-text-input/es/TextInput","id":"TextInput","title":"TextInput"},"TimeSelect":{"description":"","displayName":"TimeSelect","methods":[],"props":{"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"The form field label."},"defaultToFirstOption":{"type":{"name":"bool"},"required":false,"description":"Whether to default to the first option when `defaultValue` hasn't been specified.","defaultValue":{"value":"false","computed":false}},"value":{"type":{"name":"custom","raw":"controllable(I18nPropTypes.iso8601, 'onChange')"},"required":false,"description":"An ISO 8601 formatted date string representing the current selected value. If defined,\nthe component will act controlled and will not manage its own state.","defaultValue":{"value":"undefined","computed":true}},"defaultValue":{"type":{"name":"custom","raw":"I18nPropTypes.iso8601"},"required":false,"description":"An ISO 8601 formatted date string to use if `value` isn't provided.","defaultValue":{"value":"undefined","computed":true}},"id":{"type":{"name":"string"},"required":false,"description":"The id of the text input. One is generated if not supplied.","defaultValue":{"value":"undefined","computed":true}},"format":{"type":{"name":"string"},"required":false,"description":"The format to use when displaying the possible and currently selected options.\n\nSee [moment.js formats](https://momentjs.com/docs/#/displaying/format/) for the list of available formats.","defaultValue":{"value":"'LT'","computed":false}},"step":{"type":{"name":"enum","value":[{"value":"5","computed":false},{"value":"10","computed":false},{"value":"15","computed":false},{"value":"20","computed":false},{"value":"30","computed":false},{"value":"60","computed":false}]},"required":false,"description":"The number of minutes to increment by when generating the allowable options.","defaultValue":{"value":"30","computed":false}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false},{"value":"'readonly'","computed":false}]},"required":false,"description":"Specifies if interaction with the input is enabled, disabled, or readonly.\nWhen \"disabled\", the input changes visibly to indicate that it cannot\nreceive user interactions. When \"readonly\" the input still cannot receive\nuser interactions but it keeps the same styles as if it were enabled.","defaultValue":{"value":"undefined","computed":true}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Html placeholder text to display when the input has no value. This should\nbe hint text, not a label replacement.","defaultValue":{"value":"undefined","computed":true}},"isRequired":{"type":{"name":"bool"},"required":false,"description":"Whether or not the text input is required.","defaultValue":{"value":"false","computed":false}},"isInline":{"type":{"name":"bool"},"required":false,"description":"Whether the input is rendered inline with other elements or if it\nis rendered as a block level element.","defaultValue":{"value":"false","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"The width of the text input.","defaultValue":{"value":"undefined","computed":true}},"optionsMaxWidth":{"type":{"name":"string"},"required":false,"description":"The max width the options list can be before option text wraps. If not\nset, the list will only display as wide as the text input.","defaultValue":{"value":"undefined","computed":true}},"visibleOptionsCount":{"type":{"name":"number"},"required":false,"description":"The number of options that should be visible before having to scroll.","defaultValue":{"value":"8","computed":false}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"Displays messages and validation for the input. It should be an object\nwith the following shape:\n`{\n  text: PropTypes.string,\n  type: PropTypes.oneOf(['error', 'hint', 'success', 'screenreader-only'])\n}`","defaultValue":{"value":"undefined","computed":true}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"The placement of the options list.","defaultValue":{"value":"'bottom stretch'","computed":false}},"constrain":{"type":{"name":"custom","raw":"PositionPropTypes.constrain"},"required":false,"description":"The parent in which to constrain the placement.","defaultValue":{"value":"'window'","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"Callback fired when a new option is selected.\n@param {Object} event - the event object\n@param {Object} data - additional data\n@param data.value - the value of selected option","defaultValue":{"value":"(event, data) => {}","computed":false}},"onFocus":{"type":{"name":"func"},"required":false,"description":"Callback fired when text input receives focus.","defaultValue":{"value":"(event) => {}","computed":false}},"onBlur":{"type":{"name":"func"},"required":false,"description":"Callback fired when text input loses focus.","defaultValue":{"value":"(event) => {}","computed":false}},"onShowOptions":{"type":{"name":"func"},"required":false,"description":"Callback fired when the options list is shown.","defaultValue":{"value":"(event) => {}","computed":false}},"onHideOptions":{"type":{"name":"func"},"required":false,"description":"Callback fired when the options list is hidden.","defaultValue":{"value":"(event) => {}","computed":false}},"inputRef":{"type":{"name":"func"},"required":false,"description":"A ref to the html `input` element.","defaultValue":{"value":"(node) => {}","computed":false}},"listRef":{"type":{"name":"func"},"required":false,"description":"A ref to the html `ul` element.","defaultValue":{"value":"(node) => {}","computed":false}},"renderEmptyOption":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display in the list when no options are available.","defaultValue":{"value":"'---'","computed":false}},"renderBeforeInput":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display before the text input. This will commonly be an icon.","defaultValue":{"value":"null","computed":false}},"renderAfterInput":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display after the text input. This content will replace the\ndefault arrow icons.","defaultValue":{"value":"null","computed":false}},"locale":{"type":{"name":"string"},"required":false,"description":"A standard language identifier.\n\nSee [moment.js i18n](https://momentjs.com/docs/#/i18n/) for more details.\n\nThis property can also be set via a context property and if both are set then the component property takes\nprecedence over the context property.\n\nThe web browser's locale will be used if no value is set via a component property or a context\nproperty."},"timezone":{"type":{"name":"string"},"required":false,"description":"A timezone identifier in the format: Area/Location\n\nSee [List of tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for the list\nof possible options.\n\nThis property can also be set via a context property and if both are set then the component property takes\nprecedence over the context property.\n\nThe web browser's timezone will be used if no value is set via a component property or a context\nproperty."}},"category":"components","order":"","relativePath":"packages/ui-time-select/src/TimeSelect/index.js","extension":".js","srcPath":"packages/ui-time-select/src/TimeSelect/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-time-select/src/TimeSelect/index.js","packageName":"@instructure/ui-time-select","requirePath":"@instructure/ui-time-select/lib/TimeSelect","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-time-select/src/TimeSelect/index.js').default","esPath":"@instructure/ui-time-select/es/TimeSelect","id":"TimeSelect","title":"TimeSelect"},"ToggleDetails":{"description":"","displayName":"ToggleDetails","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'filled'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'default'","computed":false}},"summary":{"type":{"name":"node"},"required":true,"description":"The summary that displays and can be interacted with"},"expanded":{"type":{"name":"custom","raw":"controllable(PropTypes.bool, 'onToggle', 'defaultExpanded')"},"required":false,"description":"Whether the content is expanded or hidden","defaultValue":{"value":"undefined","computed":true}},"defaultExpanded":{"type":{"name":"bool"},"required":false,"description":"Whether the content is initially expanded or hidden (uncontrolled)","defaultValue":{"value":"false","computed":false}},"onToggle":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function (event, expanded) {}","computed":false}},"icon":{"type":{"name":"func"},"required":false,"description":"The icon to display next to the summary text when content is hidden","defaultValue":{"value":"IconArrowOpenEndSolid","computed":true}},"iconExpanded":{"type":{"name":"func"},"required":false,"description":"The icon to display when content is expanded","defaultValue":{"value":"IconArrowOpenDownSolid","computed":true}},"iconPosition":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Icon position at the start or end of the summary text","defaultValue":{"value":"'start'","computed":false}},"fluidWidth":{"type":{"name":"bool"},"required":false,"description":"should the summary fill the width of its container","defaultValue":{"value":"false","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"The toggleable content passed inside the ToggleDetails component","defaultValue":{"value":"null","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"Choose a size for the expand/collapse icon","defaultValue":{"value":"'medium'","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-toggle-details/src/ToggleDetails/index.js","extension":".js","srcPath":"packages/ui-toggle-details/src/ToggleDetails/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-toggle-details/src/ToggleDetails/index.js","packageName":"@instructure/ui-toggle-details","requirePath":"@instructure/ui-toggle-details/lib/ToggleDetails","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-toggle-details/src/ToggleDetails/index.js').default","esPath":"@instructure/ui-toggle-details/es/ToggleDetails","id":"ToggleDetails","title":"ToggleDetails"},"ToggleGroup":{"description":"","displayName":"ToggleGroup","methods":[],"props":{"children":{"type":{"name":"node"},"required":true,"description":"the content to show and hide"},"summary":{"type":{"name":"node"},"required":true,"description":"the content area next to the toggle button"},"toggleLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"provides a screenreader label for the toggle button\n(takes `expanded` as an argument if a function)"},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'span'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","defaultValue":{"value":"(el) => {}","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"expanded":{"type":{"name":"custom","raw":"controllable(PropTypes.bool, 'onToggle', 'defaultExpanded')"},"required":false,"description":"Whether the content is expanded or hidden","defaultValue":{"value":"undefined","computed":true}},"defaultExpanded":{"type":{"name":"bool"},"required":false,"description":"Whether the content is initially expanded or hidden (uncontrolled)","defaultValue":{"value":"false","computed":false}},"onToggle":{"type":{"name":"func"},"required":false,"description":"Fired when the content display is toggled","defaultValue":{"value":"function (event, expanded) {}","computed":false}},"icon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The icon displayed in the toggle button when the content is hidden","defaultValue":{"value":"IconArrowOpenEndSolid","computed":true}},"iconExpanded":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The icon displayed in the toggle button when the content is showing","defaultValue":{"value":"IconArrowOpenDownSolid","computed":true}},"transition":{"type":{"name":"bool"},"required":false,"description":"Transition content into view","defaultValue":{"value":"true","computed":false}},"border":{"type":{"name":"bool"},"required":false,"description":"Toggle the border around the component","defaultValue":{"value":"true","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-toggle-details/src/ToggleGroup/index.js","extension":".js","srcPath":"packages/ui-toggle-details/src/ToggleGroup/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-toggle-details/src/ToggleGroup/index.js","packageName":"@instructure/ui-toggle-details","requirePath":"@instructure/ui-toggle-details/lib/ToggleGroup","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-toggle-details/src/ToggleGroup/index.js').default","esPath":"@instructure/ui-toggle-details/es/ToggleGroup","id":"ToggleGroup","title":"ToggleGroup"},"Tooltip":{"description":"","displayName":"Tooltip","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"@param {Object} renderProps\n@param {Boolean} renderProps.focused - Is the Tooltip trigger focused?\n@param {Function} renderProps.getTriggerProps - Props to be spread onto the trigger element"},"renderTip":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"The content to render in the tooltip"},"isShowingContent":{"type":{"name":"bool"},"required":false,"description":"Whether or not the tooltip content is shown, when controlled","defaultValue":{"value":"undefined","computed":true}},"defaultIsShowingContent":{"type":{"name":"bool"},"required":false,"description":"Whether or not to show the content by default, when uncontrolled","defaultValue":{"value":"false","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as (assumes a single child if 'as' is undefined)"},"on":{"type":{"name":"union","value":[{"name":"enum","value":[{"value":"'click'","computed":false},{"value":"'hover'","computed":false},{"value":"'focus'","computed":false}]},{"name":"arrayOf","value":{"name":"enum","value":[{"value":"'click'","computed":false},{"value":"'hover'","computed":false},{"value":"'focus'","computed":false}]}}]},"required":false,"description":"The action that causes the Content to display (`click`, `hover`, `focus`)","defaultValue":{"value":"undefined","computed":true}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'primary-inverse'","computed":false}]},"required":false,"description":"The color of the tooltip content","defaultValue":{"value":"'primary'","computed":false}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"Specifies where the Tooltip will be placed in relation to the target element.\nEx. placement=\"bottom\" will render the Tooltip below the triggering element\n(Note: if there is not room, it will position opposite. Ex. \"top\" will\nautomatically switch to \"bottom\")","defaultValue":{"value":"'top'","computed":false}},"mountNode":{"type":{"name":"custom","raw":"PositionPropTypes.mountNode"},"required":false,"description":"An element or a function returning an element to use as the mount node\nfor the `<Tooltip />` (defaults to `document.body`)","defaultValue":{"value":"null","computed":false}},"constrain":{"type":{"name":"custom","raw":"PositionPropTypes.constrain"},"required":false,"description":"The parent in which to constrain the tooltip.\nOne of: 'window', 'scroll-parent', 'parent', 'none', an element,\nor a function returning an element","defaultValue":{"value":"'window'","computed":false}},"offsetX":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The horizontal offset for the positioned content","defaultValue":{"value":"0","computed":false}},"offsetY":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The vertical offset for the positioned content","defaultValue":{"value":"0","computed":false}},"positionTarget":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"Target element for positioning the Tooltip (if it differs from children/trigger)","defaultValue":{"value":"undefined","computed":true}},"onShowContent":{"type":{"name":"func"},"required":false,"description":"Callback fired when content is shown. When controlled, this callback is\nfired when the tooltip expects to be shown","defaultValue":{"value":"(event) => {}","computed":false}},"onHideContent":{"type":{"name":"func"},"required":false,"description":"Callback fired when content is hidden. When controlled, this callback is\nfired when the tooltip expects to be hidden","defaultValue":{"value":"(event, { documentClick }) => {}","computed":false}}},"category":"components","order":"","relativePath":"packages/ui-tooltip/src/Tooltip/index.js","extension":".js","srcPath":"packages/ui-tooltip/src/Tooltip/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tooltip/src/Tooltip/index.js","packageName":"@instructure/ui-tooltip","requirePath":"@instructure/ui-tooltip/lib/Tooltip","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tooltip/src/Tooltip/index.js').default","esPath":"@instructure/ui-tooltip/es/Tooltip","id":"Tooltip","title":"Tooltip"},"Tray":{"description":"","displayName":"Tray","methods":[],"props":{"label":{"type":{"name":"string"},"required":true,"description":""},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'regular'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'small'","computed":false}},"placement":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'bottom'","computed":false},{"value":"'start'","computed":false},{"value":"'end'","computed":false},{"value":"'center'","computed":false}]},"required":false,"description":"Placement to determine where the `<Tray />` should display in the viewport","defaultValue":{"value":"'start'","computed":false}},"open":{"type":{"name":"bool"},"required":false,"description":"Whether or not the `<Tray />` is open","defaultValue":{"value":"false","computed":false}},"defaultFocusElement":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to focus by default","defaultValue":{"value":"null","computed":false}},"contentRef":{"type":{"name":"func"},"required":false,"description":"A function that returns a reference to the content element","defaultValue":{"value":"(el) => {}","computed":false}},"shouldContainFocus":{"type":{"name":"bool"},"required":false,"description":"Whether focus should be contained within the `<Tray/>` when it is open","defaultValue":{"value":"true","computed":false}},"shouldReturnFocus":{"type":{"name":"bool"},"required":false,"description":"Whether focus should be restored when the `<Tray/>` is closed","defaultValue":{"value":"true","computed":false}},"shouldCloseOnDocumentClick":{"type":{"name":"bool"},"required":false,"description":"Should the `<Tray />` hide when clicks occur outside the content","defaultValue":{"value":"false","computed":false}},"onOpen":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Tray />` content has been mounted in the DOM","defaultValue":{"value":"(event) => {}","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Tray />` has been unmounted from the DOM","defaultValue":{"value":"(event) => {}","computed":false}},"onDismiss":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `<Tray />` is requesting to be closed","defaultValue":{"value":"(event) => {}","computed":false}},"mountNode":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to use as the mount node\nfor the `<Tray />` (defaults to `document.body`)","defaultValue":{"value":"null","computed":false}},"insertAt":{"type":{"name":"enum","value":[{"value":"'bottom'","computed":false},{"value":"'top'","computed":false}]},"required":false,"description":"Insert the element at the 'top' of the mountNode or at the 'bottom'","defaultValue":{"value":"'bottom'","computed":false}},"liveRegion":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"element"}},{"name":"element"},{"name":"func"}]},"required":false,"description":"An element, function returning an element, or array of elements that will not be hidden from\nthe screen reader when the `<Tray />` is open","defaultValue":{"value":"null","computed":false}},"onTransition":{"type":{"name":"func"},"required":false,"description":"Callback fired when the <Tray /> transitions in/out","defaultValue":{"value":"undefined","computed":true}},"onEnter":{"type":{"name":"func"},"required":false,"description":"Callback fired before the <Tray /> transitions in","defaultValue":{"value":"() => {}","computed":false}},"onEntering":{"type":{"name":"func"},"required":false,"description":"Callback fired as the <Tray /> begins to transition in","defaultValue":{"value":"() => {}","computed":false}},"onEntered":{"type":{"name":"func"},"required":false,"description":"Callback fired after the <Tray /> finishes transitioning in","defaultValue":{"value":"() => {}","computed":false}},"onExit":{"type":{"name":"func"},"required":false,"description":"Callback fired right before the <Tray /> transitions out","defaultValue":{"value":"() => {}","computed":false}},"onExiting":{"type":{"name":"func"},"required":false,"description":"Callback fired as the <Tray /> begins to transition out","defaultValue":{"value":"() => {}","computed":false}},"onExited":{"type":{"name":"func"},"required":false,"description":"Callback fired after the <Tray /> finishes transitioning out","defaultValue":{"value":"() => {}","computed":false}},"border":{"type":{"name":"bool"},"required":false,"description":"Should the `<Tray />` have a border","defaultValue":{"value":"false","computed":false}},"shadow":{"type":{"name":"bool"},"required":false,"description":"Should the `<Tray />` have a box shadow","defaultValue":{"value":"true","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"dir":{"type":{"name":"enum","computed":true,"value":"Object.values(bidirectional.DIRECTION)"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-tray/src/Tray/index.js","extension":".js","srcPath":"packages/ui-tray/src/Tray/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tray/src/Tray/index.js","packageName":"@instructure/ui-tray","requirePath":"@instructure/ui-tray/lib/Tray","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tray/src/Tray/index.js').default","esPath":"@instructure/ui-tray/es/Tray","id":"Tray","title":"Tray"},"TreeBrowser":{"description":"","displayName":"TreeBrowser","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"collections":{"type":{"name":"object"},"required":true,"description":"a normalized hash of collections, keyed by id, that contain an\n:id, :name, :items (an array of item ids), :collections (an array of\ncollection ids), optional :descriptor text, optional :containerRef function,\nan optional :renderBeforeItems TreeNode, and an optional :renderAfterItems TreeNode.\nEach collection must have a unique id."},"items":{"type":{"name":"object"},"required":true,"description":"a hash of items, keyed by id, that contain an :id, :name,\noptional :descriptor text, and optional :thumbnail url"},"rootId":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"specifies the id of the root level collection, if present.\nif no root is specified, all collections will be rendered\nat the top level","defaultValue":{"value":"undefined","computed":true}},"expanded":{"type":{"name":"custom","raw":"controllable(\n  PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  'onCollectionToggle'\n)"},"required":false,"description":"an array of expanded collection ids, must be accompanied by an 'onCollectionToggle' prop","defaultValue":{"value":"undefined","computed":true}},"defaultExpanded":{"type":{"name":"arrayOf","value":{"name":"union","value":[{"name":"string"},{"name":"number"}]}},"required":false,"description":"an array of collection ids to expand by default","defaultValue":{"value":"[]","computed":false}},"selectionType":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'single'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'none'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'folderTree'","computed":false},{"value":"'indent'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'folderTree'","computed":false}},"collectionIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"IconFolderLine","computed":true}},"collectionIconExpanded":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"IconFolderLine","computed":true}},"itemIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"IconDocumentLine","computed":true}},"getItemProps":{"type":{"name":"func"},"required":false,"description":"A function called with each item's props as an argument. The return value of this function is a\nprops object which will be passed to the item when it is rendered. This is useful for situations where\nyou need to render the item differently depending on it's props. For example, if you would like to\ndisplay a different icon for items with a certain name.","defaultValue":{"value":"(props) => props","computed":false}},"getCollectionProps":{"type":{"name":"func"},"required":false,"description":"A function called with each collection's props as an argument. The return value of this function is a\nprops object which will be passed to the collection when it is rendered. This is useful for situations where\nyou need to render the collection differently depending on it's props. For example, if you would like to\ndisplay a different icon for collections with a certain name.","defaultValue":{"value":"(props) => props","computed":false}},"showRootCollection":{"type":{"name":"bool"},"required":false,"description":"whether or not to show the root collection specified in rootId prop or\nto begin with its immediate subcollections and items instead","defaultValue":{"value":"true","computed":false}},"onCollectionClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function (id, collection) {}","computed":false}},"onCollectionToggle":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function (collection) {}","computed":false}},"onItemClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function (item) {}","computed":false}},"treeLabel":{"type":{"name":"string"},"required":false,"description":"An optional label to assist visually impaired users","defaultValue":{"value":"undefined","computed":true}},"renderContent":{"type":{"name":"func"},"required":false,"description":"A function that can be used to customize content in TreeNodes. It gets called for every node\non every render if not null. It should accept 1 parameter that contains the props passed to this node\nand return the JSX that should be rendered.","defaultValue":{"value":"undefined","computed":true}}},"category":"components","order":"","relativePath":"packages/ui-tree-browser/src/TreeBrowser/index.js","extension":".js","srcPath":"packages/ui-tree-browser/src/TreeBrowser/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tree-browser/src/TreeBrowser/index.js","packageName":"@instructure/ui-tree-browser","requirePath":"@instructure/ui-tree-browser/lib/TreeBrowser","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tree-browser/src/TreeBrowser/index.js').default","esPath":"@instructure/ui-tree-browser/es/TreeBrowser","id":"TreeBrowser","title":"TreeBrowser"},"TruncateText":{"description":"","displayName":"TruncateText","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":true,"description":"The content to be truncated."},"maxLines":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Number of lines to allow before truncating. `auto` will fit to parent","defaultValue":{"value":"1","computed":false}},"position":{"type":{"name":"enum","value":[{"value":"'end'","computed":false},{"value":"'middle'","computed":false}]},"required":false,"description":"Where to place the ellipsis within the string","defaultValue":{"value":"'end'","computed":false}},"truncate":{"type":{"name":"enum","value":[{"value":"'character'","computed":false},{"value":"'word'","computed":false}]},"required":false,"description":"Add ellipsis after words or after any character","defaultValue":{"value":"'character'","computed":false}},"ellipsis":{"type":{"name":"string"},"required":false,"description":"A string to use as the ellipsis","defaultValue":{"value":"'\\u2026'","computed":false}},"ignore":{"type":{"name":"arrayOf","value":{"name":"string"}},"required":false,"description":"Characters to ignore at truncated end of string","defaultValue":{"value":"[' ', '.', ',']","computed":false}},"debounce":{"type":{"name":"number"},"required":false,"description":"Debounce delay in milliseconds","defaultValue":{"value":"0","computed":false}},"onUpdate":{"type":{"name":"func"},"required":false,"description":"Callback when truncated text has changed","defaultValue":{"value":"(truncated, text) => {}","computed":false}},"shouldTruncateWhenInvisible":{"type":{"name":"bool"},"required":false,"description":"Force truncation of invisible elements (hack; will be removed in favor\nof a better fix)"}},"category":"components","order":"","relativePath":"packages/ui-truncate-text/src/TruncateText/index.js","extension":".js","srcPath":"packages/ui-truncate-text/src/TruncateText/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-truncate-text/src/TruncateText/index.js","packageName":"@instructure/ui-truncate-text","requirePath":"@instructure/ui-truncate-text/lib/TruncateText","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-truncate-text/src/TruncateText/index.js').default","esPath":"@instructure/ui-truncate-text/es/TruncateText","id":"TruncateText","title":"TruncateText"},"ContextView":{"description":"","displayName":"ContextView","methods":[],"props":{"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root","defaultValue":{"value":"'span'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","defaultValue":{"value":"(el) => {}","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `padding=\"small x-large large\"`.","defaultValue":{"value":"undefined","computed":true}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"'auto'","computed":false}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"'auto'","computed":false}},"maxHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"maxWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"minHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"minWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"node"},"required":false,"description":"The children to render inside the `<ContextView />`","defaultValue":{"value":"null","computed":false}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Designates the text alignment within the `<ContextView />`","defaultValue":{"value":"'start'","computed":false}},"shadow":{"type":{"name":"custom","raw":"ThemeablePropTypes.shadow"},"required":false,"description":"Controls the shadow depth for the `<ContextView />`","defaultValue":{"value":"'resting'","computed":false}},"stacking":{"type":{"name":"custom","raw":"ThemeablePropTypes.stacking"},"required":false,"description":"Controls the z-index depth for the `<ContextView />`","defaultValue":{"value":"undefined","computed":true}},"background":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"Designates the background style of the `<ContextView />`","defaultValue":{"value":"'default'","computed":false}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"Specifies how the arrow for `<ContextView />` will be rendered.\nEx. `placement=\"top\"` will render with an arrow pointing down.","defaultValue":{"value":"'center end'","computed":false}},"debug":{"type":{"name":"bool"},"required":false,"description":"Activate an outline around the component to make building your\nlayout easier","defaultValue":{"value":"false","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-view/src/ContextView/index.js","extension":".js","srcPath":"packages/ui-view/src/ContextView/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-view/src/ContextView/index.js","packageName":"@instructure/ui-view","requirePath":"@instructure/ui-view/lib/ContextView","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-view/src/ContextView/index.js').default","esPath":"@instructure/ui-view/es/ContextView","id":"ContextView","title":"ContextView"},"View":{"description":"@module View","displayName":"View","methods":[],"props":{"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root, `span` by default","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html element","defaultValue":{"value":"undefined","computed":true}},"display":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'inline'","computed":false},{"value":"'block'","computed":false},{"value":"'inline-block'","computed":false},{"value":"'flex'","computed":false},{"value":"'inline-flex'","computed":false}]},"required":false,"description":"By default the display prop is 'auto', meaning it takes on the\ndisplay rules of the html element it's rendered as (see `as` prop).","defaultValue":{"value":"'auto'","computed":false}},"overflowX":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'hidden'","computed":false},{"value":"'visible'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'visible'","computed":false}},"overflowY":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'hidden'","computed":false},{"value":"'visible'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'visible'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `padding=\"small x-large large\"`.","defaultValue":{"value":"undefined","computed":true}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"maxHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"maxWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"minHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"minWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"node"},"required":false,"description":"The children to render inside the `<View />`","defaultValue":{"value":"null","computed":false}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Designates the text alignment within the `<View />`","defaultValue":{"value":"undefined","computed":true}},"borderWidth":{"type":{"name":"custom","raw":"ThemeablePropTypes.borderWidth"},"required":false,"description":"Accepts the familiar CSS shorthand to designate border widths corresponding\nto edges","defaultValue":{"value":"undefined","computed":true}},"borderRadius":{"type":{"name":"custom","raw":"ThemeablePropTypes.borderRadius"},"required":false,"description":"Accepts `small`, `medium`, `large`, `circle`, and `pill`. Border radius can be\nassigned to individual corners in CSS shorthand style (e.g., `\"medium large none pill\"`).","defaultValue":{"value":"undefined","computed":true}},"borderColor":{"type":{"name":"enum","value":[{"value":"'transparent'","computed":false},{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false},{"value":"'brand'","computed":false},{"value":"'info'","computed":false},{"value":"'success'","computed":false},{"value":"'warning'","computed":false},{"value":"'alert'","computed":false},{"value":"'danger'","computed":false}]},"required":false,"description":"Sets the color of the View border","defaultValue":{"value":"'primary'","computed":false}},"background":{"type":{"name":"enum","value":[{"value":"'transparent'","computed":false},{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'brand'","computed":false},{"value":"'info'","computed":false},{"value":"'alert'","computed":false},{"value":"'success'","computed":false},{"value":"'danger'","computed":false},{"value":"'warning'","computed":false}]},"required":false,"description":"Designates the background style of the `<View />`","defaultValue":{"value":"undefined","computed":true}},"shadow":{"type":{"name":"custom","raw":"ThemeablePropTypes.shadow"},"required":false,"description":"Controls the shadow depth for the `<View />`","defaultValue":{"value":"undefined","computed":true}},"stacking":{"type":{"name":"custom","raw":"ThemeablePropTypes.stacking"},"required":false,"description":"Controls the z-index depth for the `<View />`","defaultValue":{"value":"undefined","computed":true}},"cursor":{"type":{"name":"custom","raw":"cursorPropTypes"},"required":false,"description":"Specify a mouse cursor to use when hovering over the `<View />`","defaultValue":{"value":"undefined","computed":true}},"position":{"type":{"name":"enum","value":[{"value":"'static'","computed":false},{"value":"'absolute'","computed":false},{"value":"'relative'","computed":false},{"value":"'sticky'","computed":false},{"value":"'fixed'","computed":false}]},"required":false,"description":"Specify a value for the CSS position property. Use `relative` if `focusable` will be true.","defaultValue":{"value":"'static'","computed":false}},"insetInlineStart":{"type":{"name":"string"},"required":false,"description":"The `left` CSS property in left-to-right interfaces. Will not do anything if `position === \"static\"`.","defaultValue":{"value":"undefined","computed":true}},"insetInlineEnd":{"type":{"name":"string"},"required":false,"description":"The `right` CSS property in left-to-right interfaces. Will not do anything if `position === \"static\"`.","defaultValue":{"value":"undefined","computed":true}},"insetBlockStart":{"type":{"name":"string"},"required":false,"description":"The `top` CSS property. Will not do anything if `position === \"static\"`.","defaultValue":{"value":"undefined","computed":true}},"insetBlockEnd":{"type":{"name":"string"},"required":false,"description":"The `bottom` CSS property. Will not do anything if `position === \"static\"`.","defaultValue":{"value":"undefined","computed":true}},"withFocusOutline":{"type":{"name":"bool"},"required":false,"description":"Manually control if the `View` should display a focus outline. When left undefined (which is the default)\nthe focus outline will display automatically if the `View` is focusable and receives focus. Note: the focus\noutline only will display when the `position` prop is set to `relative`.","defaultValue":{"value":"undefined","computed":true}},"focusPosition":{"type":{"name":"enum","value":[{"value":"'offset'","computed":false},{"value":"'inset'","computed":false}]},"required":false,"description":"Determines whether the focus outline displays offset or inset from the focused View","defaultValue":{"value":"'offset'","computed":false}},"focusColor":{"type":{"name":"enum","value":[{"value":"'info'","computed":false},{"value":"'inverse'","computed":false},{"value":"'success'","computed":false},{"value":"'danger'","computed":false}]},"required":false,"description":"Determines the color of the focus outline","defaultValue":{"value":"'info'","computed":false}},"shouldAnimateFocus":{"type":{"name":"bool"},"required":false,"description":"Determines if the focus ring should animate when it appears","defaultValue":{"value":"true","computed":false}},"withVisualDebug":{"type":{"name":"bool"},"required":false,"description":"Activate a dotted outline around the component to make building your\nlayout easier","defaultValue":{"value":"false","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"dir":{"type":{"name":"enum","computed":true,"value":"Object.values(bidirectional.DIRECTION)"},"required":false,"description":""}},"category":"components","order":"","relativePath":"packages/ui-view/src/View/index.js","extension":".js","srcPath":"packages/ui-view/src/View/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-view/src/View/index.js","packageName":"@instructure/ui-view","requirePath":"@instructure/ui-view/lib/View","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-view/src/View/index.js').default","esPath":"@instructure/ui-view/es/View","id":"View","title":"View"},"Breadcrumb.Link":{"description":"","displayName":"BreadcrumbLink","methods":[],"props":{"children":{"type":{"name":"node"},"required":true,"description":"Content to render as the crumb, generally should be text."},"href":{"type":{"name":"string"},"required":false,"description":"Link the crumb should direct to; if an href is provided, the crumb will render as a link","defaultValue":{"value":"undefined","computed":true}},"onClick":{"type":{"name":"func"},"required":false,"description":"If the Breadcrumb.Link has an onClick prop (and no href), it will render as a button","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"Sets the font-size of the breadcrumb text","defaultValue":{"value":"undefined","computed":true}},"renderIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Add an icon to the Breadcrumb.Link","defaultValue":{"value":"undefined","computed":true}},"iconPlacement":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Place the icon before or after the text in the Breadcrumb.Link","defaultValue":{"value":"undefined","computed":true}}},"parent":"Breadcrumb","id":"Breadcrumb.Link","order":"","relativePath":"packages/ui-breadcrumb/src/Breadcrumb/BreadcrumbLink/index.js","extension":".js","srcPath":"packages/ui-breadcrumb/src/Breadcrumb/BreadcrumbLink/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-breadcrumb/src/Breadcrumb/BreadcrumbLink/index.js","packageName":"@instructure/ui-breadcrumb","requirePath":"@instructure/ui-breadcrumb/lib/Breadcrumb/BreadcrumbLink","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-breadcrumb/src/Breadcrumb/BreadcrumbLink/index.js').default","esPath":"@instructure/ui-breadcrumb/es/Breadcrumb/BreadcrumbLink","title":"Breadcrumb.Link"},"Calendar.Day":{"description":"","displayName":"Day","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The rendered representation of the corresponding date.","defaultValue":{"value":"null","computed":false}},"date":{"type":{"name":"custom","raw":"I18nPropTypes.iso8601.isRequired"},"required":false,"description":"An ISO 8601 formatted string representing the date corresponding to\nthis `<Calendar.Day />`"},"label":{"type":{"name":"string"},"required":true,"description":"Accessible label to provide more context for the date to assistive\ntechnologies. This should consist of more than just a numerical date value.\nIt should also include the month and the year. Ex. instead of just `1`,\nprovide `1 August 2019`."},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false}]},"required":false,"description":"Is the `<Calendar.Day />` disabled","defaultValue":{"value":"'enabled'","computed":false}},"isSelected":{"type":{"name":"bool"},"required":false,"description":"Is the `<Calendar.Day />` selected","defaultValue":{"value":"false","computed":false}},"isToday":{"type":{"name":"bool"},"required":false,"description":"Is the `<Calendar.Day />` today","defaultValue":{"value":"false","computed":false}},"isOutsideMonth":{"type":{"name":"bool"},"required":false,"description":"Is the `<Calendar.Day />` located outside the current rendered month","defaultValue":{"value":"false","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback fired on click.\n@param {Object} event - the click event\n@param {Object} data - additional data\n@param data.date - the date of the corresponding `<Calendar.Day />`","defaultValue":{"value":"undefined","computed":true}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"Callback fired on key down.\n@param {Object} event - the key down event\n@param {Object} data - additional data\n@param data.date - the date of the corresponding `<Calendar.Day />`","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"type":{"name":"func"},"required":false,"description":"A ref function for the underlying DOM element.","defaultValue":{"value":"(el) => {}","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as"}},"parent":"Calendar","id":"Calendar.Day","order":"","relativePath":"packages/ui-calendar/src/Calendar/Day/index.js","extension":".js","srcPath":"packages/ui-calendar/src/Calendar/Day/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-calendar/src/Calendar/Day/index.js","packageName":"@instructure/ui-calendar","requirePath":"@instructure/ui-calendar/lib/Calendar/Day","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-calendar/src/Calendar/Day/index.js').default","esPath":"@instructure/ui-calendar/es/Calendar/Day","title":"Calendar.Day"},"CheckboxFacade":{"description":"","displayName":"CheckboxFacade","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":true,"description":""},"checked":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"focused":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"hovered":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"indeterminate":{"type":{"name":"bool"},"required":false,"description":"Visual state showing that child checkboxes are a combination of checked and unchecked","defaultValue":{"value":"false","computed":false}}},"parent":"Checkbox","order":"","relativePath":"packages/ui-checkbox/src/Checkbox/CheckboxFacade/index.js","extension":".js","srcPath":"packages/ui-checkbox/src/Checkbox/CheckboxFacade/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-checkbox/src/Checkbox/CheckboxFacade/index.js","packageName":"@instructure/ui-checkbox","requirePath":"@instructure/ui-checkbox/lib/Checkbox/CheckboxFacade","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-checkbox/src/Checkbox/CheckboxFacade/index.js').default","esPath":"@instructure/ui-checkbox/es/Checkbox/CheckboxFacade","id":"CheckboxFacade","title":"CheckboxFacade"},"ToggleFacade":{"description":"","displayName":"ToggleFacade","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":true,"description":""},"checked":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"focused":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"labelPlacement":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'start'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'end'","computed":false}}},"parent":"Checkbox","order":"","relativePath":"packages/ui-checkbox/src/Checkbox/ToggleFacade/index.js","extension":".js","srcPath":"packages/ui-checkbox/src/Checkbox/ToggleFacade/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-checkbox/src/Checkbox/ToggleFacade/index.js","packageName":"@instructure/ui-checkbox","requirePath":"@instructure/ui-checkbox/lib/Checkbox/ToggleFacade","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-checkbox/src/Checkbox/ToggleFacade/index.js').default","esPath":"@instructure/ui-checkbox/es/Checkbox/ToggleFacade","id":"ToggleFacade","title":"ToggleFacade"},"DrawerLayout.Content":{"description":"","displayName":"DrawerContent","methods":[],"props":{"label":{"type":{"name":"string"},"required":true,"description":""},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"contentRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(node) => {}","computed":false}},"onSizeChange":{"type":{"name":"func"},"required":false,"description":"Callback fired whenever the `<DrawerLayout.Content />` changes size","defaultValue":{"value":"(size) => {}","computed":false}},"role":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"'region'","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"parent":"DrawerLayout","id":"DrawerLayout.Content","order":"","relativePath":"packages/ui-drawer-layout/src/DrawerLayout/DrawerContent/index.js","extension":".js","srcPath":"packages/ui-drawer-layout/src/DrawerLayout/DrawerContent/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drawer-layout/src/DrawerLayout/DrawerContent/index.js","packageName":"@instructure/ui-drawer-layout","requirePath":"@instructure/ui-drawer-layout/lib/DrawerLayout/DrawerContent","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-drawer-layout/src/DrawerLayout/DrawerContent/index.js').default","esPath":"@instructure/ui-drawer-layout/es/DrawerLayout/DrawerContent","title":"DrawerLayout.Content"},"DrawerLayout.Tray":{"description":"","displayName":"DrawerTray","methods":[],"props":{"label":{"type":{"name":"string"},"required":true,"description":""},"children":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"render":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"placement":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Placement of the `<DrawerLayout.Tray />`","defaultValue":{"value":"'start'","computed":false}},"open":{"type":{"name":"bool"},"required":false,"description":"If the tray is open or closed.","defaultValue":{"value":"false","computed":false}},"onOpen":{"type":{"name":"func"},"required":false,"description":"Called when the `<DrawerLayout.Tray />` is opened","defaultValue":{"value":"() => {}","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"Called when the `<DrawerLayout.Tray />` is closed","defaultValue":{"value":"undefined","computed":true}},"border":{"type":{"name":"bool"},"required":false,"description":"Should the `<DrawerLayout.Tray />` have a border","defaultValue":{"value":"true","computed":false}},"shadow":{"type":{"name":"bool"},"required":false,"description":"Should the `<DrawerLayout.Tray />` have a shadow","defaultValue":{"value":"true","computed":false}},"onTransition":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `<DrawerLayout.Tray />` transitions in/out","defaultValue":{"value":"undefined","computed":true}},"onEnter":{"type":{"name":"func"},"required":false,"description":"Callback fired before the `<DrawerLayout.Tray />` transitions in","defaultValue":{"value":"() => {}","computed":false}},"onEntering":{"type":{"name":"func"},"required":false,"description":"Callback fired as the `<DrawerLayout.Tray />` begins to transition in","defaultValue":{"value":"() => {}","computed":false}},"onEntered":{"type":{"name":"func"},"required":false,"description":"Callback fired after the `<DrawerLayout.Tray />` finishes transitioning in","defaultValue":{"value":"() => {}","computed":false}},"onExit":{"type":{"name":"func"},"required":false,"description":"Callback fired right before the `<DrawerLayout.Tray />` transitions out","defaultValue":{"value":"() => {}","computed":false}},"onExiting":{"type":{"name":"func"},"required":false,"description":"Callback fired as the `<DrawerLayout.Tray />` begins to transition out","defaultValue":{"value":"() => {}","computed":false}},"onExited":{"type":{"name":"func"},"required":false,"description":"Callback fired after the `<DrawerLayout.Tray />` finishes transitioning out","defaultValue":{"value":"() => {}","computed":false}},"contentRef":{"type":{"name":"func"},"required":false,"description":"Ref function for the `<DrawerLayout.Tray />` content","defaultValue":{"value":"(node) => {}","computed":false}},"mountNode":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to use as the mount node\nfor the `<DrawerLayout.Tray />` when tray is overlaying content","defaultValue":{"value":"null","computed":false}},"defaultFocusElement":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to focus by default","defaultValue":{"value":"undefined","computed":true}},"liveRegion":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"element"}},{"name":"element"},{"name":"func"}]},"required":false,"description":"An element, function returning an element, or array of elements that will not be hidden from\nthe screen reader when the `<DrawerLayout.Tray />` is open","defaultValue":{"value":"undefined","computed":true}},"onDismiss":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"shouldContainFocus":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"true","computed":false}},"shouldReturnFocus":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"true","computed":false}},"shouldCloseOnDocumentClick":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"true","computed":false}},"shouldCloseOnEscape":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"true","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"dir":{"type":{"name":"enum","computed":true,"value":"Object.values(bidirectional.DIRECTION)"},"required":false,"description":""}},"parent":"DrawerLayout","id":"DrawerLayout.Tray","order":"","relativePath":"packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/index.js","extension":".js","srcPath":"packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/index.js","packageName":"@instructure/ui-drawer-layout","requirePath":"@instructure/ui-drawer-layout/lib/DrawerLayout/DrawerTray","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/index.js').default","esPath":"@instructure/ui-drawer-layout/es/DrawerLayout/DrawerTray","title":"DrawerLayout.Tray"},"Flex.Item":{"description":"","displayName":"Item","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":false,"description":"The children to render inside the Item`"},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","defaultValue":{"value":"'span'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","defaultValue":{"value":"(el) => {}","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`."},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `padding=\"small x-large large\"`."},"align":{"type":{"name":"enum","value":[{"value":"'center'","computed":false},{"value":"'start'","computed":false},{"value":"'end'","computed":false},{"value":"'stretch'","computed":false}]},"required":false,"description":"overrides the parent Flex's alignItems prop, if needed"},"direction":{"type":{"name":"enum","value":[{"value":"'row'","computed":false},{"value":"'column'","computed":false}]},"required":false,"description":"Inherits from the parent Flex component"},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Designates the text alignment inside the Item"},"overflowX":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'hidden'","computed":false},{"value":"'visible'","computed":false}]},"required":false,"description":"Handles horizontal overflow"},"overflowY":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'hidden'","computed":false},{"value":"'visible'","computed":false}]},"required":false,"description":"Handles vertical overflow"},"shouldGrow":{"type":{"name":"bool"},"required":false,"description":"Should the FlexItem grow to fill any available space?","defaultValue":{"value":"false","computed":false}},"shouldShrink":{"type":{"name":"bool"},"required":false,"description":"Should the FlexItem shrink (stopping at its `size`)?","defaultValue":{"value":"false","computed":false}},"size":{"type":{"name":"string"},"required":false,"description":"Sets the base size of the FlexItem (width if direction is `row`; height if direction is `column`)"},"withVisualDebug":{"type":{"name":"bool"},"required":false,"description":"Places dashed lines around the component's borders to help debug your layout"}},"parent":"Flex","id":"Flex.Item","order":"","relativePath":"packages/ui-flex/src/Flex/Item/index.js","extension":".js","srcPath":"packages/ui-flex/src/Flex/Item/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-flex/src/Flex/Item/index.js","packageName":"@instructure/ui-flex","requirePath":"@instructure/ui-flex/lib/Flex/Item","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-flex/src/Flex/Item/index.js').default","esPath":"@instructure/ui-flex/es/Flex/Item","title":"Flex.Item"},"InlineList.Item":{"description":"","displayName":"InlineListItem","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":""},"delimiter":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'pipe'","computed":false},{"value":"'slash'","computed":false},{"value":"'arrow'","computed":false}]},"required":false,"description":"Inherits delimiter from the parent InlineList component","defaultValue":{"value":"'none'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `padding=\"small x-large large\"`.","defaultValue":{"value":"'none'","computed":false}},"spacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'xxx-small'","computed":false},{"value":"'xx-small'","computed":false},{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"'xx-large'","computed":false}]},"required":false,"description":"Inherits itemSpacing from the parent InlineList component","defaultValue":{"value":"'none'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(el) => {}","computed":false}}},"parent":"InlineList","id":"InlineList.Item","order":"","relativePath":"packages/ui-list/src/InlineList/InlineListItem/index.js","extension":".js","srcPath":"packages/ui-list/src/InlineList/InlineListItem/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-list/src/InlineList/InlineListItem/index.js","packageName":"@instructure/ui-list","requirePath":"@instructure/ui-list/lib/InlineList/InlineListItem","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-list/src/InlineList/InlineListItem/index.js').default","esPath":"@instructure/ui-list/es/InlineList/InlineListItem","title":"InlineList.Item"},"List.Item":{"description":"","displayName":"ListItem","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":""},"delimiter":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'dashed'","computed":false},{"value":"'solid'","computed":false}]},"required":false,"description":"Inherits delimiter from the parent List component.","defaultValue":{"value":"'none'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"undefined","computed":true}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `padding=\"small x-large large\"`.","defaultValue":{"value":"'none'","computed":false}},"spacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'xxx-small'","computed":false},{"value":"'xx-small'","computed":false},{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"'xx-large'","computed":false}]},"required":false,"description":"Inherits itemSpacing from the parent List component","defaultValue":{"value":"'none'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(el) => {}","computed":false}}},"parent":"List","id":"List.Item","order":"","relativePath":"packages/ui-list/src/List/ListItem/index.js","extension":".js","srcPath":"packages/ui-list/src/List/ListItem/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-list/src/List/ListItem/index.js","packageName":"@instructure/ui-list","requirePath":"@instructure/ui-list/lib/List/ListItem","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-list/src/List/ListItem/index.js').default","esPath":"@instructure/ui-list/es/List/ListItem","title":"List.Item"},"Menu.Item":{"description":"","displayName":"MenuItem","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"node"},"required":true,"description":""},"defaultSelected":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"selected":{"type":{"name":"custom","raw":"controllable(PropTypes.bool, 'onSelect', 'defaultSelected')"},"required":false,"description":"whether the menu item is selected or not (must be accompanied by an `onSelect` prop)","defaultValue":{"value":"undefined","computed":true}},"onSelect":{"type":{"name":"func"},"required":false,"description":"when used with the `selected` prop, the component will not control its own state","defaultValue":{"value":"function (e, value, selected, item) {}","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onKeyUp":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onMouseOver":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"controls":{"type":{"name":"string"},"required":false,"description":"the id of the element that the menu item will act upon","defaultValue":{"value":"undefined","computed":true}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as (will default to `<a>` if href is provided)"},"type":{"type":{"name":"enum","value":[{"value":"'button'","computed":false},{"value":"'checkbox'","computed":false},{"value":"'radio'","computed":false},{"value":"'flyout'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'button'","computed":false}},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"href":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"parent":"Menu","id":"Menu.Item","order":"","relativePath":"packages/ui-menu/src/Menu/MenuItem/index.js","extension":".js","srcPath":"packages/ui-menu/src/Menu/MenuItem/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-menu/src/Menu/MenuItem/index.js","packageName":"@instructure/ui-menu","requirePath":"@instructure/ui-menu/lib/Menu/MenuItem","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-menu/src/Menu/MenuItem/index.js').default","esPath":"@instructure/ui-menu/es/Menu/MenuItem","title":"Menu.Item"},"Menu.Group":{"description":"","displayName":"MenuItemGroup","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"label":{"type":{"name":"node"},"required":true,"description":""},"allowMultiple":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([MenuItem, MenuItemSeparator])"},"required":false,"description":"children of type `Menu.Item`, `Menu.Separator`","defaultValue":{"value":"null","computed":false}},"selected":{"type":{"name":"custom","raw":"controllable(PropTypes.array, 'onSelect', 'defaultSelected')"},"required":false,"description":"an array of the values (or indeces by default) for the selected items","defaultValue":{"value":"undefined","computed":true}},"defaultSelected":{"type":{"name":"array"},"required":false,"description":"an array of the values (or indeces by default) for the selected items on initial render","defaultValue":{"value":"[]","computed":false}},"onSelect":{"type":{"name":"func"},"required":false,"description":"call this function when a menu item is selected","defaultValue":{"value":"function (e, value, selected, item) {}","computed":false}},"onMouseOver":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"controls":{"type":{"name":"string"},"required":false,"description":"the id of the element that the menu items will act upon","defaultValue":{"value":"undefined","computed":true}},"itemRef":{"type":{"name":"func"},"required":false,"description":"returns a reference to the `MenuItem`","defaultValue":{"value":"function (item) {}","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"isTabbable":{"type":{"name":"bool"},"required":false,"description":"should the group appear in the tab order (the first item will have a tabIndex of 0)","defaultValue":{"value":"false","computed":false}}},"parent":"Menu","id":"Menu.Group","order":"","relativePath":"packages/ui-menu/src/Menu/MenuItemGroup/index.js","extension":".js","srcPath":"packages/ui-menu/src/Menu/MenuItemGroup/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-menu/src/Menu/MenuItemGroup/index.js","packageName":"@instructure/ui-menu","requirePath":"@instructure/ui-menu/lib/Menu/MenuItemGroup","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-menu/src/Menu/MenuItemGroup/index.js').default","esPath":"@instructure/ui-menu/es/Menu/MenuItemGroup","title":"Menu.Group"},"Menu.Separator":{"description":"@module MenuItemSeparator","displayName":"MenuItemSeparator","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"parent":"Menu","id":"Menu.Separator","order":"","relativePath":"packages/ui-menu/src/Menu/MenuItemSeparator/index.js","extension":".js","srcPath":"packages/ui-menu/src/Menu/MenuItemSeparator/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-menu/src/Menu/MenuItemSeparator/index.js","packageName":"@instructure/ui-menu","requirePath":"@instructure/ui-menu/lib/Menu/MenuItemSeparator","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-menu/src/Menu/MenuItemSeparator/index.js').default","esPath":"@instructure/ui-menu/es/Menu/MenuItemSeparator","title":"Menu.Separator"},"Modal.Body":{"description":"","displayName":"ModalBody","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":"","defaultValue":{"value":"'div'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'default'","computed":false}},"overflow":{"type":{"name":"enum","value":[{"value":"'scroll'","computed":false},{"value":"'fit'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"parent":"Modal","id":"Modal.Body","order":"","relativePath":"packages/ui-modal/src/Modal/ModalBody/index.js","extension":".js","srcPath":"packages/ui-modal/src/Modal/ModalBody/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-modal/src/Modal/ModalBody/index.js","packageName":"@instructure/ui-modal","requirePath":"@instructure/ui-modal/lib/Modal/ModalBody","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-modal/src/Modal/ModalBody/index.js').default","esPath":"@instructure/ui-modal/es/Modal/ModalBody","title":"Modal.Body"},"Modal.Footer":{"description":"","displayName":"ModalFooter","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'default'","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"parent":"Modal","id":"Modal.Footer","order":"","relativePath":"packages/ui-modal/src/Modal/ModalFooter/index.js","extension":".js","srcPath":"packages/ui-modal/src/Modal/ModalFooter/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-modal/src/Modal/ModalFooter/index.js","packageName":"@instructure/ui-modal","requirePath":"@instructure/ui-modal/lib/Modal/ModalFooter","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-modal/src/Modal/ModalFooter/index.js').default","esPath":"@instructure/ui-modal/es/Modal/ModalFooter","title":"Modal.Footer"},"Modal.Header":{"description":"","displayName":"ModalHeader","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'default'","computed":false}},"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""}},"parent":"Modal","id":"Modal.Header","order":"","relativePath":"packages/ui-modal/src/Modal/ModalHeader/index.js","extension":".js","srcPath":"packages/ui-modal/src/Modal/ModalHeader/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-modal/src/Modal/ModalHeader/index.js","packageName":"@instructure/ui-modal","requirePath":"@instructure/ui-modal/lib/Modal/ModalHeader","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-modal/src/Modal/ModalHeader/index.js').default","esPath":"@instructure/ui-modal/es/Modal/ModalHeader","title":"Modal.Header"},"AppNav.Item":{"description":"@module Item","displayName":"Item","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"The text to display. If the `icon` prop is used, label text must be wrapped\nin `ScreenReaderContent`."},"renderAfter":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display after the renderLabel text, such as a badge","defaultValue":{"value":"undefined","computed":true}},"renderIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The visual to display (ex. an Image, Logo, Avatar, or Icon)","defaultValue":{"value":"undefined","computed":true}},"href":{"type":{"name":"string"},"required":false,"description":"If the item goes to a new page, pass an href","defaultValue":{"value":"undefined","computed":true}},"onClick":{"type":{"name":"func"},"required":false,"description":"If the item does not go to a new page, pass an onClick","defaultValue":{"value":"function (event) {}","computed":false}},"isSelected":{"type":{"name":"bool"},"required":false,"description":"Denotes which item is currently selected","defaultValue":{"value":"false","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying focusable (`button` or `a`) element","defaultValue":{"value":"undefined","computed":true}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element type to render as (will default to `<a>` if href is provided)","defaultValue":{"value":"undefined","computed":true}},"cursor":{"type":{"name":"string"},"required":false,"description":"Specify the mouse cursor to use on :hover.\nThe `pointer` cursor is used by default.","defaultValue":{"value":"'pointer'","computed":false}},"isDisabled":{"type":{"name":"bool"},"required":false,"description":"Disables the link or button visually and functionally","defaultValue":{"value":"false","computed":false}},"children":{"defaultValue":{"value":"null","computed":false},"required":false}},"parent":"AppNav","id":"AppNav.Item","order":"","relativePath":"packages/ui-navigation/src/AppNav/Item/index.js","extension":".js","srcPath":"packages/ui-navigation/src/AppNav/Item/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-navigation/src/AppNav/Item/index.js","packageName":"@instructure/ui-navigation","requirePath":"@instructure/ui-navigation/lib/AppNav/Item","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-navigation/src/AppNav/Item/index.js').default","esPath":"@instructure/ui-navigation/es/AppNav/Item","title":"AppNav.Item"},"Navigation.Item":{"description":"","displayName":"NavigationItem","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"icon":{"type":{"name":"node"},"required":true,"description":"The visual to display (ex. an Image, Logo, Avatar, or Icon)"},"label":{"type":{"name":"node"},"required":true,"description":"The text to display  for the Navigation Link"},"as":{"type":{"name":"elementType"},"required":false,"description":"The element type to render as (will default to `<a>` if href is provided)","defaultValue":{"value":"'a'","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"If the NavigationItem goes to a new page, pass an href","defaultValue":{"value":"undefined","computed":true}},"onClick":{"type":{"name":"func"},"required":false,"description":"If the NavigationItem does not go to a new page pass an onClick","defaultValue":{"value":"function (e, selected) {}","computed":false}},"selected":{"type":{"name":"bool"},"required":false,"description":"Denotes which NavigationItem is currently selected","defaultValue":{"value":"false","computed":false}},"minimized":{"type":{"name":"bool"},"required":false,"description":"When minimized is set to true, the `<Navigation />` shows icons only while the text becomes a tooltip. When it is set to false, the `<Navigation />` shows text in addition to the icons","defaultValue":{"value":"false","computed":false}}},"parent":"Navigation","id":"Navigation.Item","order":"","relativePath":"packages/ui-navigation/src/Navigation/NavigationItem/index.js","extension":".js","srcPath":"packages/ui-navigation/src/Navigation/NavigationItem/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-navigation/src/Navigation/NavigationItem/index.js","packageName":"@instructure/ui-navigation","requirePath":"@instructure/ui-navigation/lib/Navigation/NavigationItem","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-navigation/src/Navigation/NavigationItem/index.js').default","esPath":"@instructure/ui-navigation/es/Navigation/NavigationItem","title":"Navigation.Item"},"Options.Item":{"description":"","displayName":"Item","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"as":{"type":{"name":"elementType"},"required":false,"description":"Element type to render as","defaultValue":{"value":"'span'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'highlighted'","computed":false},{"value":"'selected'","computed":false},{"value":"'disabled'","computed":false}]},"required":false,"description":"The style variant of the item","defaultValue":{"value":"'default'","computed":false}},"role":{"type":{"name":"string"},"required":false,"description":"The aria role of the element","defaultValue":{"value":"'listitem'","computed":false}},"renderBeforeLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to render before the label","defaultValue":{"value":"null","computed":false}},"renderAfterLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to render after the label","defaultValue":{"value":"null","computed":false}},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}},"parent":"Options","id":"Options.Item","order":"","relativePath":"packages/ui-options/src/Options/Item/index.js","extension":".js","srcPath":"packages/ui-options/src/Options/Item/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-options/src/Options/Item/index.js","packageName":"@instructure/ui-options","requirePath":"@instructure/ui-options/lib/Options/Item","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-options/src/Options/Item/index.js').default","esPath":"@instructure/ui-options/es/Options/Item","title":"Options.Item"},"Options.Separator":{"description":"@module Separator","displayName":"Separator","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"as":{"type":{"name":"elementType"},"required":false,"description":"Element type to render as","defaultValue":{"value":"'span'","computed":false}}},"parent":"Options","id":"Options.Separator","order":"","relativePath":"packages/ui-options/src/Options/Separator/index.js","extension":".js","srcPath":"packages/ui-options/src/Options/Separator/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-options/src/Options/Separator/index.js","packageName":"@instructure/ui-options","requirePath":"@instructure/ui-options/lib/Options/Separator","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-options/src/Options/Separator/index.js').default","esPath":"@instructure/ui-options/es/Options/Separator","title":"Options.Separator"},"Pages.Page":{"description":"","displayName":"Page","methods":[],"props":{"children":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"The children to be rendered","defaultValue":{"value":"null","computed":false}},"defaultFocusElement":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to focus by default","defaultValue":{"value":"null","computed":false}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Set the padding using familiar CSS shorthand","defaultValue":{"value":"'small'","computed":false}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'start'","computed":false}}},"context":{"history":{"type":{"name":"array"},"required":false},"navigateToPreviousPage":{"type":{"name":"func"},"required":false}},"parent":"Pages","id":"Pages.Page","order":"","relativePath":"packages/ui-pages/src/Pages/Page/index.js","extension":".js","srcPath":"packages/ui-pages/src/Pages/Page/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pages/src/Pages/Page/index.js","packageName":"@instructure/ui-pages","requirePath":"@instructure/ui-pages/lib/Pages/Page","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pages/src/Pages/Page/index.js').default","esPath":"@instructure/ui-pages/es/Pages/Page","title":"Pages.Page"},"Pagination.Navigation":{"description":"","displayName":"PaginationArrowButton","methods":[],"props":{"direction":{"type":{"name":"enum","value":[{"value":"'next'","computed":false},{"value":"'prev'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"label":{"type":{"name":"union","value":[{"name":"string"},{"name":"node"}]},"required":true,"description":""},"buttonRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(el) => {}","computed":false}}},"parent":"Pagination","id":"Pagination.Navigation","order":"","relativePath":"packages/ui-pagination/src/Pagination/PaginationArrowButton/index.js","extension":".js","srcPath":"packages/ui-pagination/src/Pagination/PaginationArrowButton/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pagination/src/Pagination/PaginationArrowButton/index.js","packageName":"@instructure/ui-pagination","requirePath":"@instructure/ui-pagination/lib/Pagination/PaginationArrowButton","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pagination/src/Pagination/PaginationArrowButton/index.js').default","esPath":"@instructure/ui-pagination/es/Pagination/PaginationArrowButton","title":"Pagination.Navigation"},"Pagination.Page":{"description":"","displayName":"PaginationButton","methods":[],"props":{"children":{"type":{"name":"node"},"required":true,"description":"Content to render as page selection"},"current":{"type":{"name":"bool"},"required":false,"description":"Whether the page is currently displayed","defaultValue":{"value":"false","computed":false}}},"parent":"Pagination","id":"Pagination.Page","order":"","relativePath":"packages/ui-pagination/src/Pagination/PaginationButton/index.js","extension":".js","srcPath":"packages/ui-pagination/src/Pagination/PaginationButton/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-pagination/src/Pagination/PaginationButton/index.js","packageName":"@instructure/ui-pagination","requirePath":"@instructure/ui-pagination/lib/Pagination/PaginationButton","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-pagination/src/Pagination/PaginationButton/index.js').default","esPath":"@instructure/ui-pagination/es/Pagination/PaginationButton","title":"Pagination.Page"},"Select.Group":{"description":"@module Group","displayName":"Group","methods":[],"props":{"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"The label associated with the group options."},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Option])"},"required":false,"description":"Children of type `<Select.Option />` that will be considered part of the group.","defaultValue":{"value":"null","computed":false}}},"parent":"Select","id":"Select.Group","order":"","relativePath":"packages/ui-select/src/Select/Group/index.js","extension":".js","srcPath":"packages/ui-select/src/Select/Group/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-select/src/Select/Group/index.js","packageName":"@instructure/ui-select","requirePath":"@instructure/ui-select/lib/Select/Group","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-select/src/Select/Group/index.js').default","esPath":"@instructure/ui-select/es/Select/Group","title":"Select.Group"},"Select.Option":{"description":"@module Option","displayName":"Option","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":"The id for the option."},"isHighlighted":{"type":{"name":"bool"},"required":false,"description":"Whether or not this option is highlighted.","defaultValue":{"value":"false","computed":false}},"isSelected":{"type":{"name":"bool"},"required":false,"description":"Whether or not this option is selected.","defaultValue":{"value":"false","computed":false}},"isDisabled":{"type":{"name":"bool"},"required":false,"description":"Whether or not this option is disabled.","defaultValue":{"value":"false","computed":false}},"renderBeforeLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display before the option label, such as an icon.","defaultValue":{"value":"undefined","computed":true}},"renderAfterLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display after the option label, such as an icon.","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"node"},"required":false,"description":"Content to display as the option label.","defaultValue":{"value":"null","computed":false}}},"parent":"Select","id":"Select.Option","order":"","relativePath":"packages/ui-select/src/Select/Option/index.js","extension":".js","srcPath":"packages/ui-select/src/Select/Option/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-select/src/Select/Option/index.js","packageName":"@instructure/ui-select","requirePath":"@instructure/ui-select/lib/Select/Option","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-select/src/Select/Option/index.js').default","esPath":"@instructure/ui-select/es/Select/Option","title":"Select.Option"},"SimpleSelect.Group":{"description":"","displayName":"Group","methods":[],"props":{"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"The label associated with the group options."},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Option])"},"required":false,"description":"Children of type `<SimpleSelect.Option />` that will be considered part of the group.","defaultValue":{"value":"null","computed":false}}},"parent":"SimpleSelect","id":"SimpleSelect.Group","order":"","relativePath":"packages/ui-simple-select/src/SimpleSelect/Group/index.js","extension":".js","srcPath":"packages/ui-simple-select/src/SimpleSelect/Group/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-simple-select/src/SimpleSelect/Group/index.js","packageName":"@instructure/ui-simple-select","requirePath":"@instructure/ui-simple-select/lib/SimpleSelect/Group","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-simple-select/src/SimpleSelect/Group/index.js').default","esPath":"@instructure/ui-simple-select/es/SimpleSelect/Group","title":"SimpleSelect.Group"},"SimpleSelect.Option":{"description":"","displayName":"Option","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":"The id for the option."},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":true,"description":"The value for the option."},"isDisabled":{"type":{"name":"bool"},"required":false,"description":"Whether or not this option is disabled.","defaultValue":{"value":"false","computed":false}},"renderBeforeLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display before the option label, such as an icon.","defaultValue":{"value":"undefined","computed":true}},"renderAfterLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display after the option label, such as an icon.","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"string"},"required":false,"description":"Content to display as the option label.","defaultValue":{"value":"null","computed":false}}},"parent":"SimpleSelect","id":"SimpleSelect.Option","order":"","relativePath":"packages/ui-simple-select/src/SimpleSelect/Option/index.js","extension":".js","srcPath":"packages/ui-simple-select/src/SimpleSelect/Option/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-simple-select/src/SimpleSelect/Option/index.js","packageName":"@instructure/ui-simple-select","requirePath":"@instructure/ui-simple-select/lib/SimpleSelect/Option","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-simple-select/src/SimpleSelect/Option/index.js').default","esPath":"@instructure/ui-simple-select/es/SimpleSelect/Option","title":"SimpleSelect.Option"},"Table.Body":{"description":"","displayName":"Body","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":"`Table.Row`"},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Row])"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"hover":{"type":{"name":"bool"},"required":false,"description":""},"isStacked":{"type":{"name":"bool"},"required":false,"description":""},"headers":{"type":{"name":"arrayOf","value":{"name":"union","value":[{"name":"node"},{"name":"func"}]}},"required":false,"description":""}},"parent":"Table","id":"Table.Body","order":"","relativePath":"packages/ui-table/src/Table/Body/index.js","extension":".js","srcPath":"packages/ui-table/src/Table/Body/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-table/src/Table/Body/index.js","packageName":"@instructure/ui-table","requirePath":"@instructure/ui-table/lib/Table/Body","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-table/src/Table/Body/index.js').default","esPath":"@instructure/ui-table/es/Table/Body","title":"Table.Body"},"Table.Cell":{"description":"","displayName":"Cell","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"isStacked":{"type":{"name":"bool"},"required":false,"description":""},"header":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":""},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Control the text alignment in cell","defaultValue":{"value":"'start'","computed":false}}},"parent":"Table","id":"Table.Cell","order":"","relativePath":"packages/ui-table/src/Table/Cell/index.js","extension":".js","srcPath":"packages/ui-table/src/Table/Cell/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-table/src/Table/Cell/index.js","packageName":"@instructure/ui-table","requirePath":"@instructure/ui-table/lib/Table/Cell","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-table/src/Table/Cell/index.js').default","esPath":"@instructure/ui-table/es/Table/Cell","title":"Table.Cell"},"Table.ColHeader":{"description":"","displayName":"ColHeader","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"id":{"type":{"name":"string"},"required":true,"description":"A unique id for this column. When sortable table is in stacked layout,\nid is also used as option in combobox."},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"Control the width of column."},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Control the text alignment in column header","defaultValue":{"value":"'start'","computed":false}},"sortDirection":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'ascending'","computed":false},{"value":"'descending'","computed":false}]},"required":false,"description":"The string of sorting direction","defaultValue":{"value":"'none'","computed":false}},"onRequestSort":{"type":{"name":"func"},"required":false,"description":"Callback fired when column header is clicked. Parameters: `(event, { id })`"},"scope":{"type":{"name":"enum","value":[{"value":"'row'","computed":false},{"value":"'col'","computed":false},{"value":"'rowgroup'","computed":false},{"value":"'colgroup'","computed":false},{"value":"'auto'","computed":false}]},"required":false,"description":"The column header scope attribute. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-scope","defaultValue":{"value":"'col'","computed":false}}},"parent":"Table","id":"Table.ColHeader","order":"","relativePath":"packages/ui-table/src/Table/ColHeader/index.js","extension":".js","srcPath":"packages/ui-table/src/Table/ColHeader/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-table/src/Table/ColHeader/index.js","packageName":"@instructure/ui-table","requirePath":"@instructure/ui-table/lib/Table/ColHeader","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-table/src/Table/ColHeader/index.js').default","esPath":"@instructure/ui-table/es/Table/ColHeader","title":"Table.ColHeader"},"Table.Head":{"description":"","displayName":"Head","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":"`Table.Row`"},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([Row])"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"isStacked":{"type":{"name":"bool"},"required":false,"description":""},"renderSortLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":""}},"parent":"Table","id":"Table.Head","order":"","relativePath":"packages/ui-table/src/Table/Head/index.js","extension":".js","srcPath":"packages/ui-table/src/Table/Head/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-table/src/Table/Head/index.js","packageName":"@instructure/ui-table","requirePath":"@instructure/ui-table/lib/Table/Head","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-table/src/Table/Head/index.js').default","esPath":"@instructure/ui-table/es/Table/Head","title":"Table.Head"},"Table.Row":{"description":"","displayName":"Row","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":"`Table.ColHeader`, `Table.RowHeader` or `Table.Cell`"},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([ColHeader, RowHeader, Cell])"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"hover":{"type":{"name":"bool"},"required":false,"description":""},"isStacked":{"type":{"name":"bool"},"required":false,"description":""},"headers":{"type":{"name":"arrayOf","value":{"name":"union","value":[{"name":"node"},{"name":"func"}]}},"required":false,"description":""}},"parent":"Table","id":"Table.Row","order":"","relativePath":"packages/ui-table/src/Table/Row/index.js","extension":".js","srcPath":"packages/ui-table/src/Table/Row/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-table/src/Table/Row/index.js","packageName":"@instructure/ui-table","requirePath":"@instructure/ui-table/lib/Table/Row","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-table/src/Table/Row/index.js').default","esPath":"@instructure/ui-table/es/Table/Row","title":"Table.Row"},"Table.RowHeader":{"description":"","displayName":"RowHeader","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"isStacked":{"type":{"name":"bool"},"required":false,"description":""},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Control the text alignment in row header","defaultValue":{"value":"'start'","computed":false}}},"parent":"Table","id":"Table.RowHeader","order":"","relativePath":"packages/ui-table/src/Table/RowHeader/index.js","extension":".js","srcPath":"packages/ui-table/src/Table/RowHeader/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-table/src/Table/RowHeader/index.js","packageName":"@instructure/ui-table","requirePath":"@instructure/ui-table/lib/Table/RowHeader","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-table/src/Table/RowHeader/index.js').default","esPath":"@instructure/ui-table/es/Table/RowHeader","title":"Table.RowHeader"},"Tabs.Panel":{"description":"","displayName":"Panel","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"renderTitle":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"The content that will be rendered in the corresponding <Tab /> and will label\nthis `<Tabs.Panel />` for screen readers"},"children":{"type":{"name":"node"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'secondary'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'default'","computed":false}},"isSelected":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"isDisabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"maxHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"minHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"id":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"labelledBy":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"null","computed":false}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"","defaultValue":{"value":"'small'","computed":false}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'start'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(el) => {}","computed":false}}},"parent":"Tabs","id":"Tabs.Panel","order":"","relativePath":"packages/ui-tabs/src/Tabs/Panel/index.js","extension":".js","srcPath":"packages/ui-tabs/src/Tabs/Panel/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tabs/src/Tabs/Panel/index.js","packageName":"@instructure/ui-tabs","requirePath":"@instructure/ui-tabs/lib/Tabs/Panel","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tabs/src/Tabs/Panel/index.js').default","esPath":"@instructure/ui-tabs/es/Tabs/Panel","title":"Tabs.Panel"},"Tabs.Tab":{"description":"","displayName":"Tab","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"variant":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'secondary'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'default'","computed":false}},"id":{"type":{"name":"string"},"required":true,"description":""},"index":{"type":{"name":"number"},"required":true,"description":""},"controls":{"type":{"name":"string"},"required":true,"description":""},"isDisabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"isSelected":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(event, { index, id }) => {}","computed":false}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(event, { index, id }) => {}","computed":false}},"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"null","computed":false}}},"parent":"Tabs","id":"Tabs.Tab","order":"","relativePath":"packages/ui-tabs/src/Tabs/Tab/index.js","extension":".js","srcPath":"packages/ui-tabs/src/Tabs/Tab/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tabs/src/Tabs/Tab/index.js","packageName":"@instructure/ui-tabs","requirePath":"@instructure/ui-tabs/lib/Tabs/Tab","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tabs/src/Tabs/Tab/index.js').default","esPath":"@instructure/ui-tabs/es/Tabs/Tab","title":"Tabs.Tab"},"TreeBrowser.Button":{"description":"","displayName":"TreeButton","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"id":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"name":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"descriptor":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"type":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"'treeButton'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'folderTree'","computed":false},{"value":"'indent'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'folderTree'","computed":false}},"collectionIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"collectionIconExpanded":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"itemIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"thumbnail":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function () {}","computed":false}},"expanded":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"selected":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"focused":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"level":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"containerRef":{"type":{"name":"custom","raw":"function () {}"},"required":false,"description":"","defaultValue":{"value":"function () {}","computed":false}},"renderContent":{"type":{"name":"custom","raw":"function () {}"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"parent":"TreeBrowser","id":"TreeBrowser.Button","order":"","relativePath":"packages/ui-tree-browser/src/TreeBrowser/TreeButton/index.js","extension":".js","srcPath":"packages/ui-tree-browser/src/TreeBrowser/TreeButton/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tree-browser/src/TreeBrowser/TreeButton/index.js","packageName":"@instructure/ui-tree-browser","requirePath":"@instructure/ui-tree-browser/lib/TreeBrowser/TreeButton","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tree-browser/src/TreeBrowser/TreeButton/index.js').default","esPath":"@instructure/ui-tree-browser/es/TreeBrowser/TreeButton","title":"TreeBrowser.Button"},"TreeBrowser.Collection":{"description":"","displayName":"TreeCollection","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"id":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"name":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"descriptor":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"items":{"type":{"name":"array"},"required":false,"description":"","defaultValue":{"value":"[]","computed":false}},"collections":{"type":{"name":"array"},"required":false,"description":"","defaultValue":{"value":"[]","computed":false}},"expanded":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"selection":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"''","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'folderTree'","computed":false},{"value":"'indent'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'folderTree'","computed":false}},"collectionIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"collectionIconExpanded":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"itemIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"getItemProps":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(props) => props","computed":false}},"getCollectionProps":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(props) => props","computed":false}},"onItemClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function () {}","computed":false}},"onCollectionClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function () {}","computed":false}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function () {}","computed":false}},"numChildren":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"level":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"position":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"renderBeforeItems":{"type":{"name":"custom","raw":"Children.oneOf([TreeNode])"},"required":false,"description":"children of type TreeNode","defaultValue":{"value":"null","computed":false}},"renderAfterItems":{"type":{"name":"custom","raw":"Children.oneOf([TreeNode])"},"required":false,"description":"children of type TreeNode","defaultValue":{"value":"null","computed":false}},"containerRef":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"function () {}","computed":false}},"isCollectionFlattened":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"renderContent":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}}},"parent":"TreeBrowser","id":"TreeBrowser.Collection","order":"","relativePath":"packages/ui-tree-browser/src/TreeBrowser/TreeCollection/index.js","extension":".js","srcPath":"packages/ui-tree-browser/src/TreeBrowser/TreeCollection/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tree-browser/src/TreeBrowser/TreeCollection/index.js","packageName":"@instructure/ui-tree-browser","requirePath":"@instructure/ui-tree-browser/lib/TreeBrowser/TreeCollection","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tree-browser/src/TreeBrowser/TreeCollection/index.js').default","esPath":"@instructure/ui-tree-browser/es/TreeBrowser/TreeCollection","title":"TreeBrowser.Collection"},"TreeBrowser.Node":{"description":"A helper class used to render the :renderBeforeItems and :renderAfterItems\nin the TreeBrowser.","displayName":"TreeNode","methods":[],"props":{"makeStyles":{"type":{"name":"func"},"required":false,"description":""},"styles":{"type":{"name":"object"},"required":false,"description":""},"id":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'medium'","computed":false}},"variant":{"type":{"name":"enum","value":[{"value":"'folderTree'","computed":false},{"value":"'indent'","computed":false}]},"required":false,"description":"","defaultValue":{"value":"'folderTree'","computed":false}},"selected":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"focused":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"itemIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"thumbnail":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"level":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"children":{"type":{"name":"node"},"required":false,"description":"The children to be rendered within the `<TreeNode />`","defaultValue":{"value":"undefined","computed":true}},"containerRef":{"type":{"name":"func"},"required":false,"description":"A function that returns a reference to the parent li element","defaultValue":{"value":"function () {}","computed":false}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"onClick":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"undefined","computed":true}},"parentRef":{"defaultValue":{"value":"undefined","computed":true},"required":false}},"parent":"TreeBrowser","id":"TreeBrowser.Node","order":"","relativePath":"packages/ui-tree-browser/src/TreeBrowser/TreeNode/index.js","extension":".js","srcPath":"packages/ui-tree-browser/src/TreeBrowser/TreeNode/index.js","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-tree-browser/src/TreeBrowser/TreeNode/index.js","packageName":"@instructure/ui-tree-browser","requirePath":"@instructure/ui-tree-browser/lib/TreeBrowser/TreeNode","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-tree-browser/src/TreeBrowser/TreeNode/index.js').default","esPath":"@instructure/ui-tree-browser/es/TreeBrowser/TreeNode","title":"TreeBrowser.Node"}},"descriptions":{"EmotionThemeProvider":"\nThe `<EmotionThemeProvider/>` component provides a way to set the theme for our app or override the default theme properties for all themeable child components using the [withStyle](#withStyle) decorator.\n\nNote that `<EmotionThemeProvider/>` components can be nested and that\ntheme properties will fall back to the parent theme, or the default `canvas` theme when they are not set.\n\n`<EmotionThemeProvider/>` is a wrapper for the [ThemeProvider](https://emotion.sh/docs/theming#themeprovider-reactcomponenttype) of Emotion library that we use under the hood for theming and applying css styles to our components.\n\n### Applying theme to the application:\n\nTo apply a theme to whole app, you need to import `<EmotionThemeProvider/>` and the theme you want to use from `@instructure/ui-themes` (or use your own compatible theme), and wrap your app in the theme provider.\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { instructure } from '@instructure/ui-themes'\nimport { EmotionThemeProvider } from '@instructure/emotion'\n\nimport { App } from './App'\n\nReactDOM.render(\n  <EmotionThemeProvider theme={instructure}>\n    <App />\n  </EmotionThemeProvider>,\n  document.getElementById('app')\n)\n```\n\n### Nesting theme providers\n\n```js\n<EmotionThemeProvider theme={canvas}>\n  <Heading>I should have \"canvas\" font family.</Heading>\n\n  <EmotionThemeProvider theme={instructure}>\n    <Heading>I should have \"instructure\" font family.</Heading>\n  </EmotionThemeProvider>\n</EmotionThemeProvider>\n```\n\n### Global overrides\n\n`<EmotionThemeProvider/>`accepts override objects too. Here you can override any theme variable inside that provider.\n\n```js\n---\nexample: true\n---\n<div>\n  <Heading level=\"h3\" margin=\"small small medium\">I should have default font family.</Heading>\n\n  <EmotionThemeProvider\n    theme={{\n      typography: { fontFamily: 'monospace' }\n    }}\n  >\n    <Heading level=\"h3\" margin=\"small small\">I should have monospace font family.</Heading>\n  </EmotionThemeProvider>\n</div>\n```\n\n### Theme overrides\n\nIn case you are using multiple themes in your app, you can target a specific theme to override with the `themeOverrides` key, and under the name (key) of the theme.\n\n```js\n---\n  example: true\n---\n<div>\n  <Alert variant=\"info\" margin=\"small\">\n    I am a default style Alert.\n  </Alert>\n\n  <EmotionThemeProvider\n    theme={{\n      themeOverrides: {\n        canvas: {\n          colors: { backgroundLightest: 'orange' }\n        },\n        'canvas-high-contrast': {\n          colors: { backgroundLightest: 'red' }\n        },\n        instructure: {\n          colors: { backgroundLightest: 'green' }\n        }\n      }\n    }}\n  >\n    <Alert variant=\"info\" margin=\"small\">\n      My background should be:\n      <List margin=\"xx-small\">\n        <List.Item><strong>orange</strong> in 'canvas',</List.Item>\n        <List.Item><strong>red</strong> in 'canvas-high-contrast',</List.Item>\n        <List.Item>and <strong>green</strong> in 'instructure' theme.</List.Item>\n      </List>\n    </Alert>\n  </EmotionThemeProvider>\n</div>\n```\n\n### Global component theme overrides\n\nYou can globally override the themeVariables of specific components too with the `componentOverrides` key.\n\n**Important:** these variables are the components own theme variables set in the `theme.js` of the component.\n\nThe `componentOverrides` can also be nested inside `themeOverrides`.\n\n**Note:** these overrides are handled in the `getComponentThemeOverride` style util method, not in\n`EmotionThemeProvider`.\n\n```js\n---\n  example: true\n---\n  <div>\n    <Alert variant=\"info\" margin=\"small\">\n      I am a default style Alert.\n    </Alert>\n\n    <EmotionThemeProvider\n      theme={{\n        componentOverrides: {\n          Alert: {\n            infoIconBackground: \"darkblue\",\n            infoBorderColor: \"darkblue\"\n          }\n        },\n        themeOverrides: {\n          canvas: {\n            colors: {\n              backgroundLightest: 'lightgray'\n            },\n            componentOverrides: {\n              Alert: {\n                warningIconBackground: \"deeppink\",\n                warningBorderColor: \"deeppink\"\n              }\n            },\n          }\n        }\n      }}\n    >\n      <Alert variant=\"success\" margin=\"small\">\n        My background should be light gray in 'canvas' theme.\n      </Alert>\n\n      <Alert variant=\"warning\" margin=\"small\">\n        My background should be light gray and the icon background should be pink in 'canvas' theme.\n      </Alert>\n\n      <Alert variant=\"info\" margin=\"small\">\n        My background should be light gray in 'canvas' theme, and the icon background should be dark blue in any theme.\n      </Alert>\n    </EmotionThemeProvider>\n  </div>\n```\n","AccessibleContent":"\nAccessibleContent provides a textual alternative to the presentational content it is wrapping. It utilizes the `alt` prop that is very similar in concept to the 'alt' attribute of an HTML <img> tag.\n\nThe content should be descriptive enough that a screen reader user gets the gist purely through text. Note the caveats on hiding content from screen readers. (see [PresentationContent](#PresentationContent))\n\n```js\n---\nexample: true\n---\n<AccessibleContent alt=\"Alternative text for a screen reader only\">\n  <Text>\n    Presentational content goes here\n  </Text>\n</AccessibleContent>\n```\n","PresentationContent":"\nA component that *tries* to hide itself from screen readers, absolutely\nexpecting that you're providing a more accessible version of the resource\nusing something like a ScreenReaderContent component.\n\nBe warned that this does not totally prevent all screen readers from\nseeing this content in all modes. For example, VoiceOver in OS X will\nstill see this element when running in the \"Say-All\" mode and read it\nalong with the accessible version you're providing.\n\nUse of this component is discouraged unless there's no alternative\n(e.g. for data visualizations)\n\n```js\n---\nexample: true\n---\n<PresentationContent>\n  <Text>\n    Presentational content here\n  </Text>\n</PresentationContent>\n```\n","ScreenReaderContent":"\nThe ScreenReaderContent component renders content that is accessible to\nscreen readers, but is not visible.\n\n```js\n---\nexample: true\n---\n<ScreenReaderContent>\n  This content is not visible.\n</ScreenReaderContent>\n```\n","Alert":"\nThe Alert component can be used to notify the user. It supports several\nvariants to provide context to the message.\n\nAlert can optionally render as a dismissible 'dialog' with a close button.\n\nThe `margin` prop can be added to give\nspace above or below the alert.\n\n```js\n---\nexample: true\n---\n<div>\n  <Alert\n    variant=\"success\"\n    renderCloseButtonLabel=\"Close\"\n    margin=\"small\"\n    transition=\"none\"\n  >\n    Sample success alert text. I will close w/o a transition out if you close me\n  </Alert>\n  <Alert\n    variant=\"info\"\n    renderCloseButtonLabel=\"Close\"\n    margin=\"small\"\n  >\n    Sample info text. I will fade out if you close me.\n  </Alert>\n  <Alert\n    variant=\"error\"\n    renderCloseButtonLabel=\"Close\"\n    margin=\"small\"\n  >\n    Sample error text that continues for a while\n    to demonstrate what happens when the content stretches over\n    several lines. It really does take a lot of prose to get the\n    text to wrap when you are on a high resolution screen.\n  </Alert>\n  <Alert\n    variant=\"warning\"\n    margin=\"small\"\n  >\n    Sample warning text. This alert is not dismissible and cannot be closed.\n  </Alert>\n</div>\n```\n\nThe `timeout` prop can be used to automatically dismiss an alert after a time.\n\n```js\n---\nexample: true\n---\n<Alert\n  variant=\"info\"\n  margin=\"small\"\n  timeout={5000}\n>\n  Sample info text. I will fade out after 5 seconds\n</Alert>\n```\n\nGiven a `liveRegion` property, Alerts will guarantee a screenreader will announce their text.\nUse `liveRegionPoliteness` to choose an `aria-live` politeness setting of either `polite`\nor `assertive` (default). Use `isLiveRegionAtomic` to choose an `aria-atomic` setting \nof either `true` or `false` (default).\n\nDue to a bug in some screen readers, the live region element should be static, either through\nserver rendering or included in the static HTML file for the app. The Alert component will\nensure that element has the correct ARIA attributes.\n\nFor more information about live regions, see\n[this MDN article](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions).\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      alerts: []\n    }\n\n    this.i = 0\n    this.variants = ['info', 'success', 'warning', 'error']\n    this.politeness = ['polite', 'assertive']\n  }\n\n  addAlert () {\n    const variant = this.variants[this.i++ % this.variants.length]\n    const politeness = Math.random() < 0.5 ? 'polite' : 'assertive'\n    const alerts = [...this.state.alerts]\n    const key = new Number(this.i)\n    alerts.push({\n      key,\n      variant,\n      politeness,\n      onDismiss: () => this.closeAlert(key)\n    })\n    this.setState({ alerts })\n  }\n\n  closeAlert (key) {\n    const alerts = this.state.alerts.filter((alert) => {\n      return alert.key !== key\n    })\n    this.setState({ alerts })\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.addAlert.bind(this)}>Add Alert</Button>\n        {this.state.alerts.map((alert) => {\n          return (\n            <View\n              key={alert.key}\n              display=\"block\"\n              margin=\"small 0\"\n            >\n              <Alert\n                variant={alert.variant}\n                renderCloseButtonLabel=\"Close\"\n                onDismiss={alert.onDismiss}\n                liveRegion={() => document.getElementById('flash-messages')}\n                liveRegionPoliteness={alert.politeness}\n                margin=\"small 0\"\n              >\n                This is {alert.politeness === 'polite' ? 'a' : 'an'} {alert.politeness} {alert.variant} alert\n              </Alert>\n            </View>\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nrender(<Example />)\n```\n\nAlerts can be used to emit screenreader only messages too\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      message: null,\n      count: 1\n    }\n  }\n\n  changeMessage = () => {\n    this.setState({\n      message: `this is message ${this.state.count}`,\n      count: this.state.count + 1\n      })\n  }\n\n  clearMessage  =() => {\n    this.setState({\n      message: null,\n      count: this.state.count + 1})\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.changeMessage}>Change Message</Button>\n        <Button onClick={this.clearMessage} margin=\"0 0 0 small\">Clear Message</Button>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          isLiveRegionAtomic\n          screenReaderOnly\n         >\n            {this.state.message}\n        </Alert>\n      </div>\n    );\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use the Info alert to notify the user of more information</Figure.Item>\n    <Figure.Item>Use the Error alert to notify user of an error</Figure.Item>\n    <Figure.Item>Use the Warning alert to notify user of a warning</Figure.Item>\n    <Figure.Item>Use the Success alert to notify user of a success event or action</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Have alert messaging that is more than two lines long</Figure.Item>\n    <Figure.Item>Overuse alerts on the same page</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>If the alert requires user interaction to be dismissed, the alert should behave as a modal dialog. Focus should be set to the alert when it appears, remain in the alert until it is dismissed, and return to a logical place on the page when the alert is dismissed</Figure.Item>\n    <Figure.Item>aria-live=\"polite\" alerts will only be announced if the user is not currently doing anything. Polite should be used in most situations involving live regions that present new info to users</Figure.Item>\n    <Figure.Item>aria-live=\"assertive\" alerts will be announced to the user as soon as possible, but not necessarily immediately. Assertive should be used if there is information that a user must know about right away, for example, a warning message in a form that does validation on the fly</Figure.Item>\n    <Figure.Item>The aria-atomic=BOOLEAN is used to set whether or not the screen reader should always present the live region as a whole, even if only part of the region changes. The possible settings are: false or true. The default setting is false.</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Avatar":"\nWhen an image src is not supplied the user's initials will display. The avatar can be `circle` _(default)_ or `rectangle`. Use the `margin` prop to add space between Avatar and other content.\n\n```js\n---\nexample: true\n---\n<div>\n  <Avatar name=\"Sarah Robinson\" src={avatarSquare} margin=\"0 small 0 0\" />\n  <Avatar name=\"Sarah Robinson\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Kyle Montgomery\" src={avatarSquare} shape=\"rectangle\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Kyle Montgomery\" shape=\"rectangle\" />\n</div>\n```\n\nThe `size` prop allows you to select from `x-small`, `small`, `medium`, `large`, and `x-large`. If the `auto` prop is set, the avatar size will adjust according to the font-size\nof its container.\n\n```js\n---\nexample: true\n---\n<div>\n  <Avatar name=\"James Arias\" size=\"x-small\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Charles Kimball\" size=\"small\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Melissa Reed\" size=\"medium\" margin=\"0 small 0 0\" />\n  <Avatar name=\"Heather Wheeler\" size=\"large\" margin=\"0 small 0 0\" />\n  <Avatar name=\"David Herbert\" size=\"x-large\" />\n</div>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Ensure the appropriate size is being used for its placement (in a table, stand-alone, etc…)</Figure.Item>\n    <Figure.Item>Use circle variant in Canvas</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use inline in sentence</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Badge":"\n### Making badges accessible\nBadge counts are automatically fed to screenreaders through the `aria-describedby`\nattribute. Often a stand alone number doesn't give a screenreader user enough context (_\"3\" vs. \"You have 3 unread emails\"_).\nThe examples below use the `formatOutput` prop to make the badge more screenreader-friendly.\n\n```js\n---\nexample: true\n---\n  <div>\n    <Badge\n      count={99}\n      pulse\n      margin=\"0 medium 0 0\"\n      formatOutput={function (formattedCount) {\n        return (\n          <AccessibleContent alt={`You have ${formattedCount} new edits to review`}>\n            {formattedCount}\n          </AccessibleContent>\n        )\n      }}\n    >\n      <IconButton\n        renderIcon={IconUserSolid}\n        screenReaderLabel=\"Edits\"\n        withBorder={false}\n        withBackground={false}\n      />\n    </Badge>\n    <Badge\n      type=\"notification\"\n      formatOutput={function () {\n        return <ScreenReaderContent>You have new edits to review</ScreenReaderContent>\n      }}\n    >\n      <IconButton\n        renderIcon={IconUserSolid}\n        screenReaderLabel=\"Edits\"\n        withBorder={false}\n        withBackground={false}\n      />\n    </Badge>\n  </div>\n```\n\n> Note the use of the `pulse` prop in the first example to make the Badge slowly pulse twice on mount.\n\n### Limit the count\n\nUse the `countUntil` prop to set a limit for the count. The default for `formatOverflowText` is a \"+\" symbol.\n\n```js\n---\nexample: true\n---\n<div>\n  <Badge count={105} countUntil={100} margin=\"0 medium 0 0\">\n    <Button>Inbox</Button>\n  </Badge>\n  <Badge count={250} countUntil={100}>\n    <Button>Assignments</Button>\n  </Badge>\n</div>\n```\n\n### Standalone, notification and color variants\n\nSetting the `standalone` prop to `true` renders Badge as a standalone\nelement that is not positioned relative to a child and displays inline-block.\nSetting `type=\"notification\"` will render small circles that should not contain any visible text.\n\n```js\n---\nexample: true\n---\n<div>\n  <Badge standalone count={6} margin=\"0 small 0 0\" />\n  <Badge standalone variant=\"success\" count={12} margin=\"0 small 0 0\"  />\n  <Badge standalone variant=\"danger\" count={18} countUntil={10} margin=\"0 small 0 0\" />\n  <Badge\n    type=\"notification\"\n    standalone\n    formatOutput={function () {\n      return <ScreenReaderContent>This is a notification</ScreenReaderContent>\n    }}\n    margin=\"0 small 0 0\"\n  />\n  <Badge\n    variant=\"success\"\n    type=\"notification\"\n    standalone\n    formatOutput={function () {\n      return <ScreenReaderContent>This is a success notification</ScreenReaderContent>\n    }}\n    margin=\"0 small 0 0\"\n  />\n  <Badge\n    variant=\"danger\"\n    type=\"notification\"\n    standalone\n    formatOutput={function () {\n      return <ScreenReaderContent>This is a danger notification</ScreenReaderContent>\n    }}\n  />\n</div>\n```\n\n### Placement\n\nDefault is `top end`. __Note that standalone badges can't be placed.__\n\n```js\n---\nexample: true\nrender: false\n---\nconst EditButton = () => (\n  <IconButton\n    renderIcon={IconUserSolid}\n    screenReaderLabel=\"Edit page\"\n    withBorder={false}\n    withBackground={false}\n  />\n)\n\nconst Example = () => (\n  <div>\n    <View as=\"div\" margin=\"0 0 medium\">\n      <Badge count={21} margin=\"0 large 0 0\" placement=\"top start\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} margin=\"0 large 0 0\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} margin=\"0 large 0 0\" placement=\"bottom start\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} margin=\"0 large 0 0\" placement=\"bottom end\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} margin=\"0 large 0 0\" placement=\"start center\">\n        <EditButton />\n      </Badge>\n      <Badge count={21} placement=\"end center\">\n        <EditButton />\n      </Badge>\n    </View>\n    <View as=\"div\">\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        placement=\"top start\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        placement=\"bottom start\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        placement=\"bottom end\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        margin=\"0 large 0 0\"\n        placement=\"start center\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n      <Badge\n        type=\"notification\"\n        placement=\"end center\"\n        formatOutput={function () {\n          return <ScreenReaderContent>Updates are available for your account</ScreenReaderContent>\n        }}\n      >\n        <EditButton />\n      </Badge>\n    </View>\n  </div>\n)\n\nrender(<Example />)\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use count for up to 2 digits of numbers</Figure.Item>\n    <Figure.Item>Use \"+\" symbol for more than 2 digits (99+)</Figure.Item>\n    <Figure.Item>Use for numeric count (like unread messages)</Figure.Item>\n    <Figure.Item>Provide accessible text for what the number represents</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use as a status indicator refer to Pill</Figure.Item>\n    <Figure.Item>Use for text strings</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Billboard":"### Static Billboard\nUsed for empty states, 404 pages, redirects, etc.\n\n```js\n---\nexample: true\n---\n<Billboard\n  size=\"medium\"\n  heading=\"Well, this is awkward.\"\n  message=\"Think there should be something here?\"\n  hero={<Img src={placeholderImage(900, 500)} />}\n/>\n```\n\n### Structure\n\n- If Billboard has an `href` prop set, it will render as a link;\nif an `onClick` prop is set, the component will render as a button.\n- Use the `message` prop for your link or button text/call to action (Note:\ndon't pass interactive content to the `message` prop if you have set the `href`\nor `onClick` props).\n- Use the `size` prop to adjust the size of the icon and text.\n- Pass [Instructure icons](#icons-react) to the `hero` property via a function\n_(see examples)_, and they will be sized correctly based on the Billboard's\n`size`.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" width=\"400px\" withVisualDebug>\n  <Billboard\n    margin=\"large\"\n    heading=\"404\"\n    message=\"Billboard is now a button\"\n    size=\"small\"\n    onClick={function () {\n      alert('This Billboard was clicked!')\n    }}\n    hero={(size) => <IconUserLine size={size} />}\n  />\n</View>\n```\n```js\n---\nexample: true\n---\n<View as=\"div\" width=\"600px\" withVisualDebug>\n  <Billboard\n    margin=\"large\"\n    message=\"Click this link\"\n    href=\"http://instructure.com\"\n    hero={(size) => <IconGradebookLine size={size} />}\n  />\n</View>\n```\n```js\n---\nexample: true\n---\n<Billboard\n  readOnly\n  message=\"Create a new Module\"\n  size=\"large\"\n  onClick={function () {\n    alert('This Billboard was clicked!')\n  }}\n  hero={(size) => <IconPlusLine size={size} />}\n/>\n```\n\n\n### Disabled Billboard\n```js\n---\nexample: true\n---\n<Billboard\n  size=\"small\"\n  heading=\"This is disabled\"\n  onClick={function () {\n    alert('This Billboard was clicked!')\n  }}\n  hero={(size) => <IconUserLine size={size} />}\n  disabled\n/>\n```\n","Breadcrumb":"\nBreadcrumbs enable users to quickly see their location within a path of navigation.\nLong breadcrumb text will be automatically truncated, ensuring the list always\nremains on a single line.\n\n**Breadcrumbs are best suited for tablet-sized (~768px) screens and larger.**\nFor smaller screens, use a [Link](#Link) that returns the user to the previous page or view.\nThe example below is implemented with [Responsive](#Responsive). Resize the browser window to see\nBreadcrumb become a Link at under 768px.\n\n```js\n---\nexample: true\n---\n<Responsive\n  query={{\n    tablet: { minWidth: 768 }\n  }}\n>\n  {(props, matches) => {\n    if (matches.includes('tablet')) {\n      return (\n        <Breadcrumb label=\"You are here:\">\n          <Breadcrumb.Link href=\"#\">Student Forecast</Breadcrumb.Link>\n          <Breadcrumb.Link href=\"#\">University of Utah</Breadcrumb.Link>\n          <Breadcrumb.Link href=\"#\">University of Utah Colleges</Breadcrumb.Link>\n          <Breadcrumb.Link>College of Life Sciences</Breadcrumb.Link>\n        </Breadcrumb>\n      )\n    } else {\n      return (\n        <Link\n          href=\"#\"\n          isWithinText={false}\n          renderIcon={IconArrowOpenStartLine}\n        >\n          <TruncateText>University of Utah Colleges</TruncateText>\n        </Link>\n      )\n    }\n  }}\n</Responsive>\n```\n\nChange the `size` prop to control the font-size of the breadcrumbs (default is `medium`).\n\n```js\n---\nexample: true\n---\n<div>\n  <Breadcrumb size=\"small\" label=\"You are here:\" margin=\"none none medium\">\n    <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">English 204</Breadcrumb.Link>\n      <Breadcrumb.Link\n        onClick={function () {\n          console.log(\"This Breadcrumb.Link was clicked!\")\n        }}\n      >\n        Exploring John Updike\n      </Breadcrumb.Link>\n    <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">The Rabbit Novels</Breadcrumb.Link>\n    <Breadcrumb.Link>Rabbit Is Rich</Breadcrumb.Link>\n  </Breadcrumb>\n  <View as=\"div\" width=\"40rem\">\n    <Breadcrumb label=\"You are here:\" margin=\"none none medium\">\n      <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">English 204</Breadcrumb.Link>\n        <Breadcrumb.Link\n          onClick={function () {\n            console.log(\"This Breadcrumb.Link was clicked!\")\n          }}\n        >\n          Exploring John Updike\n        </Breadcrumb.Link>\n      <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">The Rabbit Novels</Breadcrumb.Link>\n      <Breadcrumb.Link>Rabbit Is Rich</Breadcrumb.Link>\n    </Breadcrumb>\n  </View>\n  <Breadcrumb size=\"large\" label=\"You are here:\">\n    <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">English 204</Breadcrumb.Link>\n      <Breadcrumb.Link\n        onClick={function () {\n          console.log(\"This Breadcrumb.Link was clicked!\")\n        }}\n      >\n        Exploring John Updike\n      </Breadcrumb.Link>\n    <Breadcrumb.Link href=\"https://instructure.github.io/instructure-ui/\">The Rabbit Novels</Breadcrumb.Link>\n    <Breadcrumb.Link>Rabbit Is Rich</Breadcrumb.Link>\n  </Breadcrumb>\n</div>\n```\n\n### Icons\nYou can include icons in `Breadcrumb.Link`:\n\n```js\n---\nexample: true\n---\n<Breadcrumb label=\"Breadcrumb with icons\">\n  <Breadcrumb.Link renderIcon={<IconBankLine size=\"small\" />} href=\"#Breadcrumb\">Item Bank</Breadcrumb.Link>\n  <Breadcrumb.Link renderIcon={<IconClockLine size=\"small\" />} onClick={() => {}}>History</Breadcrumb.Link>\n  <Breadcrumb.Link renderIcon={IconPlusLine} iconPlacement=\"end\">New Question</Breadcrumb.Link>\n</Breadcrumb>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Place Breadcrumb near the top of the page</Figure.Item>\n    <Figure.Item>Show hierarchy, not history</Figure.Item>\n    <Figure.Item>Keep Breadcrumb titles short but descriptive</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use Breadcrumb if you are taking users through a multi-step process</Figure.Item>\n    <Figure.Item>Use Breadcrumb in mobile layouts: use a Link to the previous page/view instead</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","BaseButton":"\n`BaseButton` is a low level utility component used to compose Instructure UI buttons. In most cases, it should not be used directly.\nUse [Button](#Button), [IconButton](#IconButton), or [CondensedButton](#CondensedButton) instead.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" margin=\"medium\">\n  <BaseButton>Click me</BaseButton>\n</View>\n```\n","Button":"\nButton allows users to perform actions or trigger changes. If selecting the Button causes the user to navigate to a different location, consider using the [Link](#Link) component instead.\n\n```js\n---\nexample: true\n---\n<Button>Hello{null}</Button>\n```\n\n### Color\n\nThe `color` prop will change the Button's color scheme.\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <Button color=\"primary\" margin=\"small\">Primary</Button>\n  <Button color=\"secondary\" margin=\"small\">Secondary</Button>\n  <Button color=\"success\" margin=\"small\">Success</Button>\n  <Button color=\"danger\" margin=\"small\">Danger</Button>\n  <Button color=\"primary-inverse\" margin=\"small\">Primary Inverse</Button>\n</View>\n```\n\n### Size\n\nTo specify the Button `size`, set the size prop to `small`, `medium` (default) or `large`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <Button size=\"small\" margin=\"small\">Small</Button>\n  <Button margin=\"small\">Medium</Button>\n  <Button size=\"large\" margin=\"small\">Large</Button>\n</View>\n```\n\n### Rendering icons in Buttons\n\nAn icon can be rendered alongside the Button content using the `renderIcon` prop. Use [IconButton](#IconButton) instead if your Button only displays an Icon with no other visual content.\n\n```js\n---\nexample: true\n---\n<Button renderIcon={IconAddLine}>Add Item</Button>\n```\n\n### Text wrapping\n\nJust like native HTML buttons, the Button text will wrap to the next line when it does not have enough room.\n\n```js\n---\nexample: true\n---\n<View\n  display=\"block\"\n  width=\"10rem\"\n  margin=\"small\"\n  padding=\"small none\"\n  withVisualDebug\n>\n  <Button color=\"primary\">\n    A Button With a Whole Lot of Text\n  </Button>\n</View>\n```\n\nIf you need to prevent text wrapping, you can use the [TruncateText](#TruncateText) util. You can also conditionally render a [Tooltip](#Tooltip) with the full text when truncation occurs.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    isTruncated: false\n  }\n\n  handleUpdate = (isTruncated) => {\n    if (this.state.isTruncated !== isTruncated) {\n      this.setState({ isTruncated })\n    }\n  }\n\n  renderButton () {\n    return (\n      <Button color=\"primary\">\n        <TruncateText onUpdate={this.handleUpdate}>\n          {this.props.message}\n        </TruncateText>\n      </Button>\n    )\n  }\n\n  render () {\n    return (\n      <View\n        display=\"block\"\n        width=\"10rem\"\n        margin=\"small\"\n        padding=\"small none\"\n        withVisualDebug\n      >\n        {this.state.isTruncated ? (\n          <Tooltip\n            renderTip={this.props.message}\n            mountNode={() => document.getElementById('main')}\n          >\n            { this.renderButton() }\n          </Tooltip>\n        ) : this.renderButton()}\n      </View>\n    )\n  }\n}\n\nrender(<Example message=\"A Button With a Whole Lot of Text\" />)\n```\n\n### Display\n\nBy default, the Button displays inline with other elements. If you need it to expand to fill the width of it's container, set the `display` prop to `block`.\n\n```js\n---\nexample: true\n---\n<View\n  display=\"block\"\n  width=\"30rem\"\n  margin=\"small\"\n  padding=\"small none\"\n  withVisualDebug\n>\n  <Button\n    renderIcon={IconUserLine}\n    display=\"block\"\n    textAlign=\"center\"\n    color=\"success\"\n  >\n    User Details\n  </Button>\n</View>\n```\n\n### Rendering Buttons without backgrounds\n\nUse backgroundless buttons for interfaces on dark backgrounds or when there is a need to deemphasize the button from another primary action on the page. Be sure to use border/text colors that meet the proper contrast ratios with whatever background they are placed on.\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <View display=\"inline-block\" background=\"primary\">\n    <Button renderIcon={IconAddLine} withBackground={false} color=\"primary\" margin=\"small\">Click here</Button>\n  </View>\n  <View display=\"inline-block\" background=\"primary-inverse\">\n    <Button renderIcon={IconAddLine} withBackground={false} color=\"primary-inverse\" margin=\"small\">Click here</Button>\n  </View>\n</View>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use 'Title Case' for button text</Figure.Item>\n    <Figure.Item>Use buttons with color set to <code>primary</code> only once for each section of content</Figure.Item>\n    <Figure.Item>Use buttons with color set to <code>primary</code> when the task of the view requires an action to be taken</Figure.Item>\n    <Figure.Item>Use the <code>success</code> and <code>danger</code> colors for grading activities</Figure.Item>\n    <Figure.Item>Use the <code>danger</code> color to warn the user of potentially destructive actions</Figure.Item>\n    <Figure.Item>Use a button with color set to <code>secondary</code> as a secondary or tertiary option for actions such as Cancel</Figure.Item>\n    <Figure.Item>The <code>primary-inverse</code> color can be used as a secondary option instead of the <code>secondary</code> color when the background would otherwise match the <code>secondary</code> button color (example: ModalFooter). Set the focusColor to `info` as well with this configuration.</Figure.Item>\n    <Figure.Item>The maximum string length of any button, including spaces, should be 20 characters</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use more than one button with color set to <code>primary</code> per section of content\n</Figure.Item>\n    <Figure.Item>Use buttons without backgrounds excessively</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>When using buttons on a dark background, use the <code>primary-inverse</code> color to ensure adequate contrast</Figure.Item>\n    <Figure.Item>Buttons are activated with both Enter and Spacebar keys, and either key press will fire an `onClick` event</Figure.Item>\n    <Figure.Item>Disabled buttons do not need to meet color contrast ratio requirements or receive keyboard focus but will be read as \"disabled\" or \"dimmed\" by screen readers</Figure.Item>\n    <Figure.Item>Icon only buttons must have ScreenReaderContent added so screen readers indicate what the button is used for</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","CloseButton":"\nSome design patterns require a `CloseButton` to be placed in the start or end position. This is a helper component that gives you the close icon out of the box and facilitates placement.\n\nThe `placement` prop designates the `CloseButton` placement within the parent container. Note that in order to apply an `offset`, `placement` should be set to `start` or `end`. Also make sure that the container has a `position` css style applied other than `static`. In the following example we use [View](#View) as the container and set the `position` to `relative`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" position=\"relative\" height=\"5rem\" background=\"primary\" shadow=\"resting\">\n  <CloseButton placement=\"end\" offset=\"small\" screenReaderLabel=\"Close\" />\n</View>\n```\n\nIf you need the `CloseButton` to work in a layout with other elements vs. absolutely positioning it, you can omit the `placement` prop or set it to `static`. You can then use another tool such as [Flex](#Flex) to handle the layout.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" position=\"relative\" background=\"primary\" shadow=\"resting\">\n  <Flex height=\"6rem\" justifyItems=\"space-between\" alignItems=\"center\" padding=\"medium\">\n    <Flex.Item shouldShrink shouldGrow>\n      <Heading level=\"h2\">Some Heading Text</Heading>\n    </Flex.Item>\n    <Flex.Item padding=\"none none none medium\">\n      <CloseButton size=\"medium\" screenReaderLabel=\"Close\" />\n    </Flex.Item>\n  </Flex>\n</View>\n```\n\nIf you need even more customization, note that you can always compose this component using the [IconButton](#IconButton) directly. Supply the `renderIcon` prop with [IconXSolid](#Iconography) and set the `withBorder` and `withBackground` props to `false`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" position=\"relative\" height=\"5rem\" background=\"primary\" shadow=\"resting\">\n  <Flex justifyItems=\"end\">\n    <Flex.Item>\n      <IconButton\n        screenReaderLabel=\"Close\"\n        renderIcon={IconXSolid}\n        size=\"small\"\n        withBackground={false}\n        withBorder={false}\n        margin=\"small\"\n      />\n    </Flex.Item>\n  </Flex>\n</View>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Set the <code>color</code> prop to <code>primary</code> when a CloseButton appears on a dark background to ensure adequate contrast</Figure.Item>\n    <Figure.Item>Ensure the CloseButton is labeled correctly using the <code>screenReaderLabel</code> prop so screen readers announce what action will be taken when selected</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","CondensedButton":"\nCondensedButton is a button component that renders without padding. It is meant specifically for tight spaces, or areas where the button padding would prevent the button content from aligning correctly with other elements.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" background=\"primary\" padding=\"small\">\n  <CondensedButton>Click Me</CondensedButton>\n</View>\n```\n\nIn the following example, CondensedButton is used so that the button content can align with the rest of the table cell content.\n\n```js\n---\nexample: true\n---\n<Table caption='Tallest Roller Coasters'>\n  <Table.Head>\n    <Table.Row>\n      <Table.ColHeader id=\"Roller Coaster\">\n        Roller Coaster\n      </Table.ColHeader>\n      <Table.ColHeader id=\"Height\">\n        Height\n      </Table.ColHeader>\n      <Table.ColHeader id=\"Amusement Park\">\n        Amusement Park\n      </Table.ColHeader>\n    </Table.Row>\n  </Table.Head>\n  <Table.Body>\n    <Table.Row>\n      <Table.Cell>\n        Kingda Ka<br />\n        <CondensedButton>View Advanced Stats</CondensedButton>\n      </Table.Cell>\n      <Table.Cell>\n        456.0ft\n      </Table.Cell>\n      <Table.Cell>\n        Six Flags Great America\n      </Table.Cell>\n    </Table.Row>\n    <Table.Row>\n      <Table.Cell>\n        Top Thrill Dragster<br />\n        <CondensedButton>View Advanced Stats</CondensedButton>\n      </Table.Cell>\n      <Table.Cell>\n        420.0ft\n      </Table.Cell>\n      <Table.Cell>\n        Cedar Point\n      </Table.Cell>\n    </Table.Row>\n    <Table.Row>\n      <Table.Cell>\n        Superman: Escape from Krypton<br />\n        <CondensedButton>View Advanced Stats</CondensedButton>\n      </Table.Cell>\n      <Table.Cell>\n        415.0ft\n      </Table.Cell>\n      <Table.Cell>\n        Six Flags Magic Mountain\n      </Table.Cell>\n    </Table.Row>\n  </Table.Body>\n</Table>\n```\n","IconButton":"\nAn IconButton can be used when the Button only renders an Icon and does not have other visual elements or text content.\n\n```js\n---\nexample: true\n---\n<IconButton screenReaderLabel=\"Add User\"><IconAddLine /></IconButton>\n```\n\n### Accessibility\n\nBecause the IconButton visually only renders an icon, a description is necessary for assistive technologies. The `screenReaderLabel` prop is required for this purpose, and should consist of a complete description of the action.\n\n```js\n---\nexample: true\n---\n<IconButton color=\"primary\" screenReaderLabel=\"Add blog post\"><IconAddLine /></IconButton>\n```\n\nUsing [Tooltip](#Tooltip) in conjunction with IconButton can also provide necessary context when the IconButton alone would be insufficient.\n\n```js\n---\nexample: true\n---\n<Tooltip\n  renderTip=\"View user profile\"\n  on={['hover', 'focus']}\n  placement=\"bottom\"\n>\n  <IconButton screenReaderLabel=\"View user profile\"><IconUserLine /></IconButton>\n</Tooltip>\n```\n\n### Shaping\n\nThe `shape` prop specifies if the IconButton will render as a `rectangle` or `circle`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <IconButton shape=\"rectangle\" screenReaderLabel=\"Delete tag\" margin=\"small\"><IconXSolid /></IconButton>\n  <IconButton shape=\"circle\" screenReaderLabel=\"Delete tag\" margin=\"small\"><IconXSolid /></IconButton>\n</View>\n```\n\n### Rendering only the icon\n\nThe background and border can be optionally removed as needed by setting the `withBorder` and `withBackground` props to `false`\n\n```js\n---\nexample: true\n---\n<View display=\"block\">\n  <View display=\"inline-block\" background=\"primary\">\n    <IconButton withBackground={false} withBorder={false} screenReaderLabel=\"Delete tag\" margin=\"large\">\n      <IconXSolid />\n    </IconButton>\n  </View>\n  <View display=\"inline-block\" background=\"primary-inverse\">\n    <IconButton withBackground={false} withBorder={false} color=\"primary-inverse\" screenReaderLabel=\"Delete tag\" margin=\"large\">\n      <IconXSolid />\n    </IconButton>\n  </View>\n</View>\n```","ToggleButton":"\n`ToggleButton` is a controlled button component used for toggling a status or setting\nbetween one of two states (locked/unlocked, published/unpublished, etc.).\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    locked: 'off'\n  }\n\n  handleLocked = (e) => {\n    this.setState(function(prevState) {\n      return {locked: prevState.locked === 'on' ? 'off' : 'on'}\n    })\n  }\n\n  render () {\n    const locked = this.state.locked === 'on'\n\n    return (\n      <View as=\"div\" padding=\"x-large\" id=\"toggleContainer\">\n        <ToggleButton\n          status={locked ? 'pressed' : 'unpressed'}\n          color={locked ? 'danger' : 'secondary'}\n          renderIcon={locked ? IconLockSolid : IconUnlockLine}\n          screenReaderLabel={locked ? 'Unlock assignment' : 'Lock assignment'}\n          renderTooltipContent={locked ? 'Unlock' : 'Lock'}\n          onClick={this.handleLocked}\n          mountNode={() => document.getElementById('toggleContainer')}\n        />\n      </View>\n    )\n  }\n}\nrender(<Example />)\n```\n\n### Inverse ToggleButton\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass InverseExample extends React.Component {\n  state = {\n    locked: 'off'\n  }\n\n  handleLocked = (e) => {\n    this.setState(function(prevState) {\n      return {locked: prevState.locked === 'on' ? 'off' : 'on'}\n    })\n  }\n\n  render () {\n    const locked = this.state.locked === 'on'\n\n    return (\n      <View as=\"div\" padding=\"xx-large\" background=\"primary-inverse\" id=\"inverseToggleContainer\">\n        <ToggleButton\n          status={locked ? 'pressed' : 'unpressed'}\n          color=\"primary-inverse\"\n          renderIcon={locked ? IconLockSolid : IconUnlockLine}\n          screenReaderLabel={locked ? 'Unlock assignment' : 'Lock assignment'}\n          renderTooltipContent={locked ? 'Unlock' : 'Lock'}\n          onClick={this.handleLocked}\n          mountNode={() => document.getElementById('inverseToggleContainer')}\n        />\n      </View>\n    )\n  }\n}\nrender(<InverseExample />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use for toggling a setting or status between one of two states</Figure.Item>\n    <Figure.Item>Use <code>color=\"primary-inverse\"</code> on dark backgrounds so your icon and tooltip are visible</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use text inside a <code>ToggleButton</code></Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Byline":"\nA byline component with a visual and a caption:\n\n```js\n---\nexample: true\n---\n<Byline description={lorem.sentence()}>\n  <Avatar name=\"Julia Childer\" />\n</Byline>\n```\n\nCreate a heading by using the `title` prop, and add space around the Byline\ncomponent via the `margin` prop. To constrain the component's width, use\nthe `size` prop.\n\nYou can also adjust the alignment of the visual object with the descriptive text by\nsetting the `alignContent` prop.\n\n```js\n---\nexample: true\n---\n<Byline\n  margin=\"x-large auto\"\n  size=\"small\"\n  alignContent=\"top\"\n  title=\"Graham Taylor\"\n  description={lorem.paragraph()}\n>\n  <Avatar name=\"Graham Taylor\" />\n</Byline>\n```\n\n```js\n---\nexample: true\n---\n<Byline\n  description={\n    <View display=\"block\" margin=\"0 0 0 x-small\">\n      <Heading level=\"h2\">\n        <Link href=\"#\">Clickable Heading</Link>\n      </Heading>\n      <Text\n        size=\"x-small\"\n        transform=\"uppercase\"\n        letterSpacing=\"expanded\"\n      >\n        Something here\n      </Text>\n    </View>\n  }>\n  <SVGIcon src={iconExample} title=\"love\" size=\"small\" color=\"success\" />\n</Byline>\n```\n","Calendar":"\nThe `Calendar` component provides a visual interface for date data.\n\n### Composing a Calendar in your Application\nBy design, the `Calendar` component does not dictate which date libraries or\nformats you use in your application. The following example demonstrates how a\nbasic `Calendar` might be created using utilities from\n[Moment.js](https://momentjs.com/docs/#/parsing/).\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass Example extends React.Component {\n  state = {\n    todayDate: parseDate('2019-08-16').toISOString(),\n    renderedDate: parseDate('2019-08-02').toISOString()\n  }\n\n  generateMonth = () => {\n    const date = parseDate(this.state.renderedDate)\n      .startOf('month')\n      .startOf('week')\n\n    return Array.apply(null, Array(Calendar.DAY_COUNT)).map(() => {\n      const currentDate = date.clone()\n      date.add(1, 'days')\n      return currentDate\n    })\n  }\n\n  renderWeekdayLabels = () => {\n    const date = parseDate(this.state.renderedDate).startOf('week')\n\n    return Array.apply(null, Array(7)).map(() => {\n      const currentDate = date.clone()\n      date.add(1, 'day')\n\n      return (\n        <AccessibleContent alt={currentDate.format('dddd')}>\n          {currentDate.format('dd')}\n        </AccessibleContent>\n      )\n    })\n  }\n\n  handleRenderNextMonth = (event) => {\n    this.modifyRenderedMonth(1)\n  }\n\n  handleRenderPrevMonth = (event) => {\n    this.modifyRenderedMonth(-1)\n  }\n\n  modifyRenderedMonth = (step) => {\n    this.setState(({ renderedDate }) => {\n      const date = parseDate(renderedDate)\n      date.add(step, 'month')\n      return { renderedDate: date.toISOString() }\n    })\n  }\n\n  renderDay (date) {\n    const {\n      renderedDate,\n      todayDate,\n    } = this.state\n\n    return (\n      <Calendar.Day\n        key={date.toISOString()}\n        date={date.toISOString()}\n        isOutsideMonth={!date.isSame(renderedDate, 'month')}\n        isToday={date.isSame(todayDate, 'day')}\n        label={`${date.format('D')} ${date.format('MMMM')} ${date.format('YYYY')}`}\n      >\n        {date.format('D')}\n      </Calendar.Day>\n    )\n  }\n\n  render () {\n    const date = parseDate(this.state.renderedDate)\n\n    const buttonProps = (type = 'prev') => ({\n      size: 'small',\n      withBackground: false,\n      withBorder: false,\n      renderIcon: type === 'prev'\n        ? <IconArrowOpenStartSolid color=\"primary\" />\n        : <IconArrowOpenEndSolid color=\"primary\" />,\n      screenReaderLabel: type === 'prev' ? 'Previous month' : 'Next month'\n    })\n\n    return (\n      <Calendar\n        renderPrevMonthButton={<IconButton {...buttonProps('prev')} />}\n        renderNextMonthButton={<IconButton {...buttonProps('next')} />}\n        renderNavigationLabel={\n          <span>\n            <div>{date.format('MMMM')}</div>\n            <div>{date.format('YYYY')}</div>\n          </span>\n        }\n        renderWeekdayLabels={this.renderWeekdayLabels()}\n        onRequestRenderNextMonth={this.handleRenderNextMonth}\n        onRequestRenderPrevMonth={this.handleRenderPrevMonth}\n      >\n        {this.generateMonth().map(date => this.renderDay(date))}\n      </Calendar>\n    )\n  }\n}\n\nconst locale = 'en-us'\nconst timezone = 'America/Denver'\n\nconst parseDate = (dateStr) => {\n  return moment.tz(dateStr, [moment.ISO_8601], locale, timezone)\n}\n\nrender(<Example />)\n```\n\n#### Some dates to keep track of\n* `todayDate` - the date that represents today\n* `renderedDate` - the date that the user is viewing as they navigate the `Calendar`\n\n#### Generating a month\nWe generate a month based on the `renderedDate` value. The `Calendar` always\ndisplays 6 weeks or 42 days (42 is defined as a constant `Calendar.DAY_COUNT`),\nso we pad our month values with days from the previous and next month if\nnecessary. The complete implementation can be seen in the `generateMonth` function\nin our example.\n\n#### Rendering days\nUsing the month data, we can now map it to children of type `Calendar.Day`.\nAs we render each day, if it is outside the current month we can set the\n`isOutsideMonth` prop. We can also set the `isToday` prop if it is the current\ndate. For accessibility, it is recommended that you provide more information to\neach `Calendar.Day` using the label prop. This label will help screen readers to\nhave important context as the `Calendar` is navigated. It should include the day,\nmonth, and the year (Ex. instead of `1` we would provide `1 August 2019`).\n\n#### Rendering weekday labels\n`Calendar` requires you to provide an array of 7 labels that correspond to each\nday of the week via the `renderWeekdayLabels` prop. The visible portion of the\nlabel should be abbreviated (no longer than three characters). Note that screen\nreaders will read this content preceding each date as the `Calendar` is navigated.\nConsider using [AccessibleContent](#AccessibleContent) with the `alt` prop\ncontaining the full day name for assistive technologies and the children containing\nthe abbreviation. ex. `[<AccessibleContent alt=\"Sunday\">Sun</AccessibleContent>, ...]`\n\n#### Rendering next and previous month buttons\nThe `renderNextMonthButton` and `renderPrevMonthButton` can be supplied using the\n[IconButton](#IconButton) component with the `size` prop set to\n`small`, the `withBackground` and `withBorder` props both set to `false`, and the `renderIcon` prop set to [IconArrowOpenStart](#iconography) or\n[IconArrowOpenEnd](#iconography).\n","Checkbox":"\nBy default, the Checkbox component is a custom styled HTML checkbox. To default the checkbox to checked,\nset the `defaultChecked` prop.\n\nAdjust the size of the checkbox and label text via the `size` prop. The default size is\n`medium`.\n\n```js\n---\nexample: true\n---\n<Checkbox label={lorem.sentence()} value=\"medium\" defaultChecked />\n```\n\nThe default Checkbox in its disabled state:\n\n```js\n---\nexample: true\n---\n<CheckboxGroup\n  defaultValue={['medium']}\n  name=\"example\"\n  description={<ScreenReaderContent>Checkbox examples</ScreenReaderContent>}\n>\n  <Checkbox label={lorem.sentence()} value=\"medium\" disabled />\n  <Checkbox label={lorem.sentence()} value=\"small\" disabled />\n</CheckboxGroup>\n```\n\nThe `indeterminate` property triggers a visual state that handles\nsituations where \"child\" Checkboxes are neither all checked nor all\nunchecked. Note the use of `aria-labelledby` to make the relationship\nbetween the parent and child Checkboxes clear to screenreader users.\n\n*Note: the `toggle` variant does not support the `indeterminate`\nproperty.*\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: ['his111', 'eng203']\n    }\n  }\n\n  updateValue (value) {\n    const index = this.state.value.indexOf(value)\n\n    if (index === -1) {\n      this.setState({ value: [...this.state.value, value] })\n    } else {\n      this.setState((prevState) => ({\n        value: [...prevState.value.slice(0, index), ...prevState.value.slice(index + 1)]\n      }))\n    }\n  }\n\n  render () {\n    return (\n      <FormFieldGroup\n        description={\n          <ScreenReaderContent>\n            <span id=\"groupLabel\">Courses to edit</span>\n          </ScreenReaderContent>\n        }\n        rowSpacing=\"small\"\n      >\n        <Checkbox\n          aria-labelledby=\"groupLabel selectAllLabel\"\n          label={<span id=\"selectAllLabel\">Select all courses</span>}\n          value=\"all\"\n          onChange={() => this.setState({\n            value: this.state.value.length === 3 ? [] : ['eng203', 'sci101', 'his111']\n          })}\n          checked={this.state.value.length === 3}\n          indeterminate={this.state.value.length > 0 && this.state.value.length < 3}\n        />\n        <View as=\"div\" padding=\"0 0 0 medium\">\n          <Checkbox\n            aria-labelledby=\"groupLabel eng203Label\"\n            label={<span id=\"eng203Label\">English 203</span>}\n            value=\"eng203\"\n            name=\"courses\"\n            onChange={(event) => { this.updateValue(event.target.value) }}\n            checked={this.state.value.indexOf('eng203') !== -1}\n          />\n        </View>\n        <View as=\"div\" padding=\"0 0 0 medium\">\n          <Checkbox\n            aria-labelledby=\"groupLabel sci101Label\"\n            label={<span id=\"sci101Label\">Science 101</span>}\n            value=\"sci101\"\n            name=\"courses\"\n            onChange={(event) => {\n              this.updateValue(event.target.value)\n            }}\n            checked={this.state.value.indexOf('sci101') !== -1}\n          />\n        </View>\n        <View as=\"div\" padding=\"0 0 0 medium\">\n          <Checkbox\n            aria-labelledby=\"groupLabel hist101Label\"\n            label={<span id=\"hist101Label\">History 111</span>}\n            value=\"his111\"\n            name=\"courses\"\n            onChange={(event) => {\n              this.updateValue(event.target.value)\n            }}\n            checked={this.state.value.indexOf('his111') !== -1}\n          />\n        </View>\n      </FormFieldGroup>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\nSetting the `variant` prop to `toggle` turns the checkbox into a toggle switch. For __toggle only__ the size prop affects the size of the label and not the actual size of the switch.\n\n```js\n---\nexample: true\n---\n<FormFieldGroup description={<ScreenReaderContent>Checkbox examples</ScreenReaderContent>}>\n  <Checkbox label=\"Small size\" value=\"small\" variant=\"toggle\" size=\"small\" defaultChecked />\n  <Checkbox label=\"Medium size\" value=\"medium\" variant=\"toggle\" />\n  <Checkbox label=\"Large size\" value=\"large\" variant=\"toggle\" size=\"large\" defaultChecked />\n</FormFieldGroup>\n```\n\nTo change the label placement for the toggle variety, use the labelPlacement prop.  The default\nplacement is 'end'.\n\n*Note: the `simple` variant does not support the `labelPlacement`\nproperty.*\n\n```js\n---\nexample: true\n---\n<FormFieldGroup description={<ScreenReaderContent>Toggle label examples</ScreenReaderContent>}>\n  <Checkbox label=\"Top\" variant=\"toggle\" labelPlacement=\"top\" defaultChecked />\n  <Checkbox label=\"Start\" variant=\"toggle\" labelPlacement=\"start\" />\n  <Checkbox label=\"End\" variant=\"toggle\" labelPlacement=\"end\" defaultChecked />\n</FormFieldGroup>\n```\n\nYou might want to hide the label text when using the toggle switch variant. Do that by wrapping\nthe text in the [ScreenReaderContent](#ScreenReaderContent) component.\n\n```js\n---\nexample: true\n---\n<Checkbox\n  label={<ScreenReaderContent>Screenreader-accessible label</ScreenReaderContent>}\n  value=\"accessible\"\n  variant=\"toggle\"\n/>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Align to the left side of the label</Figure.Item>\n    <Figure.Item>Use when multiple selections are allowed</Figure.Item>\n    <Figure.Item>Use to save space from toggles</Figure.Item>\n    <Figure.Item>Stack vertically if there is more than two options to select</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Run more than two checkboxes horizontally</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","CheckboxGroup":"\nA `<CheckboxGroup/>` is a group of [Checkbox](#Checkbox) components that share the same name. You can\nset an array `value` for the entire group and it will handle setting the `checked` and `name` props for you.\nThe Checkbox components can be rendered vertically or horizontally using the `layout` property.\n\n```js\n---\nexample: true\n---\n<FormFieldGroup description={<ScreenReaderContent>CheckboxGroup examples</ScreenReaderContent>}>\n  <CheckboxGroup name=\"sports\"\n    onChange={function (value) { console.log(value) }}\n    defaultValue={['football', 'volleyball']}\n    description=\"Select your favorite sports\"\n  >\n    <Checkbox label=\"Football\" value=\"football\" />\n    <Checkbox label=\"Basketball\" value=\"basketball\" />\n    <Checkbox label=\"Volleyball\" value=\"volleyball\" />\n    <Checkbox label=\"Other\" value=\"other\" />\n  </CheckboxGroup>\n  <CheckboxGroup name=\"sports\" size=\"small\"\n    layout=\"columns\"\n    onChange={function (value) { console.log(value) }}\n    defaultValue={['football', 'volleyball']}\n    description=\"Select your favorite sports\"\n  >\n    <Checkbox label=\"Football\" value=\"football\" />\n    <Checkbox label=\"Basketball\" value=\"basketball\" />\n    <Checkbox label=\"Volleyball\" value=\"volleyball\" />\n    <Checkbox label=\"Other\" value=\"other\" />\n  </CheckboxGroup>\n</FormFieldGroup>\n```\n\nThe `toggle` variant with `layout` prop set to `inline` and an error message:\n\n```js\n---\nexample: true\n---\n<CheckboxGroup\n  name=\"sports2\"\n  layout=\"inline\"\n  messages={[\n    { text: 'Invalid name', type: 'error' }\n  ]}\n  onChange={function (value) { console.log(value) }}\n  defaultValue={['soccer', 'volleyball']}\n  description=\"I wish to receive score alerts for\"\n>\n  <Checkbox label=\"Football\" value=\"football\" variant=\"toggle\" />\n  <Checkbox label=\"Basketball\" value=\"basketball\" variant=\"toggle\" />\n  <Checkbox label=\"Volleyball\" value=\"volleyball\" variant=\"toggle\" />\n  <Checkbox label=\"Soccer\" value=\"soccer\" variant=\"toggle\" />\n</CheckboxGroup>\n```\n\nYou can set disable/readonly on a group and it works much the same way as a RadioInputGroup.\n\nA `disabled` CheckboxGroup:\n\n```js\n---\nexample: true\n---\n<CheckboxGroup\n  name=\"sports4\"\n  onChange={function (value) { console.log(value) }}\n  defaultValue={['soccer', 'volleyball']}\n  description=\"I wish to receive score alerts for\"\n  disabled\n>\n  <Checkbox label=\"Football\" value=\"football\" variant=\"toggle\" />\n  <Checkbox label=\"Basketball\" value=\"basketball\" variant=\"toggle\" />\n  <Checkbox label=\"Volleyball\" value=\"volleyball\" variant=\"toggle\" />\n  <Checkbox label=\"Soccer\" value=\"soccer\" variant=\"toggle\" />\n</CheckboxGroup>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Align to the left side of the label</Figure.Item>\n    <Figure.Item>Use when multiple selections are allowed</Figure.Item>\n    <Figure.Item>Use to save space from toggles</Figure.Item>\n    <Figure.Item>Stack vertically if there is more than two options to select</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Run more than two checkboxes horizontally</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Ensure CheckboxGroups are labeled correctly so screen readers announce what the group of checkboxes are used for</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","CodeEditor":"\nA wrapper around the popular [CodeMirror](https://codemirror.net/) text editor.\n\n### Code layout\n\nThe CodeEditor component can be used to display code via the `defaultValue` prop.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super()\n    this.state = { code: `function findSequence(goal) {\n  function find(start, history) {\n    if (start == goal)\n      return history;\n    else if (start > goal)\n      return null;\n    else\n      return find(start + 5, \"(\" + history + \" + 5)\") ||\n             find(start * 3, \"(\" + history + \" * 3)\");\n  }\n  return find(1, \"1\");\n}` }\n  }\n\n  handleChange = (value) => {\n    this.setState({ code: value})\n  }\n\n  render () {\n    return (\n      <CodeEditor\n        label='code editor'\n        value={this.state.code}\n        language='javascript'\n        options={{ lineNumbers: false }}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nrender(<Example />)\n```\n","DateInput":"\nThe `DateInput` component provides a visual interface for inputting date data.\n\n### Composing a DateInput in your Application\n`DateInput` uses `Calendar` internally. See [Calendar](#Calendar) for more detailed\ndocumentation and guided examples. `DateInput` shares many of the same `Calendar`\nprops and it is created the same way with some additional attributes and callback\nmethods for the input. The following example is configured similar to the `Calendar`\nexamples using [Moment.js](https://momentjs.com/docs/#/parsing/).\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass Example extends React.Component {\n  state = {\n    value: '',\n    isShowingCalendar: false,\n    todayDate: parseDate('2019-08-28').toISOString(),\n    selectedDate: null,\n    renderedDate: parseDate('2019-08-01').toISOString(),\n    disabledDates: [\n      parseDate('2019-08-14').toISOString(),\n      parseDate('2019-08-19').toISOString(),\n      parseDate('2019-08-29').toISOString()\n    ],\n    messages: []\n  }\n\n  generateMonth = (renderedDate = this.state.renderedDate) => {\n    const date = parseDate(renderedDate)\n      .startOf('month')\n      .startOf('week')\n\n    return Array.apply(null, Array(Calendar.DAY_COUNT)).map(() => {\n      const currentDate = date.clone()\n      date.add(1, 'days')\n      return currentDate\n    })\n  }\n\n  formatDate = (dateInput) => {\n    const date = parseDate(dateInput)\n    return `${date.format('MMMM')} ${date.format('D')}, ${date.format('YYYY')}`\n  }\n\n  handleChange = (event, { value }) => {\n    const newDateStr = parseDate(value).toISOString()\n\n    this.setState(({ renderedDate }) => ({\n      value,\n      selectedDate: newDateStr,\n      renderedDate: newDateStr || renderedDate,\n      messages: []\n    }))\n  }\n\n  handleShowCalendar = (event) => {\n    this.setState({ isShowingCalendar: true })\n  }\n\n  handleHideCalendar = (event) => {\n    this.setState(({ selectedDate, disabledDates, value }) => ({\n      isShowingCalendar: false,\n      value: selectedDate ? this.formatDate(selectedDate) : value\n    }))\n  }\n\n  handleValidateDate = (event) => {\n    this.setState(({ selectedDate, value }) => {\n      // We don't have a selectedDate but we have a value. That means that the value\n      // could not be parsed and so the date is invalid\n      if (!selectedDate && value) {\n        return {\n          messages: [{ type: 'error', text: 'This date is invalid' }],\n        }\n      }\n      // Display a message if the user has typed in a value that corresponds to a\n      // disabledDate\n      if (this.isDisabledDate(parseDate(selectedDate))) {\n        return {\n          messages: [{ type: 'error', text: 'This date is disabled' }],\n        }\n      }\n    })\n  }\n\n  handleDayClick = (event, { date }) => {\n    this.setState({\n      selectedDate: date,\n      renderedDate: date,\n      messages: []\n    })\n  }\n\n  handleSelectNextDay = (event) => {\n    this.modifySelectedDate('day', 1)\n  }\n\n  handleSelectPrevDay = (event) => {\n    this.modifySelectedDate('day', -1)\n  }\n\n  handleRenderNextMonth = (event) => {\n    this.modifyRenderedDate('month', 1)\n  }\n\n  handleRenderPrevMonth = (event) => {\n    this.modifyRenderedDate('month', -1)\n  }\n\n  modifyRenderedDate = (type, step) => {\n    this.setState(({ renderedDate }) => {\n      return { renderedDate: this.modifyDate(renderedDate, type, step) }\n    })\n  }\n\n  modifySelectedDate = (type, step) => {\n    this.setState(({ selectedDate, renderedDate }) => {\n      // We are either going to increase or decrease our selectedDate by 1 day.\n      // If we do not have a selectedDate yet, we'll just select the first day of\n      // the currently rendered month instead.\n      const newDate = selectedDate\n        ? this.modifyDate(selectedDate, type, step)\n        : parseDate(renderedDate).startOf('month').toISOString()\n\n      return {\n        selectedDate: newDate,\n        renderedDate: newDate,\n        value: this.formatDate(newDate),\n        messages: []\n      }\n    })\n  }\n\n  modifyDate = (dateStr, type, step) => {\n    const date = parseDate(dateStr)\n    date.add(step, type)\n    return date.toISOString()\n  }\n\n  isDisabledDate = (date, disabledDates = this.state.disabledDates) => {\n    return disabledDates.reduce((result, disabledDate) => {\n      return result || date.isSame(disabledDate, 'day')\n    }, false)\n  }\n\n  renderWeekdayLabels = () => {\n    const date = parseDate(this.state.renderedDate).startOf('week')\n\n    return Array.apply(null, Array(7)).map(() => {\n      const currentDate = date.clone()\n      date.add(1, 'day')\n\n      return (\n        <AccessibleContent alt={currentDate.format('dddd')}>\n          {currentDate.format('dd')}\n        </AccessibleContent>\n      )\n    })\n  }\n\n  renderDays () {\n    const {\n      renderedDate,\n      selectedDate,\n      todayDate,\n    } = this.state\n\n    return this.generateMonth().map((date) => {\n      const dateStr = date.toISOString()\n\n      return (\n        <DateInput.Day\n          key={dateStr}\n          date={dateStr}\n          interaction={this.isDisabledDate(date) ? 'disabled' : 'enabled'}\n          isSelected={date.isSame(selectedDate, 'day')}\n          isToday={date.isSame(todayDate, 'day')}\n          isOutsideMonth={!date.isSame(renderedDate, 'month')}\n          label={`${date.format('D')} ${date.format('MMMM')} ${date.format('YYYY')}`}\n          onClick={this.handleDayClick}\n        >\n          {date.format('D')}\n        </DateInput.Day>\n      )\n    })\n  }\n\n  render () {\n    const {\n      value,\n      isShowingCalendar,\n      renderedDate,\n      messages\n    } = this.state\n\n    const date = parseDate(this.state.renderedDate)\n\n    const buttonProps = (type = 'prev') => ({\n      size: 'small',\n      withBackground: false,\n      withBorder: false,\n      renderIcon: type === 'prev'\n        ? <IconArrowOpenStartSolid color=\"primary\" />\n        : <IconArrowOpenEndSolid color=\"primary\" />,\n      screenReaderLabel: type === 'prev' ? 'Previous month' : 'Next month'\n    })\n\n    return (\n      <DateInput\n        renderLabel=\"Choose a date\"\n        assistiveText=\"Type a date or use arrow keys to navigate date picker.\"\n        value={value}\n        onChange={this.handleChange}\n        width=\"20rem\"\n        isInline\n        messages={messages}\n        isShowingCalendar={isShowingCalendar}\n        onRequestValidateDate={this.handleValidateDate}\n        onRequestShowCalendar={this.handleShowCalendar}\n        onRequestHideCalendar={this.handleHideCalendar}\n        onRequestSelectNextDay={this.handleSelectNextDay}\n        onRequestSelectPrevDay={this.handleSelectPrevDay}\n        onRequestRenderNextMonth={this.handleRenderNextMonth}\n        onRequestRenderPrevMonth={this.handleRenderPrevMonth}\n        renderNavigationLabel={\n          <span>\n            <div>{date.format('MMMM')}</div>\n            <div>{date.format('YYYY')}</div>\n          </span>\n        }\n        renderPrevMonthButton={<IconButton {...buttonProps('prev')} />}\n        renderNextMonthButton={<IconButton {...buttonProps('next')} />}\n        renderWeekdayLabels={this.renderWeekdayLabels()}\n      >\n        {this.renderDays()}\n      </DateInput>\n    )\n  }\n}\n\nconst locale = 'en-us'\nconst timezone = 'America/Denver'\n\nconst parseDate = (dateStr) => {\n  return moment.tz(dateStr, [moment.ISO_8601, 'llll', 'LLLL', 'lll', 'LLL', 'll', 'LL', 'l', 'L'], locale, timezone)\n}\n\nrender(<Example />)\n```\n\n#### Some dates to keep track of\n* `todayDate` - the date that represents today\n* `selectedDate` - the user's selected date\n* `renderedDate` - the date that the user is viewing as they navigate the `Calendar`\n* `disabledDates` - any dates that are disabled\n\n#### Rendering `DateInput.Day` children\n`DateInput` accepts children of type `DateInput.Day`. Both `DateInput.Day` and\n`Calendar.Day` are exporting the same `Day` component. The documentation for\n`Day` can be found in [Calendar](#Calendar).\n\n#### Handling onChange\nWhen the `DateInput` fires an `onChange` event:\n* The value should be updated and any messages should be cleared\n* Verify if the value can be parsed as a date\n* If it can be parsed, update the `selectedDate` and `renderedDate` with that date\n* If it cannot be parsed, the `selectedDate` is set to null and the `renderedDate`\nstays the same\n\n#### Handling onRequestHideCalendar\nWhen the `DateInput` fires `onRequestHideCalendar`:\n* The calendar should be hidden\n* The value should be updated with a formatted version of the `selectedDate` if\nit exists. See \"Formatting user input\" below\n\n#### Formatting user input\nDate formats can vary widely (ex. '8-9-19' vs '8/9/19'). When the `Calendar` is\nhidden, the input value should be converted to a consistent, standardized format.\nThe formatted result of the raw input '8/9/19'\ncould be \"August 9, 2019\".\n\n#### Handling onRequestValidateDate\nWhen the `DateInput` fires `onRequestValidateDate`, the provided user input\nshould be validated. If the value cannot be parsed as a valid date, or if the\n`selectedDate` is disabled, the user should be notified via the `messages` prop.\n","Dialog":"\nThe `Dialog` component is a utility that is used by\n[Popover](#Popover), [Modal](#Modal) and [Tray](#Tray) for keyboard accessibility.\n\nElements outside of the `Dialog` are hidden from screen readers automatically when `shouldContainFocus` is set to `true` or `screenreader`. The `liveRegion` prop can be used to specify any elements that should not be hidden.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { open: false }\n  }\n\n  render () {\n    return (\n      <View\n        as=\"div\"\n        padding=\"large\"\n      >\n        <Button\n          onClick={() => this.setState({ open: true })}\n        >\n          Open the Dialog\n        </Button>\n        <Portal open={this.state.open}>\n          <Mask>\n            <Dialog\n              open={this.state.open}\n              shouldContainFocus\n              defaultFocusElement={() => this._firstName}\n              shouldReturnFocus\n              onDismiss={() => this.setState({ open: false })}\n            >\n              <View\n                as=\"div\"\n                maxWidth=\"40rem\"\n                maxHeight=\"30rem\"\n                background=\"primary\"\n                shadow=\"above\"\n                style={{position: 'relative'}}\n                padding=\"medium\"\n              >\n                <CloseButton\n                  placement=\"end\"\n                  onClick={() => this.setState({ open: false })}\n                  screenReaderLabel=\"Close\"\n                />\n                <FormFieldGroup\n                  description={<Heading level=\"h4\" as=\"span\">Full name</Heading>}\n                  layout=\"columns\"\n                >\n                  <TextInput width=\"12rem\" renderLabel=\"First\" inputRef={(c) => this._firstName = c} />\n                  <TextInput width=\"12rem\" renderLabel=\"Last\" />\n                </FormFieldGroup>\n              </View>\n            </Dialog>\n          </Mask>\n        </Portal>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Keyboard focus must be set to a dialog when it appears; usually on the first interactive element within the dialog</Figure.Item>\n    <Figure.Item>A modal dialog must contain keyboard focus until it closes, so that keyboard or screen reader users won't mistakenly interact with background content that is meant to be hidden or inaccessible</Figure.Item>\n    <Figure.Item>A non-modal dialog must close when it loses focus</Figure.Item>\n    <Figure.Item>When the user closes a dialog, focus must return to a logical place within the page. This is usually to the element that triggered the dialog</Figure.Item>\n    <Figure.Item>When dialogs are triggered by buttons or links (buttons are recommended), accessibility can be further enhanced by applying aria-haspopup=\"dialog\" to the trigger. This will notify screen reader users that the trigger opens a dialog</Figure.Item>\n    <Figure.Item>We recommend that dialogs begin with a heading (typically an H2)</Figure.Item>\n    <Figure.Item>Dialogs should be able to be closed by clicking away, esc key and/or a close button</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","DrawerLayout":"\nThe `<DrawerLayout />` component creates a layout consisting of both `<DrawerLayout.Tray />` and `<DrawerLayout.Content />`.\nThe tray can be placed at the `start` or `end` position. When there is sufficient space available,\nthe tray is positioned alongside the content. As the screen gets smaller, the `<DrawerTray />` can\nbe configured to overlay the `<DrawerLayout.Content />`\n\nThe `minWidth` prop specifies a breakpoint. When the `<DrawerLayout.Content />` resizes such that the width is\nless than the designated `minWidth`, the tray overlays the content\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = {\n    open: false,\n    trayIsOverlayed: false\n  };\n  handleOverlayTrayChange = (trayIsOverlayed) => {\n    this.setState({ trayIsOverlayed })\n  };\n  handleTrayDismiss = () => {\n    this.setState({ open: false })\n  };\n  render () {\n    return (\n      <View\n        height=\"25rem\"\n        as=\"div\"\n        background=\"primary\"\n        position=\"relative\"\n      >\n        { this.state.trayIsOverlayed && this.state.open && <Mask onClick={this.handleTrayDismiss} /> }\n        <DrawerLayout onOverlayTrayChange={this.handleOverlayTrayChange}>\n          <DrawerLayout.Tray\n            id=\"DrawerLayoutTrayExample1\"\n            open={this.state.open}\n            placement=\"start\"\n            label=\"Drawer Tray Start Example\"\n            onDismiss={this.handleTrayDismiss}\n          >\n            <View\n              as=\"div\"\n              maxWidth=\"16rem\"\n              textAlign=\"center\"\n              margin=\"large auto\"\n              padding=\"small\"\n            >\n              <CloseButton\n                placement=\"end\"\n                offset=\"small\"\n                onClick={this.handleTrayDismiss}\n                screenReaderLabel=\"Close\"\n              />\n              <Avatar name=\"foo bar\" margin=\"0 0 small 0\" />\n              <Text as=\"div\" size=\"x-small\">\n                Hello from start tray with a small amount of placeholder content\n              </Text>\n            </View>\n          </DrawerLayout.Tray>\n          <DrawerLayout.Content label=\"Drawer content example\">\n            <div style={{background: 'white', height: '100%'}}>\n              <View as=\"div\" padding=\"x-large\">\n                <Heading border=\"bottom\">A simple drawer layout</Heading>\n                <Grid startAt=\"medium\" vAlign=\"middle\" colSpacing=\"none\">\n                  <Grid.Row>\n                    <Grid.Col>\n                      <Button\n                        margin=\"small 0\"\n                        size=\"small\"\n                        onClick={() => { this.setState({ open: true }) }}\n                        aria-haspopup={this.state.trayIsOverlayed ? 'dialog' : 'region'}\n                        aria-controls=\"DrawerLayoutTrayExample1\"\n                      >\n                        Expand tray\n                      </Button>\n                    </Grid.Col>\n                  </Grid.Row>\n                </Grid>\n                <Text size=\"x-small\">\n                  <p>{lorem.paragraph()}</p>\n                </Text>\n                <Text size=\"x-small\">\n                  <p>{lorem.paragraph()}</p>\n                </Text>\n              </View>\n            </div>\n          </DrawerLayout.Content>\n        </DrawerLayout>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\nMultiple `<DrawerLayout />` components can be nested in order to place trays on both sides\n\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = {\n    endOpen: false,\n    startOpen: false\n  };\n  render () {\n    return (\n      <View\n        height=\"40rem\"\n        display=\"block\"\n        background=\"primary\"\n      >\n        <DrawerLayout>\n          <DrawerLayout.Tray\n            open={this.state.endOpen}\n            placement=\"end\"\n            label=\"Drawer Tray End Example\"\n            onDismiss={() => {this.setState({ endOpen: false })}}\n          >\n            <View\n              as=\"div\"\n              maxWidth=\"48rem\"\n              textAlign=\"center\"\n              margin=\"large auto\"\n              padding=\"large\"\n            >\n              <CloseButton\n                placement=\"end\"\n                offset=\"small\"\n                onClick={() => {\n                  this.setState({ endOpen: false })\n                }}\n                screenReaderLabel=\"Close\"\n              />\n              <Text as=\"div\" size=\"x-small\">\n                Hello from end tray with a good amount of content as well\n              </Text>\n            </View>\n          </DrawerLayout.Tray>\n          <DrawerLayout.Content label=\"Drawer content example containing another layout\">\n            <DrawerLayout>\n              <DrawerLayout.Tray\n                label=\"Layout Tray Start Example\"\n                open={this.state.startOpen}\n                placement=\"start\"\n                onDismiss={() => {this.setState({ startOpen: false })}}\n              >\n                <View\n                  as=\"div\"\n                  maxWidth=\"16rem\"\n                  textAlign=\"center\"\n                  margin=\"large auto\"\n                  padding=\"small\"\n                >\n                  <CloseButton\n                    placement=\"end\"\n                    offset=\"small\"\n                    onClick={() => {\n                      this.setState({ startOpen: false })\n                    }}\n                    screenReaderLabel=\"Close\"\n                  />\n                  <Avatar name=\"foo bar\" margin=\"0 0 small 0\" />\n                  <Text as=\"div\" size=\"x-small\">\n                    Hello from start tray with a small amount of placeholder content\n                  </Text>\n                </View>\n              </DrawerLayout.Tray>\n              <DrawerLayout.Content label=\"Drawer content example containing a responsive \">\n                <div style={{background: 'white', height: '100%'}}>\n                  <View as=\"div\" padding=\"x-large\">\n                    <Heading border=\"bottom\">A nested drawer layout</Heading>\n                    <Grid startAt=\"medium\" vAlign=\"middle\" colSpacing=\"none\">\n                      <Grid.Row>\n                        <Grid.Col>\n                          <Button\n                            margin=\"small 0\"\n                            size=\"small\"\n                            onClick={() => { this.setState({ startOpen: true }) }}\n                            aria-haspopup=\"dialog\"\n                          >\n                            Expand start tray\n                          </Button>\n                        </Grid.Col>\n                        <Grid.Col width=\"auto\">\n                          <Button\n                            margin=\"small 0\"\n                            size=\"small\"\n                            onClick={() => { this.setState({ endOpen: true }) }}\n                            aria-haspopup=\"dialog\"\n                          >\n                            Expand end tray\n                          </Button>\n                        </Grid.Col>\n                      </Grid.Row>\n                      <Grid.Row colSpacing=\"medium\">\n                        <Grid.Col>\n                          <Img role=\"img\" src={placeholderImage(250, 250)} />\n                        </Grid.Col>\n                        <Grid.Col>\n                          <Img role=\"img\" src={placeholderImage(250, 250)} />\n                        </Grid.Col>\n                        <Grid.Col>\n                          <Img role=\"img\" src={placeholderImage(250, 250)} />\n                        </Grid.Col>\n                      </Grid.Row>\n                    </Grid>\n                    <Text size=\"x-small\">\n                      <p>{lorem.paragraph()}</p>\n                    </Text>\n                    <Text size=\"x-small\">\n                      <p>{lorem.paragraph()}</p>\n                    </Text>\n                  </View>\n                </div>\n              </DrawerLayout.Content>\n            </DrawerLayout>\n          </DrawerLayout.Content>\n        </DrawerLayout>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","Editable":"\nThe `Editable` component exists to support in-place editing of content on the page.\nPerhaps you have a page with some text, say the heading, that you'd like to let the user\nedit right there in-place. `Editable` manages the user's interactions which will flip\nthe rendering from the view mode to the edit mode in an accessible way. It is then just up\nto the consumer of `Editable` to provide _render properties_ which return the view component\nand the edit component.\n\nWhere `Editable` provides the state management and user interactions, it is not its\nresponsibility to provide the DOM structure to layout the component on the page.  We provide\na standard implementation of that in [`InPlaceEdit`](/#InPlaceEdit), which is where you\nwill find examples.\n\nUsing `Editable` gives you complete control, over how in-place editing\nshould look.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      mode: props.mode || 'view',\n      value: props.value || '',\n      buttonHasFocus: false,\n      readOnly: false\n    }\n    this.onFocusEditButton = null;\n  }\n\n  renderButton ({ isVisible, onClick, onFocus, onBlur, buttonRef }) {\n    if(this.state.readOnly) {\n      return null\n    }\n\n     // To correctly handle focus, always return the Button, but\n     // only visible if isVisible (if you want the UI to work in the standard way)\n    return (\n      <span style={{opacity: isVisible ? 1 : 0}}>\n        <Button\n          size=\"small\"\n          margin=\"0 0 0 x-small\"\n          onClick={onClick}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          elementRef={buttonRef}\n        >\n          Do it!\n        </Button>\n      </span>\n    )\n  }\n\n  renderViewer () {\n    return <span>{this.state.value}</span>\n  }\n\n  handleValueChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  handleModeChange = (newMode) => {\n    this.setState({mode: newMode})\n  }\n\n  renderEditor ({ onBlur, editorRef }) {\n    return (\n      <input\n        ref={editorRef}\n        onBlur={onBlur}\n        value={this.state.value}\n        onChange={this.handleValueChange}\n      />\n    )\n  }\n\n  renderMe = ({mode, getContainerProps, getViewerProps, getEditorProps, getEditButtonProps}) => {\n    return (\n      <View\n        {...getContainerProps()}\n      >\n        {mode === 'view' ? this.renderViewer(getViewerProps()) : null}\n        {mode === 'edit' ? this.renderEditor(getEditorProps()): null}\n        {this.renderButton(getEditButtonProps())}\n      </View>\n    )\n  }\n\n  onChangeReadOnly = (event) => {\n    this.setState({readOnly: event.target.checked})\n  }\n\n  render () {\n    return  (\n      <View as=\"div\">\n        <View as=\"div\" margin=\"0 0 small 0\">\n          <Checkbox size=\"small\" label=\"Read Only\" checked={this.state.readOnly} onChange={this.onChangeReadOnly}/>\n        </View>\n        <Editable\n          mode={this.state.mode}\n          onChangeMode={this.handleModeChange}\n          render={this.renderMe}\n          value={this.state.value}\n          readOnly={this.state.readOnly}\n        />\n      </View>\n    )\n  }\n\n}\nrender(<Example value=\"you can edit me\" />)\n```\n","InPlaceEdit":"\n`InPlaceEdit` provides the DOM structure to organize the components that participate\nin in-place editing by calling the `renderViewer` and `renderEditor` _render props_\nin the context of the containing DOM sub-tree. It also takes care of wiring up the\nevent handlers required by [`Editable`](#Editable) to make the user interactions wrok.\n\nAs a controlled component, it is the responsibility of the consumer to maintain a some data to make this work.\nEach time `InPlaceEdit` is rendered, you must provide as props:\n-  the current `mode` prop, which defaults to `'view'`. The app will be notified of\nchanges in mode via the `onChangeMode` function property.\n- the current `value` prop, which primarily serves to trigger a re-render when the value changes\n\nThe view component, as returned by the `renderViewer` property can be anything you wish, but\nwill typically render some formatted text. It is up to the consumer to provide this component with\nthe current value.\n\nThe edit component, as returned by the `renderEditor` property is used to collect the user's\ninput. It is up to the consumer to provide the necessary properties to get the user provided value\n(typically `onChange`), and to provide the current value.\n\nSome components, like [Heading](#Heading) and [Text](#Text) can be made editable by setting their `as` property\nto `input` (and optionally the `type` property). The value of this approach is that the editable version\nwill render in the same style as the view, making for a nice user experience.  Other transitions,\n`Text` to `Select` or `DateTimeInput` for example, result in a wholesale change in the component's UI, and will alter\nthe space it consumes in the app.\n\nUse `InPlaceEdit` to edit `Text` using `Text as=\"input\"`. Also demonstrates how you might wish to handle\nthe case when the text is empty.  Use the checkbox to switch between inline and block layout.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mode: props.mode || 'view',\n      value: 'This is some text',\n      inline: true\n    }\n  }\n\n  // You must provide this to Editable to be\n  // notified of mode changes\n  handleChangeMode = (mode) => {\n    this.setState({mode})\n  }\n\n  // You attach an event handler to your edit component\n  // to be notified of value changes from user interactions\n  handleChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  // Renders the view component\n  // Be sure to give it the current value\n  renderView = () => (\n    <Text\n      color={this.state.value ? 'primary' : 'secondary'}\n      weight={this.state.value ? 'normal' : 'light'}\n      size=\"large\"\n    >\n      {this.state.value || 'Enter some text'}\n    </Text>\n  )\n\n  // Renders the edit component.\n  // You have to forward the props on, which\n  // includes an onBlur property to help manage\n  // the mode changes.\n  // Be sure to give it the current value\n  renderEdit = ({onBlur, editorRef}) => (\n    <Text\n      color=\"primary\"\n      size=\"large\"\n      as=\"input\"\n      type=\"text\"\n      value={this.state.value}\n      onChange={this.handleChange}\n      aria-label=\"The title\"\n      onBlur={onBlur}\n      elementRef={editorRef}\n    />\n  )\n\n  // Renders the edit button.\n  // Leverage the default implementation provided by InPlaceEdit\n  renderEditButton = (props) => {\n    props.label = `Edit title \"${this.state.value}\"`\n    return InPlaceEdit.renderDefaultEditButton(props)\n  }\n\n  onChangeLayout = (event) => {\n    this.setState({inline: event.target.checked})\n  }\n\n  render () {\n    return (\n      <View as=\"div\">\n        <InPlaceEdit\n          renderViewer={this.renderView}\n          renderEditor={this.renderEdit}\n          renderEditButton={this.renderEditButton}\n          onChangeMode={this.handleChangeMode}\n          mode={this.state.mode}\n          value={this.state.value}\n          inline={this.state.inline}\n        />\n        <View as=\"div\" margin=\"small 0\">\n          <Checkbox label=\"inline\" checked={this.state.inline} onChange={this.onChangeLayout} />\n        </View>\n      </View>\n    )\n  }\n}\nrender(<Example />)\n```\n\nA readOnly `InPlaceEdit`\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mode: props.mode || 'view',\n      value: 'This is some text',\n    }\n  }\n\n  // You must provide this to Editable to be\n  // notified of mode changes\n  handleChangeMode = (mode) => {\n    this.setState({mode})\n  }\n\n  // You attach an event handler to your edit component\n  // to be notified of value changes from user interactions\n  handleChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  // Renders the view component\n  // Be sure to give it the current value\n  renderView = () => (\n    <Text size=\"large\">\n      {this.state.value}\n    </Text>\n  )\n\n  // Renders the edit component.\n  // You have to forward the props on, which\n  // includes an onBlur property to help manage\n  // the mode changes.\n  // Be sure to give it the current value\n  renderEdit = ({onBlur, editorRef}) => (\n    <Text\n      size=\"large\"\n      as=\"input\"\n      type=\"text\"\n      value={this.state.value}\n      onChange={this.handleChange}\n      aria-label=\"The title\"\n      onBlur={onBlur}\n      elementRef={editorRef}\n    />\n  )\n\n  // Renders the edit button.\n  // Leverage the default implemetation provided by InPlaceEdit\n  renderEditButton = (props) => {\n    props.label = `Edit title \"${this.state.value}\"`\n    return InPlaceEdit.renderDefaultEditButton(props)\n  }\n\n  render () {\n    return (\n      <InPlaceEdit\n        readOnly\n        renderViewer={this.renderView}\n        renderEditor={this.renderEdit}\n        renderEditButton={this.renderEditButton}\n\n        onChangeMode={this.handleChangeMode}\n        mode={this.state.mode}\n\n        value={this.state.value}\n      />\n    )\n  }\n}\nrender(<Example />)\n```\n\nTo edit end-justified text, wrap `<InPlaceEdit />` in a\n`<View>` component, as follows:\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mode: props.mode || 'view',\n      value: 'This is some text',\n    }\n  }\n\n  // You must provide this to Editable to be\n  // notified of mode changes\n  handleChangeMode = (mode) => {\n    this.setState({mode})\n  }\n\n  // You attach an event handler to your edit component\n  // to be notified of value changes from user interactions\n  handleChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  // Renders the view component\n  // Be sure to give it the current value\n  renderView = () => (\n    <Text size=\"large\">\n      {this.state.value}\n    </Text>\n  )\n\n  // Renders the edit component.\n  // You have to forward the props on, which\n  // includes an onBlur property to help manage\n  // the mode changes.\n  // Be sure to give it the current value\n  renderEdit = ({onBlur, editorRef}) => (\n    <Text\n      size=\"large\"\n      as=\"input\"\n      type=\"text\"\n      value={this.state.value}\n      onChange={this.handleChange}\n      aria-label=\"The title\"\n      onBlur={onBlur}\n      elementRef={editorRef}\n    />\n  )\n\n  // Renders the edit button.\n  // Leverage the default implementation provided by InPlaceEdit\n  renderEditButton = (props) => {\n    props.label = `Edit title \"${this.state.value}\"`\n    return InPlaceEdit.renderDefaultEditButton(props)\n  }\n\n  render () {\n    return (\n      <View as=\"div\" textAlign=\"end\">\n        <InPlaceEdit\n          renderViewer={this.renderView}\n          renderEditor={this.renderEdit}\n          renderEditButton={this.renderEditButton}\n          onChangeMode={this.handleChangeMode}\n          mode={this.state.mode}\n          value={this.state.value}\n          editButtonPlacement='start'\n        />\n      </View>\n    )\n  }\n}\nrender(<Example />)\n```\n\nSame as the first example, but notifies `Editable`'s `onChange`\nwhen the user has finished editing and the value has changed.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mode: props.mode || 'view',\n      value: 'Edit me',\n      onChangeValue: undefined,\n    }\n  }\n\n  // typically provided by the application so it can\n  // be notified of value changes when the user is\n  // finished editing\n  onChange = (newValue) => {\n    this.setState({onChangeValue: newValue})\n  }\n\n\n  // You must provide this to Editable to be\n  // notified of mode changes\n  handleChangeMode = (mode) => {\n    this.setState({mode})\n  }\n\n  // You attach an event handler to your edit component\n  // to be notified of value changes from user interactions\n  handleChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  // Renders the view component\n  // Be sure to give it the current value\n  renderView = () => (\n    <Text size=\"large\">\n      {this.state.value}\n    </Text>\n  )\n\n  // Renders the edit component.\n  // You have to forward the props on, which\n  // includes an onBlur property to help manage\n  // the mode changes.\n  // Be sure to give it the current value\n  renderEdit = ({onBlur, editorRef}) => (\n    <Text\n      size=\"large\"\n      as=\"input\"\n      type=\"text\"\n      value={this.state.value}\n      onChange={this.handleChange}\n      aria-label=\"The title\"\n      onBlur={onBlur}\n      elementRef={editorRef}\n    />\n  )\n\n  // Renders the edit button.\n  // Leverage the default implemetation provided by InPlaceEdit\n  renderEditButton = (props) => {\n    props.label = `Edit title \"${this.state.value}\"`\n    return InPlaceEdit.renderDefaultEditButton(props)\n  }\n\n  render () {\n    return (\n      <View as=\"div\">\n        <InPlaceEdit\n          renderViewer={this.renderView}\n          renderEditor={this.renderEdit}\n          renderEditButton={this.renderEditButton}\n\n          onChangeMode={this.handleChangeMode}\n          mode={this.state.mode}\n\n          value={this.state.value}\n          onChange={this.onChange}\n        />\n        <div>\n          <Text fontStyle=\"italic\">\n            {this.state.onChangeValue !== undefined\n              ? `onChange said: ${this.state.onChangeValue}` : `You haven't edited me yet!`}\n          </Text>\n        </div>\n      </View>\n    )\n  }\n}\nrender(<Example />)\n```\n","Expandable":"\n`Expandable` handles the show/hide functionality for both [`ToggleDetails`](#ToggleDetails)\nand [`ToggleGroup`](#ToggleGroup).\n","FileDrop":"\n`FileDrop` is a consistent way to drag and drop, as well as browse your computer to upload a media file.\n\nThe `isDragAccepted` and `isDragRejected` props can be used to signal to the user if\nthe dragged files are going to be accepted or not (unfortunately, this only works as intended in Chrome\nand Firefox).\n\n```js\n---\nexample: true\n---\n<FileDrop\n  accept=\"image/*\"\n  onDropAccepted={([file]) => { console.log(`File accepted ${file.name}`) }}\n  onDropRejected={([file]) => { console.log(`File rejected ${file.name}`) }}\n  renderLabel={\n    <View as=\"div\" padding=\"xx-large large\" background=\"primary\">\n      <IconModuleLine size=\"large\" />\n      <Heading>Drop files here to add them to module</Heading>\n      <Text color=\"brand\">\n        Drag and drop, or click to browse your computer\n      </Text>\n    </View>\n  }\n/>\n```\n\nA disabled FileDrop\n\n```js\n---\nexample: true\n---\n<FileDrop\n  renderLabel={\n    <Billboard\n      heading=\"Upload your image\"\n      message=\"Drag and drop, or click to browse your computer\"\n      hero={<Img src={placeholderImage(1200, 300)} />}\n    />\n  }\n  interaction=\"disabled\"\n/>\n```\n\n### Accept\n\nThe `accept` prop dictates what type of files are allowed. It can be an array or comma-separated string of\n[MIME type formats](https://en.wikipedia.org/wiki/Media_type#Common_examples) and/or file extensions.\n\n```js\n---\nexample: true\n---\n<div>\n  <FileDrop\n    accept=\".csv\"\n    onDropAccepted={([file]) => { console.log(`File accepted ${file.name}`) }}\n    onDropRejected={([file]) => { console.log(`File rejected ${file.name}`) }}\n    renderLabel={\n      <View  background=\"secondary\" as=\"div\" textAlign=\"center\" padding=\"x-large large\">\n        <IconUploadSolid />\n        <Text as=\"div\" weight=\"bold\">\n          Upload document\n        </Text>\n        <Text>Drag and drop or <Text color=\"brand\">browse your files</Text></Text>\n        <Text size=\"small\" as=\"div\" lineHeight=\"double\">A single CSV document</Text>\n      </View>\n    }\n    display=\"inline-block\"\n    width=\"24rem\"\n    margin=\"x-small\"\n  />\n  <FileDrop\n    accept=\"video/*\"\n    onDropAccepted={([file]) => { console.log(`File accepted ${file.name}`) }}\n    onDropRejected={([file]) => { console.log(`File rejected ${file.name}`) }}\n    renderLabel={\n      <Billboard\n        size=\"small\"\n        message=\"All video file types\"\n        hero={<IconVideoLine />}\n      />\n    }\n    display=\"inline-block\"\n    width=\"12rem\"\n    margin=\"x-small\"\n  />\n</div>\n```\n\nFileDrop accepts the same `messages` prop as the other Instructure UI input components for providing\nform validation feedback. If there are `error` messages in the `messages` array, FileDrop's border\nwill turn the theme's `rejectedColor`.\n\n```js\n---\nexample: true\n---\n<FileDrop\n  accept=\".jpg\"\n  onDropAccepted={([file]) => { console.log(`File accepted ${file.name}`) }}\n  onDropRejected={([file]) => { console.log(`File rejected ${file.name}`) }}\n  messages={[{ text: 'Invalid file type', type: 'error' }]}\n  renderLabel={\n    <Billboard\n      size=\"small\"\n      message=\"Only .jpg files\"\n      hero={<IconImageLine />}\n    />\n  }\n  maxWidth=\"15rem\"\n  margin=\"0 auto\"\n/>\n```\n\n### shouldAllowMultiple\n\nIf the `shouldAllowMultiple` prop is `true`, FileDrop accepts multiple files.\n\n```js\n---\nexample: true\n---\n<FileDrop\n  shouldAllowMultiple={true}\n  onDropAccepted={(files) => {\n    console.log(`Files accepted ${files.map((f) => f.name).join(',')}`)\n  }}\n  renderLabel={\n    <View as=\"div\" textAlign=\"center\" padding=\"large\" margin=\"large 0 0 0\">\n      <IconAnnotateLine color=\"brand\" size=\"large\" />\n      <Text as=\"div\" color=\"brand\">\n        Drag and Drop or Click to Browser your Computer\n      </Text>\n    </View>\n  }\n  width=\"18rem\"\n  height=\"16rem\"\n  margin=\"x-small\"\n/>\n```\n\n### height Property\n\nIf the `height` property is set to `100%`, the FileDrop container will fill the available vertical space.\n\n```js\n---\nexample: true\n---\n<div style={{height: '30rem'}}>\n  <FileDrop\n    height=\"100%\"\n    renderLabel={\n      <Flex direction=\"column\" height=\"100%\" alignItems=\"center\" justifyItems=\"center\">\n        <Flex.Item padding=\"small\">\n          <IconPdfLine size=\"large\" />\n        </Flex.Item>\n        <Flex.Item padding=\"small\">\n          <Text size=\"large\">\n            Drag and Drop or Click to Browser your Computer\n          </Text>\n        </Flex.Item>\n        <Flex.Item padding=\"small\">\n          <Text color=\"secondary\" size=\"small\">\n            Accepted File Type is PDF\n          </Text>\n        </Flex.Item>\n      </Flex>\n    }\n  />\n</div>\n```\n","Flex":"\nThe Flex component makes it simple for developers to create multi-column\nlayouts with flexbox.\n\n### Layout direction\n\n**Note:** Use the `withVisualDebug` property to see the borders of Flex/Flex.Item while developing!\n\nFlex defaults to a `direction` of `row`, creating a horizontal layout. Change `direction` to\n`column` to stack your Flex.Items.\n\n> **Unless your layout has a specific/finite height, you probably don't need `direction=\"column\"`.** To create a layout of stacked elements, it is simpler to use multiple [View](#View) components with `display=\"block\"`.\n\n```js\n---\nexample: true\n---\n<div>\n  <Flex withVisualDebug margin=\"none none large\">\n    <Flex.Item>One</Flex.Item>\n    <Flex.Item>Two</Flex.Item>\n    <Flex.Item>Three</Flex.Item>\n    <Flex.Item>Four</Flex.Item>\n  </Flex>\n  <Flex withVisualDebug direction=\"column\" margin=\"none none large\">\n    <Flex.Item>One</Flex.Item>\n    <Flex.Item>Two</Flex.Item>\n    <Flex.Item>Three</Flex.Item>\n    <Flex.Item>Four</Flex.Item>\n  </Flex>\n  <Flex withVisualDebug direction=\"row-reverse\" margin=\"none none large\">\n    <Flex.Item>One</Flex.Item>\n    <Flex.Item>Two</Flex.Item>\n    <Flex.Item>Three</Flex.Item>\n    <Flex.Item>Four</Flex.Item>\n  </Flex>\n  <Flex withVisualDebug direction=\"column-reverse\">\n    <Flex.Item>One</Flex.Item>\n    <Flex.Item>Two</Flex.Item>\n    <Flex.Item>Three</Flex.Item>\n    <Flex.Item>Four</Flex.Item>\n  </Flex>\n</div>\n```\n\n### Sizing Flex.Items\n\nBy default, Flex.Items **expand to fit their contents**, even if that means overflowing\ntheir container.\n\n```js\n---\nexample: true\n---\n<Flex withVisualDebug>\n  <Flex.Item padding=\"x-small\">\n    Villum dolore eu fugiat nulla pariatur.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\">\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\">\n    Duis aute irure.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\">\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  </Flex.Item>\n</Flex>\n```\n\nAdding the `shouldShrink` property forces the Flex.Item to shrink as needed to fit inside its\ncontainer.\n\n```js\n---\nexample: true\n---\n<Flex withVisualDebug>\n  <Flex.Item padding=\"x-small\" shouldShrink>\n    Villum dolore eu fugiat nulla pariatur.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" shouldShrink>\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" shouldShrink>\n    Duis aute irure.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" shouldShrink>\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  </Flex.Item>\n</Flex>\n```\n\nThe `shouldGrow` property forces the Flex.Item to expand to fill in any available space.\n\n```js\n---\nexample: true\n---\n<Flex withVisualDebug>\n  <Flex.Item padding=\"x-small\" shouldShrink shouldGrow>\n    I am growing and shrinking!\n  </Flex.Item>\n  <Flex.Item>\n    I am not shrinking or growing.\n  </Flex.Item>\n</Flex>\n```\n\nThe `size` property sets the base size (accepts px, em, rem) for the Flex.Item. If the\n`direction` property is `row`, this is the item's **width**. If `direction` is `column`,\nthen it is the item's **height**. Flex.Items can grow beyond their `size`, but cannot\nshrink to less than their `size`.\n\n```js\n---\nexample: true\n---\n<Flex withVisualDebug>\n  <Flex.Item padding=\"x-small\" size=\"200px\">\n    I am always 200px.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" shouldShrink shouldGrow size=\"200px\">\n    I can grow, and shrink down to 200px.\n  </Flex.Item>\n  <Flex.Item padding=\"x-small\" size=\"25%\">\n    I am always 25%.\n  </Flex.Item>\n</Flex>\n```\n\n### Aligning Flex.Items\n\nBy default, Flex aligns its Flex.Items along the `center` of the axis. Use the `alignItems`\nproperty to change this behavior.\n\n`alignItems` can be overridden on individual Flex.Items through Flex.Item's `align` property.\n\n```js\n---\nexample: true\n---\n<Flex alignItems=\"end\" withVisualDebug>\n  <Flex.Item>\n    <Avatar name=\"Sarah Robinson\" size=\"large\" src={avatarSquare} />\n  </Flex.Item>\n  <Flex.Item shouldGrow shouldShrink>\n    I should be aligned to the bottom of the Avatar.\n  </Flex.Item>\n  <Flex.Item>\n    Me, too.\n  </Flex.Item>\n  <Flex.Item align=\"start\">\n    I am aligning myself to the top.\n  </Flex.Item>\n</Flex>\n```\n\n### Justifying Flex.Items\n\nUse the `justifyItems` property to change the justification of Flex.Items.\n\n```js\n---\nexample: true\n---\n<div>\n  <Flex justifyItems=\"center\" margin=\"0 0 large\" withVisualDebug>\n    <Flex.Item>\n      <Avatar name=\"Sarah Robinson\" size=\"large\" src={avatarSquare} />\n    </Flex.Item>\n    <Flex.Item>\n      We are all centered!\n    </Flex.Item>\n    <Flex.Item>\n      Yeah!\n    </Flex.Item>\n  </Flex>\n\n  <Flex justifyItems=\"space-between\" withVisualDebug margin=\"0 0 large\">\n    <Flex.Item>\n      <Avatar name=\"Sarah Robinson\" size=\"large\" src={avatarSquare} />\n    </Flex.Item>\n    <Flex.Item>\n      Ah, a little more space.\n    </Flex.Item>\n    <Flex.Item>\n      Totally.\n    </Flex.Item>\n  </Flex>\n\n  <Flex justifyItems=\"end\" withVisualDebug>\n    <Flex.Item>\n      <Avatar name=\"Sarah Robinson\" size=\"large\" src={avatarSquare} />\n    </Flex.Item>\n    <Flex.Item>\n      Smooshed again.\n    </Flex.Item>\n    <Flex.Item>\n      Ugh.\n    </Flex.Item>\n  </Flex>\n</div>\n```\n\n### Handling overflow\n\nWhen `direction` is set to `column`, Flex.Items' `overflowY` property is automagically set\nto `auto` to account for content overflow with a vertical scrollbar.\n\n> To override this default, simply set `overflowY` on the Flex.Item to either `visible` or `hidden`.\n\n```js\n---\nexample: true\n---\n<Flex\n  withVisualDebug\n  direction=\"column\"\n>\n  <Flex.Item padding=\"small\">\n    <Heading>Pandas are cute, right?</Heading>\n  </Flex.Item>\n  <Flex.Item size=\"150px\" padding=\"small\">\n    <Img src={avatarSquare} />\n  </Flex.Item>\n</Flex>\n```\n\n### A few common layouts\n\n#### Heading and button combination\n\n```js\n---\nexample: true\n---\n<Flex>\n  <Flex.Item shouldGrow shouldShrink padding=\"none medium none none\">\n    <Heading>Lorem ipsum dolor sit amet consectetur dolor sit</Heading>\n  </Flex.Item>\n  <Flex.Item>\n    <Button margin=\"none x-small none none\">\n      Cancel\n    </Button>\n    <Button color=\"success\" renderIcon={IconUserSolid}>\n      Add user\n    </Button>\n  </Flex.Item>\n</Flex>\n```\n\n#### Centered content (note the nested Flex components and use of the `wrap` property)\n\n```js\n---\nexample: true\n---\n<Flex height=\"32rem\" justifyItems=\"center\" padding=\"large\" withVisualDebug>\n  <Flex.Item shouldShrink shouldGrow textAlign=\"center\">\n\n    <Heading level=\"h1\" margin=\"0 0 medium\">An amazing thing!</Heading>\n\n    <Flex withVisualDebug wrap=\"wrap\" justifyItems=\"space-around\" margin=\"0 0 medium\">\n      <Flex.Item padding=\"small\">\n        <SVGIcon src={iconExample} size=\"medium\" title=\"Icon Example\" />\n        <Text weight=\"bold\" size=\"large\" as=\"div\">We love you!</Text>\n      </Flex.Item>\n      <Flex.Item padding=\"small\">\n        <SVGIcon src={iconExample} size=\"medium\" title=\"Icon Example\" />\n        <Text weight=\"bold\" size=\"large\" as=\"div\">We love you!</Text>\n      </Flex.Item>\n      <Flex.Item padding=\"small\">\n        <SVGIcon src={iconExample} size=\"medium\" title=\"Icon Example\" />\n        <Text weight=\"bold\" size=\"large\" as=\"div\">We love you!</Text>\n      </Flex.Item>\n    </Flex>\n\n    <div>\n      <Button color=\"primary\" size=\"large\">Sign up now!</Button>\n    </div>\n\n  </Flex.Item>\n</Flex>\n```\n\n#### Quick and dirty mobile app layout\n\n```js\n---\nexample: true\n---\n\n<Flex height=\"400px\" width=\"300px\" as=\"div\" direction=\"column\" withVisualDebug>\n\n  <Flex.Item padding=\"small\" as=\"header\" textAlign=\"center\">\n    <Heading level=\"h3\">App</Heading>\n  </Flex.Item>\n\n  <Flex.Item shouldGrow shouldShrink padding=\"small\" as=\"main\">\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  </Flex.Item>\n\n  <Flex.Item padding=\"small\" as=\"footer\">\n\n    <Flex withVisualDebug justifyItems=\"space-between\">\n      <Flex.Item>\n        <IconButton\n          renderIcon={IconEmailLine}\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Some app function\"\n        />\n      </Flex.Item>\n      <Flex.Item>\n        <IconButton\n          renderIcon={IconPrinterLine}\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Some app function\"\n        />\n      </Flex.Item>\n      <Flex.Item>\n        <IconButton\n          renderIcon={IconCalendarDayLine}\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Some app function\"\n        />\n      </Flex.Item>\n      <Flex.Item>\n        <IconButton\n          renderIcon={IconSettingsLine}\n          withBackground={false}\n          withBorder={false}\n          screenReaderLabel=\"Some app function\"\n        />\n      </Flex.Item>\n    </Flex>\n\n  </Flex.Item>\n</Flex>\n```\n","Focusable":"\nThe `Focusable` component can be used to identify when an element receives focus. `Focusable` accepts\na `render` or `children` method that returns content which must have exactly one\n[focusable](https://html.spec.whatwg.org/multipage/interaction.html#focusable-area) element.\n\n```javascript\n---\nexample: true\n---\n<Focusable>\n{({ focused }) => (\n  <span>\n    <div>\n      <Button>Focus me!</Button>\n    </div>\n    {focused && (\n      <ContextView\n        margin=\"small 0\"\n        placement=\"bottom\"\n        as=\"div\"\n        background=\"primary\"\n        padding=\"small\"\n        borderWidth=\"small\"\n        display=\"block\"\n      >\n        I&#39;m focused!\n      </ContextView>\n    )}\n  </span>\n)}\n</Focusable>\n```\n\nEasily implement a \"skip to content\" link for keyboard-only or screenreader users.\n\n```javascript\n---\nexample: true\n---\n<Focusable>\n{({ focused }) => {\n  return (\n    <div>\n      {\n        focused ?\n          <Link href=\"#mainContentExample\">Skip to content</Link> :\n          <ScreenReaderContent tabIndex=\"0\">Skip to content</ScreenReaderContent>\n      }\n      <View as=\"p\" id=\"mainContentExample\">\n        Tab into this code example to see a 'Skip to Content' link appear\n      </View>\n    </div>\n  )\n}}\n</Focusable>\n```\n","FormField":"\nThis is a helper component that is used by most of the custom form\ncomponents. In most cases it shouldn't be used directly.\n\n```js\n---\nexample: true\n---\n<FormField id=\"foo\" label=\"Opacity\" width=\"200px\">\n  <input style={{display: 'block', width: '100%'}}/>\n</FormField>\n```\n","FormFieldGroup":"\nThis is a helper component that is used by most of the custom form\ncomponents. Perfect if you need to wrap a complex group of form fields\n(Play with the different properties inside the code editor\nto see how they affect the overall look and feel). The first example\nsets the `layout to inline` and sets the `vAlign to middle` and `small rowSpacing`\n\n```js\n---\nexample: true\n---\n  <FormFieldGroup\n    description=\"Breakfast\"\n    rowSpacing=\"small\"\n    layout=\"inline\"\n    vAlign=\"middle\"\n  >\n    <TextInput renderLabel=\"Favorite Breakfast Eatery\"\n      messages={[\n      { text: 'Invalid name', type: 'error' }\n      ]}\n    />\n    <TextInput renderLabel=\"Favorite Side Dish\" />\n    <RadioInputGroup\n      name=\"beverage\"\n      description=\"Beverage of Choice\"\n      defaultValue=\"coffee\"\n      layout=\"columns\"\n    >\n      <RadioInput label=\"Juice\" value=\"juice\" />\n      <RadioInput label=\"Water\" value=\"water\" />\n      <RadioInput label=\"Coffee\" value=\"coffee\" />\n      <RadioInput label=\"Milk\" value=\"milk\" />\n      <RadioInput label=\"Soda\" value=\"soda\" />\n      <RadioInput label=\"Hot Tea\" value=\"tea\" />\n    </RadioInputGroup>\n  </FormFieldGroup>\n```\n\nThis example sets the `layout to columns` and sets the `vAlign to top`\nand the `colSpacing to medium`\n\n```js\n---\nexample: true\n---\n  <FormFieldGroup\n    description=\"Lunch\"\n    colSpacing=\"medium\"\n    layout=\"columns\"\n    vAlign=\"top\"\n  >\n    <TextInput renderLabel=\"Dining Style\" />\n    <TextInput renderLabel=\"Favorite Lunch Outing\"/>\n    <CheckboxGroup name=\"times\"\n      layout=\"stacked\"\n      onChange={function (value) { console.log(value) }}\n      defaultValue={['afternoon']}\n      description=\"Best Time to Head Out for Lunch\"\n    >\n      <Checkbox label=\"Between 11:00 and 11:30\" value=\"morning\" />\n      <Checkbox label=\"Between 11:30 and Noon\" value=\"early-afternoon\" />\n      <Checkbox label=\"Between Noon and 1:00\" value=\"afternoon\" />\n      <Checkbox label=\"Between 1:00 and 2:00\" value=\"late-afternoon\" />\n    </CheckboxGroup>\n  </FormFieldGroup>\n```\n\nThis example sets the `layout to stacked` and sets the `rowSpacing to large`\n\n```js\n---\nexample: true\n---\n  <FormFieldGroup\n    description=\"Dinner\"\n    layout=\"stacked\"\n    rowSpacing=\"large\"\n    messages={[\n    { text: 'Complete All Fields', type: 'error' }\n    ]}\n  >\n    <RadioInputGroup\n      name=\"diningstyle\"\n      description=\"Size of Your Meal\"\n      defaultValue=\"grill\"\n      layout=\"stacked\"\n    >\n      <RadioInput label=\"Keep it light\" value=\"light\" />\n      <RadioInput label=\"Anything cooked on the grill\" value=\"grill\" />\n      <RadioInput label=\"Bring it on... Ready for the full course\" value=\"full-course\" />\n      <RadioInput label=\"Breakfast for dinner\" value=\"breakfast\" />\n    </RadioInputGroup>\n    <TextInput renderLabel=\"If Not At Home - I'd Like To Eat Dinner At\"\n      />\n    <Checkbox label=\"Love to Eat Dessert After Dinner\" value=\"medium\" variant=\"toggle\" />\n  </FormFieldGroup>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Avoid placeholder text (it creates usability problems by increasing cognitive load, low contrast, lack of screen reader compatibility, etc.)</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Grid":"\n### Create a basic column layout\n\nSimply create a `<Grid>` with some `<Grid.Row>` and `Grid.Col` children, and\nthe component will evenly distribute its columns.\n\nNote the `visualDebug` prop you can set if you're wondering\nexactly where your Grid columns are.\n\n```js\n---\nexample: true\n---\n<div>\n  <Grid visualDebug>\n    <Grid.Row>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n  <p>\n    {lorem.paragraph()}\n  </p>\n</div>\n```\n\n### Make the Grid stack until a certain breakpoint/screen width\n\nOften you will want to stack your `<Grid.Col>`s until you reach a certain\nscreen width. To do this, use the `startAt` prop.\n\nReduce the screen width and see how the Grid below only displays its\ncolumns inline after it hits the `large` breakpoint. Note that by\ndefault, stacked columns have bottom margin for visual separation.\n\n```js\n---\nexample: true\n---\n<Grid startAt=\"large\" visualDebug>\n  <Grid.Row>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n  </Grid.Row>\n</Grid>\n```\n\n### Control the width of each column\n\nYou can control the width of the `<Grid.Col>` columns for each\nbreakpoint with the `width` prop. Please note the following:\n\n+ If you don't need complex responsive behavior, you can just set\n  the width property to a single value for all breakpoints after\n  and including the breakpoint set via the `startAt` prop. e.g.\n  `<Grid.Col width={2}>`\n\n+ The Grid is made up of **12 columns**. If the columns' total\n  width exceeds 12, the layout will break.\n\n+ In addition to accepting the numerical values `1, 2, 3 ... 12`,\n  columns can also accept an `auto` value. This tells the column\n  to expand to the width of its content. (See the final example Grid\n  to see how this can be useful for right-aligning column content.)\n\n+ The `startAt` prop setting supersedes any `<Grid.Col>` width props. For\n  example, if you set `width={{small: 2}}` on a column, but the `startAt` prop\n  on your `<Grid>` is set to `medium`, the `width={{small: 2}}` will be ignored.\n\n```js\n---\nexample: true\n---\n<Grid visualDebug>\n  <Grid.Row>\n    <Grid.Col width={{small: 4, medium: 6, large: 3, xLarge: 6}}>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col width={{small: 4, medium: 4, large: 3, xLarge: 5}}>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col width={{small: 4, medium: 2, large: 6, xLarge: 1}}>\n      {lorem.paragraph()}\n    </Grid.Col>\n  </Grid.Row>\n</Grid>\n```\n\n### Add space/gutter between columns and rows\n\nBy default there is uniform spacing between Grid columns and rows, use the `colSpacing` and\n`rowSpacing` props, which accept `small`, `medium`, and `large` as values, you can change amount of spacing,\nor remove it with `none`.\n\n```js\n---\nexample: true\n---\n<Grid colSpacing=\"large\" rowSpacing=\"small\" visualDebug>\n  <Grid.Row>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n  </Grid.Row>\n  <Grid.Row>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n    <Grid.Col>\n      {lorem.paragraph()}\n    </Grid.Col>\n  </Grid.Row>\n</Grid>\n```\n\nAnother useful method for spacing out `<Grid.Col>` elements is to use the `hAlign`\nprop together with set widths on the columns. `hAlign` accepts the following\nvalues: `start`, `center`, `end`, `space-around`, and `space-between`.\n\n#### `hAlign=\"space-between\"`\n\n```js\n---\nexample: true\n---\n  <Grid hAlign=\"space-between\" visualDebug>\n    <Grid.Row>\n      <Grid.Col width={2}>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col width={4}>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col width={2}>\n        {lorem.paragraph()}\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n```\n\n#### `hAlign=\"space-around\"`\n\n```js\n---\nexample: true\n---\n  <Grid hAlign=\"space-around\" visualDebug>\n    <Grid.Row>\n      <Grid.Col width={2}>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col width={4}>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col width={2}>\n        {lorem.paragraph()}\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n```\n\n### Vertically align your columns\n\nAlign your columns along the vertical axis with the `vAlign` prop. In the example\nbelow the Grid is set to vertically center its columns.\n\n```js\n---\nexample: true\n---\n  <Grid vAlign=\"middle\" visualDebug>\n    <Grid.Row>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n      <Grid.Col>\n        {lorem.paragraph()}\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n```\n\n### Putting it all together\n\nLet's use `<Grid>` to create a page header with a heading on the left side\nand some action buttons on the right. In addition, let's say that on small\nscreens &#151; like smalls &#151; we want the header to stack the heading and\nthe buttons.\n\nUse `startAt=\"medium\"` to make the Grid only affect most tablets and above. To align\nthe buttons to the right, add `width=\"auto\"` to their `<Grid.Col>`. This will\nmake the column only expand to fit the width of the buttons. Because the\n`<Grid.Col>` containing the heading has no set width, it will expand by default\nto take up all the width it can, pinning the columns containing the buttons\nto the right.\n\n```js\n---\nexample: true\n---\n  <Grid startAt=\"medium\" vAlign=\"middle\" colSpacing=\"none\">\n    <Grid.Row>\n      <Grid.Col>\n        <Heading>I am a fairly lengthy heading for the page</Heading>\n      </Grid.Col>\n      <Grid.Col width=\"auto\">\n        <Button>Cancel</Button>\n        &nbsp;\n        <Button color=\"primary\" renderIcon={IconAddSolid}>Widget</Button>\n      </Grid.Col>\n    </Grid.Row>\n  </Grid>\n```\n","Heading":"\nHeading is a component for creating typographic headings.\n\n```js\n---\nexample: true\n---\n<Heading>Default Heading</Heading>\n```\n\n### Heading level\n\nGenerate content headings, from h1 to h5. Use the `margin` prop to add margin.\n\n- The `as` prop controls what html element is output. _(if not defined it will default to level)._\n- The `level` prop sets its appearance.\n\n```js\n---\nexample: true\n---\n<div>\n  <Heading level=\"h1\" as=\"h2\" margin=\"0 0 x-small\">Heading level One</Heading>\n  <Heading level=\"h2\" as=\"h1\" margin=\"0 0 x-small\">Heading level Two</Heading>\n  <Heading level=\"h3\" margin=\"0 0 x-small\">Heading level Three</Heading>\n  <Heading level=\"h4\" margin=\"0 0 x-small\">Heading level Four</Heading>\n  <Heading level=\"h5\" margin=\"0 0 x-small\">Heading level Five</Heading>\n  <Heading level=\"reset\" as=\"h2\">Heading level reset as a Two</Heading>\n</div>\n```\n\n### Heading colors\n\nThe default is for the color to inherit, but it can be set to `primary` or `secondary` via the `color` prop. Note there is an inverse option available as well: `primary-inverse` or `secondary-inverse` (_see inverse example below_).\n\n```js\n---\nexample: true\n---\n<div>\n  <Heading>I inherit my color via the CSS cascade (default)</Heading>\n  <Heading color=\"primary\">I am primary color</Heading>\n  <Heading color=\"secondary\">I am secondary color</Heading>\n</div>\n```\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<div>\n  <Heading color=\"primary-inverse\">I am primary-inverse color</Heading>\n  <Heading color=\"secondary-inverse\">I am secondary-inverse color</Heading>\n</div>\n```\n\n### Heading borders\n\nThe default is no borders. However, using the `border` prop, you can\nadd either `top` or `bottom` borders to your heading.\n\n```js\n---\nexample: true\n---\n<div>\n  <Heading margin=\"0 0 medium\" border=\"bottom\">I have a bottom border</Heading>\n  <Heading border=\"top\">I have a top border</Heading>\n</div>\n```\n\n### Ellipsis text overflow\n\nUse [TruncateText](#TruncateText) if you need to constrain your\nHeading to a single line (or certain number of lines).\n\n```js\n---\nexample: true\n---\n<Heading level=\"h2\">\n  <TruncateText>{lorem.paragraph()}</TruncateText>\n</Heading>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Each page should always contain one and only one H1</Figure.Item>\n    <Figure.Item>Headings should be used in logical order</Figure.Item>\n    <Figure.Item>Headings should not be used to format text</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","ApplyLocale":"\n`<ApplyLocale />` Sets the locale and timezone context for children that can\nuse it, such as a [TimeSelect](#TimeSelect).\n\n```js\n---\nexample: true\nrender: false\n---\n\nclass Example extends React.Component {\n  state = {\n    value: '2020-05-18T23:59:00'\n  }\n\n  handleChange = (e, { value }) => {\n    this.setState({ value }, () =>console.log(this.state.value))\n  }\n\n  render () {\n    return (\n      <TimeSelect\n        renderLabel=\"Choose a time\"\n        placeholder=\"e.g., 4:00:00 PM\"\n        value={this.state.value}\n        step={15}\n        format=\"LTS\"\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nrender(\n  <ApplyLocale locale=\"fr\" timezone=\"Europe/Paris\">\n    <Example />\n  </ApplyLocale>\n)\n```\n","ApplyTextDirection":"\nA utility component used to manage text direction. In addition to appending the `dir` attribute to\nits underlying DOM node, `<ApplyTextDirection />` also creates a direction context which can be\nconsumed by child components that have implemented [bidirectional](#bidirectional).\n\nIf no `dir` prop is supplied, `<ApplyTextDirection />` will fallback to its parent context if it\nexists. Otherwise it queries for and uses the documentElement `dir` attribute and defaults to `ltr`\nif it is not found.\n\n```javascript\n---\nexample: true\n---\n<ApplyTextDirection dir=\"rtl\">\n  <View\n    display=\"block\"\n    background=\"primary\"\n    padding=\"large\"\n    borderWidth=\"none none none large\"\n  >\n    <Heading>Rtl Content</Heading>\n    {lorem.paragraph()}\n  </View>\n</ApplyTextDirection>\n```\n\nFor exceptions, `<ApplyTextDirection />` can be nested and override parent context.\n\n```javascript\n---\nexample: true\n---\n<ApplyTextDirection dir=\"rtl\">\n  <View\n    display=\"block\"\n    background=\"primary\"\n    padding=\"large\"\n    borderWidth=\"none none none large\"\n  >\n    <Heading>Rtl Content</Heading>\n    {lorem.paragraph()}\n  </View>\n  <ApplyTextDirection dir=\"ltr\">\n    <View\n      display=\"block\"\n      background=\"primary\"\n      padding=\"large\"\n      borderWidth=\"none none none large\"\n    >\n      <Heading>Ltr Content</Heading>\n      {lorem.paragraph()}\n    </View>\n  </ApplyTextDirection>\n</ApplyTextDirection>\n```\n","Img":"\nAn accessible image component\n\n```js\n---\nexample: true\n---\n<Img src={placeholderImage(250, 250)} />\n```\n\n### Margin and display\n\nUse the `margin` prop to add space around `<Img />`. Setting the `display` prop to `block` makes\nthe image a block-level element.\n\n```js\n---\nexample: true\n---\n<View textAlign=\"center\" as=\"div\">\n  <Img margin=\"small\" alt=\"A placeholder image\" src={placeholderImage(300, 200)} />\n  <Img margin=\"small\" src={placeholderImage(200, 200)} />\n  <Img display=\"block\" margin=\"small auto\" src={placeholderImage(400, 200)} />\n</View>\n```\n\n### Color overlay\n\nThe `overlay` prop accepts parameters for `color`, `opacity`, and `blend`.\n\n```js\n---\nexample: true\n---\n  <View textAlign=\"center\" as=\"div\">\n    <Img\n      src={placeholderImage(200, 200)}\n      overlay={{color: '#008ee2', opacity: 9, blend: 'overlay'}}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n    <Img\n      src={placeholderImage(200, 200)}\n      overlay={{color: '#008ee2', opacity: 6, blend: 'multiply'}}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n    <Img\n      src={placeholderImage(200, 200)}\n      overlay={{color: '#008ee2', opacity: 3}}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n  </View>\n```\n\n### Cover\n\nWhen the `constrain` prop is set to `cover` the image fills the _full_ width and height of its\ncontaining element, while maintaining the aspect ratio of the source image.\n\n```js\n---\nexample: true\n---\n<div style={{width: '66%', height: '11rem'}}>\n  <Img src={avatarSquare} constrain=\"cover\" />\n</div>\n```\n\n### Contain\n\nWhen the `constrain` prop is set to `contain` the image fits within the width and height of its\ncontaining element, while maintaining the aspect ratio of the source image.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" background=\"primary-inverse\" width=\"200px\" height=\"200px\" textAlign=\"center\">\n  <Img src={avatarPortrait} constrain=\"contain\" />\n</View>\n```\n\n### Grayscale and blur filters\n\nPlease note: these should only be used for presentational effects.\n\n```js\n---\nexample: true\n---\n  <View textAlign=\"center\" as=\"div\">\n    <Img\n      withGrayscale\n      src={avatarSquare}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n    <Img\n      withBlur\n      src={avatarSquare}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n  </View>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Contextual images must have alternative text that describes the information or function represented by them</Figure.Item>\n    <Figure.Item>Decorative images that do not present important content, are used for layout or non-informative purposes, and do not appear within a link do not need to be presented to screen readers.  Decorative and spacer images should have null alternative text (alt=\"\")</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Link":"\n### Where to use Link\n\n`Link` is intended for presenting actions **inline with other content**, such as within headings or sentences. Typically those actions navigate the user to a different view.\n\n```js\n---\nexample: true\n---\n<Text>The quick brown fox <Link href=\"https://instructure.github.io/instructure-ui/\">jumps</Link> over the lazy dog.</Text>\n```\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<Text color=\"primary-inverse\">The quick brown fox <Link color=\"link-inverse\" href=\"https://instructure.github.io/instructure-ui/\">jumps</Link> over the lazy dog.</Text>\n```\n\n### Adding margin\n\nUse the `margin` prop to add space to the left or right of the Link. Because\nLink displays `inline`, **top and bottom margin will not work**. If you need\nto add margin to the top or bottom of Link, wrap it inside a `<View />`.\n\n```js\n---\nexample: true\n---\n<Text>The quick brown fox <Link href=\"https://instructure.github.io/instructure-ui/\" margin=\"0 small\">jumps</Link> over the lazy dog.</Text>\n```\n\n### Underlines\n\nLink's primary use is inline with other content, which is why it is underlined by default. For rare situations where Link needs\nto appear without surrounding text, the default underline can be configured to only show on hover by making `isWithinText={false}`. **Note: this only applies when outside high contrast mode. When inside high contrast mode, the link will always have an underline.**\n\n```js\n---\nexample: true\n---\n<Link\n  href=\"http://instructure.design\"\n  isWithinText={false}\n>\n  I have no default underline\n</Link>\n```\n\n### Truncating text\n\nUse [TruncateText](#TruncateText) to truncate text within Link. Note this will cause Link to display `inline-flex`,\nunless an alternate `display` prop is provided.\n\n```js\n---\nexample: true\n---\n<Link\n  onClick={() => console.log('clicked')}\n  isWithinText={false}\n  renderIcon={<IconUserLine size=\"small\" />}\n>\n  <TruncateText>{lorem.paragraph()}</TruncateText>\n</Link>\n```\n\n### Using icons\n\nUse the `renderIcon` property to put an [icon](#iconography) inside a Link. To position the\nicon _after_ the link text, change the `iconPlacement` property to `end`. You can also\nrender a Link with just an icon. Don't forget to add text for screen readers, though.\n\n```js\n---\nexample: true\n---\n<div>\n  <View as=\"div\" margin=\"0 0 small\">\n    <Link href=\"https://instructure.design\" renderIcon={<IconUserLine size=\"small\" />}>Icon before text</Link> with the quick brown fox\n  </View>\n  <View as=\"div\" margin=\"0 0 small\">\n    This Link has an icon and displays inline with text. <Link\n      href=\"https://instructure.design\"\n      renderIcon={<IconUserLine />}\n      iconPlacement=\"end\"\n    >\n      Icon appears after Link text\n    </Link>. This is more text after the link.\n  </View>\n  <View as=\"div\">\n    This Link consists of only an icon&nbsp;\n    <Link onClick={() => console.log('clicked!')} renderIcon={IconUserLine}>\n      <ScreenReaderContent>Descriptive text</ScreenReaderContent>\n    </Link>.\n  </View>\n</div>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Use <code>color=\"link-inverse\"</code> when a Link appears on a dark background to ensure adequate contrast</Figure.Item>\n    <Figure.Item>Links must have a non-empty href attribute to be considered true links and to be accessible to keyboard users</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","InlineList":"\nAn `InlineList` component displays the list horizontally.\n\n```javascript\n---\nexample: true\n---\n  <InlineList>\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Submitted</Link></InlineList.Item>\n  </InlineList>\n\n```\n\n### Adding a delimiter\n\nThe `delimiter` prop lets you display a separator between Items in the List. The built-in delimeter options include ['none', 'pipe', 'slash', and 'arrow'].\n\n```javascript\n---\nexample: true\n---\n<div>\n  <InlineList delimiter=\"none\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">No Separator</Link></InlineList.Item>\n  </InlineList>\n  <InlineList delimiter=\"pipe\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Pipe Separator</Link></InlineList.Item>\n  </InlineList>\n  <InlineList delimiter=\"slash\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Slash Separator</Link></InlineList.Item>\n  </InlineList>\n  <InlineList delimiter=\"arrow\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Arrow Separator</Link></InlineList.Item>\n  </InlineList>\n</div>\n```\n\n### Sizing\n\nThe `size` prop lets you adjust the font-size of the List. The predefined values are aligned with other components that use a 'size' prop for overall consistency within your application. The default is 'medium'.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <InlineList size=\"small\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>Small Size</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Submitted</Link></InlineList.Item>\n  </InlineList>\n  <InlineList margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>Medium (default) Size</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Submitted</Link></InlineList.Item>\n  </InlineList>\n  <InlineList size=\"large\" margin=\"large 0\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>Large Size</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Submitted</Link></InlineList.Item>\n  </InlineList>\n</div>\n```\n\n### Adding predefined space between each InlineList.Item\n\nUse the `itemSpacing` prop to add space around your list’s items. To avoid unwanted excess space at the start/end of a List, the first and last InlineList.Item will not receive margin via the `itemSpacing` prop. \n> NOTE: itemSpacing has no affect on an InlineList.Item that has the  `delimiter` prop set to anything other than **none**.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <InlineList itemSpacing=\"xxx-small\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to xxx-small</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"xx-small\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to xx-small</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"x-small\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b>  Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to x-small</Link></InlineList.Item>\n  </InlineList>\n    <InlineList itemSpacing=\"small\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b>  Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to small</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"medium\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b>  Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to medium</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"large\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to large</Link></InlineList.Item>\n  </InlineList>\n    <InlineList itemSpacing=\"x-large\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to x-large</Link></InlineList.Item>\n  </InlineList>\n  <InlineList itemSpacing=\"xx-large\">\n    <InlineList.Item>{lorem.sentence()}</InlineList.Item>\n    <InlineList.Item>10pts</InlineList.Item>\n    <InlineList.Item><b>Due:</b> Oct 1, 2019</InlineList.Item>\n    <InlineList.Item><Link href=\"#\">Set to xx-large</Link></InlineList.Item>\n  </InlineList>\n</div>\n```\n","List":"\n> ### What about 'inline' lists?\n>\n> For inline lists use the [InlineList](#InlineList) component.\n\n`<List>` accepts only `<List.Item>` as a child.\n\n```js\n---\nexample: true\n---\n<div>\n  <List margin=\"0 0 medium\">\n    <List.Item>List item 1</List.Item>\n    <List.Item>List item 2</List.Item>\n    <List.Item>List item 3</List.Item>\n  </List>\n  <List as=\"ol\" margin=\"0 0 medium\">\n    <List.Item>List item 1</List.Item>\n    <List.Item>List item 2</List.Item>\n    <List.Item>List item 3</List.Item>\n  </List>\n  <List isUnstyled>\n    <List.Item><Link href=\"https://www.canvaslms.com/try-canvas\">Canvas by Instructure</Link></List.Item>\n    <List.Item><Link href=\"https://www.getbridge.com\">Bridge by Instructure</Link></List.Item>\n    <List.Item><Link href=\"https://www.arcmedia.com\">Arc by Instructure</Link></List.Item>\n  </List>\n</div>\n```\n\n### Adding a delimiter\n\nThe `delimiter` lets you set a separator between items of the list. The predefined options are ['none', 'solid', and 'dashed'].\n\n```js\n---\nexample: true\n---\n<div>\n  <List delimiter=\"none\" margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n  </List>\n  <List delimiter=\"solid\" isUnstyled margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n  </List>\n  <List delimiter=\"dashed\" as=\"ol\" margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>{lorem.sentence()}</List.Item>\n  </List>\n</div>\n```\n\n### Sizing\n\nThe `size` prop lets you adjust the font-size of the List. The predefined values are aligned with other components that use a 'size' prop for overall consistency within your application. The default is 'medium'.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <List size=\"small\" margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>Small Size</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n  </List>\n  <List margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>Medium (default) Size</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n  </List>\n  <List size=\"large\" margin=\"large 0\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item>Large Size</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n  </List>\n</div>\n```\n\n### Adding predefined space between each List.Item\n\nUse the `itemSpacing` prop to add space around your list’s items. To avoid unwanted excess space at the start/end of a List, the first and last List.Item will not receive margin via the `itemSpacing` prop.\n\n> NOTE: itemSpacing has no affect on an List.Item that has the `delimiter` prop set to anything other than **none**.\n\n```js\n---\nexample: true\n---\n  <List isUnstyled itemSpacing=\"small\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n    <List.Item><Link href=\"#\">itemSpacing has been set to xx-small</Link></List.Item>\n  </List>\n```\n\n**itemSpacing** set to `medium`\n\n```js\n---\nexample: true\n---\n  <List itemSpacing=\"medium\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item><b>Due:</b>  Oct 1, 2019</List.Item>\n    <List.Item><Link href=\"#\">itemSpacing has been set to medium</Link></List.Item>\n  </List>\n```\n\n**itemSpacing** set to `x-large`\n\n```js\n---\nexample: true\n---\n    <List isUnstyled itemSpacing=\"x-large\">\n    <List.Item>{lorem.sentence()}</List.Item>\n    <List.Item><b>Due:</b> Oct 1, 2019</List.Item>\n    <List.Item><Link href=\"#\">itemSpacing has been set to x-large</Link></List.Item>\n  </List>\n```\n\nList.Items also accept the same `margin` prop as List, in the event you need different spacing around certain List.Items in the List.\n\n```js\n---\nexample: true\n---\n<List isUnstyled itemSpacing=\"small\">\n  <List.Item margin=\"x-large 0\"><Link href=\"https://www.canvaslms.com/try-canvas\">Canvas by Instructure</Link></List.Item>\n  <List.Item><Link href=\"https://www.getbridge.com\">Bridge by Instructure</Link></List.Item>\n  <List.Item><Link href=\"https://www.arcmedia.com\">Arc by Instructure</Link></List.Item>\n</List>\n```\n","Menu":"\nThe `Menu` component is a special type of Popover that is meant to be used as a list of actions or functions (`<Menu.Items/>` that are keyboard accessible)  that the user may want to invoke often related to or controlling some other content on the page.\n\n- Menu should not be used for navigation.\n- Menu should not be used as a form input.\n- Menu is usually triggered on click of a trigger element (often a ‘...’ or cog icon button).\n- The Menu provides custom focus management, trapping focus within the ContextView, allowing navigation between Menu.Items via arrow keys.\n- Menu uses Popover internally and provides additional semantic markup and focus behavior.\n\nPassing a node to the `trigger` prop will render a toggle button which, when clicked, shows or hides\nthe [Menu](#Menu) in a [Popover](#Popover).\n\nNote: `<Menu/>` cannot contain content that is not a `<Menu.Item/>` (links or buttons). If\nyou need to include more complex content, take a look at [Popover](#Popover).\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      singleSelection: ['itemOne'],\n      multipleSelection: ['optionOne', 'optionThree']\n    }\n  }\n\n  handleSingleSelect = (e, newSelected) => {\n    this.setState({\n      singleSelection: newSelected\n    })\n  };\n\n  handleMultipleSelect = (e, newSelected) => {\n    this.setState({\n      multipleSelection: newSelected\n    })\n  };\n\n  render () {\n    return (\n    <View padding=\"medium\" textAlign=\"center\">\n      <Menu\n        placement=\"bottom\"\n        trigger={\n          <Button>Menu</Button>\n        }\n        mountNode={() => document.getElementById('main')}\n      >\n        <Menu.Item value=\"mastery\">Learning Mastery</Menu.Item>\n        <Menu.Item href=\"https://instructure.github.io/instructure-ui/\">Default (Grid view)</Menu.Item>\n        <Menu.Item disabled>Individual (List view)</Menu.Item>\n        <Menu label=\"More Options\">\n          <Menu.Group\n            allowMultiple\n            label=\"Select Many\"\n            selected={this.state.multipleSelection}\n            onSelect={this.handleMultipleSelect}\n          >\n            <Menu.Item value=\"optionOne\">\n              Option 1\n            </Menu.Item>\n            <Menu.Item value=\"optionTwo\">\n              Option 2\n            </Menu.Item>\n            <Menu.Item value=\"optionThree\">\n              Option 3\n            </Menu.Item>\n          </Menu.Group>\n          <Menu.Separator />\n          <Menu.Item value=\"navigation\">Navigation</Menu.Item>\n          <Menu.Item value=\"set\">Set as default</Menu.Item>\n        </Menu>\n        <Menu.Separator />\n        <Menu.Group\n          label=\"Select One\"\n          selected={this.state.singleSelection}\n          onSelect={this.handleSingleSelect}\n        >\n          <Menu.Item value=\"itemOne\">\n            Item 1\n          </Menu.Item>\n          <Menu.Item value=\"itemTwo\">\n            Item 2\n          </Menu.Item>\n        </Menu.Group>\n        <Menu.Separator />\n        <Menu.Item value=\"baz\">Open grading history...</Menu.Item>\n      </Menu>\n    </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Make the text within Menu direct so users can quickly decide on an action</Figure.Item>\n    <Figure.Item>Use for radio or checkbox type interactions</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Nest Menu.Items more than two levels deep</Figure.Item>\n    <Figure.Item>Use content that is not a Menu.Item (links or buttons)</Figure.Item>\n    <Figure.Item>Include complex content</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Metric":"\nThe Metric component displays 'value' and 'label'. The default alignment is 'center'.\n\n```javascript\n---\nexample: true\n---\n  <Metric textAlign=\"start\" renderLabel=\"Grade\" renderValue=\"80%\" />\n```\n\nThe Metric component can be set to align 'start'.\n```javascript\n---\nexample: true\n---\n  <Metric renderLabel=\"Grade\" renderValue=\"80%\" />\n```\n\nThe Metric component can be set to align 'end'.\n```javascript\n---\nexample: true\n---\n  <Metric textAlign=\"end\" renderLabel=\"Grade\" renderValue=\"80%\" />\n```\n","MetricGroup":"\nA `MetricGroup` component displays multiple `Metric` (value + label) in rows.\n\n```javascript\n---\nexample: true\n---\n<MetricGroup>\n  <Metric renderLabel=\"Grade\" renderValue=\"80%\" />\n  <Metric renderLabel=\"Late\" renderValue=\"4\" />\n  <Metric renderLabel=\"Missing\" renderValue=\"2\" />\n</MetricGroup>\n```\n","Modal":"\nThe Modal is a dialog component that is centered in the viewport. The Modal\noverlays the application content and applies a mask to it.\n\nThe default `padding` of the Modal content is `medium` but can be overridden\nby using the `padding` prop on the `<Modal.Body/>` if the use case requires it.\n\n```js\n---\nrender: false\nexample: true\n---\nconst fpo = lorem.paragraphs(5)\n\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(function (state) {\n      return { open: !state.open }\n    })\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault()\n    console.log('form submitted')\n    this.setState(state => ({ open: false }))\n  }\n\n  renderCloseButton () {\n    return (\n      <CloseButton\n        placement=\"end\"\n        offset=\"small\"\n        onClick={this.handleButtonClick}\n        screenReaderLabel=\"Close\"\n      />\n    )\n  }\n\n  render () {\n    return (\n      <div style={{ padding: '0 0 11rem 0', margin: '0 auto' }}>\n        <Button onClick={this.handleButtonClick}>\n          {this.state.open ? 'Close' : 'Open'} the Modal\n        </Button>\n        <Modal\n          as=\"form\"\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          onSubmit={this.handleFormSubmit}\n          size=\"auto\"\n          label=\"Modal Dialog: Hello World\"\n          shouldCloseOnDocumentClick\n        >\n          <Modal.Header>\n            {this.renderCloseButton()}\n            <Heading>Hello World</Heading>\n          </Modal.Header>\n          <Modal.Body>\n            <TextInput renderLabel=\"Example\" placeholder=\"if you hit enter here, it should submit the form\" />\n            <Text lineHeight=\"double\">{fpo}</Text>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleButtonClick} margin=\"0 x-small 0 0\">Close</Button>\n            <Button color=\"primary\" type=\"submit\">Submit</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Constraining Modal to a parent element\n\nBy default, Modals are positioned relative to the document body.\n\nSetting the `constrain` property to `parent` will constrain the Modal within the element it is mounted from (specified via the `mountNode` property). Note: in these cases, the `mountNode` element should have an explicit `height` set: Because Modal is absolutely positioned, it has no height of its own.\n\n```js\n---\nrender: false\nexample: true\n---\nconst fpo = lorem.paragraphs(1)\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      size: 'auto'\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(function (state) {\n      return { open: !state.open }\n    })\n  }\n\n  renderCloseButton () {\n    return (\n      <CloseButton\n        placement=\"end\"\n        offset=\"small\"\n        onClick={this.handleButtonClick}\n        screenReaderLabel=\"Close\"\n      />\n    )\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.handleButtonClick}>\n          {this.state.open ? 'Close' : 'Open'} the Modal\n        </Button>\n        <Modal\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          size=\"fullscreen\"\n          label=\"Modal Dialog: Hello World\"\n          shouldCloseOnDocumentClick\n          mountNode={() => document.getElementById('constrainExample')}\n          constrain=\"parent\"\n        >\n          <Modal.Header>\n            {this.renderCloseButton()}\n            <Heading>This Modal is constrained to a parent</Heading>\n          </Modal.Header>\n          <Modal.Body>\n            <View as=\"p\" margin=\"none none small\"><Text>{fpo}</Text></View>\n            <ModalAutoCompleteExample renderLabel=\"Choose a state\" />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleButtonClick} margin=\"0 x-small 0 0\">Close</Button>\n            <Button onClick={this.handleButtonClick} color=\"primary\" type=\"submit\">Submit</Button>\n          </Modal.Footer>\n        </Modal>\n        <View\n          background=\"primary-inverse\"\n          margin=\"medium auto none\"\n          display=\"block\"\n          width=\"25rem\"\n          height=\"25rem\"\n          borderWidth=\"large\"\n          id=\"constrainExample\">\n        </View>\n      </div>\n    )\n  }\n}\n\nclass ModalAutoCompleteExample extends React.Component {\n  state = {\n    isShowingOptions: false\n  }\n\n  handleShowOptions = () => {\n    this.setState({ isShowingOptions: true })\n  }\n  handleHideOptions = () => {\n    this.setState({ isShowingOptions: false })\n  }\n  render () {\n    const options = [\n      'Alabama', 'Alaska', 'American Samoa', 'Arizona',\n      'Arkansas', 'California', 'Colorado', 'Connecticut',\n      'Delaware', 'District Of Columbia',\n      'Federated States Of Micronesia', 'Florida', 'Georgia',\n      'Guam', 'Hawaii', 'Idaho', 'Illinois'\n    ]\n\n    return (\n      <Select {...this.props} isShowingOptions={this.state.isShowingOptions} onRequestShowOptions={this.handleShowOptions} onRequestHideOptions={this.handleHideOptions}>\n        {options.map((label, index) => (\n          <Select.Option key={label} id={'' + index}>\n            {label}\n          </Select.Option>\n        ))}\n      </Select>\n    )\n  }\n}\n\nrender(<Example />)\n```\n### Media (images, etc.) inside Modals\n\n> Setting the `variant` prop to `\"inverse\"` will result in a dark version of Modal, useful for displaying media. *Note that the `inverse` Modal does not currently support text or form input content.*\n\n**If you are displaying small, relatively uniform images or videos inside Modal, the default settings should work well.** Modal.Body will expand to the height of the media you're displaying. If there is overflow, scrollbars will be available.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(function (state) {\n      return { open: !state.open }\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.handleButtonClick}>\n          {this.state.open ? 'Close' : 'Open'} the Modal\n        </Button>\n        <Modal\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          size=\"auto\"\n          label=\"Modal Dialog: Hello Media\"\n          shouldCloseOnDocumentClick\n          variant=\"inverse\"\n        >\n          <Modal.Header>\n            <Flex>\n              <Flex.Item shouldGrow shouldShrink>\n                <Heading level=\"h2\"><TruncateText>A small image</TruncateText></Heading>\n              </Flex.Item>\n              <Flex.Item>\n                <CloseButton\n                  color=\"primary-inverse\"\n                  placement=\"end\"\n                  offset=\"small\"\n                  onClick={this.handleButtonClick}\n                  screenReaderLabel=\"Close\"\n                />\n              </Flex.Item>\n            </Flex>\n          </Modal.Header>\n          <Modal.Body padding=\"none\">\n            <Img\n              src={placeholderImage(500, 250)}\n              display=\"block\"\n              margin=\"0 auto\"\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleButtonClick} withBackground={false} color=\"primary-inverse\" type=\"submit\">Submit</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n**When you have to display large media inside the Modal (or have no control over the size of the media)**, set `overflow` to `fit`. Doing so makes Modal.Body fill 100% of the available width and height, enabling you to\nuse the [Img](#Img) component's `constrain` property to fit the image inside Modal.Body.\n\n> `<Img />` uses CSS's [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) for its constrain property. If you're not using `<Img />`, add an `object-fit` rule to your media, and it will work with `overflow=\"fit\"`.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      imageFit: 'cover',\n      modalSize: 'fullscreen'\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(function (state) {\n      return { open: !state.open }\n    })\n  }\n\n  handleImageFitChange = (event, value) => {\n    this.setState({ imageFit: value })\n  }\n\n  handleModalSizeChange = (event, value) => {\n    this.setState({ modalSize: value })\n  }\n\n  render () {\n    return (\n      <div>\n        <FormFieldGroup\n          description={<Heading level=\"h3\" as=\"h3\">Media Modal</Heading>}\n          rowSpacing=\"medium\"\n        >\n          <RadioInputGroup\n            onChange={this.handleImageFitChange}\n            name=\"imageFit\"\n            defaultValue=\"cover\"\n            description=\"Img component's `constrain` prop\"\n            variant=\"toggle\"\n          >\n            <RadioInput label=\"Cover\" value=\"cover\" />\n            <RadioInput label=\"Contain\" value=\"contain\" />\n          </RadioInputGroup>\n          <RadioInputGroup\n            onChange={this.handleModalSizeChange}\n            name=\"modalSize\"\n            defaultValue=\"fullscreen\"\n            description=\"Modal size\"\n            variant=\"toggle\"\n          >\n            <RadioInput label=\"fullscreen\" value=\"fullscreen\" />\n            <RadioInput label=\"small\" value=\"small\" />\n            <RadioInput label=\"medium\" value=\"medium\" />\n            <RadioInput label=\"large\" value=\"large\" />\n            <RadioInput label=\"auto\" value=\"auto\" />\n          </RadioInputGroup>\n        </FormFieldGroup>\n        <Button onClick={this.handleButtonClick} margin=\"medium 0 0\">\n          {this.state.open ? 'Close' : 'Open'} the Modal\n        </Button>\n        <Modal\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          size={this.state.modalSize}\n          label=\"Modal Dialog: Hello Media\"\n          shouldCloseOnDocumentClick\n          variant=\"inverse\"\n          overflow=\"fit\"\n        >\n          <Modal.Header>\n            <Flex>\n              <Flex.Item shouldGrow shouldShrink>\n                <Flex alignItems=\"center\">\n                  <Flex.Item margin=\"0 x-small 0 0\">\n                    <SVGIcon src={iconExample} size=\"small\" title=\"Icon Example\" />\n                  </Flex.Item>\n                  <Flex.Item shouldGrow shouldShrink>\n                    <Heading level=\"h2\"><TruncateText>This Modal Contains Media</TruncateText></Heading>\n                  </Flex.Item>\n                </Flex>\n              </Flex.Item>\n              <Flex.Item>\n                <IconButton\n                  color=\"primary-inverse\"\n                  withBackground={false}\n                  withBorder={false}\n                  renderIcon={IconPrinterSolid}\n                  screenReaderLabel=\"Print This Image\"\n                  margin=\"0 x-small 0 0\"\n                />\n                <IconButton\n                  color=\"primary-inverse\"\n                  withBackground={false}\n                  withBorder={false}\n                  renderIcon={IconDownloadSolid}\n                  screenReaderLabel=\"Download This Image\"\n                  margin=\"0 x-small 0 0\"\n                />\n                <IconButton\n                  color=\"primary-inverse\"\n                  withBackground={false}\n                  withBorder={false}\n                  renderIcon={IconXSolid}\n                  screenReaderLabel=\"Close\"\n                  onClick={this.handleButtonClick}\n                />\n              </Flex.Item>\n            </Flex>\n          </Modal.Header>\n          <Modal.Body padding=\"none\">\n            <Img\n              src={avatarSquare}\n              constrain={this.state.imageFit}\n              display=\"block\"\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleButtonClick} withBackground={false} color=\"primary-inverse\" type=\"submit\">Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use it to validate user decisions or to gain secondary confirmation</Figure.Item>\n    <Figure.Item>Provide input areas that the user may interact with such as Forms, Dropdowns, Selectors, and Links</Figure.Item>\n    <Figure.Item>Provide a way to dismiss the Modal: the \"x\" close button, the ESC key, clicking outside the modal, alternative response button (done, etc...)</Figure.Item>\n    <Figure.Item>Place optional response button(s) on the right side within the Modal.Footer</Figure.Item>\n    <Figure.Item>Place primary button on the far right with secondary response buttons to the left of the primary</Figure.Item>\n    <Figure.Item>Use size=\"fullscreen\" when setting Modal.Body to overflow=\"contain\" to support media fitting within its container</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use when the workflow should NOT be interrupted</Figure.Item>\n    <Figure.Item>Use to show error, success, or warning messages/notifications (see Alert)</Figure.Item>\n    <Figure.Item>Add content to a modal that would be better suited in its own page</Figure.Item>\n    <Figure.Item>Use \"inverse\" variant for anything other than media</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Keyboard focus must be set in the modal when it appears; usually on the first interactive element</Figure.Item>\n    <Figure.Item>Modals must contain keyboard focus until they’re closed. This is to ensure that keyboard or screen reader users won't mistakenly interact with background content that is meant to be hidden or inaccessible</Figure.Item>\n    <Figure.Item>When a user closes a modal, focus must return to a logical place within the page. This is usually the element that triggered opening the modal</Figure.Item>\n    <Figure.Item>Modals should be able to be closed by clicking away, esc key and/or a close button</Figure.Item>\n    <Figure.Item>We recommend that modals begin with a heading (typically H2)</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Transition":"\nThe `Transition` wrapper helps you easily transition elements in and out of\nyour UI. The component defaults to the `fade` opacity transition.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      in: true\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState((state) => {\n      return {\n        in: !state.in\n      }\n    })\n  };\n\n  render () {\n    return (\n      <div>\n        <div>\n          <Button margin=\"small 0\" size=\"small\" onClick={this.handleButtonClick}>\n            Fade {this.state.in ? 'Out' : 'In'}\n          </Button>\n        </div>\n        <Transition\n          transitionOnMount\n          in={this.state.in}\n          type=\"fade\"\n        >\n          <Avatar name=\"Fade\" />\n        </Transition>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n`scale` transitions both the opacity and size of the element.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      in: true\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState((state) => {\n      return {\n        in: !state.in\n      }\n    })\n  };\n\n  render () {\n    return (\n      <div>\n        <div>\n          <Button margin=\"small 0\" size=\"small\" onClick={this.handleButtonClick}>\n            {this.state.in ? 'Collapse' : 'Expand'}\n          </Button>\n        </div>\n        <Transition\n          transitionOnMount\n          unmountOnExit\n          in={this.state.in}\n          type=\"scale\"\n        >\n          <Avatar name=\"Collapse\" />\n        </Transition>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n`slide` transitions the horizontal or vertical position of the element. The slide direction can be\ninternationalized for right to left (rtl) languages. The following example uses the\n[ApplyTextDirection](#ApplyTextDirection) util to mirror the slide direction for rtl.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      direction: 'left',\n      in: true\n    }\n  }\n\n  handleDirectionChange = (e, value) => {\n    this.setState({\n      direction: value,\n      in: true\n    })\n  };\n\n  handleButtonClick = () => {\n    this.setState((state) => {\n      return {\n        in: !state.in\n      }\n    })\n  };\n\n  mirrorDirection (direction) {\n    const mirror = {\n      left: 'right',\n      right: 'left',\n      up: 'up',\n      down: 'down'\n    }\n\n    return mirror[direction]\n  };\n\n  render () {\n    return (\n      <ApplyTextDirection>\n        {(dir, rtl) => {\n          const direction = rtl ? this.mirrorDirection(this.state.direction) : this.state.direction\n          const directionVariants = [\n            {value: 'left', label: 'Start'},\n            {value: 'right', label: 'End'},\n            {value: 'down', label: 'Down'},\n            {value: 'up', label: 'Up'}\n          ]\n          return (\n            <div>\n              <div>\n                <RadioInputGroup\n                  onChange={this.handleDirectionChange}\n                  name=\"slideExample\"\n                  description={<ScreenReaderContent>Select a direction</ScreenReaderContent>}\n                  value={direction}\n                  variant=\"toggle\"\n                >\n                  {directionVariants.map(dir => <RadioInput key={dir.value} value={dir.value} label={dir.label} />)}\n                </RadioInputGroup>\n                <Button size=\"small\" margin=\"medium none small\" onClick={this.handleButtonClick}>\n                  Slide {this.state.in ? 'Out' : 'In'}\n                </Button>\n              </div>\n              <div style={{\n                position: 'relative',\n                overflow: 'hidden',\n                height: '15rem',\n                display: 'flex',\n                justifyContent: (this.state.direction === 'right') ? 'flex-end' : 'flex-start'\n              }}>\n                <Transition\n                  transitionOnMount\n                  unmountOnExit\n                  in={this.state.in}\n                  type={`slide-${direction}`}\n                >\n                  <Avatar name=\"Slide\" />\n                </Transition>\n              </div>\n            </div>\n          )\n        }}\n      </ApplyTextDirection>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","AppNav":"\n`AppNav` is a navigation component currently intended for use within LTI apps. AppNav\ncan be configured to adapt to small screen widths by truncating nav items that\ndon't fit within the available space.\n\nThe `onUpdate` function prop returns the number of visible nav items, while the\n`renderTruncateLabel` function prop allows you to customize the trigger for the Menu\nthat contains the truncated items. The example below shows how you can use both of\nthese props to create a hamburger menu when the number of visible nav items is less\nthan two.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nconst totalItemsCount = 5\n\nclass AppNavExample extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      visibleItemsCount: totalItemsCount\n    }\n  }\n\n  handleUpdate = ({ visibleItemsCount }) => {\n    this.setState({ visibleItemsCount })\n  }\n\n  render () {\n    const visibleItemsCount = this.state.visibleItemsCount\n\n    return (\n      <AppNav\n        screenReaderLabel=\"App navigation\"\n        visibleItemsCount={visibleItemsCount >= 2 ? visibleItemsCount : 0}\n        onUpdate={this.handleUpdate}\n        renderBeforeItems={\n          <AppNav.Item\n            renderLabel={<ScreenReaderContent>Instructure</ScreenReaderContent>}\n            renderIcon={<IconCommonsLine inline={false} size=\"medium\" color=\"primary\" />}\n            href=\"http://instructure.com\"\n          />\n        }\n        renderAfterItems={\n          <IconButton\n            onClick={() => console.log('Add')}\n            renderIcon={IconPlusSolid}\n            margin=\"0 0 0 x-small\"\n            screenReaderLabel=\"Add something\"\n            withBorder={false}\n            withBackground={false}\n          />\n        }\n        renderTruncateLabel={function () {\n          const hiddenItemsCount = totalItemsCount - visibleItemsCount\n          if (visibleItemsCount >= 2) {\n            return `${hiddenItemsCount} More`\n          } else {\n            return (\n              <span>\n                <IconHamburgerLine size=\"small\" inline={false} />\n                <ScreenReaderContent>{`${hiddenItemsCount} More`}</ScreenReaderContent>\n              </span>\n            )\n          }\n        }}\n      >\n        <AppNav.Item\n          renderLabel=\"instructure-ui\"\n          href=\"http://instructure.design\"\n          renderAfter={\n            <Badge\n              type=\"notification\"\n              variant=\"success\"\n              standalone\n              formatOutput={function () {\n                return <ScreenReaderContent>You have notifications from instructure-ui</ScreenReaderContent>\n              }}\n            />\n          }\n        />\n        <AppNav.Item\n          isSelected\n          renderLabel=\"Canvas\"\n          href=\"https://www.instructure.com/canvas/\"\n        />\n        <AppNav.Item\n          renderLabel=\"Canvas Network\"\n          href=\"https://canvas.net\"\n        />\n        <AppNav.Item\n          renderLabel={() => 'Canvas Community'}\n          href=\"https://community.canvaslms.com/\"\n        />\n        <AppNav.Item\n          renderLabel=\"Bridge\"\n          href=\"https://www.instructure.com/bridge/\"\n        />\n      </AppNav>\n    )\n  }\n}\n\nrender(<AppNavExample />)\n```\n","Navigation":"\nA top-level `Navigation` component\n\n```js\n---\nexample: true\n---\n  <div style={{height: '35rem'}}>\n    <Navigation\n      label=\"Main navigation\"\n      toggleLabel={{\n        expandedLabel: 'Minimize Navigation',\n        minimizedLabel: 'Expand Navigation'\n      }}\n    >\n      <Navigation.Item\n        icon={<Img src={placeholderLogo(85, 85)} constrain=\"cover\" />}\n        label={<ScreenReaderContent>Home</ScreenReaderContent>}\n        href=\"#\"\n        themeOverride={{\n          backgroundColor: 'red',\n          hoverBackgroundColor: 'blue'\n        }}\n      />\n      <Navigation.Item\n        icon={<Avatar name=\"Ziggy Marley\" size=\"x-small\"/>}\n        label=\"Account\"\n        onClick={() => { this.loadSubNav('account') }}\n      />\n      <Navigation.Item\n        icon={<IconAdminLine />}\n        label=\"Admin\"\n        href=\"#\"\n      />\n      <Navigation.Item selected\n        icon={<IconDashboardLine />}\n        label=\"Dashboard\"\n        href=\"#\"\n      />\n      <Navigation.Item\n        icon={<Badge count={99}><IconInboxLine /></Badge>}\n        label=\"Inbox\"\n        href=\"#\"\n      />\n      <Navigation.Item\n        icon={<IconUserLine />}\n        label=\"Supercalifragilistic\"\n        href=\"#\"\n      />\n    </Navigation>\n  </div>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use for top-level Navigation</Figure.Item>\n    <Figure.Item>Remember that Navigation can be themed by the institution</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Add LTI links to the main area</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","NumberInput":"\nA controlled number input field. Note that this field **does not work\nuncontrolled** - you must pass event handlers if you want it to respond to\nuser input.\n\nThis example handles arrow buttons, up/down arrow keys, and typing into\nthe input.  It also includes an `onBlur` handler that displays an error message\nif the input is invalid or missing.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  MIN = 0\n  MAX = 999\n\n  state = {\n    disabled: false,\n    inline: false,\n    messages: null,\n    number: null,\n    readOnly: false,\n    showArrows: true,\n    value: ''\n  }\n\n  handleChange = (event, value) => this.setState({\n    messages: null,\n    number: value ? Number(value) : null,\n    value\n  })\n\n  handleDecrement = (event) => this.setState(({ number }) => {\n    if (isNaN(number)) return\n    if (number === null) return this.setNumber(this.MIN)\n    if (isInteger(number)) return this.setNumber(number - 1)\n    return this.setNumber(Math.floor(number))\n  })\n\n  handleIncrement = (event) => this.setState(({ number }) => {\n    if (isNaN(number)) return\n    if (number === null) return this.setNumber(this.MIN + 1)\n    if (isInteger(number)) return this.setNumber(number + 1)\n    return this.setNumber(Math.ceil(number))\n  })\n\n  handleBlur = (event) => this.setState(({ number, value }) => {\n    if (isNaN(number)) return this.invalidNumber(value)\n    if (number === null) return this.required()\n    return this.setNumber(Math.round(number))\n  })\n\n  setNumber (n) {\n    const number = this.bound(n)\n    return {\n      messages: null,\n      number,\n      value: number\n    }\n  }\n\n  bound (n) {\n    if (n < this.MIN) return this.MIN\n    if (n > this.MAX) return this.MAX\n    return n\n  }\n\n  invalidNumber (value) {\n    return {\n      messages: [{ text: `'${value}' is not a valid number.`, type: 'error' }]\n    }\n  }\n\n  required () {\n    return {\n      messages: [{ text: 'This is required.', type: 'error' }]\n    }\n  }\n\n  toggleDisabled = (event) => this.setState(({ disabled }) => ({ disabled: !disabled }))\n\n  toggleInline = (event) => this.setState(({ inline }) => ({ inline: !inline }))\n\n  toggleReadOnly = (event) => this.setState(({ readOnly }) => ({ readOnly: !readOnly }))\n\n  toggleShowArrows = (event) => this.setState(({ showArrows }) => ({ showArrows: !showArrows }))\n\n  render () {\n    return (\n      <FormFieldGroup description=\"Controlled NumberInput example\">\n        <Checkbox\n          checked={this.state.showArrows}\n          label=\"Show arrows\"\n          onChange={this.toggleShowArrows}\n        />\n        <Checkbox\n          checked={this.state.disabled}\n          label=\"Disabled\"\n          onChange={this.toggleDisabled}\n        />\n        <Checkbox\n          checked={this.state.readOnly}\n          label=\"Read only\"\n          onChange={this.toggleReadOnly}\n        />\n        <Checkbox\n          checked={this.state.inline}\n          label=\"Inline display\"\n          onChange={this.toggleInline}\n        />\n        <NumberInput\n          renderLabel={`How old are you? (${this.MIN}-${this.MAX})`}\n          display={this.state.inline ? 'inline-block' : null}\n          messages={this.state.messages}\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onDecrement={this.handleDecrement}\n          onIncrement={this.handleIncrement}\n          placeholder=\"Age (in years)\"\n          interaction={this.state.disabled\n            ? 'disabled'\n            : this.state.readOnly ? 'readonly' : 'enabled'\n          }\n          isRequired\n          showArrows={this.state.showArrows}\n          value={this.state.value}\n        />\n      </FormFieldGroup>\n    )\n  }\n}\n\n// IE11 doesn't support Number.isInteger\nfunction isInteger (number) {\n  return Math.floor(number) === number\n}\n\nrender(<Example />)\n```\n\n> Note: `NumberInput` accepts a string or number as its `value`. However, the value returned by the `onChange` callback is always a string and should be converted to a number before attempting to augment it.\n\nNumberInput comes in 2 sizes. The default size is \"medium\".\n\n```js\n---\nexample: true\n---\n<div>\n  <NumberInput renderLabel=\"Default-size input\" /><br/>\n  <NumberInput size=\"large\" renderLabel=\"Large-size input\" />\n</div>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use when the input is limited to a number (integer, rational, or irrational expressed with decimal points)</Figure.Item>\n    <Figure.Item>Use labels at the top or to the left of the input field</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Place labels or text strings to the right of the input field</Figure.Item>\n    <Figure.Item>Use for alphanumeric input</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Options":"\n`Options` is a view-only component for creating option lists and menus, like those used in [Select](#Select) and [Menu](#Menu). It should only be used if an existing component doesn't offer the level of customization needed.\n\nThe `variant` prop of `Option.Item` provides several visual treatments. Use the `highlighted` variant to indicate that an option is being hovered, focused, or otherwise interacted with and the `selected` variant to indicate the selected option.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" width=\"300px\">\n  <Options>\n    <Options.Item onClick={() => console.log('clicked!')}>\n      Default option\n    </Options.Item>\n    <Options.Item variant=\"highlighted\">\n      Highlighted option\n    </Options.Item>\n    <Options.Item variant=\"selected\">\n      Selected option\n    </Options.Item>\n    <Options.Item variant=\"disabled\">\n      Disabled option\n    </Options.Item>\n  </Options>\n</View>\n```\n\n`Options` components can be nested to create sub menus. Icons may be added to any `Options.Item` before or after its text content using `renderBeforeLabel` and `renderAfterLabel` respectively.\n\n> `Options` and `Options.Item` receive default roles of `list` and `listitem` respectively, but the most applicable roles should be used. These will commonly be `listbox`/`option` or `menu`/`menuitem`.\n\n```js\n---\nexample: true\n---\n<View display=\"block\" width=\"300px\">\n  <Options role=\"menu\" as=\"ul\">\n    <Options.Item role=\"menuitem\">\n      Option one\n    </Options.Item>\n    <Options.Item role=\"menuitem\" variant=\"highlighted\">\n      Option two\n    </Options.Item>\n    <Options.Item role=\"menuitem\" renderAfterLabel={IconArrowOpenEndSolid}>\n      Flyout menu option\n    </Options.Item>\n    <Options.Separator as=\"li\" />\n    <Options role=\"menu\" as=\"ul\" renderLabel={'Sub menu'}>\n      <Options.Item role=\"menuitem\">\n        Sub option one\n      </Options.Item>\n      <Options.Item role=\"menuitem\">\n        Sub option two\n      </Options.Item>\n    </Options>\n    <Options.Separator />\n    <Options role=\"menu\" as=\"ul\" renderLabel={'Radio group'}>\n      <Options.Item role=\"menuitemradio\" renderBeforeLabel={IconCheckSolid}>\n        Radio option one\n      </Options.Item>\n      <Options.Item role=\"menuitemradio\" renderBeforeLabel={\n        <IconCheckLine style={{opacity: 0}} />\n      }>\n        Radio option two\n      </Options.Item>\n    </Options>\n    <Options.Separator />\n    <Options.Item role=\"menuitem\">\n      Option three\n    </Options.Item>\n  </Options>\n</View>\n```\n\n`Options` does not manage any state or react to any user interaction. The consuming component or app should listen for events on items and update the `variant` props accordingly via its own state.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      highlighted: -1,\n      selected: -1\n    }\n  }\n\n  handleKeyDown = (event) => {\n    const { highlighted } = this.state\n    let index = highlighted\n\n    if (event.keyCode === 40 && highlighted < this.props.options.length - 1) {\n      // down arrow\n      event.preventDefault()\n      index = highlighted + 1\n    } else if (event.keyCode === 38 && highlighted > 0) {\n      // up arrow\n      event.preventDefault()\n      index = highlighted - 1\n    } else if (event.keyCode === 13 && highlighted > -1) {\n      // enter\n      this.setState({ selected: index })\n    }\n    this.setState({ highlighted: index })\n  }\n\n  handleFocus = (event, index) => {\n    this.setState({ highlighted: index })\n  }\n\n  handleMouseOver = (event, index) => {\n    this.setState({ highlighted: index })\n  }\n\n  handleClick = (event, index) => {\n    this.setState({ selected: index })\n  }\n\n  render () {\n    return (\n      <View\n        display=\"block\"\n        width=\"300px\"\n        shadow=\"above\"\n      >\n        <Options onKeyDown={this.handleKeyDown} tabIndex=\"0\">\n          {this.props.options.map((option, index) => {\n            let variant = 'default'\n            if (this.state.highlighted === index) {\n              variant = 'highlighted'\n            } else if (this.state.selected === index) {\n              variant = 'selected'\n            }\n            return (\n              <Options.Item\n                key={option}\n                variant={variant}\n                tabIndex=\"-1\"\n                onMouseOver={(e) => this.handleMouseOver(e, index)}\n                onFocus={(e) => this.handleFocus(e, index)}\n                onClick={(e) => this.handleClick(e, index)}\n              >\n                { option }\n              </Options.Item>\n            )\n          })}\n        </Options>\n      </View>\n    )\n  }\n}\n\nrender(\n  <Example options={[\n    'Option one',\n    'Option two',\n    'Option three',\n    'Option four',\n    'Option five'\n  ]} />\n)\n```\n","Mask":"\nA Mask component covers its closest positioned parent (either absolute or relative).\n\n```js\n---\nexample: true\n---\n<View\n  padding=\"large\"\n  margin=\"medium\"\n  textAlign=\"center\"\n  as=\"div\"\n  style={{ position: 'relative' }}\n>\n  <Heading>Some content that is masked</Heading>\n  <Mask />\n</View>\n```\n\nThe Mask component can be configured to cover the full screen if it is rendered inside a [Portal](#Portal).\n\n```js\n---\nexample: true\nrender: false\n---\n\n class Example extends React.Component {\n   constructor (props) {\n     super(props)\n\n     this.state = {\n       open: false\n     }\n   }\n\n   handleButtonClick = () => {\n     this.setState(function (state) {\n       return { open: !state.open }\n     })\n   };\n\n   render () {\n     return (\n       <div>\n         <Button onClick={this.handleButtonClick}>\n           {this.state.open ? 'Close' : 'Open'} the Mask\n         </Button>\n         <Portal\n           open={this.state.open}\n         >\n            <Mask\n              fullscreen\n              onClick={() => { this.setState({ open: false }) }}\n            >\n              <Heading>Click anywhere around this text to close the Mask</Heading>\n            </Mask>\n          </Portal>\n       </div>\n     )\n   }\n }\n\n render(<Example />)\n ```\n","Overlay":"\nThe Overlay component is a closable/dismissible component that transitions\nin and out content rendered in a [Portal](#Portal)\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = {\n    open: false\n  }\n\n  _mask = null\n\n  handleMaskRef = el => {\n    this._mask = el\n  }\n\n  render () {\n    return (\n      <div>\n        <Button onClick={() => { this.setState({ open: true })}}>\n          Show the Overlay\n        </Button>\n        <Overlay\n          open={this.state.open}\n          transition=\"fade\"\n          label=\"Overlay Example\"\n          shouldReturnFocus\n          shouldContainFocus\n          onDismiss={() => { this.setState({ open: false })}}\n          defaultFocusElement={() => this._mask}\n        >\n          <Mask\n            onClick={() => { this.setState({ open: false })}}\n            elementRef={this.handleMaskRef}\n          >\n            <Spinner renderTitle=\"Loading\" size=\"large\" margin=\"0 0 0 medium\" />\n          </Mask>\n        </Overlay>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Ensure content behind the overlay is hidden from users so they cannot navigate to it when using keyboard navigation and screen readers</Figure.Item>\n    <Figure.Item>Dismissable with the ESC key</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Pages":"\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      activePageIndex: 0\n    }\n  }\n\n  handlePagesBackButtonClick = (activePageIndex) => {\n    this.setState({\n      activePageIndex\n    })\n  }\n\n  handleLinkClick = () => {\n    this.setState({\n      activePageIndex: 1\n    })\n  }\n\n  renderBackButton (navigateToPreviousPage) {\n    return (\n      <IconButton\n        onClick={navigateToPreviousPage}\n        renderIcon={IconArrowOpenStartLine}\n        screenReaderLabel=\"Back to Page One\"\n        withBorder={false}\n        withBackground={false}\n      />\n    )\n  }\n\n  render () {\n    return (\n      <Pages \n        activePageIndex={this.state.activePageIndex}\n        onPageIndexChange={this.handlePagesBackButtonClick}\n        backButtonLabel=\"Back to previous page\"\n      >\n        <Pages.Page>\n         {(history, navigateToPreviousPage) => {\n          return (\n            <div>\n              <View as=\"div\" textAlign=\"end\">\n                <Link\n                  isWithinText={false}\n                  onClick={this.handleLinkClick}\n                >\n                  Go to Page Two\n                </Link>\n              </View>\n              <View as=\"div\" margin=\"large 0 0 0\" textAlign=\"center\">\n                <Text as=\"div\">Page One</Text>\n              </View>\n            </div>\n          )\n        }}\n        </Pages.Page>\n        <Pages.Page>\n          {(history, navigateToPreviousPage) => {\n          return (\n            <div>\n              <View as=\"div\" maxWidth=\"7rem\">\n                {history.length > 1 && (\n                  this.renderBackButton(navigateToPreviousPage)\n                )}\n              </View>\n              <View as=\"div\" margin=\"large 0 0 0\" textAlign=\"center\">\n                Hey Look - Page Two\n              </View>\n            </div>\n          )\n        }}\n        </Pages.Page>\n      </Pages>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      activePageIndex: 0\n    }\n  }\n\n  handlePagesBackButtonClick = (activePageIndex) => {\n    this.setState({\n      activePageIndex\n    })\n  }\n\n  handleViewDetailsClick = () => {\n    this.setState({\n      activePageIndex: 1\n    })\n  }\n\n  renderBackButton (navigateToPreviousPage) {\n    return (\n      <IconButton\n        onClick={navigateToPreviousPage}\n        renderIcon={IconArrowStartLine}\n        screenReaderLabel=\"Back\"\n        withBorder={false}\n        withBackground={false}\n      />\n    )\n  }\n\n  render () {\n    return (\n      <Pages\n        activePageIndex={this.state.activePageIndex}\n        onPageIndexChange={this.handlePagesBackButtonClick}\n        backButtonLabel=\"Back to previous page\"\n      >\n        <Pages.Page>\n        {(history, navigateToPreviousPage) => {\n          return (\n            <div>\n              {history.length > 1 && (\n                this.renderBackButton(navigateToPreviousPage)\n              )}\n              <View display=\"inline-block\" margin=\"large\">\n                <Heading level=\"h1\">Hello World</Heading>\n              </View>\n              <Button\n                onClick={this.handleViewDetailsClick}\n                color=\"primary\"\n              >\n                View Details\n              </Button>\n            </div>\n          )\n        }}\n        </Pages.Page>\n        <Pages.Page>\n        {(history, navigateToPreviousPage) => {\n          return (\n            <div>\n              {history.length > 1 && (\n                this.renderBackButton(navigateToPreviousPage)\n              )}\n              <View display=\"inline-block\" margin=\"large\">\n                <Heading level=\"h1\">Foo Bar Baz Qux</Heading>\n              </View>\n              <FormField id=\"name\" label=\"Name\">\n                <input id=\"name\"/>\n              </FormField>\n            </div>\n          )\n        }}\n        </Pages.Page>\n      </Pages>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n\n```js\n---\nrender: false\nexample: true\n---\nconst USERS = [\n  {\n    id: 1,\n    name: 'Fred Flintstone',\n    email: 'fred@example.com',\n    age: 41,\n    spouse: 2\n  },\n  {\n    id: 2,\n    name: 'Wilma Flintstone',\n    email: 'wilma@example.com',\n    age: 40,\n    spouse: 1\n  },\n  {\n    id: 3,\n    name: 'Barney Rubble',\n    email: 'barney@example.com',\n    age: 42,\n    spouse: 4\n  },\n  {\n    id: 4,\n    name: 'Betty Rubble',\n    email: 'betty@example.com',\n    age: 38,\n    spouse: 3\n  },\n  {\n    id: 5,\n    name: 'Pebbles Flintstone',\n    age: 2,\n    parents: [1, 2]\n  },\n  {\n    id: 6,\n    name: 'Bamm-Bamm Rubble',\n    age: 1,\n    parents: [3, 4]\n  }\n]\n\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      showPopover: false,\n      activePageIndex: 0\n    }\n  }\n\n  findUser (id) {\n    return USERS.find((user) => user.id === id)\n  }\n\n  setActivePageIndex (index) {\n    this.setState({\n      activePageIndex: index,\n      lastPageIndex: this.state.activePageIndex\n    })\n  }\n\n  handlePagesBackButtonClick = (activePageIndex) => {\n    this.setActivePageIndex(activePageIndex)\n  }\n\n  handleDetailsButtonClick = (activePageIndex) => {\n    this.setActivePageIndex(activePageIndex)\n  }\n\n  showPopover = () => {\n    this.setState({\n      showPopover: true\n    })\n  }\n\n  hidePopover = () => {\n    this.setState({\n      showPopover: false,\n      activePageIndex: 0\n    })\n  }\n\n  renderNavigation () {\n    this._usersNav = []\n    return (\n      <div>\n        {USERS.map((user, index) => {\n          return (\n            <div key={index}>{this.renderUserMedia(user)}</div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  renderUserMedia (user) {\n    return (\n      <View as=\"div\" margin=\"small 0\">\n        <Link\n          isWithinText={false}\n          onClick={this.handleDetailsButtonClick.bind(this, user.id)}\n          elementRef={(el) => { this._usersNav[user.id] = el }}\n        >\n          <Byline description={user.name}>\n            <Avatar name={user.name} />\n          </Byline>\n        </Link>\n      </View>\n    )\n  }\n\n  renderNavigationButton (history, navigateToPreviousPage) {\n    return history.length === 1 ? (\n      this.renderCloseButton()\n    ) : (\n      this.renderBackButton(navigateToPreviousPage)\n    )\n  }\n\n  renderBackButton (navigateToPreviousPage) {\n    return (\n      <IconButton\n        onClick={navigateToPreviousPage}\n        renderIcon={IconArrowOpenStartLine}\n        screenReaderLabel=\"Back\"\n        withBorder={false}\n        withBackground={false}\n      />\n    )\n  }\n\n  renderCloseButton () {\n    return (\n      <IconButton\n        onClick={this.hidePopover}\n        renderIcon={IconXLine}\n        withBorder={false}\n        withBackground={false}\n        screenReaderLabel=\"Close\"\n      />\n    )\n  }\n\n  render () {\n    return (\n      <View padding=\"large 0\">\n        <Popover\n          on=\"click\"\n          isShowingContent={this.state.showPopover}\n          shouldContainFocus\n          shouldReturnFocus\n          screenReaderLabel=\"Pages Dialog Example\"\n          placement=\"center end\"\n          onHideContent={this.hidePopover}\n          renderTrigger={\n            <Button onClick={this.showPopover}>\n              View Users\n            </Button>\n          }\n        >\n          <Pages\n            activePageIndex={this.state.activePageIndex}\n            onPageIndexChange={this.handlePagesBackButtonClick}\n            backButtonLabel=\"Back to previous page\"\n          >\n            <Pages.Page\n              defaultFocusElement={() => this._usersNav[this.state.lastPageIndex]}\n            >\n            {(history, navigateToPreviousPage) => {\n              return (\n                <div>\n                  <Grid hAlign=\"space-between\">\n                    <Grid.Row>\n                      <Grid.Col width={9}>\n                        <Heading level=\"h1\">Users</Heading>\n                      </Grid.Col>\n                      <Grid.Col width={3} textAlign=\"end\">\n                        {this.renderNavigationButton(history, navigateToPreviousPage)}\n                      </Grid.Col>\n                    </Grid.Row>\n                  </Grid>\n                  {this.renderNavigation()}\n                </div>\n              )\n            }}\n            </Pages.Page>\n            {USERS.map((user, index) => {\n              return (\n                <Pages.Page key={index}>\n                {(history, navigateToPreviousPage) => {\n                  return (\n                    <div>\n                      <Grid hAlign=\"space-between\">\n                        <Grid.Row>\n                          <Grid.Col width={9}>\n                            <Heading level=\"h1\">User Details</Heading>\n                          </Grid.Col>\n                          <Grid.Col width={3} textAlign=\"end\">\n                            {this.renderNavigationButton(history, navigateToPreviousPage)}\n                          </Grid.Col>\n                        </Grid.Row>\n                      </Grid>\n                      <Byline description={user.name}>\n                        <Avatar name={user.name} />\n                      </Byline>\n                      <Table caption=\"User details\">\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.RowHeader>Age</Table.RowHeader>\n                            <Table.Cell>{user.age}</Table.Cell>\n                          </Table.Row>\n                          {user.email && (\n                            <Table.Row>\n                              <Table.RowHeader>Email</Table.RowHeader>\n                              <Table.Cell>{user.email}</Table.Cell>\n                            </Table.Row>\n                          )}\n                          {!isNaN(user.spouse) && (\n                            <Table.Row>\n                              <Table.RowHeader>Spouse</Table.RowHeader>\n                              <Table.Cell>\n                                {this.renderUserMedia(this.findUser(user.spouse))}\n                              </Table.Cell>\n                            </Table.Row>\n                          )}\n                          {Array.isArray(user.parents) && (\n                            <Table.Row>\n                              <Table.RowHeader>Parents</Table.RowHeader>\n                              <Table.Cell>\n                                {user.parents.map((parent, index) => {\n                                  return (\n                                    <div key={index}>{this.renderUserMedia(this.findUser(parent))}</div>\n                                  )\n                                })}\n                              </Table.Cell>\n                            </Table.Row>\n                          )}\n                        </Table.Body>\n                      </Table>\n                    </div>\n                  )\n                }}\n                </Pages.Page>\n              )\n            })}\n          </Pages>\n        </Popover>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","Pagination":"\nRenders available pages of content, and reacts to selection of another page.\nExpects array of `Pagination.Page` children. Focus and announcement of page change is\nthe responsibility of your app.\n\nIf there are more than 5 pages, the `compact` variant truncates the page navigation\nto show only the first, last, and pages surrounding the current page. At fewer than\n5 pages, no next/previous arrow buttons will be shown, and all pages will be listed.\n\nProvide an `onClick` to `Pagination.Page` to handle navigation.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { currentPage: 0 }\n  }\n\n  setPage (page) {\n    this.setState({ currentPage: page })\n  }\n\n  render () {\n    const pages = Array.from(Array(9)).map((v, i) => <Pagination.Page\n      key={i}\n      onClick={this.setPage.bind(this, i)}\n      current={i === this.state.currentPage}>\n        {i + 1}\n    </Pagination.Page>)\n\n    return (\n      <Pagination\n        as=\"nav\"\n        margin=\"small\"\n        variant=\"compact\"\n        labelNext=\"Next Page\"\n        labelPrev=\"Previous Page\"\n      >\n        {pages}\n      </Pagination>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\nYou can handle endpoints that have a lot of pages by using a sparse array of children:\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { currentPage: 0 }\n  }\n\n  renderPage(pageIndex) {\n    return (\n      <Pagination.Page\n        key={pageIndex}\n        onClick={() => this.setState({ currentPage: pageIndex })}\n        current={pageIndex === this.state.currentPage}\n      >\n          {pageIndex + 1}\n      </Pagination.Page>\n    )\n  }\n\n  render () {\n    const {currentPage} = this.state\n    const pages = Array(100000)\n    pages[0] = this.renderPage(0)\n    pages[pages.length - 1] = this.renderPage(pages.length - 1)\n    const visiblePageRangeStart = Math.min(pages.length - 4, Math.max(currentPage - 1, 1))\n    const visiblePageRangeEnd = Math.min(currentPage + 4, pages.length - 1)\n    for (let i = visiblePageRangeStart; i < visiblePageRangeEnd; i++) {\n      pages[i] = this.renderPage(i)\n    }\n\n    return (\n      <Pagination\n        as=\"nav\"\n        margin=\"small\"\n        variant=\"compact\"\n        labelNext=\"Next Page\"\n        labelPrev=\"Previous Page\"\n      >\n        {pages}\n      </Pagination>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\nIf you instead provide an href to `Pagination.Page` it will render as a link.\n\n```js\n---\nexample: true\n---\n<Pagination variant=\"full\" label=\"Jump to\">\n  <Pagination.Page href=\"/pages/1\" current>A-G</Pagination.Page>\n  <Pagination.Page href=\"/pages/2\">H-J</Pagination.Page>\n  <Pagination.Page href=\"/pages/3\">K-M</Pagination.Page>\n  <Pagination.Page href=\"/pages/3\">N-Q</Pagination.Page>\n  <Pagination.Page href=\"/pages/3\">R-Z</Pagination.Page>\n</Pagination>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use for splitting up content or data into several pages</Figure.Item>\n    <Figure.Item>Use if there are more than 20 items displayed in one view</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Ensure page links and the next/previous buttons are labeled correctly for screen readers</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Pill":"\nDisplays short, contextual information about an item. Change the border\nand text color via the `color` prop. Use the `margin` prop to add space around\nthe component.\n\n```js\n---\nexample: true\n---\n<div>\n  <Pill\n    margin=\"x-small\"\n  >\n    Excused\n  </Pill>\n  <Pill\n    color=\"info\"\n    margin=\"x-small\"\n  >\n    Draft\n  </Pill>\n  <Pill\n    color=\"success\"\n    margin=\"x-small\"\n  >\n    Checked In\n  </Pill>\n  <Pill\n    color=\"danger\"\n    margin=\"x-small\"\n  >\n    Missing\n  </Pill>\n  <Pill\n    color=\"warning\"\n    margin=\"x-small\"\n  >\n    Late\n  </Pill>\n  <Pill\n    color=\"alert\"\n    margin=\"x-small\"\n  >\n    Notification\n  </Pill>\n</div>\n```\n\nThe component has a max-width, set by its theme. Any overflowing text will\nbe handled via ellipses.\n\n```js\n---\nexample: true\n---\n<Pill>\n  extraordinary superfluousness\n</Pill>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use all capital letters</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use more than 2 words</Figure.Item>\n    <Figure.Item>Use for dismissible items (use a <Link href=\"/#Tag\">Tag</Link> instead)</Figure.Item>\n    <Figure.Item>Use for counts (use a <Link href=\"/#Badge\">Badge</Link> instead)</Figure.Item>\n    <Figure.Item>Put icons or actions next to the text</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Popover":"\nPopovers hide or show content as a result of user interaction, such as clicking, hovering, or focusing. When opened, the content remains connected to the element that triggered it. If you only need to display a small amount of text-only content, you might consider using a [Tooltip](#Tooltip). If you need to display a larger amount of content, a [Tray](#Tray) could be a better choice.\n\n#### Uncontrolled Popover\n\n```js\n---\nexample: true\n---\n<Popover\n  renderTrigger={\n    <Link aria-describedby=\"tip\">\n      Hover or focus me\n    </Link>\n  }\n  shouldRenderOffscreen\n  shouldReturnFocus={false}\n  placement=\"top center\"\n  mountNode={() => document.getElementById('main')}\n  onPositioned={() => console.log('positioned')}\n  onShowContent={() => console.log('showing')}\n  onHideContent={() => console.log('hidden')}\n>\n  <View padding=\"x-small\" display=\"block\" as=\"div\" id=\"tip\">\n    Hello World\n  </View>\n</Popover>\n\n```\n\n#### Controlled Popover\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isShowingContent: false\n    }\n  }\n\n  renderCloseButton () {\n    return (\n      <CloseButton\n        placement=\"end\"\n        offset=\"small\"\n        onClick={() => this.setState({ isShowingContent: false })}\n        screenReaderLabel=\"Close\"\n      />\n    )\n  }\n\n  render () {\n    return (\n      <View>\n        <Popover\n          renderTrigger={<Button>Sign In</Button>}\n          isShowingContent={this.state.isShowingContent}\n          onShowContent={(e) => {\n            this.setState({ isShowingContent: true })\n          }}\n          onHideContent={(e, { documentClick }) => {\n            this.setState({ isShowingContent: false })\n          }}\n          on=\"click\"\n          screenReaderLabel=\"Popover Dialog Example\"\n          shouldContainFocus\n          shouldReturnFocus\n          shouldCloseOnDocumentClick\n          offsetY=\"16px\"\n          mountNode={() => document.getElementById('main')}\n        >\n          <View padding=\"medium\" display=\"block\" as=\"form\">\n            {this.renderCloseButton()}\n            <FormFieldGroup description=\"Log In\">\n              <TextInput renderLabel=\"Username\" inputRef={(el) => { if (el) { this._username = el } }}/>\n              <TextInput renderLabel=\"Password\" type=\"password\" />\n            </FormFieldGroup>\n          </View>\n        </Popover>\n      </View>\n    )\n  }\n}\n\nrender(<Example />)\n\n```\n\n> Note: Popover can act as a dialog with a close button. With the `shouldContainFocus` property set, it will trap focus inside the Popover.\n\nThe `shouldAlignArrow` prop will offset the popover content to adjust for the offset of the arrow. This will override offsetX for start/end placements, and will override offsetY for top/bottom placements.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\nrender () {\n  return (\n      <div style={{ paddingBottom: 25, display: 'flex', justifyContent: 'center' }}>\n        <Popover\n          renderTrigger={<div style={{display: 'inline-block', height: '3px', width: '3px', background: 'blue'}}/>}\n          isShowingContent={true}\n          placement=\"end top\"\n          shouldAlignArrow\n          mountNode={() => document.getElementById('main')}\n        >\n          <Heading>Small<br/>Target</Heading>\n        </Popover>\n      </div>\n  )\n}\n}\n\nrender(<Example />)\n```\n\nIf the `Popover` contains focusable content and should be rendered in the focus order immediately after the trigger, it can be configured using the `shouldFocusContentOnTriggerBlur` prop. Note that the content must be rendered in the correct order in the document (using the `mountNode` prop).\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isShowingContent: false\n    }\n  }\n\n  render () {\n    return (\n      <div style={{ paddingBottom: 50, display: 'flex', justifyContent: 'center' }}>\n        <Popover\n          renderTrigger={<Button margin=\"small\">Focus Me</Button>}\n          isShowingContent={this.state.isShowingContent}\n          onShowContent={(e) => {\n            this.setState({ isShowingContent: true })\n          }}\n          onHideContent={(e) => {\n            this.setState({ isShowingContent: false })\n          }}\n          on={['focus', 'click']}\n          shouldContainFocus={false}\n          shouldFocusContentOnTriggerBlur\n          mountNode={() => document.getElementById('container')}\n        >\n          <Button margin=\"small\">Focus Me When Trigger Blurs</Button>\n        </Popover>\n        <div id=\"container\"/>\n        <Button id=\"next\" margin=\"small\">Focus Me Next</Button>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Consider using a <Link href=\"/#Tray\">Tray</Link> if the content is beyond a mobile screen size</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Put content on the same row as the close \"x\"</Figure.Item>\n    <Figure.Item>Use with an <Link href=\"#Overlay\">Overlay</Link></Figure.Item>\n    <Figure.Item>Have multiple Popovers open at the same time</Figure.Item>\n    <Figure.Item>Use in place of a <Link href=\"/#Tooltip\">Tooltip</Link> or <Link href=\"/#Menu\">Menu</Link></Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Keyboard focus must be set in the popover when it appears; usually on the first interactive element</Figure.Item>\n    <Figure.Item>Popovers must contain keyboard focus until they’re closed. This is to ensure that keyboard or screen reader users won't mistakenly interact with background content that is meant to be hidden or inaccessible</Figure.Item>\n    <Figure.Item>When a user closes the Popover, focus must return to a logical place within the page. This is usually the element that triggered opening the popover</Figure.Item>\n    <Figure.Item>Popovers should be able to be closed by clicking away, esc key and/or a close button</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Portal":"\nThe `<Portal/>` component allows you to render a subtree into a DOM element.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isPortalOpen: false\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(state => {\n      return { isPortalOpen: !state.isPortalOpen }\n    })\n  };\n\n  render () {\n    const firstParagraph = lorem.paragraph()\n    const secondParagraph = lorem.paragraph()\n    return (\n      <div>\n        <Button onClick={this.handleButtonClick}>\n          {this.state.isPortalOpen ? 'Close' : 'Open'} the Portal\n        </Button>\n        <Portal\n          mountNode={this._mountNode}\n          open={this.state.isPortalOpen}\n        >\n          <ContextView placement=\"center start\" padding=\"0 x-small\">\n            <p>Greetings from the portal!</p>\n          </ContextView>\n        </Portal>\n        <Text>\n          <p>{firstParagraph}</p>\n          <div ref={(c) => this._mountNode = c}></div>\n          <p>{secondParagraph}</p>\n        </Text>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","Position":"\nA component that positions content with respect to a designated target.\n\n### Important Upgrade Notes\n\nCodemods are available to automatically update any props that have changed. However, there are some breaking changes that will need to be addressed manually. These changes and are described below.\n\n- `Position.Target` and `Position.Content` are no longer in use. The target is now defined via the `renderTarget` prop and the children of a Position will be rendered as the positioned content.\n\n### Internationalization\n\n`Position` placement can be internationalized for right to left languages. The\nfollowing examples are configured utilizing the [ApplyTextDirection](#ApplyTextDirection)\ncomponent in conjunction with the [mirrorHorizontalPlacement](#mirrorPlacement)\nutility function.\n\n```js\n---\nrender: false\nexample: true\n---\nconst fpo = lorem.sentence()\nclass Example extends React.Component {\nconstructor (props) {\n  super(props)\n\n  this.state = { placement: 'end', adjusted: 'end' }\n}\n\nhandleButtonClick = () => {\n  const placements = [\n    'top',\n    'end',\n    'bottom',\n    'start',\n    'top start',\n    'start top',\n    'start center',\n    'start bottom',\n    'bottom start',\n    'bottom center',\n    'bottom end',\n    'end bottom',\n    'end center',\n    'end top',\n    'top end',\n    'top center',\n    'center end',\n    'center start'\n  ]\n\n  let { placement } = this.state\n\n  placement = placements[placements.indexOf(placement) + 1] || placements[0]\n\n  this.setState({ placement })\n};\n\nhandlePositionChanged = ({ placement }) => {\n  this.setState({ adjusted: placement })\n};\n\nrender () {\n  const { placement, adjusted } = this.state\n\n  let offset = {\n    x: 0,\n    y: 0\n  }\n\n  if (['top', 'bottom'].indexOf(placement.split(' ')[0]) >= 0) {\n    offset.y = 16\n  } else {\n    offset.x = 16\n  }\n\n  return (\n    <View\n      as=\"div\"\n      margin=\"x-large\"\n      padding=\"x-large\"\n      textAlign=\"center\"\n    >\n      <ApplyTextDirection>\n        {(dir, rtl) => (\n          <Position\n            placement={rtl ? mirrorHorizontalPlacement(placement, ' ') : placement}\n            offsetX={offset.x}\n            offsetY={offset.y}\n            onPositionChanged={this.handlePositionChanged}\n            renderTarget={\n              <Button color=\"primary\" onClick={this.handleButtonClick}>\n                Change Placement\n              </Button>\n            }\n          >\n            <ContextView\n              placement={rtl ? mirrorHorizontalPlacement(adjusted, ' ') : adjusted}\n              maxWidth=\"22rem\" padding=\"small\"\n            >\n              <Heading level=\"h3\">{placement}</Heading>\n              <p>{fpo}</p>\n            </ContextView>\n          </Position>\n        )\n      }\n      </ApplyTextDirection>\n    </View>\n  )\n}\n}\n\nrender(<Example />)\n```\n\nThe `mountNode` prop renders the positioned content inside the configured element (instead of the body).\n\n```js\n---\nrender: false\nexample: true\n---\n\nconst fpo = lorem.sentence()\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      placement: 'end',\n      adjusted: 'end'\n    }\n  }\n\n  handleButtonClick = () => {\n    const placements = [\n      'top',\n      'end',\n      'bottom',\n      'start',\n      'top start',\n      'start top',\n      'start center',\n      'start bottom',\n      'bottom start',\n      'bottom center',\n      'bottom end',\n      'end bottom',\n      'end center',\n      'end top',\n      'top end',\n      'top center',\n      'center end',\n      'center start'\n    ]\n\n    let { placement } = this.state\n\n    placement = placements[placements.indexOf(placement) + 1] || placements[0]\n\n    this.setState({ placement })\n  };\n\n  handlePositionChanged = ({ placement }) => {\n    this.setState({ adjusted: placement })\n  };\n\n  render () {\n    const { placement, adjusted } = this.state\n\n    let offsetX = 0\n    let offsetY = 0\n\n    if (['top', 'bottom'].indexOf(placement.split(' ')[0]) >= 0) {\n      offsetY = 16\n    } else {\n      offsetX = 16\n    }\n\n    return (\n    <span>\n      <View\n        as=\"div\"\n        margin=\"x-large\"\n        padding=\"x-large\"\n        textAlign=\"center\"\n      >\n        <ApplyTextDirection>\n          {(dir, rtl) => (\n            <Position\n              placement={rtl ? mirrorHorizontalPlacement(placement, ' ') : placement}\n              offsetX={offsetX}\n              offsetY={offsetY}\n              mountNode={() => this._mountNode}\n              onPositionChanged={this.handlePositionChanged}\n              renderTarget={\n                <Button color=\"primary\" onClick={this.handleButtonClick}>\n                  Change Placement\n                </Button>\n              }\n            >\n              <ContextView\n                placement={rtl ? mirrorHorizontalPlacement(adjusted, ' ') : adjusted}\n                maxWidth=\"20rem\"\n                padding=\"small\"\n              >\n                <Heading level=\"h3\">{placement}</Heading>\n                <p>\n                  {fpo}\n                </p>\n              </ContextView>\n            </Position>\n          )}\n        </ApplyTextDirection>\n      </View>\n      <div\n        style={{\n          position: 'relative',\n          padding: 100\n        }}\n        ref={(c) => { this._mountNode = c }}\n      />\n    </span>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n`shouldPositionOverTarget` prop with `stretch` placement.\n\n```js\n---\nrender: false\nexample: true\n---\nconst fpo = lorem.paragraphs(7)\n\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      placement: 'top stretch'\n    }\n  }\n\n  handleButtonClick = () => {\n    const placements = [\n      'top stretch',\n      'bottom stretch',\n      'end stretch',\n      'start stretch'\n    ]\n\n    let { placement } = this.state\n\n    placement = placements[placements.indexOf(placement) + 1] || placements[0]\n\n    this.setState({ placement })\n  };\n\n  render () {\n    const { placement } = this.state\n\n    return (\n      <div>\n        <ApplyTextDirection>\n          {(dir, rtl) => (\n            <Position\n              placement={rtl ? mirrorHorizontalPlacement(placement, ' ') : placement}\n              shouldPositionOverTarget\n              insertAt=\"top\"\n              mountNode={() => this._mountNode}\n              renderTarget={\n                <div\n                  ref={(c) => { this._mountNode = c }}\n                  style={{\n                    overflowY: 'auto',\n                    maxHeight: '10rem',\n                    marginBottom: '1rem',\n                    padding: '0.5rem'\n                  }}\n                >\n                  {fpo}\n                </div>\n              }\n            >\n              <div\n                style={{\n                  backgroundColor: 'white',\n                  padding: '1rem'\n                }}\n              >\n                <Heading level=\"h3\">{placement}</Heading>\n              </div>\n            </Position>\n          )}\n        </ApplyTextDirection>\n        <Button color=\"primary\" onClick={this.handleButtonClick}>\n          Change Placement\n        </Button>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","ProgressBar":"\n`<ProgressBar />` is a styled HTML `<progress />` element, complete\nwith the aria attributes required to support screen readers.\n\n### `size`\n\n```js\n---\nexample: true\n---\n<div>\n  <ProgressBar\n    size=\"x-small\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    size=\"small\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    size=\"large\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n  />\n</div>\n```\n\n### `color`\n\n`<ProgressBar />`'s `color` property controls the overall color scheme of the\ncomponent. Set it to `primary-inverse` when the component is used on dark backgrounds.\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<ProgressBar\n  screenReaderLabel=\"Loading completion\"\n  color=\"primary-inverse\"\n  valueNow={30}\n  valueMax={60}\n/>\n```\n\n### `meterColor`\nThe color of the progress meter is set separately through the `meterColor` property.\n\n```js\n---\nexample: true\n---\n<div>\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"info\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"success\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"alert\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"warning\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressBar\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"danger\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />  \n</div>\n```\n\n`meterColor` can also be passed in as a function that takes `valueNow / valueMax`\nas parameters. This allows you to adjust the color of the meter based on the\ncurrent value.\n\n```js\n---\nexample: true\n---\n<ProgressBar\n  screenReaderLabel=\"Loading completion\"\n  meterColor={({ valueNow, valueMax }) => {\n    if (valueNow < 20) {\n      return 'danger'\n    } else if (valueNow / valueMax >= 1) {\n      return 'success'\n    } else {\n      return 'info'\n    }\n  }}\n  valueNow={10}\n  valueMax={60}\n/>\n```\n\n> `<ProgressBar />` defaults to setting the meter color to `success` when\ncomplete.\n\n\n### `renderValue` / `formatScreenReaderValue`\n\nVia the `renderValue` prop, developers can use `valueMax` and `valueNow` props to format the\nvalue that `<ProgressBar />` displays.\n\n> `renderValue` will not be spoken by screen readers. Any essential information\nin `renderValue` must also be conveyed via `formatScreenReaderValue` for screen reader users.\n\n```js\n---\nexample: true\n---\n<ProgressBar\n  screenReaderLabel=\"Percent complete\"\n  formatScreenReaderValue={({ valueNow, valueMax }) => {\n    return Math.round((valueNow / valueMax * 100)) + ' percent'\n  }}\n  renderValue={({ valueNow, valueMax }) => {\n    return (\n      <Text>\n        {Math.round(valueNow / valueMax * 100)}%\n      </Text>\n    )\n  }}\n  valueMax={88}\n  valueNow={33}\n/>\n```\n","ProgressCircle":"\n`<ProgressCircle />` is a <span role=\"img\" aria-hidden=\"true\" style=\"font-size: 2rem; vertical-align: middle;\">🍩</span> styled HTML `<progress />` element, complete\nwith the aria attributes required to support screen readers.\n\n### `size`, `shouldAnimateOnMount`, `animationDelay`\n\n```js\n---\nexample: true\n---\n<div>\n  <ProgressCircle\n    size=\"x-small\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 small 0 0\"\n    shouldAnimateOnMount\n  />\n  <ProgressCircle\n    size=\"small\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 small 0 0\"\n    shouldAnimateOnMount\n    animationDelay={2000}\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 small 0 0\"\n    shouldAnimateOnMount\n    animationDelay={4000}\n    formatScreenReaderValue={function ({ valueNow, valueMax }) {\n      return valueNow + ' out of ' + valueMax\n    }}\n    renderValue={function ({ valueNow, valueMax }) {\n      return (\n        <span>\n          <Text size=\"large\" weight=\"bold\">{valueNow}</Text>\n          <br />\n          <Text size=\"small\">/&nbsp;</Text>\n          <Text size=\"small\">{valueMax}</Text>\n        </span>\n      )\n    }}\n  />\n  <ProgressCircle\n    size=\"large\"\n    screenReaderLabel=\"Loading completion\"\n    valueNow={40}\n    valueMax={60}\n    shouldAnimateOnMount\n    animationDelay={6000}\n    formatScreenReaderValue={function ({ valueNow, valueMax }) {\n      const passing = valueNow > (valueMax / 2) ? 'pass' : 'fail'\n      return `${valueNow} of ${valueMax}: ${passing}`\n    }}\n    renderValue={function ({ valueNow, valueMax }) {\n      if (valueNow > (valueMax / 2)) {\n        return (\n          <Text weight=\"bold\" size=\"large\">\n            PASS\n          </Text>\n        )\n      } else {\n        return (\n        <Text weight=\"bold\" size=\"large\">\n          FAIL\n        </Text>\n        )\n      }\n    }}\n  />\n</div>\n```\n\n### `color`\n\n`<ProgressCircle />`'s `color` property controls the overall color scheme of the\ncomponent. Set it to `primary-inverse` when the component is used on dark backgrounds.\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<ProgressCircle\n  screenReaderLabel=\"Loading completion\"\n  color=\"primary-inverse\"\n  valueNow={50}\n  valueMax={60}\n/>\n```\n\n### `meterColor`\nThe color of the progress meter is set separately through the `meterColor` property.\n\n```js\n---\nexample: true\n---\n<div>\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"info\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"success\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"alert\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"warning\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />\n  <ProgressCircle\n    screenReaderLabel=\"Loading completion\"\n    meterColor=\"danger\"\n    valueNow={40}\n    valueMax={60}\n    margin=\"0 0 small\"\n  />  \n</div>\n```\n\n`meterColor` can also be passed in as a function that takes `valueNow / valueMax`\nas parameters. This allows you to adjust the color of the meter based on the\ncurrent value.\n\n```js\n---\nexample: true\n---\n<ProgressCircle\n  screenReaderLabel=\"Loading completion\"\n  meterColor={({ valueNow, valueMax }) => {\n    if (valueNow < 20) {\n      return 'danger'\n    } else if (valueNow / valueMax >= 1) {\n      return 'success'\n    } else {\n      return 'info'\n    }\n  }}\n  valueNow={10}\n  valueMax={60}\n/>\n```\n\n> `<ProgressCircle />` defaults to setting the meter color to `success` when\ncomplete.\n\n\n### `renderValue` / `formatScreenReaderValue`\n\nVia the `renderValue` prop, developers can use `valueMax` and `valueNow` props to format the\nvalue that `<ProgressCircle />` displays.\n\n> `renderValue` will not be spoken by screen readers. Any essential information\nin `renderValue` must also be conveyed via `formatScreenReaderValue` for screen reader users.\n\n```js\n---\nexample: true\n---\n<ProgressCircle\n  screenReaderLabel=\"Percent complete\"\n  formatScreenReaderValue={({ valueNow, valueMax }) => {\n    return Math.round((valueNow / valueMax * 100)) + ' percent'\n  }}\n  renderValue={({ valueNow, valueMax }) => {\n    const percent = Math.round(valueNow / valueMax * 100)\n    return (\n      <span>\n        <Text size=\"large\" weight=\"bold\" color=\"primary\">\n          {percent > 100 ? 100 : percent}\n        </Text>\n        <Text size=\"small\" weight=\"bold\" color=\"secondary\">%</Text>\n      </span>\n    )\n  }}\n  valueMax={88}\n  valueNow={33}\n/>\n```\n","RadioInput":"\nBy default, the RadioInput component is a custom styled HTML radio button.\n\nAdjust the size of the RadioInput and its label text via the `size` prop. The default size is\n`medium`.\n\n```js\n---\nexample: true\n---\n<RadioInput\n  label=\"See RadioInputGroup for more details\"\n  value=\"foo\"\n  name=\"bar\"\n  checked\n/>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use sentence-style capitalization</Figure.Item>\n    <Figure.Item>Use a clear and concise label for RadioInput</Figure.Item>\n    <Figure.Item>Optionally include a heading to provide further clarity</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Have a single RadioInput</Figure.Item>\n    <Figure.Item>Use long labels for RadioInput</Figure.Item>\n    <Figure.Item>Display more than two radio inputs horizontally</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","RadioInputGroup":"\nA RadioInputGroup is a group of RadioInput components. It will handle setting\nthe name property on the RadioInput components for you and will set the selected item\nbased on the `value` property.\n\nAdjust the size of the radio button and label text via the `size` prop. The default size is\n`medium`.\n\n```js\n---\nrender: false\nexample: true\n---\nfunction Example () {\n  const inputs = [\n    {value: 'foo', label: 'Radio option one' },\n    {value: 'bar', label: 'Radio option two' },\n    {value: 'baz', label: 'Radio option three' }\n  ]\n  const handleChange = function (event, value) {\n    console.log(value)\n  }\n  return (\n    <RadioInputGroup onChange={handleChange} name=\"example1\" defaultValue=\"foo\" description=\"Select something\">\n      {inputs.map(input => <RadioInput key={input.value} value={input.value} label={input.label} />)}\n    </RadioInputGroup>\n  )\n}\nrender(<Example />)\n```\n\nWith the `layout` prop set to `inline` to render the description in its own column at screens `medium` size\nand up (see [Grid](#Grid)).\n\n```js\n---\nrender: false\nexample: true\n---\nfunction Example () {\n  const inputs = [\n    {value: 'foo', label: 'Classical' },\n    {value: 'bar', label: 'Electronic' },\n    {value: 'baz', label: 'Country' }\n  ]\n  return (\n    <RadioInputGroup\n      name=\"example2\"\n      defaultValue=\"foo\"\n      description=\"Select something\"\n      layout=\"inline\">\n      {inputs.map(input => <RadioInput key={input.value} value={input.value} label={input.label} />)}\n    </RadioInputGroup>\n  )\n}\nrender(<Example />)\n```\n\nWith the `layout` property set to `columns` the inputs will render horizontally at screens `medium` size\nand up (see [Grid](#Grid)).\n\n```js\n---\nrender: false\nexample: true\n---\nfunction Example () {\n  const inputs = [\n    {value: 'foo', label: 'Extremely happy' },\n    {value: 'bar', label: 'Very annoyed' },\n    {value: 'baz', label: 'Somewhat apathetic' }\n  ]\n  return (\n    <RadioInputGroup\n      layout=\"columns\"\n      name=\"example3\"\n      defaultValue=\"foo\"\n      description=\"Select something\"\n    >\n      {inputs.map(input =>\n        <RadioInput\n          key={input.value}\n          value={input.value}\n          label={input.label}\n        />\n      )}\n    </RadioInputGroup>\n  )\n}\n\nrender(<Example />)\n```\n\nSet the `variant` prop to `toggle` to have the RadioInputGroup display as a toggle switch. The `context` prop can be set to switch the background color of the toggle switch. Default is `success` options are 'success', 'warning', 'danger', and 'off'.\n\n```js\n---\nexample: true\n---\n<FormFieldGroup description={<ScreenReaderContent>Toggle examples</ScreenReaderContent>}>\n <RadioInputGroup\n    name=\"featuresm\"\n    defaultValue=\"off\"\n    description=\"Small-size\"\n    variant=\"toggle\"\n    size=\"small\">\n    <RadioInput label=\"Off\" value=\"off\" context=\"off\" />\n    <RadioInput label=\"Allow\" value=\"allow\" />\n    <RadioInput label=\"On\" value=\"on\" />\n  </RadioInputGroup>\n  <RadioInputGroup\n    name=\"featuremed\"\n    defaultValue=\"allow\"\n    description=\"Medium-size (default)\"\n    variant=\"toggle\">\n    <RadioInput label=\"Off\" value=\"off\" context=\"off\" />\n    <RadioInput label=\"Allow\" value=\"allow\" />\n    <RadioInput label=\"On\" value=\"on\" />\n  </RadioInputGroup>\n  <RadioInputGroup\n    name=\"context\"\n    defaultValue=\"off\"\n    description=\"Context (background changes based on context set)\"\n    variant=\"toggle\">\n    <RadioInput label=\"Off\" value=\"off\" context=\"danger\" />\n    <RadioInput label=\"Allow\" value=\"allow\" context=\"warning\" />\n    <RadioInput label=\"On\" value=\"on\" />\n  </RadioInputGroup>\n  <RadioInputGroup\n    name=\"featurelg\"\n    defaultValue=\"on\"\n    description=\"Large-size\"\n    variant=\"toggle\"\n    size=\"large\">\n    <RadioInput label=\"Off\" value=\"off\" />\n    <RadioInput label=\"Allow\" value=\"allow\" />\n    <RadioInput label=\"On\" value=\"on\" />\n  </RadioInputGroup>\n</FormFieldGroup>\n```\n\nSetting the `disabled` prop to `true` will disable the entire RadioInputGroup.\n\n```js\n---\nexample: true\n---\n<RadioInputGroup\n  name=\"fruits1\"\n  description=\"Fruits\"\n  defaultValue=\"orange\"\n  disabled\n>\n  <RadioInput label=\"Apple\" value=\"apple\" />\n  <RadioInput label=\"Orange\" value=\"orange\" />\n  <RadioInput label=\"Banana\" value=\"banana\" />\n</RadioInputGroup>\n```\n\n```js\n---\nexample: true\n---\n<RadioInputGroup name=\"feature1\" defaultValue=\"off\" description=\"Super-awesome feature\" variant=\"toggle\" disabled>\n  <RadioInput label=\"Off\" value=\"off\" context=\"off\" />\n  <RadioInput label=\"Allow\" value=\"allow\" />\n  <RadioInput label=\"On\" value=\"on\" />\n</RadioInputGroup>\n```\n\nOr disable an individual RadioInput component via its `disabled` prop.\n\n```js\n---\nexample: true\n---\n<RadioInputGroup\n  name=\"fruits2\"\n  defaultValue=\"banana\"\n  description=\"Fruits\"\n  layout=\"columns\"\n>\n  <RadioInput label=\"Apple\" value=\"apple\" />\n  <RadioInput label=\"Orange\" value=\"orange\" disabled />\n  <RadioInput label=\"Banana\" value=\"banana\" />\n</RadioInputGroup>\n```\n\n```js\n---\nexample: true\n---\n<RadioInputGroup name=\"feature2\" defaultValue=\"none\" description=\"Super-awesome feature\" variant=\"toggle\">\n  <RadioInput label=\"None\" value=\"none\" context=\"off\" />\n  <RadioInput label=\"Some\" value=\"some\" />\n  <RadioInput label=\"All\" value=\"all\" disabled />\n</RadioInputGroup>\n```\n\nIf you would like to make the description visible only to screen readers you can use the\n[ScreenReaderContent](#ScreenReaderContent) component.\n\n```js\n---\nexample: true\n---\n<RadioInputGroup\n  name=\"fruit3\"\n  defaultValue=\"banana\"\n  description={\n    <ScreenReaderContent>Select a fruit</ScreenReaderContent>\n  }\n  messages={[{ text: 'Invalid choice', type: 'error' }]}\n>\n  <RadioInput label=\"Apple\" value=\"apple\" />\n  <RadioInput label=\"Orange\" value=\"orange\" />\n  <RadioInput label=\"Banana\" value=\"banana\" />\n</RadioInputGroup>\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use sentence-style capitalization</Figure.Item>\n    <Figure.Item>Use a clear and concise label for RadioInput</Figure.Item>\n    <Figure.Item>Optionally include a heading to provide further clarity</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Have a single RadioInput</Figure.Item>\n    <Figure.Item>Use long labels for RadioInput</Figure.Item>\n    <Figure.Item>Display more than two radio inputs horizontally</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","RangeInput":"\nAn html5 range input/slider component.\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = { size: \"small\" }\n  handleModalSizeChange = (event, value) => {\n    this.setState({ size: value })\n  }\n  render() {\n    return (\n      <div>\n        <RangeInput label=\"Grading range\" defaultValue={30} max={100} min={0} size={this.state.size} />\n        <RadioInputGroup\n          onChange={this.handleModalSizeChange}\n          name=\"labelSize\"\n          defaultValue=\"small\"\n          description=\"Label size\"\n          variant=\"toggle\"\n        >\n          <RadioInput label=\"small\" value=\"small\" />\n          <RadioInput label=\"medium\" value=\"medium\" />\n          <RadioInput label=\"large\" value=\"large\" />\n        </RadioInputGroup>\n      </div>\n    )\n  }\n}\nrender(<Example />)\n```\n","Rating":"\nRating takes the `valueNow` and `valueMax` props and\noutputs a 3- or 5-star rating. Decimals are rounded to the nearest\nwhole number.\n### 3- or 5-star ratings\n\nRating defaults to a 3-star rating system. Use `iconCount` to switch\nto a 5-star system. Note how you can use the `formatValueText` prop to\ncreate readable text for screenreaders that will be outputted in the\n`aria-valuetext` attribute.\n\nNote how the second example below has filled stars that animate in. Toggle\nthis feature using the `animateFill` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <Rating\n    formatValueText={function (currentRating, maxRating) {\n      return currentRating + ' out of ' + maxRating\n    }}\n    label=\"Overall rating of freshman year experience\"\n    valueNow={68.45}\n    valueMax={100}\n  />\n  <br />\n  <Rating\n    animateFill\n    formatValueText={function (currentRating, maxRating) {\n      return currentRating + ' out of ' + maxRating\n    }}\n    label=\"Overall rating of freshman year experience\"\n    iconCount={5}\n    valueNow={68.45}\n    valueMax={100}\n  />\n</div>\n```\n\n### Sizes\n\nChoose from `small`, `medium`, or `large`. The `margin` prop has been added to add\nspace around the actual rating.\n\n```js\n---\nexample: true\n---\n<div>\n  <Rating\n    label=\"Product rating\"\n    size=\"small\"\n    iconCount={5}\n    valueNow={3.76}\n    valueMax={5}\n    margin=\"x-small medium xx-small none\"\n  />\n  <Rating\n    label=\"Overall rating of college experience\"\n    iconCount={5}\n    valueNow={30}\n    valueMax={100}\n    margin=\"x-small xx-large\"\n  />\n  <Rating\n    animateFill\n    label=\"Rating of professor\"\n    size=\"large\"\n    iconCount={5}\n    valueNow={8}\n    valueMax={8}\n    margin=\"medium\"\n  />\n</div>\n```\n","Responsive":"\nThe `Responsive` component allows for rendering a component differently based on either\nthe element or the viewport size.\n\n> **A note on performance**: Try to limit children to only content or components that need explicit updates at different breakpoints. Content that can scale on its own does not need to be rendered via Responsive. Similarly, don't overuse Responsive. Using many Responsive instances on a single page can also negatively affect rendering performance.\n\n### Passing props at breakpoints\n\nBreakpoints are defined by the `query` prop. Different props can be\nspecified for each breakpoint using the `props` prop. These props are passed to the\nunderlying component via the `Responsive` `render` or `children` props as functions.\n\nThe following example using `Avatar` renders as a circle when the element is under 30rem.\n\n```js\n---\nexample: true\n---\n<Responsive\n  query={{ small: { maxWidth: '30rem' }, large: { minWidth: '30rem' }}}\n  props={{\n    small: { shape: 'circle', size: 'medium' },\n    large: { shape: 'rectangle', size: 'x-large' }\n  }}\n  render={(props, matches) => {\n    return (\n      <div>\n        <Avatar\n          {...props}\n          name=\"Kyle Montgomery\"\n          src={avatarSquare}\n        />\n      </div>\n    )\n  }}\n/>\n```\n\n### Rendering conditionally based on breakpoint matches\n\nThe `render` and `children` props also receive an array of names corresponding to the\ncurrently matching queries. These can be used to determine what should be rendered at a\ngiven breakpoint.\n\n```js\n---\nexample: true\n---\n<Responsive\n  match=\"media\"\n  query={{\n    small: { maxWidth: 600 },\n    medium: { minWidth: 600 },\n    large: { minWidth: 800}\n  }}\n>\n  {(props, matches) => {\n    if (matches.includes('large')) {\n      return (\n        <Billboard\n          message=\"Large breakpoint\"\n          hero={<IconUserLine />}\n        />\n      )\n    } else if (matches.includes('medium') && !matches.includes('large')) {\n      return (\n        <Byline description=\"Medium breakpoint\">\n          <Avatar name=\"Alexander Hamilton\" />\n        </Byline>\n      )\n    } else {\n      return (\n        <Pill color=\"primary\">\n          Small breakpoint\n        </Pill>\n      )\n    }\n  }}\n</Responsive>\n```\n","Select":"\n`Select` is an accessible, custom styled combobox component for inputting a variety of data types.\n- It behaves similar to [Popover](#Popover) but provides additional semantic markup and focus behavior as a form input.\n- It should not be used for navigation or as a list of actions/functions. (see [Menu](#Menu)).\n- It can behave like a `<select>` element or implement autocomplete behavior.\n\n> Note: Before implementing Select, see if a [SimpleSelect](#SimpleSelect) will suffice.\n\n#### Managing state for a Select\n`Select` is a controlled-only component. The consuming app or component must manage any state needed. A variety of request callbacks are provided as prompts for state updates. `onRequestShowOptions`, for example, is fired when `Select` thinks the `isShowingOptions` prop should be updated to `true`. Of course, the consumer can always choose how to react to these callbacks.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass SingleSelectExample extends React.Component {\n  state = {\n    inputValue: this.props.options[0].label,\n    isShowingOptions: false,\n    highlightedOptionId: null,\n    selectedOptionId: this.props.options[0].id,\n    announcement: null\n  }\n\n  getOptionById (queryId) {\n    return this.props.options.find(({ id }) => id === queryId)\n  }\n\n  handleShowOptions = (event) => {\n    this.setState({\n      isShowingOptions: true\n    })\n  }\n\n  handleHideOptions = (event) => {\n    const { selectedOptionId } = this.state\n    const option = this.getOptionById(selectedOptionId).label\n    this.setState({\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      inputValue: selectedOptionId ? option : '',\n      announcement: 'List collapsed.'\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({\n      highlightedOptionId: null\n    })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const optionsAvailable = `${this.props.options.length} options available.`\n    const nowOpen = !this.state.isShowingOptions ? `List expanded. ${optionsAvailable}` : ''\n    const option = this.getOptionById(id).label\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? option : state.inputValue,\n      announcement: `${option} ${nowOpen}`\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    const option = this.getOptionById(id).label\n    this.setState({\n      selectedOptionId: id,\n      inputValue: option,\n      isShowingOptions: false,\n      announcement: `\"${option}\" selected. List collapsed.`\n    })\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId,\n      selectedOptionId,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Single Select\"\n          assistiveText=\"Use arrow keys to navigate options.\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          onBlur={this.handleBlur}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n        >\n          {this.props.options.map((option) => {\n            return (\n              <Select.Option\n                id={option.id}\n                key={option.id}\n                isHighlighted={option.id === highlightedOptionId}\n                isSelected={option.id === selectedOptionId}\n              >\n                { option.label }\n              </Select.Option>\n            )\n          })}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <SingleSelectExample\n      options={[\n        { id: 'opt1', label: 'Alaska' },\n        { id: 'opt2', label: 'American Samoa' },\n        { id: 'opt3', label: 'Arizona' },\n        { id: 'opt4', label: 'Arkansas' },\n        { id: 'opt5', label: 'California' },\n        { id: 'opt6', label: 'Colorado' },\n        { id: 'opt7', label: 'Connecticut' },\n        { id: 'opt8', label: 'Delaware' },\n        { id: 'opt9', label: 'District Of Columbia' },\n        { id: 'opt10', label: 'Federated States Of Micronesia' },\n        { id: 'opt11', label: 'Florida' },\n        { id: 'opt12', label: 'Georgia (unavailable)' },\n        { id: 'opt13', label: 'Guam' },\n        { id: 'opt14', label: 'Hawaii' },\n        { id: 'opt15', label: 'Idaho' },\n        { id: 'opt16', label: 'Illinois' }\n      ]}\n    />\n  </View>\n)\n```\n\n#### Providing autocomplete behavior\nIt's best practice to always provide autocomplete functionality to help users make a selection. The example below demonstrates one method of filtering options based on user input, but this logic should be customized to what works best for the application.\n\n> Note: Select makes some conditional assumptions about keyboard behavior. For example, if the list is NOT showing, up/down arrow keys and the space key, will show the list. Otherwise, the arrows will navigate options and the space key will type a space character.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass AutocompleteExample extends React.Component {\n  state = {\n    inputValue: '',\n    isShowingOptions: false,\n    highlightedOptionId: null,\n    selectedOptionId: null,\n    filteredOptions: this.props.options,\n    announcement: null\n  }\n\n  getOptionById (queryId) {\n    return this.props.options.find(({ id }) => id === queryId)\n  }\n\n  getOptionsChangedMessage (newOptions) {\n    let message = newOptions.length !== this.state.filteredOptions.length\n      ? `${newOptions.length} options available.` // options changed, announce new total\n      : null // options haven't changed, don't announce\n    if (message && newOptions.length > 0) {\n      // options still available\n      if (this.state.highlightedOptionId !== newOptions[0].id) {\n        // highlighted option hasn't been announced\n        const option = this.getOptionById(newOptions[0].id).label\n        message = `${option}. ${message}`\n      }\n    }\n    return message\n  }\n\n  filterOptions = (value) => {\n    return this.props.options.filter(option => (\n      option.label.toLowerCase().startsWith(value.toLowerCase())\n    ))\n  }\n\n  matchValue () {\n    const {\n      filteredOptions,\n      inputValue,\n      highlightedOptionId,\n      selectedOptionId\n    } = this.state\n\n    // an option matching user input exists\n    if (filteredOptions.length === 1) {\n      const onlyOption = filteredOptions[0]\n      // automatically select the matching option\n      if (onlyOption.label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: onlyOption.label,\n          selectedOptionId: onlyOption.id,\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n    // allow user to return to empty input and no selection\n    if (inputValue.length === 0) {\n      return { selectedOptionId: null }\n    }\n    // no match found, return selected option label to input\n    if (selectedOptionId) {\n      const selectedOption = this.getOptionById(selectedOptionId)\n      return { inputValue: selectedOption.label }\n    }\n    // input value is from highlighted option, not user input\n    // clear input, reset options\n    if (highlightedOptionId) {\n      if (inputValue === this.getOptionById(highlightedOptionId).label) {\n        return {\n          inputValue: '',\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n  }\n\n  handleShowOptions = (event) => {\n    this.setState(({ filteredOptions }) => ({\n      isShowingOptions: true,\n      announcement: `List expanded. ${filteredOptions.length} options available.`\n    }))\n  }\n\n  handleHideOptions = (event) => {\n    const { selectedOptionId, inputValue } = this.state\n    this.setState({\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      announcement: 'List collapsed.',\n      ...this.matchValue()\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({ highlightedOptionId: null })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const option = this.getOptionById(id)\n    if (!option) return // prevent highlighting of empty option\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? option.label : state.inputValue,\n      announcement: option.label\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    const option = this.getOptionById(id)\n    if (!option) return // prevent selecting of empty option\n    this.setState({\n      selectedOptionId: id,\n      inputValue: option.label,\n      isShowingOptions: false,\n      filteredOptions: this.props.options,\n      announcement: `${option.label} selected. List collapsed.`\n    })\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    const newOptions = this.filterOptions(value)\n    this.setState((state) => ({\n      inputValue: value,\n      filteredOptions: newOptions,\n      highlightedOptionId: newOptions.length > 0 ? newOptions[0].id : null,\n      isShowingOptions: true,\n      selectedOptionId: value === '' ? null : state.selectedOptionId,\n      announcement: this.getOptionsChangedMessage(newOptions)\n    }))\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Autocomplete\"\n          assistiveText=\"Type or use arrow keys to navigate options.\"\n          placeholder=\"Start typing to search...\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          onBlur={this.handleBlur}\n          onInputChange={this.handleInputChange}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n          renderBeforeInput={<IconUserSolid inline={false} />}\n          renderAfterInput={<IconSearchLine inline={false} />}\n        >\n          {filteredOptions.length > 0 ? filteredOptions.map((option) => {\n            return (\n              <Select.Option\n                id={option.id}\n                key={option.id}\n                isHighlighted={option.id === highlightedOptionId}\n                isSelected={option.id === selectedOptionId}\n                isDisabled={option.disabled}\n                renderBeforeLabel={!option.disabled ? IconUserSolid : IconUserLine}\n              >\n                {!option.disabled\n                  ? option.label\n                  : `${option.label} (unavailable)`\n                }\n              </Select.Option>\n            )\n          }) : (\n            <Select.Option\n              id=\"empty-option\"\n              key=\"empty-option\"\n            >\n              ---\n            </Select.Option>\n          )}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <AutocompleteExample\n      options={[\n        { id: 'opt0', label: 'Aaron Aaronson' },\n        { id: 'opt1', label: 'Amber Murphy' },\n        { id: 'opt2', label: 'Andrew Miller' },\n        { id: 'opt3', label: 'Barbara Ward' },\n        { id: 'opt4', label: 'Byron Cranston', disabled: true },\n        { id: 'opt5', label: 'Dennis Reynolds' },\n        { id: 'opt6', label: 'Dee Reynolds' },\n        { id: 'opt7', label: 'Ezra Betterthan' },\n        { id: 'opt8', label: 'Jeff Spicoli' },\n        { id: 'opt9', label: 'Joseph Smith' },\n        { id: 'opt10', label: 'Jasmine Diaz' },\n        { id: 'opt11', label: 'Martin Harris' },\n        { id: 'opt12', label: 'Michael Morgan', disabled: true },\n        { id: 'opt13', label: 'Michelle Rodriguez' },\n        { id: 'opt14', label: 'Ziggy Stardust' }\n      ]}\n    />\n  </View>\n)\n```\n\n#### Highlighting and selecting options\nTo mark an option as \"highlighted\", use the option's `isHighlighted` prop. Note that only one highlighted option is permitted. Similarly, use `isSelected` to mark an option or multiple options as \"selected\". When allowing multiple selections, it's best to render a [Tag](#Tag) for each selected option via the `renderBeforeInput` prop.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass MultipleSelectExample extends React.Component {\n  state = {\n    inputValue: '',\n    isShowingOptions: false,\n    highlightedOptionId: null,\n    selectedOptionId: ['opt1', 'opt6'],\n    filteredOptions: this.props.options,\n    announcement: null\n  }\n\n  getOptionById (queryId) {\n    return this.props.options.find(({ id }) => id === queryId)\n  }\n\n  getOptionsChangedMessage (newOptions) {\n    let message = newOptions.length !== this.state.filteredOptions.length\n      ? `${newOptions.length} options available.` // options changed, announce new total\n      : null // options haven't changed, don't announce\n    if (message && newOptions.length > 0) {\n      // options still available\n      if (this.state.highlightedOptionId !== newOptions[0].id) {\n        // highlighted option hasn't been announced\n        const option = this.getOptionById(newOptions[0].id).label\n        message = `${option}. ${message}`\n      }\n    }\n    return message\n  }\n\n  filterOptions = (value) => {\n    const { selectedOptionId } = this.state\n    return this.props.options.filter(option => (\n      selectedOptionId.indexOf(option.id) === -1 // ignore selected options removed from list\n      && option.label.toLowerCase().startsWith(value.toLowerCase())\n    ))\n  }\n\n  matchValue () {\n    const {\n      filteredOptions,\n      inputValue,\n      highlightedOptionId,\n      selectedOptionId\n    } = this.state\n\n    // an option matching user input exists\n    if (filteredOptions.length === 1) {\n      const onlyOption = filteredOptions[0]\n      // automatically select the matching option\n      if (onlyOption.label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: '',\n          selectedOptionId: [...selectedOptionId, onlyOption.id],\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n    // input value is from highlighted option, not user input\n    // clear input, reset options\n    if (highlightedOptionId) {\n      if (inputValue === this.getOptionById(highlightedOptionId).label) {\n        return {\n          inputValue: '',\n          filteredOptions: this.filterOptions('')\n        }\n      }\n    }\n  }\n\n  handleShowOptions = (event) => {\n    this.setState({ isShowingOptions: true })\n  }\n\n  handleHideOptions = (event) => {\n    this.setState({\n      isShowingOptions: false,\n      ...this.matchValue()\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({\n      highlightedOptionId: null\n    })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const option = this.getOptionById(id)\n    if (!option) return // prevent highlighting empty option\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? option.label : state.inputValue,\n      announcement: option.label\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    const option = this.getOptionById(id)\n    if (!option) return // prevent selecting of empty option\n    this.setState((state) => ({\n      selectedOptionId: [...state.selectedOptionId, id],\n      highlightedOptionId: null,\n      filteredOptions: this.filterOptions(''),\n      inputValue: '',\n      isShowingOptions: false,\n      announcement: `${option.label} selected. List collapsed.`\n    }))\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    const newOptions = this.filterOptions(value)\n    this.setState({\n      inputValue: value,\n      filteredOptions: newOptions,\n      highlightedOptionId: newOptions.length > 0 ? newOptions[0].id : null,\n      isShowingOptions: true,\n      announcement: this.getOptionsChangedMessage(newOptions)\n    })\n  }\n\n  handleKeyDown = (event) => {\n    const { selectedOptionId, inputValue } = this.state\n    if (event.keyCode === 8) {\n      // when backspace key is pressed\n      if (inputValue === '' && selectedOptionId.length > 0) {\n        // remove last selected option, if input has no entered text\n        this.setState((state) => ({\n          highlightedOptionId: null,\n          selectedOptionId: state.selectedOptionId.slice(0, -1)\n        }))\n      }\n    }\n  }\n  // remove a selected option tag\n  dismissTag (e, tag) {\n    // prevent closing of list\n    e.stopPropagation()\n    e.preventDefault()\n\n    const newSelection = this.state.selectedOptionId.filter((id) => id !== tag)\n    this.setState({\n      selectedOptionId: newSelection,\n      highlightedOptionId: null\n    }, () => {\n      this.inputRef.focus()\n    })\n  }\n  // render tags when multiple options are selected\n  renderTags () {\n    const { selectedOptionId } = this.state\n    return selectedOptionId.map((id, index) => (\n      <Tag\n        dismissible\n        key={id}\n        title={`Remove ${this.getOptionById(id).label}`}\n        text={this.getOptionById(id).label}\n        margin={index > 0 ? 'xxx-small 0 xxx-small xx-small' : 'xxx-small 0'}\n        onClick={(e) => this.dismissTag(e, id)}\n      />\n    ))\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Multiple Select\"\n          assistiveText=\"Type or use arrow keys to navigate options. Multiple selections allowed.\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          inputRef={(el) => this.inputRef = el}\n          onBlur={this.handleBlur}\n          onInputChange={this.handleInputChange}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n          onKeyDown={this.handleKeyDown}\n          renderBeforeInput={selectedOptionId.length > 0 ? this.renderTags() : null}\n        >\n          {filteredOptions.length > 0 ? filteredOptions.map((option, index) => {\n            if (selectedOptionId.indexOf(option.id) === -1) {\n              return (\n                <Select.Option\n                  id={option.id}\n                  key={option.id}\n                  isHighlighted={option.id === highlightedOptionId}\n                >\n                  { option.label }\n                </Select.Option>\n              )\n            }\n          }) : (\n            <Select.Option\n              id=\"empty-option\"\n              key=\"empty-option\"\n            >\n              ---\n            </Select.Option>\n          )}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <MultipleSelectExample\n      options={[\n        { id: 'opt1', label: 'Alaska' },\n        { id: 'opt2', label: 'American Samoa' },\n        { id: 'opt3', label: 'Arizona' },\n        { id: 'opt4', label: 'Arkansas' },\n        { id: 'opt5', label: 'California' },\n        { id: 'opt6', label: 'Colorado' },\n        { id: 'opt7', label: 'Connecticut' },\n        { id: 'opt8', label: 'Delaware' },\n        { id: 'opt9', label: 'District Of Columbia' },\n        { id: 'opt10', label: 'Federated States Of Micronesia' },\n        { id: 'opt11', label: 'Florida' },\n        { id: 'opt12', label: 'Georgia (unavailable)' },\n        { id: 'opt13', label: 'Guam' },\n        { id: 'opt14', label: 'Hawaii' },\n        { id: 'opt15', label: 'Idaho' },\n        { id: 'opt16', label: 'Illinois' }\n      ]}\n    />\n  </View>\n)\n```\n\n#### Composing option groups\nIn addition to `<Select.Option />` Select also accepts `<Select.Group />` as children. This is meant to serve the same purpose as `<optgroup>` elements. Group only requires you provide a label via its `renderLabel` prop. Groups and their associated options also accept icons or other stylistic additions if needed.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass GroupSelectExample extends React.Component {\n  state = {\n    inputValue: this.props.options['Western'][0].label,\n    isShowingOptions: false,\n    highlightedOptionId: null,\n    selectedOptionId: this.props.options['Western'][0].id,\n    announcement: null\n  }\n\n  getOptionById (id) {\n    const { options } = this.props\n    let match = null\n    Object.keys(options).forEach((key, index) => {\n      for (let i = 0; i < options[key].length; i++) {\n        const option = options[key][i]\n        if (id === option.id) {\n          // return group property with the object just to make it easier\n          // to check which group the option belongs to\n          match = { ...option, group: key }\n          break\n        }\n      }\n    })\n    return match\n  }\n\n  getGroupChangedMessage (newOption) {\n    const currentOption = this.getOptionById(this.state.highlightedOptionId)\n    const isNewGroup = !currentOption || currentOption.group !== newOption.group\n    let message = isNewGroup ? `Group ${newOption.group} entered. ` : ''\n    message += newOption.label\n    return message\n  }\n\n  handleShowOptions = (event) => {\n    this.setState({\n      isShowingOptions: true,\n      highlightedOptionId: null\n    })\n  }\n\n  handleHideOptions = (event) => {\n    const { selectedOptionId } = this.state\n    this.setState({\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      inputValue: this.getOptionById(selectedOptionId).label\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({\n      highlightedOptionId: null\n    })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const newOption = this.getOptionById(id)\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? newOption.label : state.inputValue,\n      announcement: this.getGroupChangedMessage(newOption)\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    this.setState({\n      selectedOptionId: id,\n      inputValue: this.getOptionById(id).label,\n      isShowingOptions: false,\n      announcement: `${this.getOptionById(id).label} selected.`\n    })\n  }\n\n  renderLabel (text, variant) {\n    return (\n      <span>\n        <Badge\n          type=\"notification\"\n          variant={variant}\n          standalone\n          margin=\"0 x-small xxx-small 0\"\n        />\n        { text }\n      </span>\n    )\n  }\n\n  renderGroup () {\n    const { options } = this.props\n    const { highlightedOptionId, selectedOptionId } = this.state\n\n    return Object.keys(options).map((key, index) => {\n      const badgeVariant = key === 'Eastern' ? 'success' : 'primary'\n      return (\n        <Select.Group key={index} renderLabel={this.renderLabel(key, badgeVariant)}>\n          {options[key].map((option) => (\n            <Select.Option\n              key={option.id}\n              id={option.id}\n              isHighlighted={option.id === highlightedOptionId}\n              isSelected={option.id === selectedOptionId}\n            >\n              { option.label }\n            </Select.Option>\n          ))}\n        </Select.Group>\n      )\n    })\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Group Select\"\n          assistiveText=\"Type or use arrow keys to navigate options.\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          onBlur={this.handleBlur}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n          renderBeforeInput={\n            <Badge\n              type=\"notification\"\n              variant={this.getOptionById(selectedOptionId).group === 'Eastern'\n                ? 'success'\n                : 'primary'\n              }\n              standalone\n              margin=\"0 0 xxx-small 0\"\n            />\n          }\n        >\n          {this.renderGroup()}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <GroupSelectExample\n      options={{\n        'Western': [\n          { id: 'opt5', label: 'Alaska' },\n          { id: 'opt6', label: 'California' },\n          { id: 'opt7', label: 'Colorado' },\n          { id: 'opt8', label: 'Idaho' }\n        ],\n        'Eastern': [\n          { id: 'opt1', label: 'Alabama' },\n          { id: 'opt2', label: 'Connecticut' },\n          { id: 'opt3', label: 'Delaware' },\n          { id: '4', label: 'Illinois' }\n        ]\n      }}\n    />\n  </View>\n)\n```\n\n#### Asynchronous option loading\nIf no results match the user's search, it's recommended to leave `isShowingOptions` as `true` and to display an \"empty option\" as a way of communicating that there are no matches. Similarly, it's helpful to display a [Spinner](#Spinner) in an empty option while options load.\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass AsyncExample extends React.Component {\n  state = {\n    inputValue: '',\n    isShowingOptions: false,\n    isLoading: false,\n    highlightedOptionId: null,\n    selectedOptionId: null,\n    selectedOptionLabel: '',\n    filteredOptions: [],\n    announcement: null\n  }\n\n  timeoutId = null\n\n  getOptionById (queryId) {\n    return this.state.filteredOptions.find(({ id }) => id === queryId)\n  }\n\n  filterOptions = (value) => {\n    return this.props.options.filter(option => (\n      option.label.toLowerCase().startsWith(value.toLowerCase())\n    ))\n  }\n\n  matchValue () {\n    const {\n      filteredOptions,\n      inputValue,\n      selectedOptionId,\n      selectedOptionLabel\n    } = this.state\n\n    // an option matching user input exists\n    if (filteredOptions.length === 1) {\n      const onlyOption = filteredOptions[0]\n      // automatically select the matching option\n      if (onlyOption.label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: onlyOption.label,\n          selectedOptionId: onlyOption.id\n        }\n      }\n    }\n    // allow user to return to empty input and no selection\n    if (inputValue.length === 0) {\n      return { selectedOptionId: null, filteredOptions: [] }\n    }\n    // no match found, return selected option label to input\n    if (selectedOptionId) {\n      return { inputValue: selectedOptionLabel }\n    }\n  }\n\n  handleShowOptions = (event) => {\n    this.setState(({ filteredOptions }) => ({\n      isShowingOptions: true\n    }))\n  }\n\n  handleHideOptions = (event) => {\n    const { selectedOptionId, inputValue } = this.state\n    this.setState({\n      isShowingOptions: false,\n      highlightedOptionId: null,\n      announcement: 'List collapsed.',\n      ...this.matchValue()\n    })\n  }\n\n  handleBlur = (event) => {\n    this.setState({ highlightedOptionId: null })\n  }\n\n  handleHighlightOption = (event, { id }) => {\n    event.persist()\n    const option = this.getOptionById(id)\n    if (!option) return // prevent highlighting of empty option\n    this.setState((state) => ({\n      highlightedOptionId: id,\n      inputValue: event.type === 'keydown' ? option.label : state.inputValue,\n      announcement: option.label\n    }))\n  }\n\n  handleSelectOption = (event, { id }) => {\n    const option = this.getOptionById(id)\n    if (!option) return // prevent selecting of empty option\n    this.setState({\n      selectedOptionId: id,\n      selectedOptionLabel: option.label,\n      inputValue: option.label,\n      isShowingOptions: false,\n      announcement: `${option.label} selected. List collapsed.`,\n      filteredOptions: [this.getOptionById(id)]\n    })\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value\n    clearTimeout(this.timeoutId)\n\n    if (!value || value === '') {\n      this.setState({\n        isLoading: false,\n        inputValue: value,\n        isShowingOptions: true,\n        selectedOptionId: null,\n        selectedOptionLabel: null,\n        filteredOptions: [],\n      })\n    } else {\n      this.setState({\n        isLoading: true,\n        inputValue: value,\n        isShowingOptions: true,\n        filteredOptions: [],\n        highlightedOptionId: null,\n        announcement: 'Loading options.'\n      })\n\n      this.timeoutId = setTimeout(() => {\n        const newOptions = this.filterOptions(value)\n        this.setState({\n          filteredOptions: newOptions,\n          isLoading: false,\n          announcement: `${newOptions.length} options available.`\n        })\n      }, 1500)\n    }\n  }\n\n  render () {\n    const {\n      inputValue,\n      isShowingOptions,\n      isLoading,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions,\n      announcement\n    } = this.state\n\n    return (\n      <div>\n        <Select\n          renderLabel=\"Async Select\"\n          assistiveText=\"Type to search\"\n          inputValue={inputValue}\n          isShowingOptions={isShowingOptions}\n          onBlur={this.handleBlur}\n          onInputChange={this.handleInputChange}\n          onRequestShowOptions={this.handleShowOptions}\n          onRequestHideOptions={this.handleHideOptions}\n          onRequestHighlightOption={this.handleHighlightOption}\n          onRequestSelectOption={this.handleSelectOption}\n        >\n          {filteredOptions.length > 0 ? filteredOptions.map((option) => {\n            return (\n              <Select.Option\n                id={option.id}\n                key={option.id}\n                isHighlighted={option.id === highlightedOptionId}\n                isSelected={option.id === selectedOptionId}\n                isDisabled={option.disabled}\n                renderBeforeLabel={!option.disabled ? IconUserSolid : IconUserLine}\n              >\n                {option.label}\n              </Select.Option>\n            )\n          }) : (\n            <Select.Option id=\"empty-option\" key=\"empty-option\">\n              {isLoading\n                ? <Spinner renderTitle=\"Loading\" size=\"x-small\" />\n                : inputValue !== '' ? 'No results' : 'Type to search'}\n            </Select.Option>\n          )}\n        </Select>\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"assertive\"\n          screenReaderOnly\n        >\n          { announcement }\n        </Alert>\n      </div>\n    )\n  }\n}\n\nrender(\n  <View>\n    <AsyncExample\n      options={[\n        { id: 'opt0', label: 'Aaron Aaronson' },\n        { id: 'opt1', label: 'Amber Murphy' },\n        { id: 'opt2', label: 'Andrew Miller' },\n        { id: 'opt3', label: 'Barbara Ward' },\n        { id: 'opt4', label: 'Byron Cranston', disabled: true },\n        { id: 'opt5', label: 'Dennis Reynolds' },\n        { id: 'opt6', label: 'Dee Reynolds' },\n        { id: 'opt7', label: 'Ezra Betterthan' },\n        { id: 'opt8', label: 'Jeff Spicoli' },\n        { id: 'opt9', label: 'Joseph Smith' },\n        { id: 'opt10', label: 'Jasmine Diaz' },\n        { id: 'opt11', label: 'Martin Harris' },\n        { id: 'opt12', label: 'Michael Morgan', disabled: true },\n        { id: 'opt13', label: 'Michelle Rodriguez' },\n        { id: 'opt14', label: 'Ziggy Stardust' },\n      ]}\n    />\n  </View>\n)\n```\n\n#### Providing assistive text for screen readers\nIt's important to ensure screen reader users receive instruction and feedback while interacting with a `Select`, but screen reader support for the `combobox` role varies. The `assistiveText` prop should always be used to explain how a keyboard user can make a selection. Additionally, a live region should be updated with feedback as the component is interacted with, such as when options are filtered or highlighted. Using an [Alert](#Alert) with the `screenReaderOnly` prop is the easiest way to do this.\n","Selectable":"\n`Selectable` is a low level utility component that can be used to create combobox widgets. Before composing your own component, make sure an existing component, like [Select](#Select), can't be adapted for your use case.\n\n\n```javascript\n---\nexample: true\nrender: false\n---\n\nclass CustomSelect extends React.Component {\n  state = {\n    isShowingOptions: false,\n    highlightedOptionId: this.props.options[0].id,\n    selectedOptionId: this.props.options[0].id,\n    inputValue: this.props.options[0].label,\n    filteredOptions: this.props.options\n  }\n\n  filterOptions = (value) => {\n    return this.props.options.filter(option => (\n      option.label.toLowerCase().startsWith(value.toLowerCase())\n    ))\n  }\n\n  matchValue () {\n    const { filteredOptions, inputValue, selectedOptionId } = this.state\n    if (filteredOptions.length === 1) {\n      if (filteredOptions[0].label.toLowerCase() === inputValue.toLowerCase()) {\n        return {\n          inputValue: filteredOptions[0].label,\n          selectedOptionId: filteredOptions[0].id\n        }\n      }\n    }\n    const index = this.getOptionIndex(null, selectedOptionId, this.props.options)\n    return { inputValue: this.props.options[index].label }\n  }\n\n  getInputStyles () {\n    return {\n      display: 'block',\n      width: '250px',\n      padding: '5px'\n    }\n  }\n\n  getListStyles () {\n    const { isShowingOptions } = this.state\n    return {\n      background: 'white',\n      listStyle: 'none',\n      padding: 0,\n      margin: 0,\n      border: isShowingOptions && 'solid 1px lightgray'\n    }\n  }\n\n  getOptionStyles (option) {\n    const { selectedOptionId, highlightedOptionId } = this.state\n    const selected = selectedOptionId === option.id\n    const highlighted = highlightedOptionId === option.id\n    let background = 'transparent'\n    if (selected) {\n      background = 'lightgray'\n    } else if (highlighted) {\n      background = '#eeeeee'\n    }\n    return {\n      background,\n      padding: '0 10px'\n    }\n  }\n\n  getOptionIndex (direction, id, from) {\n    const { filteredOptions, highlightedOptionId } = this.state\n    const options = from ? from : filteredOptions\n    let index\n\n    for (let i = 0; i <= options.length - 1; i++) {\n      if (typeof id === 'undefined') {\n        if (highlightedOptionId === options[i].id) {\n          index = i + direction\n          if (index < 0) {\n            index = 0\n          } else if (index >= options.length - 1) {\n            index = options.length - 1\n          }\n          break\n        }\n      } else {\n        if (id === options[i].id) {\n          index = i\n          break\n        }\n      }\n    }\n    return index\n  }\n\n  getHandlers () {\n    return this.props.isDisabled ? {} : {\n      onRequestShowOptions: (e) => this.setState(state => ({\n        isShowingOptions: true,\n        highlightedOptionId: state.filteredOptions[0].id\n      })),\n      onRequestHideOptions: (e) => {\n        const index = this.getOptionIndex(null, this.state.selectedOptionId, this.props.options)\n        this.setState(state => ({\n          isShowingOptions: false,\n          inputValue: this.props.options[index].label,\n          filteredOptions: this.props.options,\n          highlightedOptionId: null,\n        }))\n      },\n      onRequestHighlightOption: (e, { id, direction }) => {\n        let index = this.getOptionIndex(direction, id)\n        this.setState(state => ({\n          highlightedOptionId: state.filteredOptions[index] ? state.filteredOptions[index].id : null,\n          inputValue: direction && state.filteredOptions[index]\n            ? state.filteredOptions[index].label\n            : state.inputValue\n        }))\n      },\n      onRequestSelectOption: (e, { id }) => {\n        const index = this.getOptionIndex(null, id)\n        this.setState(state => ({\n          selectedOptionId: id,\n          inputValue: state.filteredOptions[index].label,\n          filteredOptions: this.props.options,\n          isShowingOptions: false,\n          highlightedOptionId: null,\n        }))\n      }\n    }\n  }\n\n  render () {\n    const {\n      isShowingOptions,\n      inputValue,\n      highlightedOptionId,\n      selectedOptionId,\n      filteredOptions\n    } = this.state\n\n    return (\n      <Selectable\n        isShowingOptions={isShowingOptions}\n        highlightedOptionId={highlightedOptionId}\n        selectedOptionId={selectedOptionId ? selectedOptionId : null}\n        {...this.getHandlers()}\n      >\n        {({\n          getRootProps,\n          getLabelProps,\n          getInputProps,\n          getTriggerProps,\n          getListProps,\n          getOptionProps\n        }) => (\n          <span\n            style={{display: 'inline-block'}}\n            {...getRootProps({ref: (el) => this.rootRef = el})}\n          >\n            <label {...getLabelProps()}>Selectable Example</label>\n            <input\n              style={this.getInputStyles()}\n              {...getInputProps()}\n              {...getTriggerProps({\n                type: 'text',\n                value: inputValue,\n                onChange: (e) => {\n                  const newOptions = this.filterOptions(e.target.value)\n                  this.setState({\n                    inputValue: e.target.value,\n                    filteredOptions: newOptions,\n                    isShowingOptions: true,\n                    highlightedOptionId: newOptions[0] ? newOptions[0].id : null\n                  })\n                },\n                onBlur: (e) => this.setState({\n                  filteredOptions: this.props.options,\n                  highlightedOptionId: null,\n                  isShowingOptions: false,\n                  ...this.matchValue()\n                })\n              })\n            } />\n            <ul\n              style={this.getListStyles()}\n              {...getListProps()}\n            >\n              {isShowingOptions && filteredOptions.map((option) => (\n                <li\n                  key={option.id}\n                  style={this.getOptionStyles(option)}\n                  {...getOptionProps({ id: option.id })}\n                >\n                  {option.label}\n                </li>\n              ))}\n            </ul>\n          </span>\n        )}\n      </Selectable>\n    )\n  }\n}\n\nrender(\n  <View>\n    <CustomSelect\n      options={[\n        { id: 'opt0', value: '0', label: 'Alabama' },\n        { id: 'opt1', value: '1', label: 'Alaska' },\n        { id: 'opt2', value: '2', label: 'American Samoa' },\n        { id: 'opt3', value: '3', label: 'Arizona' },\n        { id: 'opt4', value: '4', label: 'Arkansas' },\n        { id: 'opt5', value: '5', label: 'California' },\n        { id: 'opt6', value: '6', label: 'Colorado' },\n        { id: 'opt7', value: '7', label: 'Connecticut' },\n        { id: 'opt8', value: '8', label: 'Delaware' },\n        { id: 'opt9', value: '9', label: 'District Of Columbia' },\n        { id: 'opt10', value: '10', label: 'Federated States Of Micronesia' },\n        { id: 'opt11', value: '11', label: 'Florida' },\n        { id: 'opt12', value: '12', label: 'Georgia' },\n        { id: 'opt13', value: '13', label: 'Guam' },\n        { id: 'opt14', value: '14', label: 'Hawaii' },\n        { id: 'opt15', value: '15', label: 'Idaho' },\n        { id: 'opt16', value: '16', label: 'Illinois' }\n      ]}\n    />\n  </View>\n)\n```\n\nSelectable has very few opinions about how a combobox component should be composed. It mostly aims to ensure all the proper WAI-ARIA roles and attributes are set on the right elements at the right times. Selectable uses a combination of controllable props and prop getters to set these attributes and provide accessible behavior.\n\n#### Prop getters\n`Selectable` provides a number of different prop getters. Each getter is intended to be used with a particular element in your component. `getInputProps` should be used to obtain attributes relevant to the `input` element in a combobox component. `getTriggerProps` should be used for the element responsible for triggering the showing and hiding of the options list. If the `input` element is also the trigger, use both of these prop getters on that element.\n\nThe only getter with a required argument is `getOptionProps` which requires an `id` be provided. However, it's best practice to set any props needed on an element via its prop getter. This just ensures you don't inadvertently override an essential value.\n\n#### Controllable props\nThere are several controllable props available. These should be updated to reflect changes to the externally managed state of the combobox component. The `selectedOptionId` prop, for example, specifies which option(s) should be considered \"selected\" when rendered.\n\n#### Request callbacks\nA variety of request callbacks are provided as prompts for state updates. They do not actually make any changes to props or state on their own. `onRequestShowOptions`, for example, is fired when `Selectable` thinks its `isShowingOptions` prop should be updated to true. The consumer can always decide if and how to react to these prompts, but utilizing them reduces a lot of the boilerplate combobox logic the consumer would otherwise be responsible for providing.\n","SimpleSelect":"\n`SimpleSelect` is a higher level abstraction of [Select](#Select) that closely parallels the functionality of standard HTML `<select>` elements. It does not support autocomplete behavior and is much less configurable than [Select](#Select). However, because it is more opinionated, `SimpleSelect` can be implemented with very little boilerplate.\n\n### Uncontrolled\nFor the most basic implementations, `SimpleSelect` can be uncontrolled. If desired, the `defaultValue` prop can be used to set the initial selection.\n\n```javascript\n---\nexample: true\nrender: true\n---\n<SimpleSelect renderLabel=\"Uncontrolled Select\">\n  <SimpleSelect.Option id=\"foo\" value=\"foo\">\n    Foo\n  </SimpleSelect.Option>\n  <SimpleSelect.Option id=\"bar\" value=\"bar\">\n    Bar\n  </SimpleSelect.Option>\n  <SimpleSelect.Option id=\"baz\" value=\"baz\">\n    Baz\n  </SimpleSelect.Option>\n</SimpleSelect>\n```\n\n### Controlled\nTo use `SimpleSelect` controlled, simply provide the `value` prop the string that corresponds to the selected option's `value` prop. The `onChange` callback can be used to update the value stored in state.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    value: 'Alaska'\n  }\n\n  handleSelect = (e, { id, value }) => {\n    this.setState({ value })\n  }\n\n  render () {\n    return (\n      <SimpleSelect\n        renderLabel=\"Controlled Select\"\n        assistiveText=\"Use arrow keys to navigate options.\"\n        value={this.state.value}\n        onChange={this.handleSelect}\n      >\n        {this.props.options.map((opt, index) => (\n          <SimpleSelect.Option\n            key={index}\n            id={`opt-${index}`}\n            value={opt}\n          >\n            { opt }\n          </SimpleSelect.Option>\n        ))}\n\n      </SimpleSelect>\n    )\n  }\n}\nrender(\n  <Example\n    options={[\n      'Alaska',\n      'American Samoa',\n      'Arizona',\n      'Arkansas',\n      'California',\n      'Colorado',\n      'Connecticut',\n      'Delaware',\n      'District Of Columbia',\n      'Federated States Of Micronesia',\n      'Florida',\n      'Georgia',\n      'Guam',\n      'Hawaii',\n      'Idaho',\n      'Illinois'\n    ]}\n  />\n)\n```\n\n### Groups\nLike a HTML `<select>` element, `SimpleSelect` supports option groups. `SimpleSelect.Group` only requires the `renderLabel` prop be provided.\n\n```javascript\n---\nexample: true\nrender: true\n---\n<SimpleSelect renderLabel=\"Select with Groups\">\n  <SimpleSelect.Group renderLabel=\"Group one\" key=\"grp1\">\n    <SimpleSelect.Option id=\"opt1\" value=\"option-1\">\n      Option one\n    </SimpleSelect.Option>\n  </SimpleSelect.Group>\n  <SimpleSelect.Group renderLabel=\"Group two\" key=\"grp2\">\n    <SimpleSelect.Option id=\"opt2\" value=\"option-2\">\n      Option two\n    </SimpleSelect.Option>\n    <SimpleSelect.Option id=\"opt3\" value=\"option-3\">\n      Option three\n    </SimpleSelect.Option>\n    <SimpleSelect.Option id=\"opt4\" value=\"option-4\">\n      Option four\n    </SimpleSelect.Option>\n  </SimpleSelect.Group>\n</SimpleSelect>\n```\n","Spinner":"\n### Choose from four sizes and add margin as needed\n\nThe `size` prop allows you to select from `x-small`, `small`, `medium` and `large`\n-sized spinners. Margin can be added as needed using the `margin` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <Spinner renderTitle=\"Loading\" size=\"x-small\" />\n  <Spinner renderTitle=\"Loading\" size=\"small\" margin=\"0 0 0 medium\" />\n  <Spinner renderTitle=\"Loading\" margin=\"0 0 0 medium\" />\n  <Spinner renderTitle=\"Loading\" size=\"large\" margin=\"0 0 0 medium\" />\n</div>\n```\n\n### Different color schemes for use with light and dark backgrounds\n\nSpinner provides an `inverse` color scheme designed to be used with\ndark backgrounds.\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<Spinner renderTitle=\"Loading\" variant=\"inverse\" />\n```\n\n### Screen reader support\n\nThe `renderTitle` prop is read to screen readers.\n\n```js\n---\nexample: true\n---\n<Spinner renderTitle={() => \"Hello world\"} />\n```\n","InlineSVG":"\nThe InlineSVG component renders an accessible SVG inline in the html document.\nInlineSVG accepts the `className` prop, which you can use to style your image.\n\n> If you are rendering a square SVG icon, use [SVGIcon](#SVGIcon), which provides\nprops and styles specific to icons, such as pre-defined sizes.\n\n### Setting a fixed `width` or `height`\n\nFor sizing, the component accepts `width` and `height` props, which are added\nto the SVG as attributes.\n\n```js\n---\nexample: true\n---\n<InlineSVG src={iconExample} width=\"3em\" height=\"3em\" />\n```\n\n### Sizing to fill container\n\nIf you want your SVG to expand to fill its container, set both `height`\nand `width` to `auto`.\n\n> Note that setting `inline` to `false` will cause the SVG to display block, which\ncan be useful for removing any extra space at the bottom of the image that results from\n`line-height` being inherited.\n\n```js\n---\nexample: true\n---\n<View\n  as=\"div\"\n  width=\"15rem\"\n  borderWidth=\"small\"\n>\n  <InlineSVG\n    width=\"auto\"\n    height=\"auto\"\n    inline={false}\n    viewBox=\"0 0 500 500\"\n  >\n    <circle cx=\"250\" cy=\"250\" r=\"250\" />\n  </InlineSVG>\n</View>\n```\n","SVGIcon":"\nSVGIcon renders an accessible SVG icon inline in the HTML document.\n\nIn this example `iconExample` is the SVG source loaded as a string. You can use a webpack\nloader like [svg-inline-loader](https://github.com/webpack-contrib/svg-inline-loader) to import\nthe SVG source into your react component.\n\nThe SVGIcon component will add title and description elements for you if you set the `title`\nand `description` props. See the [InlineSVG](#InlineSVG) component for more props and\nexamples.\n\n_A11y note:_ By default the role is set to `presentation`. However, when the `title` prop is set, the `role`\nattribute is set to `img`. Include the `description` prop to further describe the image.\n\n### Default icon size\n\nBy default SVGIcon is set to a size of `1em`, so it will scale to match the `font-size` of\nits parent element.\n\n```js\n---\nexample: true\n---\n<div>\n  <div>I <SVGIcon src={iconExample} title=\"love\" /> New York!</div>\n  <Heading>I <SVGIcon src={iconExample} title=\"love\" /> New York!</Heading>\n</div>\n```\n\n### Changing icon size\nTo change the size of the icon, use one of the predefined options for the `size` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <SVGIcon src={iconExample} size=\"x-small\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"small\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"medium\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"x-large\" title=\"Icon Example\" />\n</div>\n```\n\nIf you need a size that is not offered via the `size` prop, adjust the\n`font-size` on the icon's parent element.\n\n```js\n---\nexample: true\n---\n<div style={{fontSize: '15rem', lineHeight: 1}}>\n  <SVGIcon src={iconExample} title=\"Icon Example\" />\n</div>\n```\n\n### Changing icon color\n\nBy default SVGIcon inherits the color of its parent element. However,\n[InlineSVG](#InlineSVG), the child component of SVGIcon, supports setting\nthe icon to one of the theme colors via the `color` property.\n\n> Setting `color` to `auto` will make SVGIcon not set\nany color fill. If you are setting the icon color via the `className` prop,\nuse this option &#151; otherwise the `color` value set by your class\ncould be overwritten.\n\n```js\n---\nexample: true\n---\n<div>\n  <SVGIcon color=\"primary\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"secondary\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"brand\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"success\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"warning\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"error\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"alert\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n</div>\n```\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<div>\n  <SVGIcon color=\"primary-inverse\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"secondary-inverse\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n</div>\n```\n\n### Changing icon rotation\n\nSVGIcon can be rotated by adding a `rotate` prop of 0 (default), 90, 180, or 270.\n\n```js\n---\nexample: true\n---\n<SVGIcon src={iconExample} size=\"medium\" rotate=\"90\" />\n```\n\n### Changing the icon's display property\n\nSVGIcon defaults to displaying `inline-block`, which can result in some space\nappearing beneath the icon, as it will inherit its parent's `line-height`.\nIn situations where this is undesirable, you can set `inline` to `false` to make\nthe icon display as a block-level element.\n\n```js\n---\nexample: true\n---\n<SVGIcon src={iconExample} size=\"medium\" inline={false} />\n```\n\n### Children\n\nThe SVGIcon component also accepts SVG content as jsx via the children prop. Note: if passing the path via the children prop, do not forget to include the **viewBox** attribute (see example).\n\n```js\n---\nexample: true\n---\n<SVGIcon size=\"small\" viewBox=\"0 0 2000 2000\">\n  <path d=\"M1692.48 910.647l-732.762 687.36-731.182-685.779c-154.616-156.875-154.616-412.122 0-568.997 74.542-75.558 173.704-117.233 279.304-117.233h.113c105.487 0 204.65 41.675 279.078 117.233l.113.113c74.767 75.783 116.103 176.865 116.103 284.385h112.941c0-107.52 41.224-208.602 116.104-284.498 74.428-75.558 173.59-117.233 279.19-117.233h.113c105.487 0 204.763 41.675 279.19 117.233 154.617 156.875 154.617 412.122 1.695 567.416m78.833-646.701c-95.887-97.355-223.737-150.89-359.718-150.89h-.113c-136.094 0-263.83 53.535-359.604 150.777-37.61 38.061-68.443 80.979-92.16 127.398-23.718-46.42-54.664-89.337-92.16-127.285-95.774-97.355-223.51-150.89-359.605-150.89h-.113c-135.981 0-263.83 53.535-359.83 150.89-197.648 200.696-197.648 526.983 1.694 729.035l810.014 759.868L1771.313 991.4c197.647-200.47 197.647-526.758 0-727.454\" stroke=\"none\" strokeWidth=\"1\" fillRule=\"evenodd\"/>\n</SVGIcon>\n```\n","Table":"\n### Table layout\n\nIn stacked layout, column header is rendered in each cell, but not in row header.\n\n> If you are using [TruncateText](#TruncateText) (or CSS ellipsis) in your Table, set the\n> layout to `fixed` or `stacked`, or the text truncation will not work. To force long strings to break and not\n> exceed the bounds of the table cell, use `fixed` or `stacked`, together with the [Text](#Text) component:\n> `<Text wrap=\"break-word\">[long string]</Text>`.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    layout: 'auto',\n    hover: false,\n  }\n\n  handleChange = (field, value) => {\n    this.setState({\n      [field]: value,\n    })\n  }\n\n  renderOptions () {\n    const { layout, hover } = this.state\n\n    return (\n      <Flex alignItems=\"start\">\n        <Flex.Item margin=\"small\">\n          <RadioInputGroup\n            name=\"layout\"\n            description=\"layout\"\n            value={layout}\n            onChange={(e, value) => this.handleChange('layout', value)}\n          >\n            <RadioInput label=\"auto\" value=\"auto\" />\n            <RadioInput label=\"fixed\" value=\"fixed\" />\n            <RadioInput label=\"stacked\" value=\"stacked\" />\n          </RadioInputGroup>\n        </Flex.Item>\n        <Flex.Item margin=\"small\">\n          <Checkbox\n            label=\"hover\"\n            checked={hover}\n            onChange={(e, value) => this.handleChange('hover', !hover)}\n          />\n        </Flex.Item>\n      </Flex>\n    )\n  }\n\n  render() {\n    const { layout, hover } = this.state\n\n    return (\n      <div>\n        {this.renderOptions()}\n        <Table\n          caption='Top rated movies'\n          layout={layout}\n          hover={hover}\n        >\n          <Table.Head>\n            <Table.Row>\n              <Table.ColHeader id=\"Rank\">Rank</Table.ColHeader>\n              <Table.ColHeader id=\"Title\">Title</Table.ColHeader>\n              <Table.ColHeader id=\"Year\">Year</Table.ColHeader>\n              <Table.ColHeader id=\"Rating\">Rating</Table.ColHeader>\n            </Table.Row>\n          </Table.Head>\n          <Table.Body>\n            <Table.Row>\n              <Table.RowHeader>1</Table.RowHeader>\n              <Table.Cell>The Shawshank Redemption</Table.Cell>\n              <Table.Cell>1994</Table.Cell>\n              <Table.Cell>9.3</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.RowHeader>2</Table.RowHeader>\n              <Table.Cell>The Godfather</Table.Cell>\n              <Table.Cell>1972</Table.Cell>\n              <Table.Cell>9.2</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.RowHeader>3</Table.RowHeader>\n              <Table.Cell>The Godfather: Part II</Table.Cell>\n              <Table.Cell>1974</Table.Cell>\n              <Table.Cell>9.0</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Column width and alignment\n\nEach column (`ColHeader`) can have a custom width, and each cell (`ColHeader`, `RowHeader` or `Cell`)\ncan be aligned differently.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  render() {\n    const { headers, rows } = this.props\n\n    return (\n      <Responsive\n        query={{\n          small: { maxWidth: '40rem' },\n          large: { minWidth: '41rem' },\n        }}\n        props={{\n          small: { layout: 'stacked' },\n          large: { layout: 'fixed' },\n        }}\n      >\n        {({ layout }) => (\n          <div>\n            <Table\n              caption='Top rated movies'\n              layout={layout}\n            >\n              <Table.Head>\n                <Table.Row>\n                  {(headers || []).map(({ id, text, width, textAlign }) => (\n                    <Table.ColHeader\n                      key={id}\n                      id={id}\n                      width={width}\n                      textAlign={textAlign}\n                    >\n                      {text}\n                    </Table.ColHeader>\n                   ))}\n                </Table.Row>\n              </Table.Head>\n              <Table.Body>\n                {rows.map((row) => (\n                  <Table.Row key={row.id}>\n                    {headers.map(({ id, renderCell, textAlign }) => (\n                      <Table.Cell\n                        key={id}\n                        textAlign={layout === 'stacked' ? 'start' : textAlign}\n                      >\n                        {renderCell ? renderCell(row[id], layout) : row[id]}\n                      </Table.Cell>\n                    ))}\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </div>\n        )}\n      </Responsive>\n    )\n  }\n}\n\nconst renderSummary = (summary, layout) => (layout === 'stacked')\n  ? summary\n  : (\n    <TruncateText\n      truncate=\"word\"\n      ellipsis=\"...\"\n    >\n      {summary}\n    </TruncateText>\n  )\n\nrender(\n  <Example\n    headers={[\n      {\n        id: 'Title',\n        text: 'Title',\n        width: '25%',\n        textAlign: 'start',\n      },\n      {\n        id: 'Year',\n        text: 'Year',\n        width: '15%',\n        textAlign: 'start',\n      },\n      {\n        id: 'Summary',\n        text: 'Summary',\n        width: '40%',\n        renderCell: renderSummary,\n        textAlign: 'start',\n      },\n      {\n        id: 'BoxOffice',\n        text: 'Box Office',\n        width: '20%',\n        textAlign: 'end',\n      },\n    ]}\n    rows={[\n      {\n        id: '1',\n        Title: 'The Shawshank Redemption',\n        Year: 1994,\n        Summary: 'Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.',\n        BoxOffice: '$28,341,469',\n      },\n      {\n        id: '2',\n        Title: 'The Godfather',\n        Year: 1972,\n        Summary: 'The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.',\n        BoxOffice: '$133,698,921',\n      },\n      {\n        id: '3',\n        Title: 'The Godfather: Part II',\n        Year: 1974,\n        Summary: 'The early life and career of Vito Corleone in 1920s New York City is portrayed, while his son, Michael, expands and tightens his grip on the family crime syndicate.',\n        BoxOffice: '$47,542,841',\n      },\n    ]}\n  />\n)\n```\n\n### A sortable table using our Responsive component\n\nResize the window to see how column headers transition into a Select for sorting table content when the traditional Table Header is no longer clickable. The Table layout itself switches from the horizontal view to the stacked view allowing content to be viewed without horizontal scrolling. See [Responsive](#Responsive) for more examples.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass SortableTable extends React.Component {\n  constructor (props) {\n    super(props)\n    const { headers } = props\n\n    this.state = {\n      sortBy: headers && headers[0] && headers[0].id,\n      ascending: true,\n    }\n  }\n\n  handleSort = (event, { id }) => {\n    const { sortBy, ascending } = this.state\n\n    if (id === sortBy) {\n      this.setState({\n        ascending: !ascending,\n      })\n    } else {\n      this.setState({\n        sortBy: id,\n        ascending: true,\n      })\n    }\n  }\n\n  render() {\n    const { caption, headers, rows } = this.props\n    const { sortBy, ascending } = this.state\n    const direction = ascending ? 'ascending' : 'descending'\n    const sortedRows = [...(rows || [])].sort((a, b) => {\n      if (a[sortBy] < b[sortBy]) {\n        return -1\n      }\n      if (a[sortBy] > b[sortBy]) {\n        return 1\n      }\n      return 0\n    })\n\n    if (!ascending) {\n      sortedRows.reverse()\n    }\n    return (\n      <Responsive\n        query={{\n          small: { maxWidth: '40rem' },\n          large: { minWidth: '41rem' },\n        }}\n        props={{\n          small: { layout: 'stacked' },\n          large: { layout: 'auto' },\n        }}\n      >\n        {(props) => (\n          <div>\n            <Table\n              caption={`${caption}: sorted by ${sortBy} in ${direction} order`}\n              {...props}\n            >\n              <Table.Head renderSortLabel=\"Sort by\">\n                <Table.Row>\n                  {(headers || []).map(({ id, text }) => (\n                    <Table.ColHeader\n                      key={id}\n                      id={id}\n                      onRequestSort={this.handleSort}\n                      sortDirection={id === sortBy ? direction : 'none'}\n                    >\n                      {text}\n                    </Table.ColHeader>\n                   ))}\n                </Table.Row>\n              </Table.Head>\n              <Table.Body>\n                {sortedRows.map((row) => (\n                  <Table.Row key={row.id}>\n                    {headers.map(({ id, renderCell }) => (\n                      <Table.Cell key={id}>\n                        {renderCell ? renderCell(row[id]) : row[id]}\n                      </Table.Cell>\n                    ))}\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n            <Alert\n              liveRegion={() => document.getElementById('flash-messages')}\n              liveRegionPoliteness=\"polite\"\n              screenReaderOnly\n            >\n              {`Sorted by ${sortBy} in ${direction} order`}\n            </Alert>\n          </div>\n        )}\n      </Responsive>\n    )\n  }\n}\n\nrender(\n  <SortableTable\n    caption=\"Top rated movies\"\n    headers={[\n      {\n        id: 'Rank',\n        text: 'Rank',\n      },\n      {\n        id: 'Title',\n        text: 'Title',\n      },\n      {\n        id: 'Year',\n        text: 'Year',\n      },\n      {\n        id: 'Rating',\n        text: 'Rating',\n        renderCell: (rating) => rating.toFixed(1),\n      },\n    ]}\n    rows={[\n      {\n        id: '1',\n        Rank: 1,\n        Title: 'The Shawshank Redemption',\n        Year: 1994,\n        Rating: 9.3,\n      },\n      {\n        id: '2',\n        Rank: 2,\n        Title: 'The Godfather',\n        Year: 1972,\n        Rating: 9.2,\n      },\n      {\n        id: '3',\n        Rank: 3,\n        Title: 'The Godfather: Part II',\n        Year: 1974,\n        Rating: 9.0,\n      },\n      {\n        id: '4',\n        Rank: 4,\n        Title: 'The Dark Knight',\n        Year: 2008,\n        Rating: 9.0,\n      },\n      {\n        id: '5',\n        Rank: 5,\n        Title: '12 Angry Men',\n        Year: 1957,\n        Rating: 8.9,\n      },\n    ]}\n  />\n)\n```\n\n### A sortable table with selection and pagination\n\nThe composition order is important. `SelectableTable` -> `PaginatedTable` -> `SortableTable`, so\nthat selection does not re-paginate or re-sort the table, and pagination does not re-sort the table.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass SelectableTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: new Set()\n    }\n  }\n\n  handleSelectAll = (allSelected) => {\n    const { rowIds } = this.props\n\n    this.setState({\n      selected: allSelected ? new Set() : new Set(rowIds),\n    })\n  }\n\n  handleSelectRow = (rowSelected, rowId) => {\n    const { selected } = this.state\n    const copy = new Set(selected)\n    if (rowSelected) {\n      copy.delete(rowId)\n    } else {\n      copy.add(rowId)\n    }\n\n    this.setState({\n      selected: copy,\n    })\n  }\n\n  render() {\n    const { caption, headers, rows, onSort, sortBy, ascending, rowIds } = this.props\n    const { selected } = this.state\n    const allSelected = selected.size > 0 && rowIds.every((id) => selected.has(id))\n    const someSelected = selected.size > 0 && !allSelected\n    const direction = ascending ? 'ascending' : 'descending'\n\n    return (\n      <Responsive\n        query={{\n          small: { maxWidth: '40rem' },\n          large: { minWidth: '41rem' },\n        }}\n        props={{\n          small: { layout: 'stacked' },\n          large: { layout: 'auto' },\n        }}\n      >\n        {(props) => (\n          <div>\n            <View\n              as=\"div\"\n              padding=\"small\"\n              background=\"primary-inverse\"\n            >\n              {`${selected.size} of ${rowIds.length} selected`}\n            </View>\n            <Table\n              caption={`${caption}: sorted by ${sortBy} in ${direction} order`}\n              {...props}\n            >\n              <Table.Head renderSortLabel={<ScreenReaderContent>Sort by</ScreenReaderContent>}>\n                <Table.Row>\n                  <Table.ColHeader id=\"select\">\n                    <Checkbox\n                      label={<ScreenReaderContent>Select all</ScreenReaderContent>}\n                      onChange={() => this.handleSelectAll(allSelected)}\n                      checked={allSelected}\n                      indeterminate={someSelected}\n                    />\n                  </Table.ColHeader>\n                  {(headers || []).map(({ id, text, width }) => (\n                     <Table.ColHeader\n                       key={id}\n                       id={id}\n                       width={width}\n                       onRequestSort={onSort}\n                       sortDirection={id === sortBy ? direction : 'none'}\n                     >\n                       {text}\n                     </Table.ColHeader>\n                   ))}\n                </Table.Row>\n              </Table.Head>\n              <Table.Body>\n                {(rows || []).map((row) => {\n                  const rowSelected = selected.has(row.id)\n\n                  return (\n                    <Table.Row key={row.id}>\n                      <Table.RowHeader>\n                        <Checkbox\n                          label={<ScreenReaderContent>Select row</ScreenReaderContent>}\n                          onChange={() => this.handleSelectRow(rowSelected, row.id)}\n                          checked={rowSelected}\n                        />\n                      </Table.RowHeader>\n                      {(headers || []).map(({ id, renderCell }) => (\n                        <Table.Cell key={id}>\n                          {renderCell ? renderCell(row[id]) : row[id]}\n                        </Table.Cell>\n                      ))}\n                    </Table.Row>\n                  )\n                })}\n              </Table.Body>\n            </Table>\n            <Alert\n              liveRegion={() => document.getElementById('flash-messages')}\n              liveRegionPoliteness=\"polite\"\n              screenReaderOnly\n            >\n              {`${selected.size} of ${rowIds.length} selected`}\n            </Alert>\n          </div>\n        )}\n      </Responsive>\n    )\n  }\n}\n\nclass PaginatedTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 0,\n    }\n  }\n\n  handleClick = (page) => {\n    this.setState({\n      page,\n    })\n  }\n\n  handleSort = (event, options) => {\n    const { onSort } = this.props\n\n    this.setState({\n      page: 0,\n    })\n    onSort(event, options)\n  }\n\n  render() {\n    const { caption, headers, rows, sortBy, ascending, perPage } = this.props\n    const { page } = this.state\n    const startIndex = page * perPage\n    const slicedRows = rows.slice(startIndex, startIndex + perPage)\n    const pageCount = perPage && Math.ceil(rows.length / perPage)\n\n    return (\n      <div>\n        <SelectableTable\n          caption={caption}\n          headers={headers}\n          rows={slicedRows}\n          onSort={this.handleSort}\n          sortBy={sortBy}\n          ascending={ascending}\n          rowIds={rows.map((row) => row.id)}\n        />\n        {pageCount > 1 && (\n          <Pagination\n            variant='compact'\n            labelNext='Next Page'\n            labelPrev='Previous Page'\n            margin='large'\n          >\n            {Array.from(Array(pageCount), (item, index) => (\n              <Pagination.Page\n                key={index}\n                onClick={() => this.handleClick(index)}\n                current={index === page}\n              >\n                {index + 1}\n              </Pagination.Page>\n            ))}\n          </Pagination>\n        )}\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"polite\"\n          screenReaderOnly\n        >\n          {`Table page ${page + 1} of ${pageCount}`}\n        </Alert>\n      </div>\n    )\n  }\n}\n\nclass SortableTable extends React.Component {\n  constructor (props) {\n    super(props)\n    const { headers } = props\n\n    this.state = {\n      sortBy: headers && headers[0] && headers[0].id,\n      ascending: true,\n    }\n  }\n\n  handleSort = (event, { id }) => {\n    const { sortBy, ascending } = this.state\n\n    if (id === sortBy) {\n      this.setState({\n        ascending: !ascending,\n      })\n    } else {\n      this.setState({\n        sortBy: id,\n        ascending: true,\n      })\n    }\n  }\n\n  render() {\n    const { caption, headers, rows, perPage } = this.props\n    const { sortBy, ascending } = this.state\n    const sortedRows = [...rows].sort((a, b) => {\n      if (a[sortBy] < b[sortBy]) {\n        return -1\n      }\n      if (a[sortBy] > b[sortBy]) {\n        return 1\n      }\n      return 0\n    })\n\n    if (!ascending) {\n      sortedRows.reverse()\n    }\n    return (\n      <div>\n        <PaginatedTable\n          caption={caption}\n          headers={headers}\n          rows={sortedRows}\n          onSort={this.handleSort}\n          sortBy={sortBy}\n          ascending={ascending}\n          perPage={perPage}\n        />\n        <Alert\n          liveRegion={() => document.getElementById('flash-messages')}\n          liveRegionPoliteness=\"polite\"\n          screenReaderOnly\n        >\n          {`Sorted by ${sortBy} in ${ascending ? 'ascending' : 'descending'} order`}\n        </Alert>\n      </div>\n    )\n  }\n}\n\nconst renderRating = (rating) => (\n  <Rating\n    label='Rating'\n    valueNow={rating}\n    valueMax={10}\n    iconCount={5}\n  />\n)\n\nrender(\n  <SortableTable\n    caption=\"Top rated movies\"\n    headers={[\n      {\n        id: 'Rank',\n        text: 'Rank',\n      },\n      {\n        id: 'Title',\n        text: 'Title',\n        width: '40%',\n      },\n      {\n        id: 'Year',\n        text: 'Year',\n      },\n      {\n        id: 'Rating',\n        text: 'Rating',\n        renderCell: renderRating,\n      },\n    ]}\n    rows={[\n      {\n        id: '1',\n        Rank: 1,\n        Title: 'The Shawshank Redemption',\n        Year: 1994,\n        Rating: 9.3,\n      },\n      {\n        id: '2',\n        Rank: 2,\n        Title: 'The Godfather',\n        Year: 1972,\n        Rating: 9.2,\n      },\n      {\n        id: '3',\n        Rank: 3,\n        Title: 'The Godfather: Part II',\n        Year: 1974,\n        Rating: 9.0,\n      },\n      {\n        id: '4',\n        Rank: 4,\n        Title: 'The Dark Knight',\n        Year: 2008,\n        Rating: 9.0,\n      },\n      {\n        id: '5',\n        Rank: 5,\n        Title: '12 Angry Men',\n        Year: 1957,\n        Rating: 8.9,\n      },\n    ]}\n    perPage={3}\n  />\n)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Column headers can be sortable</Figure.Item>\n    <Figure.Item>Use the <Link href=\"#CondensedButton\">CondensedButton</Link> and <strong>small</strong> inputs inside cells</Figure.Item>\n    <Figure.Item>Actions must relate to that row only</Figure.Item>\n    <Figure.Item>Use horizontal and vertical alignment that makes sense with the content</Figure.Item>\n    <Figure.Item>Start align US dates and apply i18n</Figure.Item>\n    <Figure.Item>Start align text and alphanumeric</Figure.Item>\n    <Figure.Item>Start align currency</Figure.Item>\n    <Figure.Item>End align quantities and decimals</Figure.Item>\n    <Figure.Item>Table headers should have the same start or end alignment as their column contents</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Center align more than 4 characters/numbers, choose start or end</Figure.Item>\n    <Figure.Item>Use to create a layout</Figure.Item>\n    <Figure.Item>Use zebra stripes</Figure.Item>\n    <Figure.Item>Bottom align ever</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Tabs":"\n`<Tabs />` is an accessible tabbed navigation component. Use the TAB key to focus the component and arrow keys to navigate between panels of content. To set a default panel that should be selected on initial render, set the `selected` prop on that `<Tabs.Panel>`.\n\nTo restrict the width of `<Tabs />`, use the `maxWidth` prop. Add space around the entire component using the `margin` prop. Adjust the padding around the panel content via `padding` (default is `small`) on each `<Tabs.Panel>`. Restrict the height of the panel using `minHeight` or `maxHeight`. Finally, switch the text alignment of the panel content with `textAlign`.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    selectedIndex: 0\n  }\n  handleTabChange = (event, { index, id }) => {\n    this.setState({\n      selectedIndex: index\n    })\n  }\n  render () {\n    const { selectedIndex } = this.state\n    return (\n      <Tabs\n        margin=\"large auto\"\n        padding=\"medium\"\n        onRequestTabChange={this.handleTabChange}\n      >\n        <Tabs.Panel\n          id=\"tabA\"\n          renderTitle=\"Tab A\"\n          textAlign=\"center\"\n          padding=\"large\"\n          iSelected={selectedIndex === 0}\n        >\n          <Button>Focus Me</Button>\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabB\" renderTitle=\"Disabled Tab\" isDisabled>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabC\" renderTitle=\"Tab C\" isSelected={selectedIndex === 2}>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabD\" renderTitle=\"Tab D\" isSelected={selectedIndex === 3}>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n      </Tabs>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Secondary Tabs\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    selectedIndex: 2\n  }\n  handleTabChange = (event, { index }) => {\n    this.setState({\n      selectedIndex: index\n    })\n  }\n  render () {\n    const { selectedIndex } = this.state\n    return (\n      <Tabs\n        variant=\"secondary\"\n        onRequestTabChange={this.handleTabChange}\n        minHeight=\"10rem\"\n        maxHeight=\"10rem\"\n      >\n        <Tabs.Panel renderTitle=\"First Tab\" isSelected={selectedIndex === 0}>\n          Hello World\n        </Tabs.Panel>\n        <Tabs.Panel renderTitle=\"Disabled Tab\" isDisabled>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n        <Tabs.Panel renderTitle=\"Third Tab\" isSelected={selectedIndex === 2}>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n        <Tabs.Panel renderTitle=\"Fourth Tab\" isSelected={selectedIndex === 3}>\n          {lorem.paragraphs()}\n        </Tabs.Panel>\n      </Tabs>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Handling Tab overflow\n\nBy default, `<Tabs />` will stack each individual `<Tab />` if there isn't enough horizontal\nspace to display them all inline. For a more compact tab navigation, set `tabOverflow` to\n`scroll`, which allows the Tabs to scroll horizontally.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    selectedIndex: 4\n  }\n  handleTabChange = (event, { index, id }) => {\n    this.setState({\n      selectedIndex: index\n    })\n  }\n  render () {\n    const { selectedIndex } = this.state\n    return (\n      <Tabs\n        margin=\"large auto\"\n        padding=\"medium\"\n        onRequestTabChange={this.handleTabChange}\n        tabOverflow=\"scroll\"\n        maxWidth=\"20rem\"\n      >\n        <Tabs.Panel id=\"tabA\" renderTitle=\"Tab A\" isSelected={selectedIndex === 0}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabB\" renderTitle=\"Tab B\" isSelected={selectedIndex === 1}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabC\" renderTitle=\"Tab C\" isSelected={selectedIndex === 2}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabD\" renderTitle=\"Tab D\" isSelected={selectedIndex === 3}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabE\" renderTitle=\"Tab E\" isSelected={selectedIndex === 4}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabF\" renderTitle=\"Tab F\" isSelected={selectedIndex === 5}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n        <Tabs.Panel id=\"tabG\" renderTitle=\"Tab G\" isSelected={selectedIndex === 6}>\n          {lorem.sentence()}\n        </Tabs.Panel>\n      </Tabs>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Title should be a single row above content</Figure.Item>\n    <Figure.Item>TabButton content should be succinct, preferably one word</Figure.Item>\n    <Figure.Item>Use title case</Figure.Item>\n    <Figure.Item>Use default variant when a single Tabs component exists on the page</Figure.Item>\n    <Figure.Item>Ensure each Tablist.Panel content is mutually exclusive of the others’</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Exceed 20 characters including spaces for the title</Figure.Item>\n    <Figure.Item>Exceed 5 tabs</Figure.Item>\n    <Figure.Item>Use avatars, pills, icons, etc in the TabButton</Figure.Item>\n    <Figure.Item>Use `tabOverflow=\"scroll\"` with `secondary` Tabs</Figure.Item>\n    <Figure.Item>Nest tabbed content within a tab</Figure.Item>\n    <Figure.Item>Align tabs to the center of the page</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Tag":"\nUse `<Tag />` to represent a category or group in a form.\n\n```js\n---\nexample: true\n---\n<Tag text=\"Static\" margin=\"0 xx-small 0 0\" />\n```\n\n### Dismissible\n\nWhen the `dismissible` prop is added to a clickable Tag, the button\nrenders an X/close icon (the Tag should be dismissed via the `onClick`\nprop).\n\n```js\n---\nexample: true\n---\n<Tag\n  text={\n    <AccessibleContent alt=\"Remove dismissible tag\">\n      Dismissible tag\n    </AccessibleContent>\n  }\n  dismissible\n  margin=\"0 xx-small 0 0\"\n  onClick={function () {\n    alert(\"This Tag was dismissed\")\n  }}\n/>\n```\n\n### Disabled\n\nA `disabled` Tag.\n\n```js\n---\nexample: true\n---\n<Tag\n  text=\"Dismissible Disabled\"\n  dismissible\n  disabled\n  margin=\"0 xx-small 0 0\"\n  onClick={function () {\n    alert(\"This Tag was dismissed. This shouldn't happen\")\n  }}\n/>\n```\n\n### Sizes\n\n`medium` is the default Tag size.\n\n```js\n---\nexample: true\n---\n<div>\n  <Tag text=\"Small\" size=\"small\" margin=\"0 xx-small 0 0\" />\n  <Tag text=\"Medium\" margin=\"0 xx-small 0 0\" />\n  <Tag text=\"Large\" size=\"large\" margin=\"0 xx-small 0 0\" />\n</div>\n```\n\n### Max-width\n\n```js\n---\nexample: true\n---\n<Tag\n  text=\"Long string of text designed to trigger overflow\"\n/>\n```\n\n### Inline variant\n\nThis variant is designed to look similar to the surrounding text.\n\n```js\n---\nexample: true\n---\n<p>\n  This is an\n  <Tag\n    dismissible\n    onClick={() => alert('Tag dismissed')}\n    size=\"large\"\n    text={<AccessibleContent alt=\"Remove 'inline'\">\n      inline\n    </AccessibleContent>}\n    variant=\"inline\"\n  />\n  tag.\n</p>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>When implementing dismissable tags, be sure to add AccessibleContent to clarify that the tag is dismissible to screen readers</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Text":"\nA component for styling textual content\n\n### Font sizes\n\n```js\n---\nexample: true\n---\n<div>\n  <Text size=\"x-small\">I&#39;m extra small</Text><br/>\n  <Text size=\"small\">I&#39;m small</Text><br/>\n  <Text>I&#39;m medium</Text><br/>\n  <Text size=\"large\">I&#39;m large</Text><br/>\n  <Text size=\"x-large\">I&#39;m extra large</Text><br/>\n  <Text size=\"xx-large\">I&#39;m extra extra large</Text>\n</div>\n```\n\n### Font weights\n\n```js\n---\nexample: true\n---\n<div>\n  <Text weight=\"light\">I&#39;m light text</Text><br/>\n  <Text>I&#39;m normal text</Text><br/>\n  <Text weight=\"bold\">I&#39;m bold text</Text>\n</div>\n```\n\n### Font styles\n\n```js\n---\nexample: true\n---\n<div>\n  <Text fontStyle=\"italic\">I&#39;m italic text</Text><br/>\n  <Text>I&#39;m normal text</Text>\n</div>\n```\n\n### Line heights\n\n```js\n---\nexample: true\n---\n<div>\n  <Text lineHeight=\"fit\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text>\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text lineHeight=\"condensed\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text lineHeight=\"double\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n</div>\n```\n\n### Text transform\n\n```js\n---\nexample: true\n---\n<div>\n  <Text transform=\"capitalize\">I&#39;m capitalized text</Text><br/>\n  <Text transform=\"uppercase\">I&#39;m uppercase text</Text><br/>\n  <Text transform=\"lowercase\">I&#39;M LOWERCASE TEXT</Text><br/>\n</div>\n```\n\n### Letter-spacing\n\n```js\n---\nexample: true\n---\n<div>\n  <Text letterSpacing=\"normal\">I&#39;m normal text</Text><br/>\n  <Text letterSpacing=\"condensed\">I&#39;m condensed text</Text><br/>\n  <Text letterSpacing=\"expanded\" transform=\"uppercase\">I&#39;m expanded uppercase text</Text><br/>\n</div>\n```\n\n### Wrap\n\nUse `wrap=\"break-word\"` to force breaking in long strings that would otherwise\nexceed the bounds of their containers.\n\n```js\n---\nexample: true\n---\n<div>\n  <View as=\"div\" maxWidth=\"300px\" margin=\"none none small\" debug>\n    <Text>\n      superlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstring\n    </Text>\n  </View>\n  <View as=\"div\" maxWidth=\"300px\" debug>\n    <Text wrap=\"break-word\">\n      superlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstring\n    </Text>\n  </View>\n</div>\n```\n\n### Text colors\n\n```js\n---\nexample: true\n---\n<div>\n  <Text color=\"primary\">I&#39;m primary text</Text><br/>\n  <Text color=\"secondary\">I&#39;m secondary text</Text><br/>\n  <Text color=\"brand\">I&#39;m brand text</Text><br />\n  <Text color=\"success\">I&#39;m success text</Text><br/>\n  <Text color=\"warning\">I&#39;m warning text</Text><br/>\n  <Text color=\"danger\">I&#39;m danger text</Text><br />\n  <Text color=\"alert\">I&#39;m alert text</Text>\n</div>\n```\n\n```js\n---\nexample: true\nbackground: 'checkerboard-inverse'\n---\n<div>\n  <Text color=\"primary-inverse\">I&#39;m primary text</Text><br/>\n  <Text color=\"secondary-inverse\">I&#39;m secondary text</Text>\n</div>\n```\n\n### Element styles\n\n```js\n---\nexample: true\n---\n<Text>\n  <b>bold </b>\n  <strong>strong </strong>\n  <i>italic </i>\n  <em>emphasis </em>\n  <pre>preformatted</pre>\n  <code>code</code>\n  This<sup>is</sup> some<sub>text</sub>.\n</Text>\n```\n","TextArea":"\nTextArea renders a standard HTML `textarea` element. By default, TextArea will\nresize to fit its content. Use the `maxHeight` property to set a limit on the\ncomponent's height.\n\n```js\n---\nexample: true\n---\n<div>\n  <TextArea\n    label=\"Enter/delete text to see TextArea resize\"\n  />\n  <br />\n  <TextArea\n    label=\"I can't go any higher than 10rem (160px)\"\n    maxHeight=\"10rem\"\n  />\n</div>\n```\n\nTo allow the user to manually resize TextArea (in supported browsers), use the\n`resize` property.\n\n```js\n---\nexample: true\n---\n<TextArea label=\"Description\" resize=\"vertical\" />\n```\n\nA `TextArea` with errors:\n\n```js\n---\nexample: true\n---\n<TextArea messages={[{ text: 'Invalid description', type: 'error' }]} label=\"Description\" />\n```\n\nA disabled `TextArea`:\n\n```js\n---\nexample: true\n---\n<TextArea label=\"Description\" disabled />\n```\n\nA `TextArea` with a screenreader only label:\n\n```js\n---\nexample: true\n---\n<TextArea\n  label={<ScreenReaderContent>Description</ScreenReaderContent>}\n  placeholder=\"describe something\"\n/>\n```\n\nAn inline `TextArea` with a fixed width, initial height and maxHeight.\n\n```js\n---\nexample: true\n---\n<div style={{ display: 'flex', alignItems: 'center' }}>\n  <TextArea\n    label={<ScreenReaderContent>Label</ScreenReaderContent>}\n    inline\n    width=\"10em\"\n    height=\"10em\"\n    maxHeight=\"250px\"\n  />\n</div>\n```\n\nA 'controlled' TextArea:\n\n```js\n---\nrender: false\nexample: true\n---\n\nclass Example extends React.Component {\n  state = { description: 'Hello World' };\n\n  handleChange = (e) => this.setState({ description: e.target.value});\n\n  render () {\n    return (\n      <TextArea\n        label=\"Description\"\n        value={this.state.description}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nrender(<Example/>)\n```\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Align text to the left</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Repeat label text if using placeholder text</Figure.Item>\n    <Figure.Item>Use for rich text editing</Figure.Item>\n    <Figure.Item>Allow resizing of the TextArea to break the layout of a page</Figure.Item>\n    <Figure.Item>Place labels to the right of the TextArea</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","TextInput":"\n`TextInput` is a custom styled `input` element. It supports the following types: `text` (default) / `email` / `url` / `tel` / `search` / `password`\n\n### Uncontrolled TextInput\n\n```js\n---\nexample: true\n---\n<TextInput\n  renderLabel=\"Name\"\n  placeholder=\"Doe, John Doe\"\n  onChange={(event, value) => { console.log(value) }}\n/>\n```\n\n#### Controlled TextInput\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass ControlledTextInputExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: 'Supertramp',\n      disabled: false,\n      readOnly: false,\n      inline: false,\n      messages: null\n    }\n  }\n\n  handleChange = (e, value) => this.setState({\n    value,\n    messages: null\n  })\n\n  handleBlur = (e) => {\n    if (this.state.value === 'Supertramp') {\n      this.setState({\n        messages: [{ text: `Come on. There's no way your favorite band is really Supertramp.`, type: 'error' }]\n      })\n    }\n  }\n\n  toggleDisabled = (e) => this.setState(({ disabled: !this.state.disabled }))\n  toggleReadOnly = (e) => this.setState(({ readOnly: !this.state.readOnly }))\n  toggleInline = (e) => this.setState(({ inline: !this.state.inline }))\n\n  render () {\n    return (\n      <div>\n        <FormFieldGroup\n          description=\"Controlled TextInput state\"\n          layout=\"columns\"\n        >\n          <Checkbox\n            checked={this.state.disabled}\n            label=\"disabled\"\n            onChange={this.toggleDisabled}\n          />\n          <Checkbox\n            checked={this.state.readOnly}\n            label=\"readOnly\"\n            onChange={this.toggleReadOnly}\n          />\n          <Checkbox\n            checked={this.state.inline}\n            label=\"inline display\"\n            onChange={this.toggleInline}\n          />\n        </FormFieldGroup>\n        <View display=\"block\" margin=\"medium 0 0\">\n          <TextInput\n            renderLabel=\"What is your favorite band?\"\n            display={this.state.inline ? 'inline-block' : null}\n            value={this.state.value}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            interaction={this.state.disabled\n              ? 'disabled'\n              : this.state.readOnly ? 'readonly' : 'enabled'\n            }\n            messages={this.state.messages}\n            renderAfterInput={<SVGIcon src={iconExample} />}\n          />\n        </View>\n      </div>\n    )\n  }\n}\n\nrender(<ControlledTextInputExample />)\n```\n\n### Prepending and appending content\n\nTextInput accepts focusable and non-focusable content before and/or after\nthe input text. A common use case is adding an icon or avatar to the input.\nFocusable content will be focused separately from the input itself.\n\n> Note: For any content larger than an icon or small avatar (multiple [Tags](#Tag), for example),\n> use the `renderBeforeInput` property.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass ExtraContentExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: ''\n    }\n  }\n\n  handleChange = (e, value) => this.setState({ value })\n\n  render () {\n    return (\n      <View as=\"div\">\n        <TextInput\n          renderLabel=\"What are Paula Panda's favorite ice cream flavors?\"\n          value={this.state.value}\n          onChange={this.handleChange}\n          renderBeforeInput={\n            <View display=\"block\" padding=\"xxx-small 0\">\n              {\n                (this.state.value !== '') &&\n                <Tag\n                  text={this.state.value}\n                  margin=\"xxx-small xxx-small xxx-small none\"\n                  onClick={function () {\n                    console.log(this.state.value)\n                  }}\n                />\n              }\n              <Tag\n                text=\"Rocky road\"\n                margin=\"xxx-small xxx-small xxx-small none\"\n                onClick={function () {\n                  console.log('Rocky road')\n                }}\n              />\n              <Tag\n                text=\"Vanilla\"\n                margin=\"xxx-small xxx-small xxx-small none\"\n                onClick={function () {\n                  console.log('Vanilla')\n                }}\n              />\n              <Tag\n                text=\"Coffee\"\n                margin=\"xxx-small xxx-small xxx-small none\"\n                onClick={function () {\n                  console.log('Coffee')\n                }}\n              />\n              <Tag\n                text=\"Strawberry\"\n                margin=\"xxx-small xxx-small xxx-small none\"\n                onClick={function () {\n                  console.log('Strawberry')\n                }}\n              />\n            </View>\n          }\n          renderAfterInput={() => <Avatar name=\"Paula Panda\" src={avatarSquare} size=\"x-small\" />}\n        />\n      </View>\n    )\n  }\n}\n\nrender(<ExtraContentExample />)\n```\n\n### Setting width and display\n\nTo make the component display inline, set the `display` property to `inline-block`. To constrain the\nsize of the component, use `width`.\n\n```js\n---\nexample: true\n---\n<div>\n  <TextInput\n    renderLabel={<ScreenReaderContent>I am a hidden label</ScreenReaderContent>}\n    display=\"inline-block\"\n    width=\"4rem\"\n  />\n  &nbsp;\n  <Button>I Am Inline Content</Button>\n</div>\n```\n\n### `shouldNotWrap`\n\nIf there is content rendered before the input (via `renderBeforeInput`), the\ninput will wrap to a new line when the browser determines it does\nnot have enough room (for most browsers, this is 20 characters). Wrapping allows\nthe component to accommodate large lists of [Tags](#Tag), for example.\n\nIf not desired, this behavior can be overridden by setting the `shouldNotWrap`\nboolean prop to `true`.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" maxWidth=\"250px\">\n  <TextInput\n    renderLabel=\"I will not wrap\"\n    renderBeforeInput={<IconSearchLine inline={false} />}\n    renderAfterInput={<Avatar name=\"Paula Panda\" src={avatarSquare} size=\"x-small\" />}\n    shouldNotWrap\n  />\n  <View as=\"div\" margin=\"medium none none\">\n    <TextInput\n      renderLabel=\"I will wrap\"\n      renderBeforeInput={\n        <div>\n          <Tag\n            text=\"English 101\"\n            margin=\"xx-small xxx-small\"\n          />\n          <Tag\n            text=\"History 205\"\n            margin=\"xx-small xxx-small\"\n          />\n        </div>\n      }\n      renderAfterInput={<Avatar name=\"Paula Panda\" src={avatarSquare} size=\"x-small\" />}\n    />\n  </View>\n</View>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Left align text (exceptions may apply)</Figure.Item>\n    <Figure.Item>Place labels on top or to the left (inline)</Figure.Item>\n    <Figure.Item>Make placeholder text different than the label</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Place labels to the right of the input</Figure.Item>\n    <Figure.Item>Place inputs in the middle of sentences or phrases</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","TimeSelect":"\n`TimeSelect` component is a higher level abstraction of [Select](#Select) specifically for selecting time values. The list of possible values can be configured via the component's props. If you need to select times and dates, be sure to check out the documentation around [Time and Date patterns](#TimeDate).\n\n### Uncontrolled\nFor the most basic implementations, `TimeSelect` can be uncontrolled. If desired, the `defaultValue` prop can be used to set the initial selection.\n\n```javascript\n---\nexample: true\nrender: true\n---\n<TimeSelect\n  renderLabel=\"Choose a time\"\n  onChange={(e, { value }) => console.log(value)}\n  // defaultValue={new Date().toISOString()}\n/>\n```\n\n### Controlled\nTo use `TimeSelect` controlled, simply provide the `value` prop an ISO string. The `onChange` callback provides the ISO value of the corresponding option that was selected. Use this value to update the state.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  state = {\n    value: '2020-05-18T23:59:00'\n  }\n\n  handleChange = (e, { value }) => {\n    this.setState({ value })\n  }\n\n  render () {\n    return (\n      <TimeSelect\n        renderLabel=\"Choose a time\"\n        placeholder=\"e.g., 4:00:00 PM\"\n        value={this.state.value}\n        step={15}\n        format=\"LTS\"\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\nrender(\n  <Example />\n)\n```\n\n### Guidelines\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use a default value of 11:59 pm for implementations that have to do with due dates</Figure.Item>\n  </Figure>\n</Guidelines>\n```","ToggleDetails":"\nThe ToggleDetails component can be used to show/hide content in response to user action.\n\nBy default, ToggleDetails content is hidden. To override, pass in the `defaultExpanded` prop.\n\n```js\n---\nexample: true\n---\n<ToggleDetails\n  summary=\"Click to hide me!\"\n  defaultExpanded\n>\n  <Text weight=\"bold\">I am expanded!</Text> {lorem.paragraph()}\n</ToggleDetails>\n```\n\nToggleDetails can be controlled:\n\n```js\n---\nexample: true\nrender: false\n---\n\nclass Example extends React.Component {\n  state = {\n    expanded: true\n  };\n\n  handleChange = (event, expanded) => this.setState({ expanded });\n\n  handleToggle = () => this.setState({ expanded: !this.state.expanded });\n\n  render () {\n    return (\n      <div>\n        <Button onClick={this.handleToggle}>\n          This Button {this.state.expanded ? 'Collapses' : 'Expands'}\n        </Button>\n        <br />\n        <br />\n        <ToggleDetails\n          summary=\"Click to hide me!\"\n          expanded={this.state.expanded}\n          onToggle={this.handleChange}\n        >\n          <Text weight=\"bold\">I am controlled and expanded!</Text> {lorem.paragraph()}\n        </ToggleDetails>\n      </div>\n      )\n  }\n}\n\nrender(<Example />)\n```\n\nSetting ToggleDetails to `filled` will make the toggle use a full-width [Button](#Button) component.\n\n```js\n---\nexample: true\n---\n<ToggleDetails\n  variant=\"filled\"\n  summary=\"Click to expand me!\"\n>\n  {lorem.paragraph()}\n</ToggleDetails>\n```\n\n### Icon size / summary text formatting\n\nIcon size can be adjusted using the `size` prop with small, medium, and large options.\n\nThe `summary` prop accepts any node, allowing you to format the summary text as\nyou see fit. In these examples, we are formatting it with the\n[Text](#Text) component.\n\n```js\n---\nexample: true\n---\n<div>\n  <ToggleDetails\n    size=\"small\"\n    summary=\"Small icon\"\n  >\n    {lorem.paragraph()}\n  </ToggleDetails>\n\n  <br />\n\n  <ToggleDetails summary=\"Medium icon\">\n    {lorem.paragraph()}\n  </ToggleDetails>\n\n  <br />\n\n  <ToggleDetails\n    size=\"large\"\n    summary=\"Large icon\"\n  >\n    {lorem.paragraph()}\n  </ToggleDetails>\n</div>\n```\n\n### Icon positioning and block display\n\nThe `iconPosition` prop determines if the icon comes before or after the summary.\n\nWhen the `fluidWidth` prop is set, the toggle fills the width of its\ncontainer.\n\n```js\n---\nexample: true\n---\n<ToggleDetails\n  summary=\"Block display\"\n  iconPosition=\"end\"\n  defaultExpanded\n  fluidWidth\n>\n  <Text>\n    {lorem.paragraph()}\n  </Text>\n</ToggleDetails>\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use ToggleDetails when descriptive text is longer than a short phrase</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Nest ToggleDetails within another ToggleDetails</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","ToggleGroup":"\nPerforms the same function as [`ToggleDetails`](#ToggleDetails), but with the summary separated from the\ntoggle button, and built in padding and borders around the summary and main content area.\n\n### Basic example\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n  background=\"default\"\n>\n  <View display=\"block\" padding=\"small\">Here is the expanded content</View>\n</ToggleGroup>\n```\n\n### More detailed examples\n\n#### `defaultExpanded` to make the component `expanded` when it renders\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n  defaultExpanded\n>\n  <View display=\"block\" padding=\"small\">This content is expanded when the component renders</View>\n</ToggleGroup>\n```\n\n#### Passing in your own `icon` and `iconExpanded`\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n  iconExpanded={IconXSolid}\n  icon={IconPlusSolid}\n>\n  <View display=\"block\" padding=\"small\">Here is the expanded content</View>\n</ToggleGroup>\n```\n#### Disable default transition of details\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  transition={false}\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n>\n  <View display=\"block\" padding=\"small\">This content will not fade in</View>\n</ToggleGroup>\n```\n\n#### Disable default border if you want to nest ToggleGroups\n```javascript\n---\nexample: true\n---\n<ToggleGroup\n  defaultExpanded\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary={<Heading level=\"h3\">Parent ToggleGroup</Heading>}\n>\n  <ToggleGroup\n    size=\"small\"\n    toggleLabel=\"This is the toggle button label for screenreaders\"\n    summary=\"I am nested inside a parent ToggleGroup\"\n    border={false}\n  >\n    <View display=\"block\" padding=\"small\">\n      This is the details section of the nested ToggleGroup\n    </View>\n  </ToggleGroup>\n</ToggleGroup>\n```\n","Tooltip":"\nTooltips are small text-only contextual overlays that are triggered by hover/focus. Use anywhere additional explanation might be needed but space is limited on the triggering element.\n\n> ### What about 'focusable' elements?\n>\n> Content provided to the `renderTip` prop **should not contain any focusable elements**. If you'd like to do\n> that you should use the [Popover](#Popover) component and handle focus management yourself or\n> consider using a [Modal](#Modal) or a [Tray](#Tray) as those will work better on smaller screens.\n\n#### Uncontrolled Tooltips\n\n```js\n---\nexample: true\n---\n<div>\n  <p>\n    <Tooltip\n      renderTip=\"Hello. I'm a tool tip\"\n      as={Button}\n      onShowContent={() => console.log('showing')}\n      onHideContent={() => console.log('hidden')}\n    >\n      Hover or focus me\n    </Tooltip>\n  </p>\n  <p>\n    <Tooltip\n      color=\"primary-inverse\"\n      renderTip=\"Hello. I'm a tool tip\"\n      placement=\"bottom\"\n      offsetX=\"5px\"\n    >\n      <TextInput\n        display=\"inline-block\"\n        renderLabel=\"Enter some text\"\n      />\n    </Tooltip>\n  </p>\n  <p>\n    <Tooltip\n      renderTip=\"Hello. I'm a tool tip\"\n      placement=\"start\"\n      on={['click', 'hover', 'focus']}\n    >\n      <IconButton\n        renderIcon={IconInfoLine}\n        withBackground={false}\n        withBorder={false}\n        screenReaderLabel=\"Toggle Tooltip\"\n      />\n    </Tooltip>\n  </p>\n</div>\n```\n\n#### Controlled Tooltips\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isShowingContent: false\n    }\n  }\n\n  render () {\n    return (\n      <>\n        <p>\n        <Tooltip\n          renderTip=\"Hello. I'm a tool tip\"\n          isShowingContent={this.state.isShowingContent}\n          onShowContent={(e) => {\n            console.log(\"expecting to show tooltip\")\n          }}\n          onHideContent={(e) => {\n            console.log(\"expecting to hide tooltip\")\n          }}\n        >\n          <Link href=\"#\">This link has a tooltip</Link>\n        </Tooltip>\n        </p>\n        <Checkbox\n          label=\"show tooltip?\"\n          variant=\"toggle\"\n          value=\"toggled\"\n          onChange={(event) => {\n            this.setState({isShowingContent: event.target.checked})\n          }}\n        />\n    </>\n  )\n  }\n}\n\nrender(<Example />)\n\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use on icons with no labels</Figure.Item>\n    <Figure.Item>Use on condensed dates</Figure.Item>\n    <Figure.Item>Use on table content if items are getting truncated</Figure.Item>\n    <Figure.Item>Use to provide more specific data (ie. user hovers over a chart element, Tooltip shows precise info)</Figure.Item>\n    <Figure.Item>Try to stay within 50 characters</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Repeat the exact information contained on the triggering element</Figure.Item>\n    <Figure.Item>Contain links or focusable items</Figure.Item>\n    <Figure.Item>Use icons inside Tooltips</Figure.Item>\n    <Figure.Item>Use in place of a <Link href=\"/#Popover\">Popover</Link> or <Link href=\"/#Menu\">Menu</Link></Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","Tray":"\nThe Tray is an actionable container that is triggered by click and does not need to be connected to the element that triggered it. The Tray is on the same hierarchy as the Popover but contains more content. The Tray slides out from the top/bottom/start/end of the viewport.\n\n>Note that the `size` property only applies when the Tray is positioned at `start` or `end` and defines the width of the Tray.\n\n```js\n---\nrender: false\nexample: true\n---\nconst FPO = lorem.paragraph()\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      open: false\n    }\n  }\n\n  hideTray = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  renderCloseButton () {\n    return (\n      <Flex>\n        <Flex.Item shouldGrow shouldShrink>\n          <Heading>Hello</Heading>\n        </Flex.Item>\n        <Flex.Item>\n          <CloseButton\n            placement=\"end\"\n            offset=\"small\"\n            screenReaderLabel=\"Close\"\n            onClick={this.hideTray}\n          />\n        </Flex.Item>\n      </Flex>\n    )\n  }\n\n  render () {\n    return (\n      <div style={{ padding: '0 0 16rem 0', margin: '0 auto' }}>\n        <Button\n          onClick={() => { this.setState({ open: true }) }}\n          ref={(c) => this._showButton = c}\n        >\n          Show the Tray\n        </Button>\n        <Tray\n          label=\"Tray Example\"\n          open={this.state.open}\n          onDismiss={() => { this.setState({ open: false }) }}\n          size=\"small\"\n          placement=\"start\"\n        >\n          <View as=\"div\" padding=\"medium\">\n            {this.renderCloseButton()}\n            <Text as=\"p\" lineHeight=\"double\">{FPO}</Text>\n          </View>\n        </Tray>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Configure Tray to enter from the end on desktop, bottom on mobile/tablet</Figure.Item>\n    <Figure.Item>Use when it is useful to still see information contained on the page or not lose context of the page that triggered the Tray</Figure.Item>\n    <Figure.Item>Use 2 tabs max if using TabList in small size</Figure.Item>\n    <Figure.Item>Use 5 tabs max if using TabList in medium/large size</Figure.Item>\n    <Figure.Item>Prefer Tray to close when user clicks outside of the Tray</Figure.Item>\n    <Figure.Item>Keep the close 'x' directly following the Tray title, no matter what side the Tray slides from</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use TabList in the x-small size</Figure.Item>\n    <Figure.Item>Use for Sub Nav or <Link href=\"/#DrawerLayout\">Drawer Layout</Link></Figure.Item>\n    <Figure.Item>Use with an <Link href=\"/#Overlay\">Overlay</Link></Figure.Item>\n    <Figure.Item>Use a Tray on top of a <Link href=\"/#Modal\">Modal</Link></Figure.Item>\n    <Figure.Item>Use for <Link href=\"#Alert\">Alerts</Link> or Confirmation Dialogs</Figure.Item>\n    <Figure.Item>Allow Tray to push the content of the page</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Keyboard focus must be set in the tray when it appears; usually on the first interactive element</Figure.Item>\n    <Figure.Item>Trays must contain keyboard focus until they’re closed. This is to ensure that keyboard or screen reader users won't mistakenly interact with background content that is meant to be hidden or inaccessible</Figure.Item>\n    <Figure.Item>When a user closes a tray, focus must return to a logical place within the page. This is usually the element that triggered opening the tray</Figure.Item>\n    <Figure.Item>We recommend that trays begin with a heading (typically H2)</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","TreeBrowser":"\nThe `<TreeBrowser/>` component provides a keyboard accessible tree structure. The component expects\nto receive a normalized data structure, examples can be seen at https://github.com/paularmstrong/normalizr.\n\n### Size\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      size: 'medium'\n    }\n\n    this.sizes = ['small', 'medium', 'large']\n  }\n\n  handleSizeSelect = (e, size) => {\n    this.setState({ size })\n  };\n\n  render () {\n    return (\n      <>\n        <View display=\"block\" margin=\"none none medium\">\n          <RadioInputGroup\n            name=\"treeBrowserSize\"\n            defaultValue=\"medium\"\n            description={<ScreenReaderContent>TreeBrowser size selector</ScreenReaderContent>}\n            variant=\"toggle\"\n            onChange={this.handleSizeSelect}\n          >\n            {this.sizes.map((size) => <RadioInput key={size} label={size} value={size} />)}\n          </RadioInputGroup>\n        </View>\n\n        <TreeBrowser\n          size={this.state.size}\n          collections={{\n            1: {\n              id: 1,\n              name: \"Assignments\",\n              collections: [2,3],\n              items: [3],\n              descriptor: \"Class Assignments\"\n            },\n            2: { id: 2, name: \"English Assignments\", collections: [4], items: [] },\n            3: { id: 3, name: \"Math Assignments\", collections: [5], items: [1,2] },\n            4: { id: 4, name: \"Reading Assignments\", collections: [], items: [4] },\n            5: { id: 5, name: \"Advanced Math Assignments\", items: [5]}\n          }}\n          items={{\n            1: { id: 1, name: \"Addition Worksheet\" },\n            2: { id: 2, name: \"Subtraction Worksheet\" },\n            3: { id: 3, name: \"General Questions\" },\n            4: { id: 4, name: \"Vogon Poetry\" },\n            5: { id: 5, name: \"Bistromath\", descriptor: \"Explain the Bistromathic Drive\" }\n          }}\n          defaultExpanded={[1, 3]}\n          rootId={1}\n        />\n      </>\n    )\n  }\n}\n\nrender(<Example/>)\n\n```\n\n### Managing State\n\n`<TreeBrowser />` can be fully controlled. The following example uses the `onCollectionToggle` callback function to set the state. It then uses the `expanded` prop to configure which collections are open or closed.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expanded: [2]\n    }\n  }\n\n  handleCollectionClick = (id, collection) => {\n    console.log(collection.id)\n  };\n\n  handleCollectionToggle = (collection) => {\n    this.setState((state) => {\n      const expanded = [...state.expanded]\n      const index = expanded.indexOf(collection.id)\n\n      if (!collection.expanded) {\n        expanded.splice(index, 1)\n      } else if (index < 0) {\n        expanded.push(collection.id)\n      }\n\n      return { expanded }\n    })\n  };\n\n  render () {\n    return (\n      <TreeBrowser\n        variant=\"indent\"\n        selectionType=\"single\"\n        collections={{\n          1: { id: 1, name: \"Grade 1\", collections: [2,3,6] },\n          2: { id: 2, name: \"Math Outcomes\", collections: [4], items: [3,4], descriptor: \"1 Group | 2 Outcomes\" },\n          3: { id: 3, name: \"Reading Outcome\", collections: [5], items: [1,2], descriptor: \"1 Group | 2 Outcomes\" },\n          4: { id: 4, name: \"Advanced Math\", items: [6], descriptor: \"1 Outcome\" },\n          5: { id: 5, name: \"Advanced Reading\", items: [5], descriptor: \"1 Group | 2 Outcomes\" },\n          6: { id: 6, name: \"Advanced Outcomes\", items: [5,6], descriptor: \"2 Outcomes\" },\n        }}\n        items={{\n          1: { id: 1, name: \"Can read\" },\n          2: { id: 2, name: \"Can write\" },\n          3: { id: 3, name: \"Can add\" },\n          4: { id: 4, name: \"Can subtract\" },\n          5: { id: 5, name: \"Can read Shakespeare\" },\n          6: { id: 6, name: \"Can do quantum physics\" }\n        }}\n        showRootCollection={false}\n        rootId={1}\n        expanded={this.state.expanded}\n        onCollectionToggle={this.handleCollectionToggle}\n        onCollectionClick={this.handleCollectionClick}\n      />\n    )\n  }\n}\n\nrender(<Example/>)\n```\n\n### Customizing Icons\n\nAll of the `<TreeBrowser>` icons are customizable.\nThe following example sets custom icons for the expanded and collapsed state of the collections via `collectionIcon` and `collectionIconExpanded` and custom item icons via `itemIcon`.\n\n```js\n---\nexample: true\n---\n<TreeBrowser\n  collections={{\n    1: {\n      id: 1,\n      name: \"Grades\",\n      collections: [],\n      items: [1,2,3]\n    },\n  }}\n  items={{\n    1: { id: 1, name: \"Sarah\" },\n    2: { id: 2, name: \"Jenny\" },\n    3: { id: 3, name: \"Juan\" }\n  }}\n  defaultExpanded={[1]}\n  collectionIcon={IconGradebookLine}\n  collectionIconExpanded={IconXSolid}\n  itemIcon={IconUserSolid}\n  rootId={1}\n  size=\"large\"\n/>\n```\n\n#### Different icons for each item\n\nOne way do this is to use `getItemProps`. This function is called with the props for each item and returns new props you specify. These props are then passed to the item when it is rendered. In the following example, we override the `itemIcon` prop depending on the item name.\n\n```js\n---\nexample: true\n---\n<TreeBrowser\n  collections={{\n    1: {\n      id: 1,\n      name: \"Saved\",\n      collections: [],\n      items: [1,2,3]\n    },\n  }}\n  items={{\n    1: { id: 1, name: \"Modules\" },\n    2: { id: 2, name: \"Videos\" },\n    3: { id: 3, name: \"Students\" }\n  }}\n  defaultExpanded={[1]}\n  rootId={1}\n  size=\"large\"\n  getItemProps={({ name, ...props }) => {\n    let itemIcon = IconUserSolid\n\n    if (name === 'Modules') {\n      itemIcon = IconModuleLine\n    }\n\n    if (name === 'Videos') {\n      itemIcon = IconVideoLine\n    }\n\n    return {\n      ...props, // Be sure to pass the rest of the props along\n      itemIcon,\n      name\n    }\n  }}\n/>\n```\n\nAnother way to do it is to specify the `thumbnail` property in the `items` collection. This also overrides `itemIcon`.\n\n```js\n---\nexample: true\n---\n<TreeBrowser\n  collections={{\n    1: {\n      id: 1,\n      name: \"Pandas\",\n      collections: [],\n      items: [1,2,3]\n    },\n  }}\n  items={{\n    1: { id: 1, name: \"Bao Bao\", thumbnail: avatarSquare },\n    2: { id: 2, name: \"Bei Bei\" },\n    3: { id: 3, name: \"Mei Xiang\", thumbnail: avatarPortrait }\n  }}\n  defaultExpanded={[1]}\n  itemIcon={IconUserSolid}\n  rootId={1}\n  size=\"large\"\n/>\n```\n\n### Rendering custom content in nodes\n\nUsing the `renderContent` property allows you to render custom content in the area where the text and descriptor are.\nTo meet a11y standards make sure to have the right contrast ratio on hovered and selected states; you can use the\n`selected` and `focused` attributes in the given `props`.\n\n```js\n---\nexample: true\n---\n<TreeBrowser\n  collections={{\n    1: {\n      id: 1,\n      name: \"Pandas\",\n      collections: [],\n      items: [1, 2, 3]\n    },\n  }}\n  items={{\n    1: { id: 1, name: \"Bao Bao\" },\n    2: { id: 2, name: \"Bei Bei\" },\n    3: { id: 3, name: \"Mei Xiang\" }\n  }}\n  defaultExpanded={[1]}\n  itemIcon={IconUserSolid}\n  rootId={1}\n  size=\"large\"\n  renderContent={(props)=> {\n    if (props.level > 1) {\n      return <div style={{ display: 'flex', alignItems: 'flex-end', padding: '0.6rem 0 0.6rem 1rem' }}>\n        <span>{props.name}</span>\n        <Tag text=\"done\" size=\"small\" margin=\"0 xx-small 0 xx-small\"/>\n        <Tag text=\"class A\" size=\"small\"/>\n      </div>\n    }\n    return <div style={{padding: '0.6rem 0 0.6rem 1rem'}}>{props.name}</div>\n  }}\n/>\n```\n\n### Rendering custom items before and after nodes\n\nAn example of a `<TreeBrowser />` with a custom item after each collection.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expanded: true\n    }\n  }\n\n  renderInput = () => {\n    const { expanded } = this.state\n    if (expanded) {\n      return (\n        <View as=\"div\" padding=\"xx-small\" onFocus={(e) => e.stopPropagation()} onClick={(e) => e.stopPropagation()}>\n          <TextInput placeholder=\"Enter new group name\" display=\"inline-block\" width=\"12rem\" renderLabel=''/>\n          <IconButton screenReaderLabel=\"Cancel\" onClick={(e) => this.setExpand(e, !expanded)} margin=\"0 0 0 small\" ><IconXSolid/></IconButton>\n          <IconButton screenReaderLabel=\"Add new group\" onClick={(e) => this.setExpand(e, !expanded)} margin=\"0 0 0 small\" ><IconCheckSolid/></IconButton>\n        </View>\n      )\n    }\n\n    return (\n      <View as=\"div\">\n        Create New Group\n      </View>\n    )\n  }\n\n  setExpand = (e, expanded) => {\n    e.stopPropagation()\n    this.setState({expanded})\n    this._node.focus()\n  }\n\n  renderNode = () => {\n    const { expanded } = this.state\n    return (\n      <TreeBrowser.Node\n        containerRef={(el) => this._node = el}\n        onClick={(e) => this.setExpand(e, !expanded)}\n        itemIcon={this.state.expanded ? '' : <IconPlusLine /> }\n        size=\"large\"\n      >\n        {this.renderInput()}\n      </TreeBrowser.Node>\n    )\n  }\n\n  render () {\n    return (\n      <TreeBrowser\n        selectionType=\"single\"\n        size=\"large\"\n        defaultExpanded={[1, 2]}\n        collections={{\n          1: {\n            id: 1,\n            name: \"Grade 1\",\n            collections: [2],\n          },\n          2: {\n            id: 2,\n            name: \"Math Outcomes\",\n            collections: [],\n            items: [1, 2],\n            descriptor: \"1 Group | 2 Outcomes\",\n            renderAfterItems: this.renderNode()\n          }\n        }}\n        items={{\n          1: { id: 1, name: \"Can add\" },\n          2: { id: 2, name: \"Can subtract\" },\n        }}\n        showRootCollection={true}\n        rootId={1}\n      />\n    )\n  }\n}\n\nrender(<Example/>)\n```\n\n### showRootCollection\n\nThe `showRootCollection` prop sets whether the root collection (specified in `rootId` prop) is displayed or to begin with its immediate sub-collections and items instead. It defaults to `true`.\n\n```js\n---\nexample: true\nrender: false\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      showRootCollection: true\n    }\n  }\n\n  handleSwitch = () => {\n    this.setState({ showRootCollection: !this.state.showRootCollection })\n  }\n\n  renderNode = () => {\n    return (\n      <TreeBrowser.Node itemIcon={<IconPlusLine />}>\n        More\n      </TreeBrowser.Node>\n    )\n  }\n\n  render () {\n    return (\n      <>\n        <View display=\"block\" margin=\"none none medium\">\n          <Checkbox\n            label=\"showRootCollection\"\n            variant=\"toggle\"\n            size=\"medium\"\n            checked={this.state.showRootCollection}\n            onChange={this.handleSwitch}\n          />\n        </View>\n\n        <TreeBrowser\n          collections={{\n            1: {\n              id: 1,\n              name: \"Assignments\",\n              collections: [2,3],\n              items: [3, 5],\n              descriptor: \"Class Assignments\",\n              renderAfterItems: this.renderNode()\n            },\n            2: { id: 2, name: \"English Assignments\", collections: [4], items: [] },\n            3: { id: 3, name: \"Math Assignments\", collections: [5], items: [1,2] },\n            4: { id: 4, name: \"Reading Assignments\", collections: [], items: [4] },\n            5: { id: 5, name: \"Advanced Math Assignments\", items: [5]}\n          }}\n          items={{\n            1: { id: 1, name: \"Addition Worksheet\" },\n            2: { id: 2, name: \"Subtraction Worksheet\" },\n            3: { id: 3, name: \"General Questions\" },\n            4: { id: 4, name: \"Vogon Poetry\" },\n            5: { id: 5, name: \"Bistromath\", descriptor: \"Explain the Bistromathic Drive\" }\n          }}\n          defaultExpanded={[1, 3]}\n          rootId={1}\n          showRootCollection={this.state.showRootCollection}\n        />\n      </>\n    )\n  }\n}\n\nrender(<Example/>)\n\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use for browsing hierarchical content</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use for site navigation</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","TruncateText":"\nA component for truncating text content.\n\n> For best results, avoid using TruncateText inside parent containers that are inline (`display: inline/inline-block`) or that default to inline display (span, link, etc.).\n\n### Single line\n\n```javascript\n---\nexample: true\n---\n\n<div>\n  <View\n    as=\"div\"\n    padding=\"xx-small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <Heading level=\"h1\">\n      <TruncateText>\n        {lorem.paragraph()}\n      </TruncateText>\n    </Heading>\n    <Text\n      as=\"p\"\n      weight=\"bold\"\n      size=\"large\"\n      transform=\"uppercase\"\n      letterSpacing=\"expanded\"\n    >\n      <TruncateText>\n        {lorem.paragraph()}\n      </TruncateText>\n    </Text>\n    <Text as=\"p\">\n      <TruncateText>\n        {lorem.paragraph()}\n      </TruncateText>\n    </Text>\n\n    <div>\n      <TruncateText\n        onUpdate={(truncated, text) => {\n          console.log(truncated, text)\n        }}\n      >\n        <span>\n          Regular sized text with <Link href=\"#\">A Text Link </Link>and <Text weight=\"bold\">some bold text.</Text>\n        </span>\n      </TruncateText>\n    </div>\n\n  </View>\n</div>\n```\n\n### Multiple lines\n\nYou can set the number of lines to display before truncation begins with the `maxLines` prop. Setting `maxLines` to `auto` will determine the number of lines that will fit.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <View\n    as=\"div\"\n    padding=\"small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <Text as=\"p\" size=\"large\">\n      <TruncateText\n        maxLines={2}\n        truncate=\"word\"\n        ellipsis=\" (...)\"\n      >\n        {lorem.paragraph()}\n      </TruncateText>\n      <Link href=\"#\">Read More</Link>\n    </Text>\n\n    <Text as=\"p\" lineHeight=\"double\">\n      <TruncateText\n        maxLines={4}\n        truncate=\"word\"\n        ellipsis=\" (...)\"\n      >\n        Esse aliqua minim veniam duis consectetur non sunt ea deserunt qui cillum laboris officia. Minim nulla commodo dolore reprehenderit commodo occaecat veniam ad consectetur mollit consectetur partur consectetur eiusmod dolor incididunt incididunt.\n      </TruncateText>\n      <Link href=\"#\">Read More</Link>\n    </Text>\n  </View>\n  <br />\n  <View\n    as=\"div\"\n    padding=\"small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <Text as=\"p\">\n      <TruncateText maxLines={4} ellipsis=\" (...)\">\n        <span>Esse aliqua minim veniam duis consectetur non sunt ea deserunt qui cillum laboris officia. <Link href=\"#\">http://instructure.github.io/instructure-ui/#ui-elements</Link> occaecat veniam ad consectetur mollit consectetur partur consectetur eiusmod dolor incididunt incididunt.</span>\n      </TruncateText>\n    </Text>\n\n    <Text as=\"p\">\n      <TruncateText maxLines={4} ellipsis=\" (...)\">\n        <span>Qui cillum laboris officia. <strong>supercalifragilisticexpialidocious</strong> occaecat veniam ad consectetur mollit consectetur partur consectetur eiusmod dolor incididunt incididunt. Esse aliqua minim veniam duis consectetur non sunt ea deserunt.</span>\n      </TruncateText>\n    </Text>\n  </View>\n  <br />\n  <div style={{height: '78px', border: 'solid 1px red'}}>\n    <Text>\n      <TruncateText maxLines=\"auto\" ellipsis=\" (...)\">\n        Esse aliqua minim veniam duis consectetur non sunt ea deserunt qui cillum laboris officia. Minim nulla commodo dolore reprehenderit commodo occaecat veniam ad consectetur mollit consectetur partur consectetur eiusmod dolor incididunt incididunt.\n      </TruncateText>\n    </Text>\n  </div>\n</div>\n\n```\n\n### Truncate middle\n\nYou can set the position of the truncation using the `position` prop.\n\n```javascript\n---\nexample: true\n---\n<div>\n  <View\n    as=\"div\"\n    padding=\"small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <TruncateText position=\"middle\">\n      <span>This line of text should be truncated from the middle of the string <strong>instead of the end.</strong></span>\n    </TruncateText>\n  </View>\n  <br />\n  <View\n    as=\"div\"\n    padding=\"small none\"\n    maxWidth=\"480px\"\n    withVisualDebug\n  >\n    <Link href=\"#\">\n      <TruncateText\n        position=\"middle\"\n        truncate=\"word\"\n        ellipsis=\".../\"\n      >\n        @instructure/ui-elements/somefakedir/tomakethislonger/lib/longer/TruncateText\n      </TruncateText>\n    </Link>\n  </View>\n</div>\n```\n\n### Using tooltips\n\nIt's best practice to make the complete text of a truncated element available via a [Tooltip](#Tooltip).\n\n```js\n---\nrender: false\nexample: true\n---\nclass Example extends React.Component {\n  state = {\n    isTruncated: false\n  }\n\n  handleUpdate = (isTruncated) => {\n    if (this.state.isTruncated !== isTruncated) {\n      this.setState({ isTruncated })\n    }\n  }\n\n  renderLink () {\n    return (\n      <Link href=\"#\">\n        <TruncateText onUpdate={this.handleUpdate}>\n          {this.props.message}\n        </TruncateText>\n      </Link>\n    )\n  }\n\n  render () {\n    return (\n      <View\n        as=\"div\"\n        padding=\"xx-small none\"\n        maxWidth=\"230px\"\n        withVisualDebug\n      >\n        {this.state.isTruncated ? (\n          <Tooltip\n            renderTip={this.props.message}\n            mountNode={() => document.getElementById('main')}\n          >\n            { this.renderLink() }\n          </Tooltip>\n        ) : this.renderLink()}\n      </View>\n    )\n  }\n}\n\nrender(<Example message=\"A tooltip will display only when this text is truncated\" />)\n```\n\n### Guidelines\n\n```js\n---\nguidelines: true\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Use a <Link href=\"/#Tooltip\">Tooltip</Link> for all truncated items</Figure.Item>\n    <Figure.Item>Use when trying to restrict the number of lines that are visible</Figure.Item>\n    <Figure.Item>Use end ellipsis if the unique identifier is at the beginning of the string</Figure.Item>\n    <Figure.Item>Use middle ellipsis if the unique identifier is at the end of the string</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use in <Link href=\"/#Button\">Buttons</Link>, <Link href=\"/#Navigation\">Nav Items</Link>, <Link href=\"/#TabList\">TabLists</Link></Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","ContextView":"`<ContextView/>` is a container that can be rendered inline in the document flow (vs as a [Popover](#Popover)) but with an arrow pointing to something. See [RangeInput](#RangeInput) for an example of how ContextView can be used to display contextual information in conjuction with another component. It is used internally in [Popover](#Popover).\n\n- Defaults to no padding around its content. To add padding, use the `padding` prop.\n\n- Use the `textAlign` prop to change the alignment of the text inside `<ContextView />`.\n\n- In use cases where `<ContextView/>` is not absolutely positioned, use the `margin` prop to set margin around the component.\n\n```js\n---\nexample: true\n---\n<div>\n  <ContextView\n    padding=\"small\"\n    margin=\"large\"\n    placement=\"end top\"\n    shadow=\"resting\"\n  >\n    <Heading level=\"h3\">Hello World</Heading>\n  </ContextView>\n  <ContextView\n    margin=\"0 large 0 0\"\n    padding=\"small\"\n    placement=\"top\"\n  >\n    <Heading level=\"h3\">Hello World</Heading>\n    <Text size=\"small\">Some informational text that is helpful</Text>\n  </ContextView>\n  <ContextView\n    margin=\"0 large 0 0\"\n    padding=\"small\"\n    textAlign=\"end\"\n    placement=\"start\"\n  >\n    <Heading level=\"h3\">Hello World</Heading>\n    <Text size=\"small\">This ContextView is end-text-aligned</Text>\n  </ContextView>\n  <ContextView\n    placement=\"end bottom\"\n    padding=\"medium\"\n    background=\"inverse\"\n    width=\"30rem\"\n    margin=\"x-large 0 0\"\n  >\n    <Text size=\"small\">\n      This ContextView uses the inverse background and medium padding. Its width prop is set to `30rem`, which causes long strings like this to wrap. It also has top margin to separate it from the ContextViews above it.\n    </Text>\n  </ContextView>\n</div>\n```\n","View":"\n### View &#151; the visual basis of Instructure UI\n\nView provides the base appearance for most of the components\nin Instructure UI.\n\n> **Because View provides access to so many visual styles, it\n> can be easy to abuse.** Before you use View, ensure that the component\n> you're trying to style doesn't already have access to the same props.\n> For example, don't wrap a `<Button>` in a `<View>` just to add\n> `margin` around the button: Instead, use the `margin` prop on the\n> button itself.\n\n```js\n---\nexample: true\n---\n<View\n  as=\"div\"\n  margin=\"small\"\n  padding=\"large\"\n  textAlign=\"center\"\n  background=\"primary\"\n>\n  {lorem.sentence()}\n</View>\n```\n\n### `background`\n\nChange the background color using the `background` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"transparent\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"secondary\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary-inverse\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"brand\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"alert\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"success\"\n  >\n    {lorem.sentence()}\n  </View>\n    <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"danger\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"warning\"\n  >\n    {lorem.sentence()}\n  </View>\n</div>\n```\n\n### `shadow`\n\nAdd a CSS box-shadow to the View using the `shadow` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"large\"\n    background=\"primary\"\n    shadow=\"resting\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"large\"\n    background=\"primary\"\n    shadow=\"above\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"large\"\n    background=\"primary\"\n    shadow=\"topmost\"\n  >\n    {lorem.sentence()}\n  </View>\n</div>\n```\n\n### `borderWidth`\n\nApply a border with the `borderWidth` prop. Utilize\n[CSS shorthand style](https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties)\nto apply different border styles to individual edges.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"small\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"medium\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large none\"\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"none none small none\"\n  >\n    {lorem.sentence()}\n  </View>\n</div>\n```\n\n### `borderColor`\n\nChange the color of View's border for different contexts via the `borderColor` prop.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n  >\n    primary\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"info\"\n  >\n    info\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"warning\"\n  >\n    warning\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"danger\"\n  >\n    danger\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"alert\"\n  >\n    alert\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"success\"\n  >\n    success\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    margin=\"small\"\n    padding=\"small\"\n    background=\"primary\"\n    borderWidth=\"large\"\n    borderColor=\"brand\"\n  >\n    brand\n  </View>\n</div>\n```\n\n### `borderRadius`\n\nAdjust the border radius using the `borderRadius` prop. Utilize\n[CSS shorthand style](https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties)\nto apply different border radii to individual corners.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"medium\"\n    textAlign=\"center\"\n  >\n    medium\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"large large none none\"\n    textAlign=\"center\"\n  >\n    large large none none\n  </View>\n  <View\n    as=\"span\"\n    display=\"inline-block\"\n    maxWidth=\"10rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"none none large large\"\n    textAlign=\"center\"\n  >\n    none none large large\n  </View>\n  <View\n    display=\"inline-block\"\n    width=\"6rem\"\n    height=\"6rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"circle\"\n    textAlign=\"center\"\n  >\n    circle\n  </View>\n  <View\n    display=\"inline-block\"\n    width=\"10rem\"\n    margin=\"small\"\n    padding=\"medium\"\n    background=\"primary-inverse\"\n    borderRadius=\"pill\"\n    textAlign=\"center\"\n  >\n    pill\n  </View>\n</div>\n```\n\n### `position`\n\n`position` sets the CSS position rule for the component: `static`, `absolute`, `relative`,\n`sticky`, or `fixed`.\n\n> Note that `position=\"sticky\"` is currently [not as fully supported](https://caniuse.com/#feat=css-sticky)\n> as the other values.\n\n```js\n---\nexample: true\n---\n<View\n  position=\"relative\"\n  as=\"div\"\n  height=\"200px\"\n  borderWidth=\"small\"\n>\n  <View\n    as=\"div\"\n    position=\"absolute\"\n    insetInlineEnd=\"100px\"\n    insetBlockStart=\"10px\"\n    insetBlockEnd=\"0\"\n    background=\"primary-inverse\"\n  >\n    Positioned View inside a View with relative positioning.\n  </View>\n</View>\n```\n\n### Indicating that a View is focused\n\nBy default, if a `View` is rendered as a focusable element, a focus outline will display when it is focused for accessibility.\n\n> Note that `position` must be set to `relative` for the focus ring to display.\n> (This restriction exists because the focus ring requires styling a pseudo element\n> that has absolute positioning.)\n\n```javascript\n---\nexample: true\n---\n<View\n  position=\"relative\"\n  tabIndex=\"0\"\n  role=\"button\"\n  cursor=\"pointer\"\n  display=\"block\"\n  margin=\"large\"\n  padding=\"small\"\n>\n  Tab here to see the focus outline\n</View>\n```\n\nIn some situations, you may want to manually control when the focus outline is displayed instead of leaving it up to the browser.\nThis can be done using the `withFocusOutline` prop. Set it to `true` to make View's focus outline display or `false` to hide it.\nBe careful when overriding the display of the focus outline as it is essential for accessibility.\n\nThe focus outline adjusts to account for the shape of the View. For example, the following values can be set for `borderRadius`:\n`circle`, `pill`, `small`, `medium`, and `large`. In each case, the border radius of the focus outline will automatically adjust\nto match the border radius of the corresponding View. For Views with irregular border radius (e.g., `borderRadius=\"small large none medium\"`), the focus outline will appear with square edges. The color of the focus outline can be\nchanged for different contexts via the `focusColor` property.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass FocusedExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isFocused: true,\n      inset: false\n    }\n  }\n\n  updateFocused = (event) => {\n    this.setState({isFocused: event.target.checked})\n  }\n\n  updateInset = (event) => {\n    this.setState({inset: event.target.checked})\n  }\n\n  render () {\n    const { isFocused, focusPosition } = this.state\n\n    return (\n      <View as=\"div\">\n        <View as=\"div\" background=\"primary\" padding=\"small\" margin=\"0 0 small\" borderWidth=\"small\">\n          <FormFieldGroup\n            rowSpacing=\"small\"\n            description={<ScreenReaderContent>View focus outline examples</ScreenReaderContent>}\n          >\n            <Checkbox\n              label=\"withFocusOutline\"\n              checked={this.state.isFocused}\n              onChange={this.updateFocused}\n            />\n            <Checkbox\n              label=\"focusPosition = inset\"\n              checked={this.state.inset}\n              onChange={this.updateInset}\n            />\n          </FormFieldGroup>\n        </View>\n        <View as=\"div\">\n          <code>borderRadius =</code>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderRadius=\"small\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            small\n          </View>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderRadius=\"medium\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            medium\n          </View>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderRadius=\"large\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            large\n          </View>\n          <View\n            display=\"inline-block\"\n            height=\"100px\"\n            width=\"100px\"\n            margin=\"small\"\n            background=\"primary\"\n            borderRadius=\"circle\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            <Flex\n              width=\"100%\"\n              height=\"100%\"\n              alignItems=\"center\"\n              justifyItems=\"center\"\n            >\n              <Flex.Item>\n                circle\n              </Flex.Item>\n            </Flex>\n          </View>\n          <View background=\"primary-inverse\" display=\"inline-block\" padding=\"small\">\n            <View\n              display=\"block\"\n              margin=\"small\"\n              padding=\"small\"\n              background=\"primary-inverse\"\n              borderRadius=\"large\"\n              borderWidth=\"small\"\n              position=\"relative\"\n              withFocusOutline={this.state.isFocused}\n              focusColor=\"inverse\"\n              focusPosition={this.state.inset ? 'inset' : 'offset'}\n            >\n              medium\n            </View>\n          </View>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderRadius=\"pill\"\n            borderWidth=\"small\"\n            position=\"relative\"\n            focusColor=\"success\"\n            width=\"100px\"\n            textAlign=\"center\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            pill\n          </View>\n          <View\n            display=\"inline-block\"\n            margin=\"small\"\n            padding=\"small\"\n            background=\"primary\"\n            borderWidth=\"small\"\n            borderRadius=\"none large\"\n            focusColor=\"danger\"\n            position=\"relative\"\n            withFocusOutline={this.state.isFocused}\n            focusPosition={this.state.inset ? 'inset' : 'offset'}\n          >\n            none large\n          </View>\n        </View>\n      </View>\n    )\n  }\n}\n\nrender(<FocusedExample />)\n```\n\nHandle vertical and horizontal content overflow with the `overflowX` and `overflowY`\nprops.\n\n> **Important CSS note:** Setting one axis to `visible` and setting the other to a different value results in `visible` behaving as `auto`.\n\n```javascript\n---\nexample: true\nrender: false\n---\nclass OverflowExample extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      overflowY: 'visible'\n    }\n  }\n\n  updateOverflowY = (event, value) => {\n    this.setState({\n      overflowY: value\n    })\n  }\n\n  updateOverflowX = (event, value) => {\n    this.setState({\n      overflowX: value\n    })\n  }\n\n  render () {\n    return (\n      <View as=\"div\">\n        <FormFieldGroup\n          description={<ScreenReaderContent>Overflow example</ScreenReaderContent>}\n          rowSpacing=\"small\"\n          vAlign=\"top\"\n          layout=\"columns\"\n        >\n          <RadioInputGroup\n            onChange={this.updateOverflowY}\n            name=\"overflowY\"\n            defaultValue=\"visible\"\n            variant=\"toggle\"\n            description=\"overflowY =\"\n          >\n            <RadioInput label=\"visible\" value=\"visible\" />\n            <RadioInput label=\"auto\" value=\"auto\" />\n            <RadioInput label=\"hidden\" value=\"hidden\" />\n          </RadioInputGroup>\n          <RadioInputGroup\n            onChange={this.updateOverflowX}\n            name=\"overflowX\"\n            defaultValue=\"visible\"\n            variant=\"toggle\"\n            description=\"overflowX =\"\n          >\n            <RadioInput label=\"visible\" value=\"visible\" />\n            <RadioInput label=\"auto\" value=\"auto\" />\n            <RadioInput label=\"hidden\" value=\"hidden\" />\n          </RadioInputGroup>\n        </FormFieldGroup>\n        <View\n          as=\"div\"\n          height=\"7rem\"\n          width=\"20rem\"\n          margin=\"medium none x-large\"\n          overflowY={this.state.overflowY}\n          overflowX={this.state.overflowX}\n          withVisualDebug\n        >\n          <div style={{width: '30rem', height: '10rem'}}>\n            <Img src={avatarSquare} constrain=\"cover\" />\n          </div>\n\n        </View>\n      </View>\n    )\n  }\n}\n\nrender(<OverflowExample />)\n```\n\n### Debugging\n\nSet the `withVisualDebug` prop to see the View's boundaries.\n\n```js\n---\nexample: true\n---\n<div>\n  <View\n    as=\"div\"\n    padding=\"large\"\n    withVisualDebug\n  >\n    {lorem.sentence()}\n  </View>\n  <View\n    as=\"div\"\n    display=\"flex\"\n    withVisualDebug\n  >\n    <View\n      as=\"div\"\n      margin=\"small\"\n      padding=\"small\"\n      withVisualDebug\n    >\n      {lorem.sentence()}\n    </View>\n    <View\n      as=\"div\"\n      margin=\"small\"\n      padding=\"small\"\n      withVisualDebug\n    >\n      {lorem.sentence()}\n    </View>\n  </View>\n</div>\n```\n\n### The `as` prop\n\nChange the `as` prop to set what element the View should render as.\nIn the example below a `<section>` wraps a `<header>` and a paragraph of content.\nThe outermost `<section>` View provides padding for all the content, while\nthe header and paragraph are separated by bottom margin from the `<header>` View.\n\n```js\n---\nexample: true\n---\n<View\n  as=\"section\"\n  padding=\"small\"\n  withVisualDebug\n>\n  <View\n    as=\"header\"\n    margin=\"0 0 medium\"\n    withVisualDebug\n  >\n  Some header content\n  </View>\n  <Text as=\"p\">{lorem.paragraph()}</Text>\n</View>\n```\n\n### Inline Views\n\nBy default, View will render as a span which displays inline. When using the `as`\nprop to render a block level element, setting `display` to `inline-block`, styles\nthe View to display inline-block with other inline elements.\n\n```js\n---\nexample: true\n---\n<View as=\"div\" textAlign=\"center\" padding=\"x-small\" withVisualDebug>\n  <View\n    as=\"div\"\n    display=\"inline-block\"\n    withVisualDebug\n    textAlign=\"end\"\n    margin=\"large auto\"\n    padding=\"0 small 0 0\"\n  >\n    {lorem.sentence()}\n  </View>\n  <Button color=\"success\">Some Action</Button>\n</View>\n```\n"},"themes":{"canvas":{"resource":{"key":"canvas","colors":{"brand":"#008EE2","link":"#008EE2","electric":"#008EE2","shamrock":"#00AC18","barney":"#BF32A4","crimson":"#EE0612","fire":"#FC5E13","licorice":"#2D3B45","oxford":"#394B58","ash":"#8B969E","slate":"#8B969E","tiara":"#C7CDD1","porcelain":"#F5F5F5","white":"#FFFFFF","textDarkest":"#2D3B45","textDark":"#8B969E","textLight":"#F5F5F5","textLightest":"#FFFFFF","textBrand":"#008EE2","textLink":"#008EE2","textAlert":"#BF32A4","textInfo":"#008EE2","textSuccess":"#00AC18","textDanger":"#EE0612","textWarning":"#FC5E13","backgroundDarkest":"#2D3B45","backgroundDark":"#8B969E","backgroundMedium":"#C7CDD1","backgroundLight":"#F5F5F5","backgroundLightest":"#FFFFFF","backgroundBrand":"#008EE2","backgroundBrandSecondary":"#394B58","backgroundAlert":"#BF32A4","backgroundInfo":"#008EE2","backgroundSuccess":"#00AC18","backgroundDanger":"#EE0612","backgroundWarning":"#FC5E13","borderLightest":"#FFFFFF","borderLight":"#F5F5F5","borderMedium":"#C7CDD1","borderDark":"#8B969E","borderDarkest":"#2D3B45","borderBrand":"#008EE2","borderAlert":"#BF32A4","borderInfo":"#008EE2","borderSuccess":"#00AC18","borderDanger":"#EE0612","borderWarning":"#FC5E13","borderDebug":"#EE0612","values":{"brand":"#008EE2","link":"#008EE2","electric":"#008EE2","shamrock":"#00AC18","barney":"#BF32A4","crimson":"#EE0612","fire":"#FC5E13","licorice":"#2D3B45","oxford":"#394B58","ash":"#8B969E","slate":"#8B969E","tiara":"#C7CDD1","porcelain":"#F5F5F5","white":"#FFFFFF"},"text":{"textDarkest":"#2D3B45","textDark":"#8B969E","textLight":"#F5F5F5","textLightest":"#FFFFFF","textBrand":"#008EE2","textLink":"#008EE2","textAlert":"#BF32A4","textInfo":"#008EE2","textSuccess":"#00AC18","textDanger":"#EE0612","textWarning":"#FC5E13"},"background":{"backgroundDarkest":"#2D3B45","backgroundDark":"#8B969E","backgroundMedium":"#C7CDD1","backgroundLight":"#F5F5F5","backgroundLightest":"#FFFFFF","backgroundBrand":"#008EE2","backgroundBrandSecondary":"#394B58","backgroundAlert":"#BF32A4","backgroundInfo":"#008EE2","backgroundSuccess":"#00AC18","backgroundDanger":"#EE0612","backgroundWarning":"#FC5E13"},"border":{"borderLightest":"#FFFFFF","borderLight":"#F5F5F5","borderMedium":"#C7CDD1","borderDark":"#8B969E","borderDarkest":"#2D3B45","borderBrand":"#008EE2","borderAlert":"#BF32A4","borderInfo":"#008EE2","borderSuccess":"#00AC18","borderDanger":"#EE0612","borderWarning":"#FC5E13","borderDebug":"#EE0612"}},"borders":{"radiusSmall":"0.125rem","radiusMedium":"0.25rem","radiusLarge":"0.5rem","widthSmall":"0.0625rem","widthMedium":"0.125rem","widthLarge":"0.25rem","style":"solid"},"transitions":{"duration":"300ms","timing":"ease-in-out"},"typography":{"fontFamily":"LatoWeb, Lato, \"Helvetica Neue\", Helvetica, Arial, sans-serif","fontFamilyMonospace":"Menlo, Consolas, Monaco, \"Andale Mono\", monospace","fontSizeXSmall":"0.75rem","fontSizeSmall":"0.875rem","fontSizeMedium":"1rem","fontSizeLarge":"1.375rem","fontSizeXLarge":"1.75rem","fontSizeXXLarge":"2.375rem","fontWeightLight":300,"fontWeightNormal":400,"fontWeightBold":700,"lineHeight":1.5,"lineHeightFit":1.125,"lineHeightCondensed":1.25,"lineHeightDouble":2,"letterSpacingNormal":0,"letterSpacingCondensed":"-0.0625rem","letterSpacingExpanded":"0.0625rem"},"spacing":{"xxxSmall":"0.125rem","xxSmall":"0.375rem","xSmall":"0.5rem","small":"0.75rem","medium":"1.5rem","large":"2.25rem","xLarge":"3rem","xxLarge":"3.75rem"},"forms":{"inputHeightSmall":"1.75rem","inputHeightMedium":"2.375rem","inputHeightLarge":"3rem"},"media":{"mediumMin":"min-width: 48em","largeMin":"min-width: 62em","xLargeMin":"min-width: 75em"},"breakpoints":{"xxSmall":"8em","xSmall":"16em","small":"30em","medium":"48em","large":"62em","xLarge":"75em","maxWidth":"61.9375em"},"shadows":{"depth1":"0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2), 0 0.0625rem 0.1875rem rgba(0, 0, 0, 0.1)","depth2":"0 0.1875rem 0.375rem rgba(0, 0, 0, 0.1), 0 0.1875rem 0.375rem rgba(0, 0, 0, 0.16)","depth3":"0 0.375rem 0.4375rem rgba(0, 0, 0, 0.1), 0 0.625rem 1.75rem rgba(0, 0, 0, 0.25)","resting":"0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2), 0 0.0625rem 0.1875rem rgba(0, 0, 0, 0.1)","above":"0 0.1875rem 0.375rem rgba(0, 0, 0, 0.1), 0 0.1875rem 0.375rem rgba(0, 0, 0, 0.16)","topmost":"0 0.375rem 0.4375rem rgba(0, 0, 0, 0.1), 0 0.625rem 1.75rem rgba(0, 0, 0, 0.25)"},"stacking":{"topmost":9999,"above":1,"below":-1,"deepest":-9999},"ic-brand-primary":"#008EE2","ic-brand-font-color-dark":"#2D3B45","ic-link-color":"#008EE2","ic-link-decoration":"none","ic-brand-button--primary-bgd":"#008EE2","ic-brand-button--primary-text":"#FFFFFF","ic-brand-button--secondary-bgd":"#2D3B45","ic-brand-button--secondary-text":"#FFFFFF","ic-brand-global-nav-bgd":"#394B58","ic-global-nav-link-hover":"#2D3B45","ic-brand-global-nav-ic-icon-svg-fill":"#FFFFFF","ic-brand-global-nav-ic-icon-svg-fill--active":"#008EE2","ic-brand-global-nav-menu-item__text-color":"#FFFFFF","ic-brand-global-nav-menu-item__text-color--active":"#008EE2"},"requirePath":"@instructure/canvas-theme"},"canvas-high-contrast":{"resource":{"key":"canvas-high-contrast","description":"This theme meets WCAG 2.0 AA rules for color contrast.","colors":{"brand":"#0770A3","link":"#0770A3","electric":"#0770A3","shamrock":"#127A1B","barney":"#B8309E","crimson":"#D01A19","fire":"#C23C0D","licorice":"#2D3B45","oxford":"#394B58","ash":"#556572","slate":"#556572","tiara":"#556572","porcelain":"#FFFFFF","white":"#FFFFFF","textDarkest":"#2D3B45","textDark":"#556572","textLight":"#FFFFFF","textLightest":"#FFFFFF","textBrand":"#0770A3","textLink":"#0770A3","textAlert":"#B8309E","textInfo":"#0770A3","textSuccess":"#127A1B","textDanger":"#D01A19","textWarning":"#C23C0D","backgroundDarkest":"#2D3B45","backgroundDark":"#556572","backgroundMedium":"#556572","backgroundLight":"#FFFFFF","backgroundLightest":"#FFFFFF","backgroundBrand":"#0770A3","backgroundBrandSecondary":"#394B58","backgroundAlert":"#B8309E","backgroundInfo":"#0770A3","backgroundSuccess":"#127A1B","backgroundDanger":"#D01A19","backgroundWarning":"#C23C0D","borderLightest":"#FFFFFF","borderLight":"#FFFFFF","borderMedium":"#556572","borderDark":"#556572","borderDarkest":"#2D3B45","borderBrand":"#0770A3","borderAlert":"#B8309E","borderInfo":"#0770A3","borderSuccess":"#127A1B","borderDanger":"#D01A19","borderWarning":"#C23C0D","borderDebug":"#D01A19","values":{"brand":"#0770A3","link":"#0770A3","electric":"#0770A3","shamrock":"#127A1B","barney":"#B8309E","crimson":"#D01A19","fire":"#C23C0D","licorice":"#2D3B45","oxford":"#394B58","ash":"#556572","slate":"#556572","tiara":"#556572","porcelain":"#FFFFFF","white":"#FFFFFF"},"text":{"textDarkest":"#2D3B45","textDark":"#556572","textLight":"#FFFFFF","textLightest":"#FFFFFF","textBrand":"#0770A3","textLink":"#0770A3","textAlert":"#B8309E","textInfo":"#0770A3","textSuccess":"#127A1B","textDanger":"#D01A19","textWarning":"#C23C0D"},"background":{"backgroundDarkest":"#2D3B45","backgroundDark":"#556572","backgroundMedium":"#556572","backgroundLight":"#FFFFFF","backgroundLightest":"#FFFFFF","backgroundBrand":"#0770A3","backgroundBrandSecondary":"#394B58","backgroundAlert":"#B8309E","backgroundInfo":"#0770A3","backgroundSuccess":"#127A1B","backgroundDanger":"#D01A19","backgroundWarning":"#C23C0D"},"border":{"borderLightest":"#FFFFFF","borderLight":"#FFFFFF","borderMedium":"#556572","borderDark":"#556572","borderDarkest":"#2D3B45","borderBrand":"#0770A3","borderAlert":"#B8309E","borderInfo":"#0770A3","borderSuccess":"#127A1B","borderDanger":"#D01A19","borderWarning":"#C23C0D","borderDebug":"#D01A19"}},"borders":{"radiusSmall":"0.125rem","radiusMedium":"0.25rem","radiusLarge":"0.5rem","widthSmall":"0.0625rem","widthMedium":"0.125rem","widthLarge":"0.25rem","style":"solid"},"transitions":{"duration":"300ms","timing":"ease-in-out"},"typography":{"fontFamily":"LatoWeb, Lato, \"Helvetica Neue\", Helvetica, Arial, sans-serif","fontFamilyMonospace":"Menlo, Consolas, Monaco, \"Andale Mono\", monospace","fontSizeXSmall":"0.75rem","fontSizeSmall":"0.875rem","fontSizeMedium":"1rem","fontSizeLarge":"1.375rem","fontSizeXLarge":"1.75rem","fontSizeXXLarge":"2.375rem","fontWeightLight":300,"fontWeightNormal":400,"fontWeightBold":700,"lineHeight":1.5,"lineHeightFit":1.125,"lineHeightCondensed":1.25,"lineHeightDouble":2,"letterSpacingNormal":0,"letterSpacingCondensed":"-0.0625rem","letterSpacingExpanded":"0.0625rem"},"spacing":{"xxxSmall":"0.125rem","xxSmall":"0.375rem","xSmall":"0.5rem","small":"0.75rem","medium":"1.5rem","large":"2.25rem","xLarge":"3rem","xxLarge":"3.75rem"},"forms":{"inputHeightSmall":"1.75rem","inputHeightMedium":"2.375rem","inputHeightLarge":"3rem"},"media":{"mediumMin":"min-width: 48em","largeMin":"min-width: 62em","xLargeMin":"min-width: 75em"},"breakpoints":{"xxSmall":"8em","xSmall":"16em","small":"30em","medium":"48em","large":"62em","xLarge":"75em","maxWidth":"61.9375em"},"shadows":{"depth1":"0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2), 0 0.0625rem 0.1875rem rgba(0, 0, 0, 0.1)","depth2":"0 0.1875rem 0.375rem rgba(0, 0, 0, 0.1), 0 0.1875rem 0.375rem rgba(0, 0, 0, 0.16)","depth3":"0 0.375rem 0.4375rem rgba(0, 0, 0, 0.1), 0 0.625rem 1.75rem rgba(0, 0, 0, 0.25)","resting":"0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2), 0 0.0625rem 0.1875rem rgba(0, 0, 0, 0.1)","above":"0 0.1875rem 0.375rem rgba(0, 0, 0, 0.1), 0 0.1875rem 0.375rem rgba(0, 0, 0, 0.16)","topmost":"0 0.375rem 0.4375rem rgba(0, 0, 0, 0.1), 0 0.625rem 1.75rem rgba(0, 0, 0, 0.25)"},"stacking":{"topmost":9999,"above":1,"below":-1,"deepest":-9999}},"requirePath":"@instructure/canvas-high-contrast-theme"},"instructure":{"resource":{"key":"instructure","colors":{"brand":"#287A9F","link":"#287A9F","electric":"#287A9F","shamrock":"#3D997E","barney":"#5B5B5B","crimson":"#EA2127","fire":"#E17909","licorice":"#28282A","oxford":"#5B5B5B","ash":"#6E6E6E","slate":"#6E6E6E","tiara":"#CCCCCC","porcelain":"#F0F2F3","white":"#FFFFFF","textDarkest":"#28282A","textDark":"#6E6E6E","textLight":"#F0F2F3","textLightest":"#FFFFFF","textBrand":"#287A9F","textLink":"#287A9F","textAlert":"#5B5B5B","textInfo":"#287A9F","textSuccess":"#3D997E","textDanger":"#EA2127","textWarning":"#E17909","backgroundDarkest":"#28282A","backgroundDark":"#6E6E6E","backgroundMedium":"#CCCCCC","backgroundLight":"#F0F2F3","backgroundLightest":"#FFFFFF","backgroundBrand":"#287A9F","backgroundBrandSecondary":"#5B5B5B","backgroundAlert":"#5B5B5B","backgroundInfo":"#287A9F","backgroundSuccess":"#3D997E","backgroundDanger":"#EA2127","backgroundWarning":"#E17909","borderLightest":"#FFFFFF","borderLight":"#F0F2F3","borderMedium":"#CCCCCC","borderDark":"#6E6E6E","borderDarkest":"#28282A","borderBrand":"#287A9F","borderAlert":"#5B5B5B","borderInfo":"#287A9F","borderSuccess":"#3D997E","borderDanger":"#EA2127","borderWarning":"#E17909","borderDebug":"#EA2127","values":{"brand":"#287A9F","link":"#287A9F","electric":"#287A9F","shamrock":"#3D997E","barney":"#5B5B5B","crimson":"#EA2127","fire":"#E17909","licorice":"#28282A","oxford":"#5B5B5B","ash":"#6E6E6E","slate":"#6E6E6E","tiara":"#CCCCCC","porcelain":"#F0F2F3","white":"#FFFFFF"},"text":{"textDarkest":"#28282A","textDark":"#6E6E6E","textLight":"#F0F2F3","textLightest":"#FFFFFF","textBrand":"#287A9F","textLink":"#287A9F","textAlert":"#5B5B5B","textInfo":"#287A9F","textSuccess":"#3D997E","textDanger":"#EA2127","textWarning":"#E17909"},"background":{"backgroundDarkest":"#28282A","backgroundDark":"#6E6E6E","backgroundMedium":"#CCCCCC","backgroundLight":"#F0F2F3","backgroundLightest":"#FFFFFF","backgroundBrand":"#287A9F","backgroundBrandSecondary":"#5B5B5B","backgroundAlert":"#5B5B5B","backgroundInfo":"#287A9F","backgroundSuccess":"#3D997E","backgroundDanger":"#EA2127","backgroundWarning":"#E17909"},"border":{"borderLightest":"#FFFFFF","borderLight":"#F0F2F3","borderMedium":"#CCCCCC","borderDark":"#6E6E6E","borderDarkest":"#28282A","borderBrand":"#287A9F","borderAlert":"#5B5B5B","borderInfo":"#287A9F","borderSuccess":"#3D997E","borderDanger":"#EA2127","borderWarning":"#E17909","borderDebug":"#EA2127"},"inaccessibleAlert":"#fccb0e","inaccessibleWarning":"#f68e1f"},"borders":{"radiusSmall":"0.125rem","radiusMedium":"0.25rem","radiusLarge":"0.5rem","widthSmall":"0.0625rem","widthMedium":"0.125rem","widthLarge":"0.25rem","style":"solid"},"transitions":{"duration":"300ms","timing":"ease-in-out"},"typography":{"fontFamily":"\"Proxima Nova\", \"Nunito Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n  \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n  \"Helvetica Neue\", sans-serif","fontFamilyMonospace":"Menlo, Consolas, Monaco, \"Andale Mono\", monospace","fontFamilyHeading":"\"TiemposHeadlineWebBold\", \"Georgia\", \"Proxima Nova\", sans-serif","fontSizeXSmall":"0.75rem","fontSizeSmall":"0.875rem","fontSizeMedium":"1rem","fontSizeLarge":"1.25rem","fontSizeXLarge":"2.25rem","fontSizeXXLarge":"3rem","fontWeightLight":300,"fontWeightNormal":400,"fontWeightBold":700,"lineHeight":1.5,"lineHeightFit":1.125,"lineHeightCondensed":1.25,"lineHeightDouble":2,"letterSpacingNormal":0,"letterSpacingCondensed":"-0.0625rem","letterSpacingExpanded":"0.0625rem"},"spacing":{"xxxSmall":"0.125rem","xxSmall":"0.375rem","xSmall":"0.75rem","small":"1rem","medium":"1.5rem","large":"2.25rem","xLarge":"3rem","xxLarge":"3.75rem"},"forms":{"inputHeightSmall":"2rem","inputHeightMedium":"2.75rem","inputHeightLarge":"3.375rem"},"media":{"mediumMin":"min-width: 48em","largeMin":"min-width: 62em","xLargeMin":"min-width: 75em"},"breakpoints":{"xxSmall":"8em","xSmall":"16em","small":"30em","medium":"48em","large":"62em","xLarge":"75em","maxWidth":"61.9375em"},"shadows":{"depth1":"0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2), 0 0.0625rem 0.1875rem rgba(0, 0, 0, 0.1)","depth2":"0 0.1875rem 0.375rem rgba(0, 0, 0, 0.1), 0 0.1875rem 0.375rem rgba(0, 0, 0, 0.16)","depth3":"0 0.375rem 0.4375rem rgba(0, 0, 0, 0.1), 0 0.625rem 1.75rem rgba(0, 0, 0, 0.25)","resting":"0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2), 0 0.0625rem 0.1875rem rgba(0, 0, 0, 0.1)","above":"0 0.1875rem 0.375rem rgba(0, 0, 0, 0.1), 0 0.1875rem 0.375rem rgba(0, 0, 0, 0.16)","topmost":"0 0.375rem 0.4375rem rgba(0, 0, 0, 0.1), 0 0.625rem 1.75rem rgba(0, 0, 0, 0.25)"},"stacking":{"topmost":9999,"above":1,"below":-1,"deepest":-9999}},"requirePath":"@instructure/instructure-theme"}},"library":{"name":"instructure-ui","version":"8.2.0","repository":"https://github.com/instructure/instructure-ui.git","author":"Instructure, Inc. Engineering and Product Design","packages":"packages","scope":"@instructure","codepen":{"js_external":"https://instructure.github.io/instructure-ui/vendors~common~globals~ui-docs.js;https://instructure.github.io/instructure-ui/vendors~globals~ui-docs.js;https://instructure.github.io/instructure-ui/runtime~common.js;https://instructure.github.io/instructure-ui/common.js;https://instructure.github.io/instructure-ui/globals.js"}},"icons":{"packageName":"@instructure/ui-icons","formats":{"icons-react":{"format":"React","glyphs":{"IconArcLine":{"name":"IconArcLine","variant":"Line","glyphName":"Arc","deprecated":false},"IconArcSolid":{"name":"IconArcSolid","variant":"Solid","glyphName":"Arc","deprecated":false},"IconA11yLine":{"name":"IconA11yLine","variant":"Line","glyphName":"a11y","deprecated":false},"IconA11ySolid":{"name":"IconA11ySolid","variant":"Solid","glyphName":"a11y","deprecated":false},"IconAddFolderLine":{"name":"IconAddFolderLine","variant":"Line","glyphName":"add-folder","deprecated":false},"IconAddFolderSolid":{"name":"IconAddFolderSolid","variant":"Solid","glyphName":"add-folder","deprecated":false},"IconAddMediaLine":{"name":"IconAddMediaLine","variant":"Line","glyphName":"add-media","deprecated":false},"IconAddMediaSolid":{"name":"IconAddMediaSolid","variant":"Solid","glyphName":"add-media","deprecated":false},"IconAddLine":{"name":"IconAddLine","variant":"Line","glyphName":"add","deprecated":false},"IconAddSolid":{"name":"IconAddSolid","variant":"Solid","glyphName":"add","deprecated":false},"IconAddressBookLine":{"name":"IconAddressBookLine","variant":"Line","glyphName":"address-book","deprecated":false},"IconAddressBookSolid":{"name":"IconAddressBookSolid","variant":"Solid","glyphName":"address-book","deprecated":false},"IconAdminToolsLine":{"name":"IconAdminToolsLine","variant":"Line","glyphName":"admin-tools","deprecated":false},"IconAdminToolsSolid":{"name":"IconAdminToolsSolid","variant":"Solid","glyphName":"admin-tools","deprecated":false},"IconAdminLine":{"name":"IconAdminLine","variant":"Line","glyphName":"admin","deprecated":false},"IconAdminSolid":{"name":"IconAdminSolid","variant":"Solid","glyphName":"admin","deprecated":false},"IconAlertsLine":{"name":"IconAlertsLine","variant":"Line","glyphName":"alerts","deprecated":false},"IconAlertsSolid":{"name":"IconAlertsSolid","variant":"Solid","glyphName":"alerts","deprecated":false},"IconAnalyticsLine":{"name":"IconAnalyticsLine","variant":"Line","glyphName":"analytics","deprecated":false},"IconAnalyticsSolid":{"name":"IconAnalyticsSolid","variant":"Solid","glyphName":"analytics","deprecated":false},"IconAndroidLine":{"name":"IconAndroidLine","variant":"Line","glyphName":"android","deprecated":false},"IconAndroidSolid":{"name":"IconAndroidSolid","variant":"Solid","glyphName":"android","deprecated":false},"IconAnnotateLine":{"name":"IconAnnotateLine","variant":"Line","glyphName":"annotate","deprecated":false},"IconAnnotateSolid":{"name":"IconAnnotateSolid","variant":"Solid","glyphName":"annotate","deprecated":false},"IconAnnouncementLine":{"name":"IconAnnouncementLine","variant":"Line","glyphName":"announcement","deprecated":false},"IconAnnouncementSolid":{"name":"IconAnnouncementSolid","variant":"Solid","glyphName":"announcement","deprecated":false},"IconAppleLine":{"name":"IconAppleLine","variant":"Line","glyphName":"apple","deprecated":false},"IconAppleSolid":{"name":"IconAppleSolid","variant":"Solid","glyphName":"apple","deprecated":false},"IconArchiveLine":{"name":"IconArchiveLine","variant":"Line","glyphName":"archive","deprecated":false},"IconArchiveSolid":{"name":"IconArchiveSolid","variant":"Solid","glyphName":"archive","deprecated":false},"IconArrowDownLine":{"name":"IconArrowDownLine","variant":"Line","glyphName":"arrow-down","deprecated":false},"IconArrowDownSolid":{"name":"IconArrowDownSolid","variant":"Solid","glyphName":"arrow-down","deprecated":false},"IconArrowEndLine":{"name":"IconArrowEndLine","variant":"Line","glyphName":"arrow-end","deprecated":false},"IconArrowEndSolid":{"name":"IconArrowEndSolid","variant":"Solid","glyphName":"arrow-end","deprecated":false},"IconArrowLeftLine":{"name":"IconArrowLeftLine","variant":"Line","glyphName":"arrow-left","deprecated":true},"IconArrowLeftSolid":{"name":"IconArrowLeftSolid","variant":"Solid","glyphName":"arrow-left","deprecated":true},"IconArrowOpenDownLine":{"name":"IconArrowOpenDownLine","variant":"Line","glyphName":"arrow-open-down","deprecated":false},"IconArrowOpenDownSolid":{"name":"IconArrowOpenDownSolid","variant":"Solid","glyphName":"arrow-open-down","deprecated":false},"IconArrowOpenEndLine":{"name":"IconArrowOpenEndLine","variant":"Line","glyphName":"arrow-open-end","deprecated":false},"IconArrowOpenEndSolid":{"name":"IconArrowOpenEndSolid","variant":"Solid","glyphName":"arrow-open-end","deprecated":false},"IconArrowOpenLeftLine":{"name":"IconArrowOpenLeftLine","variant":"Line","glyphName":"arrow-open-left","deprecated":true},"IconArrowOpenLeftSolid":{"name":"IconArrowOpenLeftSolid","variant":"Solid","glyphName":"arrow-open-left","deprecated":true},"IconArrowOpenRightLine":{"name":"IconArrowOpenRightLine","variant":"Line","glyphName":"arrow-open-right","deprecated":true},"IconArrowOpenRightSolid":{"name":"IconArrowOpenRightSolid","variant":"Solid","glyphName":"arrow-open-right","deprecated":true},"IconArrowOpenStartLine":{"name":"IconArrowOpenStartLine","variant":"Line","glyphName":"arrow-open-start","deprecated":false},"IconArrowOpenStartSolid":{"name":"IconArrowOpenStartSolid","variant":"Solid","glyphName":"arrow-open-start","deprecated":false},"IconArrowOpenUpLine":{"name":"IconArrowOpenUpLine","variant":"Line","glyphName":"arrow-open-up","deprecated":false},"IconArrowOpenUpSolid":{"name":"IconArrowOpenUpSolid","variant":"Solid","glyphName":"arrow-open-up","deprecated":false},"IconArrowRightLine":{"name":"IconArrowRightLine","variant":"Line","glyphName":"arrow-right","deprecated":true},"IconArrowRightSolid":{"name":"IconArrowRightSolid","variant":"Solid","glyphName":"arrow-right","deprecated":true},"IconArrowStartLine":{"name":"IconArrowStartLine","variant":"Line","glyphName":"arrow-start","deprecated":false},"IconArrowStartSolid":{"name":"IconArrowStartSolid","variant":"Solid","glyphName":"arrow-start","deprecated":false},"IconArrowUpLine":{"name":"IconArrowUpLine","variant":"Line","glyphName":"arrow-up","deprecated":false},"IconArrowUpSolid":{"name":"IconArrowUpSolid","variant":"Solid","glyphName":"arrow-up","deprecated":false},"IconAssignmentLine":{"name":"IconAssignmentLine","variant":"Line","glyphName":"assignment","deprecated":false},"IconAssignmentSolid":{"name":"IconAssignmentSolid","variant":"Solid","glyphName":"assignment","deprecated":false},"IconAttachMediaLine":{"name":"IconAttachMediaLine","variant":"Line","glyphName":"attach-media","deprecated":false},"IconAttachMediaSolid":{"name":"IconAttachMediaSolid","variant":"Solid","glyphName":"attach-media","deprecated":false},"IconAudioOffLine":{"name":"IconAudioOffLine","variant":"Line","glyphName":"audio-off","deprecated":false},"IconAudioOffSolid":{"name":"IconAudioOffSolid","variant":"Solid","glyphName":"audio-off","deprecated":false},"IconAudioLine":{"name":"IconAudioLine","variant":"Line","glyphName":"audio","deprecated":false},"IconAudioSolid":{"name":"IconAudioSolid","variant":"Solid","glyphName":"audio","deprecated":false},"IconBankLine":{"name":"IconBankLine","variant":"Line","glyphName":"bank","deprecated":false},"IconBankSolid":{"name":"IconBankSolid","variant":"Solid","glyphName":"bank","deprecated":false},"IconBlueprintLockLine":{"name":"IconBlueprintLockLine","variant":"Line","glyphName":"blueprint-lock","deprecated":false},"IconBlueprintLockSolid":{"name":"IconBlueprintLockSolid","variant":"Solid","glyphName":"blueprint-lock","deprecated":false},"IconBlueprintLine":{"name":"IconBlueprintLine","variant":"Line","glyphName":"blueprint","deprecated":false},"IconBlueprintSolid":{"name":"IconBlueprintSolid","variant":"Solid","glyphName":"blueprint","deprecated":false},"IconBoldLine":{"name":"IconBoldLine","variant":"Line","glyphName":"bold","deprecated":false},"IconBoldSolid":{"name":"IconBoldSolid","variant":"Solid","glyphName":"bold","deprecated":false},"IconBookmarkLine":{"name":"IconBookmarkLine","variant":"Line","glyphName":"bookmark","deprecated":false},"IconBookmarkSolid":{"name":"IconBookmarkSolid","variant":"Solid","glyphName":"bookmark","deprecated":false},"IconBoxLine":{"name":"IconBoxLine","variant":"Line","glyphName":"box","deprecated":false},"IconBoxSolid":{"name":"IconBoxSolid","variant":"Solid","glyphName":"box","deprecated":false},"IconBulletListAlphaLine":{"name":"IconBulletListAlphaLine","variant":"Line","glyphName":"bullet-list-alpha","deprecated":false},"IconBulletListAlphaSolid":{"name":"IconBulletListAlphaSolid","variant":"Solid","glyphName":"bullet-list-alpha","deprecated":false},"IconBulletListCircleOutlineLine":{"name":"IconBulletListCircleOutlineLine","variant":"Line","glyphName":"bullet-list-circle-outline","deprecated":false},"IconBulletListCircleOutlineSolid":{"name":"IconBulletListCircleOutlineSolid","variant":"Solid","glyphName":"bullet-list-circle-outline","deprecated":false},"IconBulletListRomanLine":{"name":"IconBulletListRomanLine","variant":"Line","glyphName":"bullet-list-roman","deprecated":false},"IconBulletListRomanSolid":{"name":"IconBulletListRomanSolid","variant":"Solid","glyphName":"bullet-list-roman","deprecated":false},"IconBulletListSquareLine":{"name":"IconBulletListSquareLine","variant":"Line","glyphName":"bullet-list-square","deprecated":false},"IconBulletListSquareSolid":{"name":"IconBulletListSquareSolid","variant":"Solid","glyphName":"bullet-list-square","deprecated":false},"IconBulletListLine":{"name":"IconBulletListLine","variant":"Line","glyphName":"bullet-list","deprecated":false},"IconBulletListSolid":{"name":"IconBulletListSolid","variant":"Solid","glyphName":"bullet-list","deprecated":false},"IconCalculatorDesmosLine":{"name":"IconCalculatorDesmosLine","variant":"Line","glyphName":"calculator-desmos","deprecated":false},"IconCalculatorDesmosSolid":{"name":"IconCalculatorDesmosSolid","variant":"Solid","glyphName":"calculator-desmos","deprecated":false},"IconCalculatorLine":{"name":"IconCalculatorLine","variant":"Line","glyphName":"calculator","deprecated":false},"IconCalculatorSolid":{"name":"IconCalculatorSolid","variant":"Solid","glyphName":"calculator","deprecated":false},"IconCalendarAddLine":{"name":"IconCalendarAddLine","variant":"Line","glyphName":"calendar-add","deprecated":false},"IconCalendarAddSolid":{"name":"IconCalendarAddSolid","variant":"Solid","glyphName":"calendar-add","deprecated":false},"IconCalendarClockLine":{"name":"IconCalendarClockLine","variant":"Line","glyphName":"calendar-clock","deprecated":false},"IconCalendarClockSolid":{"name":"IconCalendarClockSolid","variant":"Solid","glyphName":"calendar-clock","deprecated":false},"IconCalendarDayLine":{"name":"IconCalendarDayLine","variant":"Line","glyphName":"calendar-day","deprecated":false},"IconCalendarDaySolid":{"name":"IconCalendarDaySolid","variant":"Solid","glyphName":"calendar-day","deprecated":false},"IconCalendarDaysLine":{"name":"IconCalendarDaysLine","variant":"Line","glyphName":"calendar-days","deprecated":false},"IconCalendarDaysSolid":{"name":"IconCalendarDaysSolid","variant":"Solid","glyphName":"calendar-days","deprecated":false},"IconCalendarMonthLine":{"name":"IconCalendarMonthLine","variant":"Line","glyphName":"calendar-month","deprecated":false},"IconCalendarMonthSolid":{"name":"IconCalendarMonthSolid","variant":"Solid","glyphName":"calendar-month","deprecated":false},"IconCalendarReservedLine":{"name":"IconCalendarReservedLine","variant":"Line","glyphName":"calendar-reserved","deprecated":false},"IconCalendarReservedSolid":{"name":"IconCalendarReservedSolid","variant":"Solid","glyphName":"calendar-reserved","deprecated":false},"IconCertifiedLine":{"name":"IconCertifiedLine","variant":"Line","glyphName":"certified","deprecated":false},"IconCertifiedSolid":{"name":"IconCertifiedSolid","variant":"Solid","glyphName":"certified","deprecated":false},"IconChatLine":{"name":"IconChatLine","variant":"Line","glyphName":"chat","deprecated":false},"IconChatSolid":{"name":"IconChatSolid","variant":"Solid","glyphName":"chat","deprecated":false},"IconCheckDarkLine":{"name":"IconCheckDarkLine","variant":"Line","glyphName":"check-dark","deprecated":false},"IconCheckDarkSolid":{"name":"IconCheckDarkSolid","variant":"Solid","glyphName":"check-dark","deprecated":false},"IconCheckMarkIndeterminateLine":{"name":"IconCheckMarkIndeterminateLine","variant":"Line","glyphName":"check-mark-indeterminate","deprecated":false},"IconCheckMarkIndeterminateSolid":{"name":"IconCheckMarkIndeterminateSolid","variant":"Solid","glyphName":"check-mark-indeterminate","deprecated":false},"IconCheckMarkLine":{"name":"IconCheckMarkLine","variant":"Line","glyphName":"check-mark","deprecated":false},"IconCheckMarkSolid":{"name":"IconCheckMarkSolid","variant":"Solid","glyphName":"check-mark","deprecated":false},"IconCheckPlusLine":{"name":"IconCheckPlusLine","variant":"Line","glyphName":"check-plus","deprecated":false},"IconCheckPlusSolid":{"name":"IconCheckPlusSolid","variant":"Solid","glyphName":"check-plus","deprecated":false},"IconCheckLine":{"name":"IconCheckLine","variant":"Line","glyphName":"check","deprecated":false},"IconCheckSolid":{"name":"IconCheckSolid","variant":"Solid","glyphName":"check","deprecated":false},"IconCircleArrowDownLine":{"name":"IconCircleArrowDownLine","variant":"Line","glyphName":"circle-arrow-down","deprecated":false},"IconCircleArrowDownSolid":{"name":"IconCircleArrowDownSolid","variant":"Solid","glyphName":"circle-arrow-down","deprecated":false},"IconCircleArrowUpLine":{"name":"IconCircleArrowUpLine","variant":"Line","glyphName":"circle-arrow-up","deprecated":false},"IconCircleArrowUpSolid":{"name":"IconCircleArrowUpSolid","variant":"Solid","glyphName":"circle-arrow-up","deprecated":false},"IconClearTextFormattingLine":{"name":"IconClearTextFormattingLine","variant":"Line","glyphName":"clear-text-formatting","deprecated":false},"IconClearTextFormattingSolid":{"name":"IconClearTextFormattingSolid","variant":"Solid","glyphName":"clear-text-formatting","deprecated":false},"IconClockLine":{"name":"IconClockLine","variant":"Line","glyphName":"clock","deprecated":false},"IconClockSolid":{"name":"IconClockSolid","variant":"Solid","glyphName":"clock","deprecated":false},"IconClosedCaptioningOffLine":{"name":"IconClosedCaptioningOffLine","variant":"Line","glyphName":"closed-captioning-off","deprecated":false},"IconClosedCaptioningOffSolid":{"name":"IconClosedCaptioningOffSolid","variant":"Solid","glyphName":"closed-captioning-off","deprecated":false},"IconClosedCaptioningOnLine":{"name":"IconClosedCaptioningOnLine","variant":"Line","glyphName":"closed-captioning-on","deprecated":false},"IconClosedCaptioningOnSolid":{"name":"IconClosedCaptioningOnSolid","variant":"Solid","glyphName":"closed-captioning-on","deprecated":false},"IconClosedCaptioningLine":{"name":"IconClosedCaptioningLine","variant":"Line","glyphName":"closed-captioning","deprecated":false},"IconClosedCaptioningSolid":{"name":"IconClosedCaptioningSolid","variant":"Solid","glyphName":"closed-captioning","deprecated":false},"IconCloudDownloadLine":{"name":"IconCloudDownloadLine","variant":"Line","glyphName":"cloud-download","deprecated":false},"IconCloudDownloadSolid":{"name":"IconCloudDownloadSolid","variant":"Solid","glyphName":"cloud-download","deprecated":false},"IconCloudLockLine":{"name":"IconCloudLockLine","variant":"Line","glyphName":"cloud-lock","deprecated":false},"IconCloudLockSolid":{"name":"IconCloudLockSolid","variant":"Solid","glyphName":"cloud-lock","deprecated":false},"IconCodeLine":{"name":"IconCodeLine","variant":"Line","glyphName":"code","deprecated":false},"IconCodeSolid":{"name":"IconCodeSolid","variant":"Solid","glyphName":"code","deprecated":false},"IconCollapseLine":{"name":"IconCollapseLine","variant":"Line","glyphName":"collapse","deprecated":false},"IconCollapseSolid":{"name":"IconCollapseSolid","variant":"Solid","glyphName":"collapse","deprecated":false},"IconCollectionSaveLine":{"name":"IconCollectionSaveLine","variant":"Line","glyphName":"collection-save","deprecated":false},"IconCollectionSaveSolid":{"name":"IconCollectionSaveSolid","variant":"Solid","glyphName":"collection-save","deprecated":false},"IconCollectionLine":{"name":"IconCollectionLine","variant":"Line","glyphName":"collection","deprecated":false},"IconCollectionSolid":{"name":"IconCollectionSolid","variant":"Solid","glyphName":"collection","deprecated":false},"IconCommentLine":{"name":"IconCommentLine","variant":"Line","glyphName":"comment","deprecated":false},"IconCommentSolid":{"name":"IconCommentSolid","variant":"Solid","glyphName":"comment","deprecated":false},"IconCommentsOffLine":{"name":"IconCommentsOffLine","variant":"Line","glyphName":"comments-off","deprecated":false},"IconCommentsOffSolid":{"name":"IconCommentsOffSolid","variant":"Solid","glyphName":"comments-off","deprecated":false},"IconCommentsOnLine":{"name":"IconCommentsOnLine","variant":"Line","glyphName":"comments-on","deprecated":false},"IconCommentsOnSolid":{"name":"IconCommentsOnSolid","variant":"Solid","glyphName":"comments-on","deprecated":false},"IconCommonsLine":{"name":"IconCommonsLine","variant":"Line","glyphName":"commons","deprecated":false},"IconCommonsSolid":{"name":"IconCommonsSolid","variant":"Solid","glyphName":"commons","deprecated":false},"IconCompassLine":{"name":"IconCompassLine","variant":"Line","glyphName":"compass","deprecated":false},"IconCompassSolid":{"name":"IconCompassSolid","variant":"Solid","glyphName":"compass","deprecated":false},"IconCompleteLine":{"name":"IconCompleteLine","variant":"Line","glyphName":"complete","deprecated":false},"IconCompleteSolid":{"name":"IconCompleteSolid","variant":"Solid","glyphName":"complete","deprecated":false},"IconComposeLine":{"name":"IconComposeLine","variant":"Line","glyphName":"compose","deprecated":false},"IconComposeSolid":{"name":"IconComposeSolid","variant":"Solid","glyphName":"compose","deprecated":false},"IconCopyCourseLine":{"name":"IconCopyCourseLine","variant":"Line","glyphName":"copy-course","deprecated":true},"IconCopyCourseSolid":{"name":"IconCopyCourseSolid","variant":"Solid","glyphName":"copy-course","deprecated":true},"IconCopyLine":{"name":"IconCopyLine","variant":"Line","glyphName":"copy","deprecated":false},"IconCopySolid":{"name":"IconCopySolid","variant":"Solid","glyphName":"copy","deprecated":false},"IconCoursesLine":{"name":"IconCoursesLine","variant":"Line","glyphName":"courses","deprecated":false},"IconCoursesSolid":{"name":"IconCoursesSolid","variant":"Solid","glyphName":"courses","deprecated":false},"IconDashboardLine":{"name":"IconDashboardLine","variant":"Line","glyphName":"dashboard","deprecated":false},"IconDashboardSolid":{"name":"IconDashboardSolid","variant":"Solid","glyphName":"dashboard","deprecated":false},"IconDeactivateUserLine":{"name":"IconDeactivateUserLine","variant":"Line","glyphName":"deactivate-user","deprecated":false},"IconDeactivateUserSolid":{"name":"IconDeactivateUserSolid","variant":"Solid","glyphName":"deactivate-user","deprecated":false},"IconDiscussionCheckLine":{"name":"IconDiscussionCheckLine","variant":"Line","glyphName":"discussion-check","deprecated":false},"IconDiscussionCheckSolid":{"name":"IconDiscussionCheckSolid","variant":"Solid","glyphName":"discussion-check","deprecated":false},"IconDiscussionNewLine":{"name":"IconDiscussionNewLine","variant":"Line","glyphName":"discussion-new","deprecated":false},"IconDiscussionNewSolid":{"name":"IconDiscussionNewSolid","variant":"Solid","glyphName":"discussion-new","deprecated":false},"IconDiscussionReply2Line":{"name":"IconDiscussionReply2Line","variant":"Line","glyphName":"discussion-reply-2","deprecated":false},"IconDiscussionReply2Solid":{"name":"IconDiscussionReply2Solid","variant":"Solid","glyphName":"discussion-reply-2","deprecated":false},"IconDiscussionReplyDarkLine":{"name":"IconDiscussionReplyDarkLine","variant":"Line","glyphName":"discussion-reply-dark","deprecated":true},"IconDiscussionReplyDarkSolid":{"name":"IconDiscussionReplyDarkSolid","variant":"Solid","glyphName":"discussion-reply-dark","deprecated":true},"IconDiscussionReplyLine":{"name":"IconDiscussionReplyLine","variant":"Line","glyphName":"discussion-reply","deprecated":true},"IconDiscussionReplySolid":{"name":"IconDiscussionReplySolid","variant":"Solid","glyphName":"discussion-reply","deprecated":true},"IconDiscussionSearchLine":{"name":"IconDiscussionSearchLine","variant":"Line","glyphName":"discussion-search","deprecated":true},"IconDiscussionSearchSolid":{"name":"IconDiscussionSearchSolid","variant":"Solid","glyphName":"discussion-search","deprecated":true},"IconDiscussionXLine":{"name":"IconDiscussionXLine","variant":"Line","glyphName":"discussion-x","deprecated":true},"IconDiscussionXSolid":{"name":"IconDiscussionXSolid","variant":"Solid","glyphName":"discussion-x","deprecated":true},"IconDiscussionLine":{"name":"IconDiscussionLine","variant":"Line","glyphName":"discussion","deprecated":false},"IconDiscussionSolid":{"name":"IconDiscussionSolid","variant":"Solid","glyphName":"discussion","deprecated":false},"IconDocumentLine":{"name":"IconDocumentLine","variant":"Line","glyphName":"document","deprecated":false},"IconDocumentSolid":{"name":"IconDocumentSolid","variant":"Solid","glyphName":"document","deprecated":false},"IconDownloadLine":{"name":"IconDownloadLine","variant":"Line","glyphName":"download","deprecated":false},"IconDownloadSolid":{"name":"IconDownloadSolid","variant":"Solid","glyphName":"download","deprecated":false},"IconDragHandleLine":{"name":"IconDragHandleLine","variant":"Line","glyphName":"drag-handle","deprecated":false},"IconDragHandleSolid":{"name":"IconDragHandleSolid","variant":"Solid","glyphName":"drag-handle","deprecated":false},"IconDropDownLine":{"name":"IconDropDownLine","variant":"Line","glyphName":"drop-down","deprecated":false},"IconDropDownSolid":{"name":"IconDropDownSolid","variant":"Solid","glyphName":"drop-down","deprecated":false},"IconDuplicateLine":{"name":"IconDuplicateLine","variant":"Line","glyphName":"duplicate","deprecated":false},"IconDuplicateSolid":{"name":"IconDuplicateSolid","variant":"Solid","glyphName":"duplicate","deprecated":false},"IconEditLine":{"name":"IconEditLine","variant":"Line","glyphName":"edit","deprecated":false},"IconEditSolid":{"name":"IconEditSolid","variant":"Solid","glyphName":"edit","deprecated":false},"IconEducatorsLine":{"name":"IconEducatorsLine","variant":"Line","glyphName":"educators","deprecated":false},"IconEducatorsSolid":{"name":"IconEducatorsSolid","variant":"Solid","glyphName":"educators","deprecated":false},"IconEmailLine":{"name":"IconEmailLine","variant":"Line","glyphName":"email","deprecated":false},"IconEmailSolid":{"name":"IconEmailSolid","variant":"Solid","glyphName":"email","deprecated":false},"IconEmptyLine":{"name":"IconEmptyLine","variant":"Line","glyphName":"empty","deprecated":false},"IconEmptySolid":{"name":"IconEmptySolid","variant":"Solid","glyphName":"empty","deprecated":false},"IconEndLine":{"name":"IconEndLine","variant":"Line","glyphName":"end","deprecated":false},"IconEndSolid":{"name":"IconEndSolid","variant":"Solid","glyphName":"end","deprecated":false},"IconEportfolioLine":{"name":"IconEportfolioLine","variant":"Line","glyphName":"eportfolio","deprecated":false},"IconEportfolioSolid":{"name":"IconEportfolioSolid","variant":"Solid","glyphName":"eportfolio","deprecated":false},"IconEquationLine":{"name":"IconEquationLine","variant":"Line","glyphName":"equation","deprecated":false},"IconEquationSolid":{"name":"IconEquationSolid","variant":"Solid","glyphName":"equation","deprecated":false},"IconEquellaLine":{"name":"IconEquellaLine","variant":"Line","glyphName":"equella","deprecated":false},"IconEquellaSolid":{"name":"IconEquellaSolid","variant":"Solid","glyphName":"equella","deprecated":false},"IconEssayLine":{"name":"IconEssayLine","variant":"Line","glyphName":"essay","deprecated":false},"IconEssaySolid":{"name":"IconEssaySolid","variant":"Solid","glyphName":"essay","deprecated":false},"IconExitFullScreenLine":{"name":"IconExitFullScreenLine","variant":"Line","glyphName":"exit-full-screen","deprecated":false},"IconExitFullScreenSolid":{"name":"IconExitFullScreenSolid","variant":"Solid","glyphName":"exit-full-screen","deprecated":false},"IconExpandItemsLine":{"name":"IconExpandItemsLine","variant":"Line","glyphName":"expand-items","deprecated":false},"IconExpandItemsSolid":{"name":"IconExpandItemsSolid","variant":"Solid","glyphName":"expand-items","deprecated":false},"IconExpandLeftLine":{"name":"IconExpandLeftLine","variant":"Line","glyphName":"expand-left","deprecated":true},"IconExpandLeftSolid":{"name":"IconExpandLeftSolid","variant":"Solid","glyphName":"expand-left","deprecated":true},"IconExpandStartLine":{"name":"IconExpandStartLine","variant":"Line","glyphName":"expand-start","deprecated":false},"IconExpandStartSolid":{"name":"IconExpandStartSolid","variant":"Solid","glyphName":"expand-start","deprecated":false},"IconExpandLine":{"name":"IconExpandLine","variant":"Line","glyphName":"expand","deprecated":false},"IconExpandSolid":{"name":"IconExpandSolid","variant":"Solid","glyphName":"expand","deprecated":false},"IconExportContentLine":{"name":"IconExportContentLine","variant":"Line","glyphName":"export-content","deprecated":false},"IconExportContentSolid":{"name":"IconExportContentSolid","variant":"Solid","glyphName":"export-content","deprecated":false},"IconExportLine":{"name":"IconExportLine","variant":"Line","glyphName":"export","deprecated":false},"IconExportSolid":{"name":"IconExportSolid","variant":"Solid","glyphName":"export","deprecated":false},"IconExternalLinkLine":{"name":"IconExternalLinkLine","variant":"Line","glyphName":"external-link","deprecated":false},"IconExternalLinkSolid":{"name":"IconExternalLinkSolid","variant":"Solid","glyphName":"external-link","deprecated":false},"IconEyeLine":{"name":"IconEyeLine","variant":"Line","glyphName":"eye","deprecated":false},"IconEyeSolid":{"name":"IconEyeSolid","variant":"Solid","glyphName":"eye","deprecated":false},"IconFacebookBoxedLine":{"name":"IconFacebookBoxedLine","variant":"Line","glyphName":"facebook-boxed","deprecated":false},"IconFacebookBoxedSolid":{"name":"IconFacebookBoxedSolid","variant":"Solid","glyphName":"facebook-boxed","deprecated":false},"IconFacebookLine":{"name":"IconFacebookLine","variant":"Line","glyphName":"facebook","deprecated":false},"IconFacebookSolid":{"name":"IconFacebookSolid","variant":"Solid","glyphName":"facebook","deprecated":false},"IconFastForwardLine":{"name":"IconFastForwardLine","variant":"Line","glyphName":"fast-forward","deprecated":false},"IconFastForwardSolid":{"name":"IconFastForwardSolid","variant":"Solid","glyphName":"fast-forward","deprecated":false},"IconFeedbackLine":{"name":"IconFeedbackLine","variant":"Line","glyphName":"feedback","deprecated":false},"IconFeedbackSolid":{"name":"IconFeedbackSolid","variant":"Solid","glyphName":"feedback","deprecated":false},"IconFileLockedLine":{"name":"IconFileLockedLine","variant":"Line","glyphName":"file-locked","deprecated":false},"IconFileLockedSolid":{"name":"IconFileLockedSolid","variant":"Solid","glyphName":"file-locked","deprecated":false},"IconFilesCopyrightLine":{"name":"IconFilesCopyrightLine","variant":"Line","glyphName":"files-copyright","deprecated":false},"IconFilesCopyrightSolid":{"name":"IconFilesCopyrightSolid","variant":"Solid","glyphName":"files-copyright","deprecated":false},"IconFilesCreativeCommonsLine":{"name":"IconFilesCreativeCommonsLine","variant":"Line","glyphName":"files-creative-commons","deprecated":false},"IconFilesCreativeCommonsSolid":{"name":"IconFilesCreativeCommonsSolid","variant":"Solid","glyphName":"files-creative-commons","deprecated":false},"IconFilesFairUseLine":{"name":"IconFilesFairUseLine","variant":"Line","glyphName":"files-fair-use","deprecated":false},"IconFilesFairUseSolid":{"name":"IconFilesFairUseSolid","variant":"Solid","glyphName":"files-fair-use","deprecated":false},"IconFilesObtainedPermissionLine":{"name":"IconFilesObtainedPermissionLine","variant":"Line","glyphName":"files-obtained-permission","deprecated":false},"IconFilesObtainedPermissionSolid":{"name":"IconFilesObtainedPermissionSolid","variant":"Solid","glyphName":"files-obtained-permission","deprecated":false},"IconFilesPublicDomainLine":{"name":"IconFilesPublicDomainLine","variant":"Line","glyphName":"files-public-domain","deprecated":false},"IconFilesPublicDomainSolid":{"name":"IconFilesPublicDomainSolid","variant":"Solid","glyphName":"files-public-domain","deprecated":false},"IconFilmstripLine":{"name":"IconFilmstripLine","variant":"Line","glyphName":"filmstrip","deprecated":false},"IconFilmstripSolid":{"name":"IconFilmstripSolid","variant":"Solid","glyphName":"filmstrip","deprecated":false},"IconFilterLine":{"name":"IconFilterLine","variant":"Line","glyphName":"filter","deprecated":false},"IconFilterSolid":{"name":"IconFilterSolid","variant":"Solid","glyphName":"filter","deprecated":false},"IconFlagLine":{"name":"IconFlagLine","variant":"Line","glyphName":"flag","deprecated":false},"IconFlagSolid":{"name":"IconFlagSolid","variant":"Solid","glyphName":"flag","deprecated":false},"IconFolderLockedLine":{"name":"IconFolderLockedLine","variant":"Line","glyphName":"folder-locked","deprecated":false},"IconFolderLockedSolid":{"name":"IconFolderLockedSolid","variant":"Solid","glyphName":"folder-locked","deprecated":false},"IconFolderLine":{"name":"IconFolderLine","variant":"Line","glyphName":"folder","deprecated":false},"IconFolderSolid":{"name":"IconFolderSolid","variant":"Solid","glyphName":"folder","deprecated":false},"IconForwardLine":{"name":"IconForwardLine","variant":"Line","glyphName":"forward","deprecated":false},"IconForwardSolid":{"name":"IconForwardSolid","variant":"Solid","glyphName":"forward","deprecated":false},"IconFullScreenLine":{"name":"IconFullScreenLine","variant":"Line","glyphName":"full-screen","deprecated":false},"IconFullScreenSolid":{"name":"IconFullScreenSolid","variant":"Solid","glyphName":"full-screen","deprecated":false},"IconGithubLine":{"name":"IconGithubLine","variant":"Line","glyphName":"github","deprecated":false},"IconGithubSolid":{"name":"IconGithubSolid","variant":"Solid","glyphName":"github","deprecated":false},"IconGradebookExportLine":{"name":"IconGradebookExportLine","variant":"Line","glyphName":"gradebook-export","deprecated":false},"IconGradebookExportSolid":{"name":"IconGradebookExportSolid","variant":"Solid","glyphName":"gradebook-export","deprecated":false},"IconGradebookImportLine":{"name":"IconGradebookImportLine","variant":"Line","glyphName":"gradebook-import","deprecated":false},"IconGradebookImportSolid":{"name":"IconGradebookImportSolid","variant":"Solid","glyphName":"gradebook-import","deprecated":false},"IconGradebookLine":{"name":"IconGradebookLine","variant":"Line","glyphName":"gradebook","deprecated":false},"IconGradebookSolid":{"name":"IconGradebookSolid","variant":"Solid","glyphName":"gradebook","deprecated":false},"IconGroupDarkNewLine":{"name":"IconGroupDarkNewLine","variant":"Line","glyphName":"group-dark-new","deprecated":false},"IconGroupDarkNewSolid":{"name":"IconGroupDarkNewSolid","variant":"Solid","glyphName":"group-dark-new","deprecated":false},"IconGroupNewLine":{"name":"IconGroupNewLine","variant":"Line","glyphName":"group-new","deprecated":false},"IconGroupNewSolid":{"name":"IconGroupNewSolid","variant":"Solid","glyphName":"group-new","deprecated":false},"IconGroupLine":{"name":"IconGroupLine","variant":"Line","glyphName":"group","deprecated":false},"IconGroupSolid":{"name":"IconGroupSolid","variant":"Solid","glyphName":"group","deprecated":false},"IconHamburgerLine":{"name":"IconHamburgerLine","variant":"Line","glyphName":"hamburger","deprecated":false},"IconHamburgerSolid":{"name":"IconHamburgerSolid","variant":"Solid","glyphName":"hamburger","deprecated":false},"IconHeartLine":{"name":"IconHeartLine","variant":"Line","glyphName":"heart","deprecated":false},"IconHeartSolid":{"name":"IconHeartSolid","variant":"Solid","glyphName":"heart","deprecated":false},"IconHighlighterLine":{"name":"IconHighlighterLine","variant":"Line","glyphName":"highlighter","deprecated":false},"IconHighlighterSolid":{"name":"IconHighlighterSolid","variant":"Solid","glyphName":"highlighter","deprecated":false},"IconHomeLine":{"name":"IconHomeLine","variant":"Line","glyphName":"home","deprecated":false},"IconHomeSolid":{"name":"IconHomeSolid","variant":"Solid","glyphName":"home","deprecated":false},"IconHourGlassLine":{"name":"IconHourGlassLine","variant":"Line","glyphName":"hour-glass","deprecated":false},"IconHourGlassSolid":{"name":"IconHourGlassSolid","variant":"Solid","glyphName":"hour-glass","deprecated":false},"IconImageLine":{"name":"IconImageLine","variant":"Line","glyphName":"image","deprecated":false},"IconImageSolid":{"name":"IconImageSolid","variant":"Solid","glyphName":"image","deprecated":false},"IconImportContentLine":{"name":"IconImportContentLine","variant":"Line","glyphName":"import-content","deprecated":false},"IconImportContentSolid":{"name":"IconImportContentSolid","variant":"Solid","glyphName":"import-content","deprecated":false},"IconImportLine":{"name":"IconImportLine","variant":"Line","glyphName":"import","deprecated":false},"IconImportSolid":{"name":"IconImportSolid","variant":"Solid","glyphName":"import","deprecated":false},"IconInboxLine":{"name":"IconInboxLine","variant":"Line","glyphName":"inbox","deprecated":false},"IconInboxSolid":{"name":"IconInboxSolid","variant":"Solid","glyphName":"inbox","deprecated":false},"IconIndent2Line":{"name":"IconIndent2Line","variant":"Line","glyphName":"indent-2","deprecated":false},"IconIndent2Solid":{"name":"IconIndent2Solid","variant":"Solid","glyphName":"indent-2","deprecated":false},"IconIndentLine":{"name":"IconIndentLine","variant":"Line","glyphName":"indent","deprecated":false},"IconIndentSolid":{"name":"IconIndentSolid","variant":"Solid","glyphName":"indent","deprecated":false},"IconInfoBorderlessLine":{"name":"IconInfoBorderlessLine","variant":"Line","glyphName":"info-borderless","deprecated":false},"IconInfoBorderlessSolid":{"name":"IconInfoBorderlessSolid","variant":"Solid","glyphName":"info-borderless","deprecated":false},"IconInfoLine":{"name":"IconInfoLine","variant":"Line","glyphName":"info","deprecated":false},"IconInfoSolid":{"name":"IconInfoSolid","variant":"Solid","glyphName":"info","deprecated":false},"IconInstructureLine":{"name":"IconInstructureLine","variant":"Line","glyphName":"instructure","deprecated":false},"IconInstructureSolid":{"name":"IconInstructureSolid","variant":"Solid","glyphName":"instructure","deprecated":false},"IconIntegrationsLine":{"name":"IconIntegrationsLine","variant":"Line","glyphName":"integrations","deprecated":false},"IconIntegrationsSolid":{"name":"IconIntegrationsSolid","variant":"Solid","glyphName":"integrations","deprecated":false},"IconInvitationLine":{"name":"IconInvitationLine","variant":"Line","glyphName":"invitation","deprecated":false},"IconInvitationSolid":{"name":"IconInvitationSolid","variant":"Solid","glyphName":"invitation","deprecated":false},"IconItalicLine":{"name":"IconItalicLine","variant":"Line","glyphName":"italic","deprecated":false},"IconItalicSolid":{"name":"IconItalicSolid","variant":"Solid","glyphName":"italic","deprecated":false},"IconKeyboardShortcutsLine":{"name":"IconKeyboardShortcutsLine","variant":"Line","glyphName":"keyboard-shortcuts","deprecated":false},"IconKeyboardShortcutsSolid":{"name":"IconKeyboardShortcutsSolid","variant":"Solid","glyphName":"keyboard-shortcuts","deprecated":false},"IconLaunchLine":{"name":"IconLaunchLine","variant":"Line","glyphName":"launch","deprecated":false},"IconLaunchSolid":{"name":"IconLaunchSolid","variant":"Solid","glyphName":"launch","deprecated":false},"IconLifePreserverLine":{"name":"IconLifePreserverLine","variant":"Line","glyphName":"life-preserver","deprecated":false},"IconLifePreserverSolid":{"name":"IconLifePreserverSolid","variant":"Solid","glyphName":"life-preserver","deprecated":false},"IconLikeLine":{"name":"IconLikeLine","variant":"Line","glyphName":"like","deprecated":false},"IconLikeSolid":{"name":"IconLikeSolid","variant":"Solid","glyphName":"like","deprecated":false},"IconLineReaderLine":{"name":"IconLineReaderLine","variant":"Line","glyphName":"line-reader","deprecated":false},"IconLineReaderSolid":{"name":"IconLineReaderSolid","variant":"Solid","glyphName":"line-reader","deprecated":false},"IconLinkLine":{"name":"IconLinkLine","variant":"Line","glyphName":"link","deprecated":false},"IconLinkSolid":{"name":"IconLinkSolid","variant":"Solid","glyphName":"link","deprecated":false},"IconLinkedinLine":{"name":"IconLinkedinLine","variant":"Line","glyphName":"linkedin","deprecated":false},"IconLinkedinSolid":{"name":"IconLinkedinSolid","variant":"Solid","glyphName":"linkedin","deprecated":false},"IconLockLine":{"name":"IconLockLine","variant":"Line","glyphName":"lock","deprecated":false},"IconLockSolid":{"name":"IconLockSolid","variant":"Solid","glyphName":"lock","deprecated":false},"IconLtiLine":{"name":"IconLtiLine","variant":"Line","glyphName":"lti","deprecated":false},"IconLtiSolid":{"name":"IconLtiSolid","variant":"Solid","glyphName":"lti","deprecated":false},"IconMarkAsReadLine":{"name":"IconMarkAsReadLine","variant":"Line","glyphName":"mark-as-read","deprecated":false},"IconMarkAsReadSolid":{"name":"IconMarkAsReadSolid","variant":"Solid","glyphName":"mark-as-read","deprecated":false},"IconMarkerLine":{"name":"IconMarkerLine","variant":"Line","glyphName":"marker","deprecated":false},"IconMarkerSolid":{"name":"IconMarkerSolid","variant":"Solid","glyphName":"marker","deprecated":false},"IconMasqueradeLine":{"name":"IconMasqueradeLine","variant":"Line","glyphName":"masquerade","deprecated":false},"IconMasqueradeSolid":{"name":"IconMasqueradeSolid","variant":"Solid","glyphName":"masquerade","deprecated":false},"IconMasteryPathsLine":{"name":"IconMasteryPathsLine","variant":"Line","glyphName":"mastery-paths","deprecated":false},"IconMasteryPathsSolid":{"name":"IconMasteryPathsSolid","variant":"Solid","glyphName":"mastery-paths","deprecated":false},"IconMaterialsRequiredLightLine":{"name":"IconMaterialsRequiredLightLine","variant":"Line","glyphName":"materials-required-light","deprecated":true},"IconMaterialsRequiredLightSolid":{"name":"IconMaterialsRequiredLightSolid","variant":"Solid","glyphName":"materials-required-light","deprecated":true},"IconMaterialsRequiredLine":{"name":"IconMaterialsRequiredLine","variant":"Line","glyphName":"materials-required","deprecated":false},"IconMaterialsRequiredSolid":{"name":"IconMaterialsRequiredSolid","variant":"Solid","glyphName":"materials-required","deprecated":false},"IconMatureLightLine":{"name":"IconMatureLightLine","variant":"Line","glyphName":"mature-light","deprecated":true},"IconMatureLightSolid":{"name":"IconMatureLightSolid","variant":"Solid","glyphName":"mature-light","deprecated":true},"IconMatureLine":{"name":"IconMatureLine","variant":"Line","glyphName":"mature","deprecated":false},"IconMatureSolid":{"name":"IconMatureSolid","variant":"Solid","glyphName":"mature","deprecated":false},"IconMediaLine":{"name":"IconMediaLine","variant":"Line","glyphName":"media","deprecated":false},"IconMediaSolid":{"name":"IconMediaSolid","variant":"Solid","glyphName":"media","deprecated":false},"IconMessageLine":{"name":"IconMessageLine","variant":"Line","glyphName":"message","deprecated":false},"IconMessageSolid":{"name":"IconMessageSolid","variant":"Solid","glyphName":"message","deprecated":false},"IconMicOffLine":{"name":"IconMicOffLine","variant":"Line","glyphName":"mic-off","deprecated":false},"IconMicOffSolid":{"name":"IconMicOffSolid","variant":"Solid","glyphName":"mic-off","deprecated":false},"IconMicLine":{"name":"IconMicLine","variant":"Line","glyphName":"mic","deprecated":false},"IconMicSolid":{"name":"IconMicSolid","variant":"Solid","glyphName":"mic","deprecated":false},"IconMiniArrowDownLine":{"name":"IconMiniArrowDownLine","variant":"Line","glyphName":"mini-arrow-down","deprecated":false},"IconMiniArrowDownSolid":{"name":"IconMiniArrowDownSolid","variant":"Solid","glyphName":"mini-arrow-down","deprecated":false},"IconMiniArrowEndLine":{"name":"IconMiniArrowEndLine","variant":"Line","glyphName":"mini-arrow-end","deprecated":false},"IconMiniArrowEndSolid":{"name":"IconMiniArrowEndSolid","variant":"Solid","glyphName":"mini-arrow-end","deprecated":false},"IconMiniArrowLeftLine":{"name":"IconMiniArrowLeftLine","variant":"Line","glyphName":"mini-arrow-left","deprecated":true},"IconMiniArrowLeftSolid":{"name":"IconMiniArrowLeftSolid","variant":"Solid","glyphName":"mini-arrow-left","deprecated":true},"IconMiniArrowRightLine":{"name":"IconMiniArrowRightLine","variant":"Line","glyphName":"mini-arrow-right","deprecated":true},"IconMiniArrowRightSolid":{"name":"IconMiniArrowRightSolid","variant":"Solid","glyphName":"mini-arrow-right","deprecated":true},"IconMiniArrowStartLine":{"name":"IconMiniArrowStartLine","variant":"Line","glyphName":"mini-arrow-start","deprecated":false},"IconMiniArrowStartSolid":{"name":"IconMiniArrowStartSolid","variant":"Solid","glyphName":"mini-arrow-start","deprecated":false},"IconMiniArrowUpLine":{"name":"IconMiniArrowUpLine","variant":"Line","glyphName":"mini-arrow-up","deprecated":false},"IconMiniArrowUpSolid":{"name":"IconMiniArrowUpSolid","variant":"Solid","glyphName":"mini-arrow-up","deprecated":false},"IconMinimizeLine":{"name":"IconMinimizeLine","variant":"Line","glyphName":"minimize","deprecated":false},"IconMinimizeSolid":{"name":"IconMinimizeSolid","variant":"Solid","glyphName":"minimize","deprecated":false},"IconModuleLine":{"name":"IconModuleLine","variant":"Line","glyphName":"module","deprecated":false},"IconModuleSolid":{"name":"IconModuleSolid","variant":"Solid","glyphName":"module","deprecated":false},"IconMoreLine":{"name":"IconMoreLine","variant":"Line","glyphName":"more","deprecated":false},"IconMoreSolid":{"name":"IconMoreSolid","variant":"Solid","glyphName":"more","deprecated":false},"IconMoveDownBottomLine":{"name":"IconMoveDownBottomLine","variant":"Line","glyphName":"move-down-bottom","deprecated":false},"IconMoveDownBottomSolid":{"name":"IconMoveDownBottomSolid","variant":"Solid","glyphName":"move-down-bottom","deprecated":false},"IconMoveDownLine":{"name":"IconMoveDownLine","variant":"Line","glyphName":"move-down","deprecated":false},"IconMoveDownSolid":{"name":"IconMoveDownSolid","variant":"Solid","glyphName":"move-down","deprecated":false},"IconMoveEndLine":{"name":"IconMoveEndLine","variant":"Line","glyphName":"move-end","deprecated":false},"IconMoveEndSolid":{"name":"IconMoveEndSolid","variant":"Solid","glyphName":"move-end","deprecated":false},"IconMoveLeftLine":{"name":"IconMoveLeftLine","variant":"Line","glyphName":"move-left","deprecated":true},"IconMoveLeftSolid":{"name":"IconMoveLeftSolid","variant":"Solid","glyphName":"move-left","deprecated":true},"IconMoveRightLine":{"name":"IconMoveRightLine","variant":"Line","glyphName":"move-right","deprecated":true},"IconMoveRightSolid":{"name":"IconMoveRightSolid","variant":"Solid","glyphName":"move-right","deprecated":true},"IconMoveStartLine":{"name":"IconMoveStartLine","variant":"Line","glyphName":"move-start","deprecated":false},"IconMoveStartSolid":{"name":"IconMoveStartSolid","variant":"Solid","glyphName":"move-start","deprecated":false},"IconMoveUpTopLine":{"name":"IconMoveUpTopLine","variant":"Line","glyphName":"move-up-top","deprecated":false},"IconMoveUpTopSolid":{"name":"IconMoveUpTopSolid","variant":"Solid","glyphName":"move-up-top","deprecated":false},"IconMoveUpLine":{"name":"IconMoveUpLine","variant":"Line","glyphName":"move-up","deprecated":false},"IconMoveUpSolid":{"name":"IconMoveUpSolid","variant":"Solid","glyphName":"move-up","deprecated":false},"IconMsExcelLine":{"name":"IconMsExcelLine","variant":"Line","glyphName":"ms-excel","deprecated":false},"IconMsExcelSolid":{"name":"IconMsExcelSolid","variant":"Solid","glyphName":"ms-excel","deprecated":false},"IconMsPptLine":{"name":"IconMsPptLine","variant":"Line","glyphName":"ms-ppt","deprecated":false},"IconMsPptSolid":{"name":"IconMsPptSolid","variant":"Solid","glyphName":"ms-ppt","deprecated":false},"IconMsWordLine":{"name":"IconMsWordLine","variant":"Line","glyphName":"ms-word","deprecated":false},"IconMsWordSolid":{"name":"IconMsWordSolid","variant":"Solid","glyphName":"ms-word","deprecated":false},"IconMutedLine":{"name":"IconMutedLine","variant":"Line","glyphName":"muted","deprecated":false},"IconMutedSolid":{"name":"IconMutedSolid","variant":"Solid","glyphName":"muted","deprecated":false},"IconNextUnreadLine":{"name":"IconNextUnreadLine","variant":"Line","glyphName":"next-unread","deprecated":false},"IconNextUnreadSolid":{"name":"IconNextUnreadSolid","variant":"Solid","glyphName":"next-unread","deprecated":false},"IconNoLine":{"name":"IconNoLine","variant":"Line","glyphName":"no","deprecated":false},"IconNoSolid":{"name":"IconNoSolid","variant":"Solid","glyphName":"no","deprecated":false},"IconNotGradedLine":{"name":"IconNotGradedLine","variant":"Line","glyphName":"not-graded","deprecated":false},"IconNotGradedSolid":{"name":"IconNotGradedSolid","variant":"Solid","glyphName":"not-graded","deprecated":false},"IconNoteDarkLine":{"name":"IconNoteDarkLine","variant":"Line","glyphName":"note-dark","deprecated":true},"IconNoteDarkSolid":{"name":"IconNoteDarkSolid","variant":"Solid","glyphName":"note-dark","deprecated":true},"IconNoteLightLine":{"name":"IconNoteLightLine","variant":"Line","glyphName":"note-light","deprecated":true},"IconNoteLightSolid":{"name":"IconNoteLightSolid","variant":"Solid","glyphName":"note-light","deprecated":true},"IconNoteLine":{"name":"IconNoteLine","variant":"Line","glyphName":"note","deprecated":false},"IconNoteSolid":{"name":"IconNoteSolid","variant":"Solid","glyphName":"note","deprecated":false},"IconNotepadLine":{"name":"IconNotepadLine","variant":"Line","glyphName":"notepad","deprecated":false},"IconNotepadSolid":{"name":"IconNotepadSolid","variant":"Solid","glyphName":"notepad","deprecated":false},"IconNumberedListLine":{"name":"IconNumberedListLine","variant":"Line","glyphName":"numbered-list","deprecated":false},"IconNumberedListSolid":{"name":"IconNumberedListSolid","variant":"Solid","glyphName":"numbered-list","deprecated":false},"IconOffLine":{"name":"IconOffLine","variant":"Line","glyphName":"off","deprecated":false},"IconOffSolid":{"name":"IconOffSolid","variant":"Solid","glyphName":"off","deprecated":false},"IconOpenFolderLine":{"name":"IconOpenFolderLine","variant":"Line","glyphName":"open-folder","deprecated":false},"IconOpenFolderSolid":{"name":"IconOpenFolderSolid","variant":"Solid","glyphName":"open-folder","deprecated":false},"IconOutcomesLine":{"name":"IconOutcomesLine","variant":"Line","glyphName":"outcomes","deprecated":false},"IconOutcomesSolid":{"name":"IconOutcomesSolid","variant":"Solid","glyphName":"outcomes","deprecated":false},"IconOutdentLine":{"name":"IconOutdentLine","variant":"Line","glyphName":"outdent","deprecated":false},"IconOutdentSolid":{"name":"IconOutdentSolid","variant":"Solid","glyphName":"outdent","deprecated":false},"IconOutdent2Line":{"name":"IconOutdent2Line","variant":"Line","glyphName":"outdent2","deprecated":false},"IconOutdent2Solid":{"name":"IconOutdent2Solid","variant":"Solid","glyphName":"outdent2","deprecated":false},"IconOvalHalfLine":{"name":"IconOvalHalfLine","variant":"Line","glyphName":"oval-half","deprecated":false},"IconOvalHalfSolid":{"name":"IconOvalHalfSolid","variant":"Solid","glyphName":"oval-half","deprecated":false},"IconPageDownLine":{"name":"IconPageDownLine","variant":"Line","glyphName":"page-down","deprecated":false},"IconPageDownSolid":{"name":"IconPageDownSolid","variant":"Solid","glyphName":"page-down","deprecated":false},"IconPageUpLine":{"name":"IconPageUpLine","variant":"Line","glyphName":"page-up","deprecated":false},"IconPageUpSolid":{"name":"IconPageUpSolid","variant":"Solid","glyphName":"page-up","deprecated":false},"IconPaintLine":{"name":"IconPaintLine","variant":"Line","glyphName":"paint","deprecated":false},"IconPaintSolid":{"name":"IconPaintSolid","variant":"Solid","glyphName":"paint","deprecated":false},"IconPaperclipLine":{"name":"IconPaperclipLine","variant":"Line","glyphName":"paperclip","deprecated":false},"IconPaperclipSolid":{"name":"IconPaperclipSolid","variant":"Solid","glyphName":"paperclip","deprecated":false},"IconPartialLine":{"name":"IconPartialLine","variant":"Line","glyphName":"partial","deprecated":false},"IconPartialSolid":{"name":"IconPartialSolid","variant":"Solid","glyphName":"partial","deprecated":false},"IconPauseLine":{"name":"IconPauseLine","variant":"Line","glyphName":"pause","deprecated":false},"IconPauseSolid":{"name":"IconPauseSolid","variant":"Solid","glyphName":"pause","deprecated":false},"IconPdfLine":{"name":"IconPdfLine","variant":"Line","glyphName":"pdf","deprecated":false},"IconPdfSolid":{"name":"IconPdfSolid","variant":"Solid","glyphName":"pdf","deprecated":false},"IconPeerGradedLine":{"name":"IconPeerGradedLine","variant":"Line","glyphName":"peer-graded","deprecated":false},"IconPeerGradedSolid":{"name":"IconPeerGradedSolid","variant":"Solid","glyphName":"peer-graded","deprecated":false},"IconPeerReviewLine":{"name":"IconPeerReviewLine","variant":"Line","glyphName":"peer-review","deprecated":false},"IconPeerReviewSolid":{"name":"IconPeerReviewSolid","variant":"Solid","glyphName":"peer-review","deprecated":false},"IconPermissionsLine":{"name":"IconPermissionsLine","variant":"Line","glyphName":"permissions","deprecated":false},"IconPermissionsSolid":{"name":"IconPermissionsSolid","variant":"Solid","glyphName":"permissions","deprecated":false},"IconPinLine":{"name":"IconPinLine","variant":"Line","glyphName":"pin","deprecated":false},"IconPinSolid":{"name":"IconPinSolid","variant":"Solid","glyphName":"pin","deprecated":false},"IconPinterestLine":{"name":"IconPinterestLine","variant":"Line","glyphName":"pinterest","deprecated":false},"IconPinterestSolid":{"name":"IconPinterestSolid","variant":"Solid","glyphName":"pinterest","deprecated":false},"IconPlayLine":{"name":"IconPlayLine","variant":"Line","glyphName":"play","deprecated":false},"IconPlaySolid":{"name":"IconPlaySolid","variant":"Solid","glyphName":"play","deprecated":false},"IconPlusLine":{"name":"IconPlusLine","variant":"Line","glyphName":"plus","deprecated":false},"IconPlusSolid":{"name":"IconPlusSolid","variant":"Solid","glyphName":"plus","deprecated":false},"IconPostToSisLine":{"name":"IconPostToSisLine","variant":"Line","glyphName":"post-to-sis","deprecated":false},"IconPostToSisSolid":{"name":"IconPostToSisSolid","variant":"Solid","glyphName":"post-to-sis","deprecated":false},"IconPrerequisiteLine":{"name":"IconPrerequisiteLine","variant":"Line","glyphName":"prerequisite","deprecated":false},"IconPrerequisiteSolid":{"name":"IconPrerequisiteSolid","variant":"Solid","glyphName":"prerequisite","deprecated":false},"IconPrinterLine":{"name":"IconPrinterLine","variant":"Line","glyphName":"printer","deprecated":false},"IconPrinterSolid":{"name":"IconPrinterSolid","variant":"Solid","glyphName":"printer","deprecated":false},"IconProgressLine":{"name":"IconProgressLine","variant":"Line","glyphName":"progress","deprecated":false},"IconProgressSolid":{"name":"IconProgressSolid","variant":"Solid","glyphName":"progress","deprecated":false},"IconProtractorLine":{"name":"IconProtractorLine","variant":"Line","glyphName":"protractor","deprecated":false},"IconProtractorSolid":{"name":"IconProtractorSolid","variant":"Solid","glyphName":"protractor","deprecated":false},"IconPublishLine":{"name":"IconPublishLine","variant":"Line","glyphName":"publish","deprecated":false},"IconPublishSolid":{"name":"IconPublishSolid","variant":"Solid","glyphName":"publish","deprecated":false},"IconQuestionLine":{"name":"IconQuestionLine","variant":"Line","glyphName":"question","deprecated":false},"IconQuestionSolid":{"name":"IconQuestionSolid","variant":"Solid","glyphName":"question","deprecated":false},"IconQuizInstructionsLine":{"name":"IconQuizInstructionsLine","variant":"Line","glyphName":"quiz-instructions","deprecated":false},"IconQuizInstructionsSolid":{"name":"IconQuizInstructionsSolid","variant":"Solid","glyphName":"quiz-instructions","deprecated":false},"IconQuizStatsAvgLine":{"name":"IconQuizStatsAvgLine","variant":"Line","glyphName":"quiz-stats-avg","deprecated":false},"IconQuizStatsAvgSolid":{"name":"IconQuizStatsAvgSolid","variant":"Solid","glyphName":"quiz-stats-avg","deprecated":false},"IconQuizStatsCronbachsAlphaLine":{"name":"IconQuizStatsCronbachsAlphaLine","variant":"Line","glyphName":"quiz-stats-cronbachs-alpha","deprecated":false},"IconQuizStatsCronbachsAlphaSolid":{"name":"IconQuizStatsCronbachsAlphaSolid","variant":"Solid","glyphName":"quiz-stats-cronbachs-alpha","deprecated":false},"IconQuizStatsDeviationLine":{"name":"IconQuizStatsDeviationLine","variant":"Line","glyphName":"quiz-stats-deviation","deprecated":false},"IconQuizStatsDeviationSolid":{"name":"IconQuizStatsDeviationSolid","variant":"Solid","glyphName":"quiz-stats-deviation","deprecated":false},"IconQuizStatsHighLine":{"name":"IconQuizStatsHighLine","variant":"Line","glyphName":"quiz-stats-high","deprecated":false},"IconQuizStatsHighSolid":{"name":"IconQuizStatsHighSolid","variant":"Solid","glyphName":"quiz-stats-high","deprecated":false},"IconQuizStatsLowLine":{"name":"IconQuizStatsLowLine","variant":"Line","glyphName":"quiz-stats-low","deprecated":false},"IconQuizStatsLowSolid":{"name":"IconQuizStatsLowSolid","variant":"Solid","glyphName":"quiz-stats-low","deprecated":false},"IconQuizStatsTimeLine":{"name":"IconQuizStatsTimeLine","variant":"Line","glyphName":"quiz-stats-time","deprecated":false},"IconQuizStatsTimeSolid":{"name":"IconQuizStatsTimeSolid","variant":"Solid","glyphName":"quiz-stats-time","deprecated":false},"IconQuizTitleLine":{"name":"IconQuizTitleLine","variant":"Line","glyphName":"quiz-title","deprecated":false},"IconQuizTitleSolid":{"name":"IconQuizTitleSolid","variant":"Solid","glyphName":"quiz-title","deprecated":false},"IconQuizLine":{"name":"IconQuizLine","variant":"Line","glyphName":"quiz","deprecated":false},"IconQuizSolid":{"name":"IconQuizSolid","variant":"Solid","glyphName":"quiz","deprecated":false},"IconRecordLine":{"name":"IconRecordLine","variant":"Line","glyphName":"record","deprecated":false},"IconRecordSolid":{"name":"IconRecordSolid","variant":"Solid","glyphName":"record","deprecated":false},"IconRefreshLine":{"name":"IconRefreshLine","variant":"Line","glyphName":"refresh","deprecated":false},"IconRefreshSolid":{"name":"IconRefreshSolid","variant":"Solid","glyphName":"refresh","deprecated":false},"IconRemoveBookmarkLine":{"name":"IconRemoveBookmarkLine","variant":"Line","glyphName":"remove-bookmark","deprecated":false},"IconRemoveBookmarkSolid":{"name":"IconRemoveBookmarkSolid","variant":"Solid","glyphName":"remove-bookmark","deprecated":false},"IconRemoveFromCollectionLine":{"name":"IconRemoveFromCollectionLine","variant":"Line","glyphName":"remove-from-collection","deprecated":false},"IconRemoveFromCollectionSolid":{"name":"IconRemoveFromCollectionSolid","variant":"Solid","glyphName":"remove-from-collection","deprecated":false},"IconRemoveLinkLine":{"name":"IconRemoveLinkLine","variant":"Line","glyphName":"remove-link","deprecated":false},"IconRemoveLinkSolid":{"name":"IconRemoveLinkSolid","variant":"Solid","glyphName":"remove-link","deprecated":false},"IconRepliedLine":{"name":"IconRepliedLine","variant":"Line","glyphName":"replied","deprecated":false},"IconRepliedSolid":{"name":"IconRepliedSolid","variant":"Solid","glyphName":"replied","deprecated":false},"IconReply2Line":{"name":"IconReply2Line","variant":"Line","glyphName":"reply-2","deprecated":false},"IconReply2Solid":{"name":"IconReply2Solid","variant":"Solid","glyphName":"reply-2","deprecated":false},"IconReplyAll2Line":{"name":"IconReplyAll2Line","variant":"Line","glyphName":"reply-all-2","deprecated":false},"IconReplyAll2Solid":{"name":"IconReplyAll2Solid","variant":"Solid","glyphName":"reply-all-2","deprecated":false},"IconReplyLine":{"name":"IconReplyLine","variant":"Line","glyphName":"reply","deprecated":false},"IconReplySolid":{"name":"IconReplySolid","variant":"Solid","glyphName":"reply","deprecated":false},"IconResetLine":{"name":"IconResetLine","variant":"Line","glyphName":"reset","deprecated":false},"IconResetSolid":{"name":"IconResetSolid","variant":"Solid","glyphName":"reset","deprecated":false},"IconReviewScreenLine":{"name":"IconReviewScreenLine","variant":"Line","glyphName":"review-screen","deprecated":false},"IconReviewScreenSolid":{"name":"IconReviewScreenSolid","variant":"Solid","glyphName":"review-screen","deprecated":false},"IconRewindLine":{"name":"IconRewindLine","variant":"Line","glyphName":"rewind","deprecated":false},"IconRewindSolid":{"name":"IconRewindSolid","variant":"Solid","glyphName":"rewind","deprecated":false},"IconRssAddLine":{"name":"IconRssAddLine","variant":"Line","glyphName":"rss-add","deprecated":true},"IconRssAddSolid":{"name":"IconRssAddSolid","variant":"Solid","glyphName":"rss-add","deprecated":true},"IconRssLine":{"name":"IconRssLine","variant":"Line","glyphName":"rss","deprecated":false},"IconRssSolid":{"name":"IconRssSolid","variant":"Solid","glyphName":"rss","deprecated":false},"IconRubricDarkLine":{"name":"IconRubricDarkLine","variant":"Line","glyphName":"rubric-dark","deprecated":false},"IconRubricDarkSolid":{"name":"IconRubricDarkSolid","variant":"Solid","glyphName":"rubric-dark","deprecated":false},"IconRubricLine":{"name":"IconRubricLine","variant":"Line","glyphName":"rubric","deprecated":false},"IconRubricSolid":{"name":"IconRubricSolid","variant":"Solid","glyphName":"rubric","deprecated":false},"IconRulerLine":{"name":"IconRulerLine","variant":"Line","glyphName":"ruler","deprecated":false},"IconRulerSolid":{"name":"IconRulerSolid","variant":"Solid","glyphName":"ruler","deprecated":false},"IconSaveLine":{"name":"IconSaveLine","variant":"Line","glyphName":"save","deprecated":false},"IconSaveSolid":{"name":"IconSaveSolid","variant":"Solid","glyphName":"save","deprecated":false},"IconScreenCaptureLine":{"name":"IconScreenCaptureLine","variant":"Line","glyphName":"screen-capture","deprecated":false},"IconScreenCaptureSolid":{"name":"IconScreenCaptureSolid","variant":"Solid","glyphName":"screen-capture","deprecated":false},"IconSearchAddressBookLine":{"name":"IconSearchAddressBookLine","variant":"Line","glyphName":"search-address-book","deprecated":true},"IconSearchAddressBookSolid":{"name":"IconSearchAddressBookSolid","variant":"Solid","glyphName":"search-address-book","deprecated":true},"IconSearchLine":{"name":"IconSearchLine","variant":"Line","glyphName":"search","deprecated":false},"IconSearchSolid":{"name":"IconSearchSolid","variant":"Solid","glyphName":"search","deprecated":false},"IconSettings2Line":{"name":"IconSettings2Line","variant":"Line","glyphName":"settings-2","deprecated":true},"IconSettings2Solid":{"name":"IconSettings2Solid","variant":"Solid","glyphName":"settings-2","deprecated":true},"IconSettingsLine":{"name":"IconSettingsLine","variant":"Line","glyphName":"settings","deprecated":false},"IconSettingsSolid":{"name":"IconSettingsSolid","variant":"Solid","glyphName":"settings","deprecated":false},"IconShapeOvalLine":{"name":"IconShapeOvalLine","variant":"Line","glyphName":"shape-oval","deprecated":false},"IconShapeOvalSolid":{"name":"IconShapeOvalSolid","variant":"Solid","glyphName":"shape-oval","deprecated":false},"IconShapePolygonLine":{"name":"IconShapePolygonLine","variant":"Line","glyphName":"shape-polygon","deprecated":false},"IconShapePolygonSolid":{"name":"IconShapePolygonSolid","variant":"Solid","glyphName":"shape-polygon","deprecated":false},"IconShapeRectangleLine":{"name":"IconShapeRectangleLine","variant":"Line","glyphName":"shape-rectangle","deprecated":false},"IconShapeRectangleSolid":{"name":"IconShapeRectangleSolid","variant":"Solid","glyphName":"shape-rectangle","deprecated":false},"IconShareLine":{"name":"IconShareLine","variant":"Line","glyphName":"share","deprecated":false},"IconShareSolid":{"name":"IconShareSolid","variant":"Solid","glyphName":"share","deprecated":false},"IconSisImportedLine":{"name":"IconSisImportedLine","variant":"Line","glyphName":"sis-imported","deprecated":false},"IconSisImportedSolid":{"name":"IconSisImportedSolid","variant":"Solid","glyphName":"sis-imported","deprecated":false},"IconSisNotSyncedLine":{"name":"IconSisNotSyncedLine","variant":"Line","glyphName":"sis-not-synced","deprecated":false},"IconSisNotSyncedSolid":{"name":"IconSisNotSyncedSolid","variant":"Solid","glyphName":"sis-not-synced","deprecated":false},"IconSisSyncedLine":{"name":"IconSisSyncedLine","variant":"Line","glyphName":"sis-synced","deprecated":false},"IconSisSyncedSolid":{"name":"IconSisSyncedSolid","variant":"Solid","glyphName":"sis-synced","deprecated":false},"IconSkypeLine":{"name":"IconSkypeLine","variant":"Line","glyphName":"skype","deprecated":false},"IconSkypeSolid":{"name":"IconSkypeSolid","variant":"Solid","glyphName":"skype","deprecated":false},"IconSortLine":{"name":"IconSortLine","variant":"Line","glyphName":"sort","deprecated":false},"IconSortSolid":{"name":"IconSortSolid","variant":"Solid","glyphName":"sort","deprecated":false},"IconSpeedGraderLine":{"name":"IconSpeedGraderLine","variant":"Line","glyphName":"speed-grader","deprecated":false},"IconSpeedGraderSolid":{"name":"IconSpeedGraderSolid","variant":"Solid","glyphName":"speed-grader","deprecated":false},"IconStandardsLine":{"name":"IconStandardsLine","variant":"Line","glyphName":"standards","deprecated":false},"IconStandardsSolid":{"name":"IconStandardsSolid","variant":"Solid","glyphName":"standards","deprecated":false},"IconStarLightLine":{"name":"IconStarLightLine","variant":"Line","glyphName":"star-light","deprecated":false},"IconStarLightSolid":{"name":"IconStarLightSolid","variant":"Solid","glyphName":"star-light","deprecated":false},"IconStarLine":{"name":"IconStarLine","variant":"Line","glyphName":"star","deprecated":false},"IconStarSolid":{"name":"IconStarSolid","variant":"Solid","glyphName":"star","deprecated":false},"IconStatsLine":{"name":"IconStatsLine","variant":"Line","glyphName":"stats","deprecated":false},"IconStatsSolid":{"name":"IconStatsSolid","variant":"Solid","glyphName":"stats","deprecated":false},"IconStopLine":{"name":"IconStopLine","variant":"Line","glyphName":"stop","deprecated":false},"IconStopSolid":{"name":"IconStopSolid","variant":"Solid","glyphName":"stop","deprecated":false},"IconStrikethroughLine":{"name":"IconStrikethroughLine","variant":"Line","glyphName":"strikethrough","deprecated":false},"IconStrikethroughSolid":{"name":"IconStrikethroughSolid","variant":"Solid","glyphName":"strikethrough","deprecated":false},"IconStudentViewLine":{"name":"IconStudentViewLine","variant":"Line","glyphName":"student-view","deprecated":false},"IconStudentViewSolid":{"name":"IconStudentViewSolid","variant":"Solid","glyphName":"student-view","deprecated":false},"IconStudioLine":{"name":"IconStudioLine","variant":"Line","glyphName":"studio","deprecated":false},"IconStudioSolid":{"name":"IconStudioSolid","variant":"Solid","glyphName":"studio","deprecated":false},"IconSubaccountsLine":{"name":"IconSubaccountsLine","variant":"Line","glyphName":"subaccounts","deprecated":false},"IconSubaccountsSolid":{"name":"IconSubaccountsSolid","variant":"Solid","glyphName":"subaccounts","deprecated":false},"IconSyllabusLine":{"name":"IconSyllabusLine","variant":"Line","glyphName":"syllabus","deprecated":false},"IconSyllabusSolid":{"name":"IconSyllabusSolid","variant":"Solid","glyphName":"syllabus","deprecated":false},"IconTableCellSelectAllLine":{"name":"IconTableCellSelectAllLine","variant":"Line","glyphName":"table-cell-select-all","deprecated":false},"IconTableCellSelectAllSolid":{"name":"IconTableCellSelectAllSolid","variant":"Solid","glyphName":"table-cell-select-all","deprecated":false},"IconTableDeleteColumnLine":{"name":"IconTableDeleteColumnLine","variant":"Line","glyphName":"table-delete-column","deprecated":false},"IconTableDeleteColumnSolid":{"name":"IconTableDeleteColumnSolid","variant":"Solid","glyphName":"table-delete-column","deprecated":false},"IconTableDeleteRowLine":{"name":"IconTableDeleteRowLine","variant":"Line","glyphName":"table-delete-row","deprecated":false},"IconTableDeleteRowSolid":{"name":"IconTableDeleteRowSolid","variant":"Solid","glyphName":"table-delete-row","deprecated":false},"IconTableDeleteTableLine":{"name":"IconTableDeleteTableLine","variant":"Line","glyphName":"table-delete-table","deprecated":false},"IconTableDeleteTableSolid":{"name":"IconTableDeleteTableSolid","variant":"Solid","glyphName":"table-delete-table","deprecated":false},"IconTableInsertColumnAfterLine":{"name":"IconTableInsertColumnAfterLine","variant":"Line","glyphName":"table-insert-column-after","deprecated":false},"IconTableInsertColumnAfterSolid":{"name":"IconTableInsertColumnAfterSolid","variant":"Solid","glyphName":"table-insert-column-after","deprecated":false},"IconTableInsertColumnBeforeLine":{"name":"IconTableInsertColumnBeforeLine","variant":"Line","glyphName":"table-insert-column-before","deprecated":false},"IconTableInsertColumnBeforeSolid":{"name":"IconTableInsertColumnBeforeSolid","variant":"Solid","glyphName":"table-insert-column-before","deprecated":false},"IconTableInsertRowAboveLine":{"name":"IconTableInsertRowAboveLine","variant":"Line","glyphName":"table-insert-row-above","deprecated":false},"IconTableInsertRowAboveSolid":{"name":"IconTableInsertRowAboveSolid","variant":"Solid","glyphName":"table-insert-row-above","deprecated":false},"IconTableInsertRowAfterLine":{"name":"IconTableInsertRowAfterLine","variant":"Line","glyphName":"table-insert-row-after","deprecated":false},"IconTableInsertRowAfterSolid":{"name":"IconTableInsertRowAfterSolid","variant":"Solid","glyphName":"table-insert-row-after","deprecated":false},"IconTableLeftHeaderLine":{"name":"IconTableLeftHeaderLine","variant":"Line","glyphName":"table-left-header","deprecated":false},"IconTableLeftHeaderSolid":{"name":"IconTableLeftHeaderSolid","variant":"Solid","glyphName":"table-left-header","deprecated":false},"IconTableMergeCellsLine":{"name":"IconTableMergeCellsLine","variant":"Line","glyphName":"table-merge-cells","deprecated":false},"IconTableMergeCellsSolid":{"name":"IconTableMergeCellsSolid","variant":"Solid","glyphName":"table-merge-cells","deprecated":false},"IconTableRowPropertiesLine":{"name":"IconTableRowPropertiesLine","variant":"Line","glyphName":"table-row-properties","deprecated":false},"IconTableRowPropertiesSolid":{"name":"IconTableRowPropertiesSolid","variant":"Solid","glyphName":"table-row-properties","deprecated":false},"IconTableSplitCellsLine":{"name":"IconTableSplitCellsLine","variant":"Line","glyphName":"table-split-cells","deprecated":false},"IconTableSplitCellsSolid":{"name":"IconTableSplitCellsSolid","variant":"Solid","glyphName":"table-split-cells","deprecated":false},"IconTableTopHeaderLine":{"name":"IconTableTopHeaderLine","variant":"Line","glyphName":"table-top-header","deprecated":false},"IconTableTopHeaderSolid":{"name":"IconTableTopHeaderSolid","variant":"Solid","glyphName":"table-top-header","deprecated":false},"IconTableLine":{"name":"IconTableLine","variant":"Line","glyphName":"table","deprecated":false},"IconTableSolid":{"name":"IconTableSolid","variant":"Solid","glyphName":"table","deprecated":false},"IconTagLine":{"name":"IconTagLine","variant":"Line","glyphName":"tag","deprecated":false},"IconTagSolid":{"name":"IconTagSolid","variant":"Solid","glyphName":"tag","deprecated":false},"IconTargetLine":{"name":"IconTargetLine","variant":"Line","glyphName":"target","deprecated":false},"IconTargetSolid":{"name":"IconTargetSolid","variant":"Solid","glyphName":"target","deprecated":false},"IconTextBackgroundColorLine":{"name":"IconTextBackgroundColorLine","variant":"Line","glyphName":"text-background-color","deprecated":false},"IconTextBackgroundColorSolid":{"name":"IconTextBackgroundColorSolid","variant":"Solid","glyphName":"text-background-color","deprecated":false},"IconTextCenteredLine":{"name":"IconTextCenteredLine","variant":"Line","glyphName":"text-centered","deprecated":false},"IconTextCenteredSolid":{"name":"IconTextCenteredSolid","variant":"Solid","glyphName":"text-centered","deprecated":false},"IconTextColorLine":{"name":"IconTextColorLine","variant":"Line","glyphName":"text-color","deprecated":false},"IconTextColorSolid":{"name":"IconTextColorSolid","variant":"Solid","glyphName":"text-color","deprecated":false},"IconTextDirectionLtrLine":{"name":"IconTextDirectionLtrLine","variant":"Line","glyphName":"text-direction-ltr","deprecated":false},"IconTextDirectionLtrSolid":{"name":"IconTextDirectionLtrSolid","variant":"Solid","glyphName":"text-direction-ltr","deprecated":false},"IconTextDirectionRtlLine":{"name":"IconTextDirectionRtlLine","variant":"Line","glyphName":"text-direction-rtl","deprecated":false},"IconTextDirectionRtlSolid":{"name":"IconTextDirectionRtlSolid","variant":"Solid","glyphName":"text-direction-rtl","deprecated":false},"IconTextEndLine":{"name":"IconTextEndLine","variant":"Line","glyphName":"text-end","deprecated":false},"IconTextEndSolid":{"name":"IconTextEndSolid","variant":"Solid","glyphName":"text-end","deprecated":false},"IconTextLeftLine":{"name":"IconTextLeftLine","variant":"Line","glyphName":"text-left","deprecated":true},"IconTextLeftSolid":{"name":"IconTextLeftSolid","variant":"Solid","glyphName":"text-left","deprecated":true},"IconTextRightLine":{"name":"IconTextRightLine","variant":"Line","glyphName":"text-right","deprecated":true},"IconTextRightSolid":{"name":"IconTextRightSolid","variant":"Solid","glyphName":"text-right","deprecated":true},"IconTextStartLine":{"name":"IconTextStartLine","variant":"Line","glyphName":"text-start","deprecated":false},"IconTextStartSolid":{"name":"IconTextStartSolid","variant":"Solid","glyphName":"text-start","deprecated":false},"IconTextSubscriptLine":{"name":"IconTextSubscriptLine","variant":"Line","glyphName":"text-subscript","deprecated":false},"IconTextSubscriptSolid":{"name":"IconTextSubscriptSolid","variant":"Solid","glyphName":"text-subscript","deprecated":false},"IconTextSuperscriptLine":{"name":"IconTextSuperscriptLine","variant":"Line","glyphName":"text-superscript","deprecated":false},"IconTextSuperscriptSolid":{"name":"IconTextSuperscriptSolid","variant":"Solid","glyphName":"text-superscript","deprecated":false},"IconTextLine":{"name":"IconTextLine","variant":"Line","glyphName":"text","deprecated":false},"IconTextSolid":{"name":"IconTextSolid","variant":"Solid","glyphName":"text","deprecated":false},"IconTextareaLine":{"name":"IconTextareaLine","variant":"Line","glyphName":"textarea","deprecated":false},"IconTextareaSolid":{"name":"IconTextareaSolid","variant":"Solid","glyphName":"textarea","deprecated":false},"IconTimerLine":{"name":"IconTimerLine","variant":"Line","glyphName":"timer","deprecated":false},"IconTimerSolid":{"name":"IconTimerSolid","variant":"Solid","glyphName":"timer","deprecated":false},"IconToggleEndLine":{"name":"IconToggleEndLine","variant":"Line","glyphName":"toggle-end","deprecated":false},"IconToggleEndSolid":{"name":"IconToggleEndSolid","variant":"Solid","glyphName":"toggle-end","deprecated":false},"IconToggleLeftLine":{"name":"IconToggleLeftLine","variant":"Line","glyphName":"toggle-left","deprecated":true},"IconToggleLeftSolid":{"name":"IconToggleLeftSolid","variant":"Solid","glyphName":"toggle-left","deprecated":true},"IconToggleRightLine":{"name":"IconToggleRightLine","variant":"Line","glyphName":"toggle-right","deprecated":true},"IconToggleRightSolid":{"name":"IconToggleRightSolid","variant":"Solid","glyphName":"toggle-right","deprecated":true},"IconToggleStartLine":{"name":"IconToggleStartLine","variant":"Line","glyphName":"toggle-start","deprecated":false},"IconToggleStartSolid":{"name":"IconToggleStartSolid","variant":"Solid","glyphName":"toggle-start","deprecated":false},"IconTrashLine":{"name":"IconTrashLine","variant":"Line","glyphName":"trash","deprecated":false},"IconTrashSolid":{"name":"IconTrashSolid","variant":"Solid","glyphName":"trash","deprecated":false},"IconTroubleLine":{"name":"IconTroubleLine","variant":"Line","glyphName":"trouble","deprecated":false},"IconTroubleSolid":{"name":"IconTroubleSolid","variant":"Solid","glyphName":"trouble","deprecated":false},"IconTwitterBoxedLine":{"name":"IconTwitterBoxedLine","variant":"Line","glyphName":"twitter-boxed","deprecated":true},"IconTwitterBoxedSolid":{"name":"IconTwitterBoxedSolid","variant":"Solid","glyphName":"twitter-boxed","deprecated":true},"IconTwitterLine":{"name":"IconTwitterLine","variant":"Line","glyphName":"twitter","deprecated":false},"IconTwitterSolid":{"name":"IconTwitterSolid","variant":"Solid","glyphName":"twitter","deprecated":false},"IconUnarchiveLine":{"name":"IconUnarchiveLine","variant":"Line","glyphName":"unarchive","deprecated":false},"IconUnarchiveSolid":{"name":"IconUnarchiveSolid","variant":"Solid","glyphName":"unarchive","deprecated":false},"IconUnderlineLine":{"name":"IconUnderlineLine","variant":"Line","glyphName":"underline","deprecated":false},"IconUnderlineSolid":{"name":"IconUnderlineSolid","variant":"Solid","glyphName":"underline","deprecated":false},"IconUnlockLine":{"name":"IconUnlockLine","variant":"Line","glyphName":"unlock","deprecated":false},"IconUnlockSolid":{"name":"IconUnlockSolid","variant":"Solid","glyphName":"unlock","deprecated":false},"IconUnmutedLine":{"name":"IconUnmutedLine","variant":"Line","glyphName":"unmuted","deprecated":false},"IconUnmutedSolid":{"name":"IconUnmutedSolid","variant":"Solid","glyphName":"unmuted","deprecated":false},"IconUnpublishLine":{"name":"IconUnpublishLine","variant":"Line","glyphName":"unpublish","deprecated":true},"IconUnpublishSolid":{"name":"IconUnpublishSolid","variant":"Solid","glyphName":"unpublish","deprecated":true},"IconUnpublishedLine":{"name":"IconUnpublishedLine","variant":"Line","glyphName":"unpublished","deprecated":false},"IconUnpublishedSolid":{"name":"IconUnpublishedSolid","variant":"Solid","glyphName":"unpublished","deprecated":false},"IconUpdownLine":{"name":"IconUpdownLine","variant":"Line","glyphName":"updown","deprecated":false},"IconUpdownSolid":{"name":"IconUpdownSolid","variant":"Solid","glyphName":"updown","deprecated":false},"IconUploadLine":{"name":"IconUploadLine","variant":"Line","glyphName":"upload","deprecated":false},"IconUploadSolid":{"name":"IconUploadSolid","variant":"Solid","glyphName":"upload","deprecated":false},"IconUserAddLine":{"name":"IconUserAddLine","variant":"Line","glyphName":"user-add","deprecated":true},"IconUserAddSolid":{"name":"IconUserAddSolid","variant":"Solid","glyphName":"user-add","deprecated":true},"IconUserLine":{"name":"IconUserLine","variant":"Line","glyphName":"user","deprecated":false},"IconUserSolid":{"name":"IconUserSolid","variant":"Solid","glyphName":"user","deprecated":false},"IconVideoCameraOffLine":{"name":"IconVideoCameraOffLine","variant":"Line","glyphName":"video-camera-off","deprecated":false},"IconVideoCameraOffSolid":{"name":"IconVideoCameraOffSolid","variant":"Solid","glyphName":"video-camera-off","deprecated":false},"IconVideoCameraLine":{"name":"IconVideoCameraLine","variant":"Line","glyphName":"video-camera","deprecated":false},"IconVideoCameraSolid":{"name":"IconVideoCameraSolid","variant":"Solid","glyphName":"video-camera","deprecated":false},"IconVideoLine":{"name":"IconVideoLine","variant":"Line","glyphName":"video","deprecated":false},"IconVideoSolid":{"name":"IconVideoSolid","variant":"Solid","glyphName":"video","deprecated":false},"IconWarningBorderlessLine":{"name":"IconWarningBorderlessLine","variant":"Line","glyphName":"warning-borderless","deprecated":false},"IconWarningBorderlessSolid":{"name":"IconWarningBorderlessSolid","variant":"Solid","glyphName":"warning-borderless","deprecated":false},"IconWarningLine":{"name":"IconWarningLine","variant":"Line","glyphName":"warning","deprecated":false},"IconWarningSolid":{"name":"IconWarningSolid","variant":"Solid","glyphName":"warning","deprecated":false},"IconWindowsLine":{"name":"IconWindowsLine","variant":"Line","glyphName":"windows","deprecated":false},"IconWindowsSolid":{"name":"IconWindowsSolid","variant":"Solid","glyphName":"windows","deprecated":false},"IconWordpressLine":{"name":"IconWordpressLine","variant":"Line","glyphName":"wordpress","deprecated":false},"IconWordpressSolid":{"name":"IconWordpressSolid","variant":"Solid","glyphName":"wordpress","deprecated":false},"IconXLine":{"name":"IconXLine","variant":"Line","glyphName":"x","deprecated":false},"IconXSolid":{"name":"IconXSolid","variant":"Solid","glyphName":"x","deprecated":false},"IconZippedLine":{"name":"IconZippedLine","variant":"Line","glyphName":"zipped","deprecated":false},"IconZippedSolid":{"name":"IconZippedSolid","variant":"Solid","glyphName":"zipped","deprecated":false},"IconZoomInLine":{"name":"IconZoomInLine","variant":"Line","glyphName":"zoom-in","deprecated":false},"IconZoomInSolid":{"name":"IconZoomInSolid","variant":"Solid","glyphName":"zoom-in","deprecated":false},"IconZoomOutLine":{"name":"IconZoomOutLine","variant":"Line","glyphName":"zoom-out","deprecated":false},"IconZoomOutSolid":{"name":"IconZoomOutSolid","variant":"Solid","glyphName":"zoom-out","deprecated":false}},"packageName":"@instructure/ui-icons","requirePath":"@instructure/ui-icons/es"},"icons-svg":{"format":"SVG","glyphs":{"IconA11yLine":{"variant":"Line","glyphName":"a11y","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,2 C1489.35529,2 1920,432.644706 1920,962 C1920,1491.35529 1489.35529,1922 960,1922 C430.644706,1922 0,1491.35529 0,962 C0,432.644706 430.644706,2 960,2 Z M960,114.941176 C492.875294,114.941176 112.941176,494.875294 112.941176,962 C112.941176,1429.12471 492.875294,1809.05882 960,1809.05882 C1427.12471,1809.05882 1807.05882,1429.12471 1807.05882,962 C1807.05882,494.875294 1427.12471,114.941176 960,114.941176 Z M1396.704,635.232 L1121.504,635.232 L757.450667,635.232 L482.144,635.232 C451.104,635.232 426.677333,659.658667 426.677333,690.698667 C426.677333,721.845333 451.104,746.272 482.144,746.272 L757.450667,746.272 L757.450667,1125.792 L757.450667,1259.01867 L757.450667,1634.05867 C757.450667,1665.20533 781.770667,1689.632 812.917333,1689.632 C843.957333,1689.632 868.384,1665.20533 868.384,1634.05867 L868.384,1259.01867 L1014.83733,1259.01867 L1014.83733,1634.05867 C1014.83733,1665.20533 1039.264,1689.632 1070.304,1689.632 C1101.45067,1689.632 1125.87733,1665.20533 1125.87733,1634.05867 L1125.87733,1259.01867 L1125.87733,1125.792 L1125.87733,744.032 L1401.184,744.032 C1432.224,744.032 1456.65067,719.605333 1456.65067,688.565333 C1449.93067,659.658667 1425.61067,635.232 1396.704,635.232 M939.413333,320.021333 C1013.01333,320.021333 1072.64,379.648 1072.64,453.248 C1072.64,526.741333 1013.01333,586.368 939.413333,586.368 C865.92,586.368 806.186667,526.741333 806.186667,453.248 C806.186667,379.648 865.92,320.021333 939.413333,320.021333\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconA11ySolid":{"variant":"Solid","glyphName":"a11y","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,2 C1489.35529,2 1920,432.644706 1920,962 C1920,1491.35529 1489.35529,1922 960,1922 C430.644706,1922 0,1491.35529 0,962 C0,432.644706 430.644706,2 960,2 Z M1396.704,635.232 L482.144,635.232 C451.104,635.232 426.677333,659.658667 426.677333,690.698667 C426.677333,721.845333 451.104,746.272 482.144,746.272 L757.450667,746.272 L757.450667,1634.05867 C757.450667,1665.20533 781.770667,1689.632 812.917333,1689.632 C843.957333,1689.632 868.384,1665.20533 868.384,1634.05867 L868.384,1259.01867 L1014.83733,1259.01867 L1014.83733,1634.05867 C1014.83733,1665.20533 1039.264,1689.632 1070.304,1689.632 C1101.45067,1689.632 1125.87733,1665.20533 1125.87733,1634.05867 L1125.87733,744.032 L1401.184,744.032 C1432.224,744.032 1456.65067,719.605333 1456.65067,688.565333 C1449.93067,659.658667 1425.61067,635.232 1396.704,635.232 Z M939.413333,320.021333 C865.92,320.021333 806.186667,379.648 806.186667,453.248 C806.186667,526.741333 865.92,586.368 939.413333,586.368 C1013.01333,586.368 1072.64,526.741333 1072.64,453.248 C1072.64,379.648 1013.01333,320.021333 939.413333,320.021333 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAddFolderLine":{"variant":"Line","glyphName":"add-folder","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M764.385882,112.941176 L990.268235,451.764706 L1920,451.764706 L1920,1637.64706 C1920,1725.86039 1852.20148,1798.55965 1765.9842,1806.36508 L1750.58824,1807.05882 L169.411765,1807.05882 C81.1984314,1807.05882 8.49917211,1739.26031 0.693740014,1653.04302 L0,1637.64706 L0,112.941176 L764.385882,112.941176 Z M703.849412,225.882353 L112.941176,225.882353 L112.941176,1637.64706 C112.941176,1665.35529 133.019608,1688.42318 159.295086,1693.2073 L169.411765,1694.11765 L1750.58824,1694.11765 C1778.19608,1694.11765 1801.34205,1674.12845 1806.14476,1647.79348 L1807.05882,1637.64706 L1807.05882,564.705882 L225.882353,564.705882 L225.882353,451.764706 L854.4,451.764706 L703.849412,225.882353 Z M1016.47059,790.588235 L1016.47059,1072.94118 L1298.82353,1072.94118 L1298.82353,1185.88235 L1016.47059,1185.88235 L1016.47059,1468.23529 L903.529412,1468.23529 L903.529412,1185.88235 L621.176471,1185.88235 L621.176471,1072.94118 L903.529412,1072.94118 L903.529412,790.588235 L1016.47059,790.588235 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAddFolderSolid":{"variant":"Solid","glyphName":"add-folder","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M764.385882,112.941176 L990.268235,451.764706 L225.882353,451.764706 L225.882353,564.705882 L1920,564.705882 L1920,1637.64706 C1920,1731.04941 1843.99059,1807.05882 1750.58824,1807.05882 L1750.58824,1807.05882 L169.411765,1807.05882 C76.0094118,1807.05882 0,1731.04941 0,1637.64706 L0,1637.64706 L0,112.941176 L764.385882,112.941176 Z M1040,858.845726 L880,858.845726 L880,1098.84573 L640,1098.84573 L640,1258.84573 L880,1258.84573 L880,1498.84573 L1040,1498.84573 L1040,1258.84573 L1280,1258.84573 L1280,1098.84573 L1040,1098.84573 L1040,858.845726 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAddMediaLine":{"variant":"Line","glyphName":"add-media","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1493.33,320 L1493.33,0 L1600,0 L1600,320 L1920,320 L1920,426.667 L1600,426.667 L1600,746.667 L1493.33,746.667 L1493.33,426.667 L1173.33,426.667 L1173.33,320 L1493.33,320 Z M160,426.667 C130.545,426.667 106.667,450.545 106.667,480 L106.667,1760 C106.667,1789.46 130.545,1813.33 160,1813.33 L1440,1813.33 C1469.46,1813.33 1493.33,1789.46 1493.33,1760 L1493.33,960 L1600,960 L1600,1760 C1600,1848.37 1528.37,1920 1440,1920 L160,1920 C71.6345,1920 0,1848.37 0,1760 L0,480 C0,391.634 71.6344,320 160,320 L960,320 L960,426.667 L160,426.667 Z M533.333,705.803 L1223.66,1120 L533.333,1534.2 L533.333,705.803 Z M640,894.197 L640,1345.8 L1016.34,1120 L640,894.197 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAddMediaSolid":{"variant":"Solid","glyphName":"add-media","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,293.333 L960,453.333 L186.667,453.333 C171.939,453.333 160,465.272 160,480 L160,1733.33 C160,1748.06 171.939,1760 186.667,1760 L1440,1760 C1454.73,1760 1466.67,1748.06 1466.67,1733.33 L1466.67,960 L1626.67,960 L1626.67,1733.33 C1626.67,1836.43 1543.09,1920 1440,1920 L186.667,1920 C83.5735,1920 0,1836.43 0,1733.33 L0,480 C0,376.907 83.5735,293.333 186.667,293.333 L960,293.333 Z M586.667,800 L1120,1120 L586.667,1440 L586.667,800 Z M1626.67,0 L1626.67,293.333 L1920,293.333 L1920,453.333 L1626.67,453.333 L1626.67,746.667 L1466.67,746.667 L1466.67,453.333 L1173.33,453.333 L1173.33,293.333 L1466.67,293.333 L1466.67,0 L1626.67,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAddLine":{"variant":"Line","glyphName":"add","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M915.743529 213L915.743529 915.743529 213 915.743529 213 1003.58647 915.743529 1003.58647 915.743529 1706.33 1003.58647 1706.33 1003.58647 1003.58647 1706.33 1003.58647 1706.33 915.743529 1003.58647 915.743529 1003.58647 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAddSolid":{"variant":"Solid","glyphName":"add","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M866.331875 213L866.331875 866.331875 213 866.331875 213 1052.99813 866.331875 1052.99813 866.331875 1706.33 1052.99813 1706.33 1052.99813 1052.99813 1706.33 1052.99813 1706.33 866.331875 1052.99813 866.331875 1052.99813 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAddressBookLine":{"variant":"Line","glyphName":"address-book","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1688.41176,1807.05882 L332.058824,1807.05882 L332.058824,1480.78431 L388.573529,1480.78431 C419.769647,1480.78431 445.088235,1455.48549 445.088235,1424.31373 C445.088235,1393.14196 419.769647,1367.84314 388.573529,1367.84314 L332.058824,1367.84314 L332.058824,1029.01961 L388.573529,1029.01961 C419.769647,1029.01961 445.088235,1003.72078 445.088235,972.54902 C445.088235,941.377255 419.769647,916.078431 388.573529,916.078431 L332.058824,916.078431 L332.058824,577.254902 L388.573529,577.254902 C419.769647,577.254902 445.088235,551.956078 445.088235,520.784314 C445.088235,489.612549 419.769647,464.313725 388.573529,464.313725 L332.058824,464.313725 L332.058824,338.823529 L332.058824,225.882353 L332.058824,112.941176 L1688.41176,112.941176 L1688.41176,1807.05882 Z M219.029412,0 L219.029412,225.882353 L219.029412,338.823529 L219.029412,464.313725 L162.514706,464.313725 C131.318588,464.313725 106,489.612549 106,520.784314 C106,551.956078 131.318588,577.254902 162.514706,577.254902 L219.029412,577.254902 L219.029412,916.078431 L162.514706,916.078431 C131.318588,916.078431 106,941.377255 106,972.54902 C106,1003.72078 131.318588,1029.01961 162.514706,1029.01961 L219.029412,1029.01961 L219.029412,1367.84314 L162.514706,1367.84314 C131.318588,1367.84314 106,1393.14196 106,1424.31373 C106,1455.48549 131.318588,1480.78431 162.514706,1480.78431 L219.029412,1480.78431 L219.029412,1920 L1801.44118,1920 L1801.44118,0 L219.029412,0 Z M1029,499 C1141.78175,499 1255.44392,590.71825 1255.44392,703.5 L1255.44392,703.5 L1255.44392,805.75 C1255.44392,850.74 1233.02149,893.17375 1208.27699,927.0185 C1249.07474,936.63 1274.50225,948.18425 1313.56175,965.0555 C1389.1245,997.7755 1438,1071.70225 1438,1153.50225 L1438,1153.50225 L1438,1294.3005 L1413.97125,1309.33125 C1344.339,1352.7875 1206.19925,1421.19275 1027.364,1421.19275 C1009.87925,1421.19275 992.19,1420.477 973.9895,1419.14775 C857.93575,1410.252 743.82475,1372.215 643.82425,1309.12675 L643.82425,1309.12675 L620,1294.096 L620,1154.11575 C620,1072.2135 669.163241,1001.40354 742.4955,966.487 C783.134393,947.137132 801.744473,936.399827 833.903342,927.0185 C808.647592,892.96925 792.520368,851.3535 792.520368,805.75 L792.520368,805.75 L792.520368,703.5 C792.520368,590.71825 916.21825,499 1029,499 Z M1018.41926,1009.61094 C938.357505,1011.04244 859.420505,1027.70919 783.142005,1060.73594 C746.127505,1076.68694 722.303255,1113.49694 722.303255,1154.49919 L722.303255,1154.49919 L722.303255,1237.42394 C802.262755,1283.02744 891.424755,1310.63494 981.813755,1317.58794 C1137.84726,1329.34669 1263.71701,1277.60819 1335.80326,1237.21944 L1335.80326,1237.21944 L1335.80326,1153.88569 C1335.80326,1112.88344 1311.16101,1075.76669 1273.12401,1059.30444 C1210.03576,1032.10594 1143.77776,1015.64369 1076.29276,1010.53119 C1063.10251,1009.50869 1050.01451,1010.01994 1036.82426,1009.81544 C1035.49501,1009.86656 1031.78844,1009.841 1027.96685,1009.78987 L1027.04862,1009.77714 L1027.04862,1009.77714 L1026.13292,1009.76358 C1022.9405,1009.71486 1019.92233,1009.65388 1018.41926,1009.61094 Z M1029.15977,601.303255 C972.717766,601.303255 888.138287,647.213505 888.138287,703.553255 L888.138287,703.553255 L888.138287,805.803255 C888.138287,860.916005 970.979516,905.394755 1025.68327,907.337505 C1027.83052,907.337505 1029.97777,907.439755 1032.12502,907.439755 C1087.03327,905.803755 1160.21148,861.120505 1160.21148,805.803255 L1160.21148,805.803255 L1160.21148,703.553255 C1160.21148,647.213505 1085.60177,601.303255 1029.15977,601.303255 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAddressBookSolid":{"variant":"Solid","glyphName":"address-book","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1801.44118,0 L1801.44118,1920 L219.029412,1920 L219.029412,1480.78431 L162.514706,1480.78431 C131.318588,1480.78431 106,1455.48549 106,1424.31373 C106,1393.14196 131.318588,1367.84314 162.514706,1367.84314 L162.514706,1367.84314 L219.029412,1367.84314 L219.029412,1029.01961 L162.514706,1029.01961 C131.318588,1029.01961 106,1003.72078 106,972.54902 C106,941.377255 131.318588,916.078431 162.514706,916.078431 L162.514706,916.078431 L219.029412,916.078431 L219.029412,577.254902 L162.514706,577.254902 C131.318588,577.254902 106,551.956078 106,520.784314 C106,489.612549 131.318588,464.313725 162.514706,464.313725 L162.514706,464.313725 L219.029412,464.313725 L219.029412,0 L1801.44118,0 Z M1029,499 C916.21825,499 792.520368,590.71825 792.520368,703.5 L792.520368,805.75 C792.520368,851.3535 808.647592,892.96925 833.903342,927.0185 C801.744473,936.399827 783.134393,947.137132 742.4955,966.487 C669.163241,1001.40354 620,1072.2135 620,1154.11575 L620,1294.096 L643.82425,1309.12675 C743.82475,1372.215 857.93575,1410.252 973.9895,1419.14775 C992.19,1420.477 1009.87925,1421.19275 1027.364,1421.19275 C1206.19925,1421.19275 1344.339,1352.7875 1413.97125,1309.33125 L1438,1294.3005 L1438,1153.50225 C1438,1071.70225 1389.1245,997.7755 1313.56175,965.0555 C1274.50225,948.18425 1249.07474,936.63 1208.27699,927.0185 C1233.02149,893.17375 1255.44392,850.74 1255.44392,805.75 L1255.44392,703.5 C1255.44392,590.71825 1141.78175,499 1029,499 Z M722.303255,1154.49919 C722.303255,1113.49694 746.127505,1076.68694 783.142005,1060.73594 C859.420505,1027.70919 938.357505,1011.04244 1018.41926,1009.61094 C1021.99801,1009.71319 1034.16576,1009.91769 1036.82426,1009.81544 C1050.01451,1010.01994 1063.10251,1009.50869 1076.29276,1010.53119 C1143.77776,1015.64369 1210.03576,1032.10594 1273.12401,1059.30444 C1311.16101,1075.76669 1335.80326,1112.88344 1335.80326,1153.88569 L1335.80326,1237.21944 C1263.71701,1277.60819 1137.84726,1329.34669 981.813755,1317.58794 C891.424755,1310.63494 802.262755,1283.02744 722.303255,1237.42394 L722.303255,1154.49919 Z M888.138287,703.553255 C888.138287,647.213505 972.717766,601.303255 1029.15977,601.303255 C1085.60177,601.303255 1160.21148,647.213505 1160.21148,703.553255 L1160.21148,805.803255 C1160.21148,861.120505 1087.03327,905.803755 1032.12502,907.439755 C1029.97777,907.439755 1027.83052,907.337505 1025.68327,907.337505 C970.979516,905.394755 888.138287,860.916005 888.138287,805.803255 L888.138287,703.553255 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAdminToolsLine":{"variant":"Line","glyphName":"admin-tools","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M773.596457,1069.6538 L1484.68163,1780.73898 C1524.31409,1820.37144 1589.01792,1820.37144 1628.75986,1780.73898 L1767.03555,1642.35381 C1786.30437,1623.08499 1796.92411,1597.5757 1796.92411,1570.42418 C1796.92411,1543.16318 1786.30437,1517.65388 1767.03555,1498.38506 L1068.32183,799.671348 L1079.81743,767.045731 C1143.31696,588.371211 1098.10092,386.596003 964.532953,253.02804 C840.818366,129.422935 659.406797,82.0172562 492.884773,124.715211 L765.166348,396.996786 C797.682483,429.40344 815.528038,472.648804 815.528038,518.740699 C815.528038,564.723113 797.682483,607.968477 765.166348,640.484612 L654.48011,751.17085 C587.258201,818.173795 478.104711,818.173795 410.992284,751.17085 L138.710709,478.889275 C96.122236,645.4113 143.418432,826.822868 267.023538,950.537456 C390.738126,1074.25204 573.244514,1122.86202 743.050997,1077.75547 L773.596457,1069.6538 Z M1556.61126,1920 C1502.52719,1920 1448.44311,1899.30791 1407.2779,1858.14271 L740.094984,1190.95979 C541.93268,1232.6724 333.369592,1171.69097 189.619809,1027.94118 C14.4487116,852.770087 -35.2560874,582.787632 65.7957397,356.269506 L98.2023928,283.573501 L488.396013,673.767121 C512.810485,698.072111 552.66191,698.072111 577.076381,673.767121 L687.762619,563.080884 C699.586668,551.147353 706.046102,535.491436 706.046102,518.740699 C706.046102,501.989963 699.586668,486.224564 687.762619,474.400515 L297.568998,84.2068949 L370.265004,51.8002418 C596.892612,-49.2515852 866.875066,0.453213761 1041.93668,175.51483 C1196.9631,330.650733 1254.76957,560.672281 1193.78813,770.330189 L1844.43927,1420.98134 C1884.40018,1460.83276 1906.40605,1513.9315 1906.40605,1570.42418 C1906.40605,1626.80738 1884.40018,1679.90611 1844.43927,1719.75754 L1706.16359,1858.14271 C1664.8889,1899.30791 1610.80482,1920 1556.61126,1920 L1556.61126,1920 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAdminToolsSolid":{"variant":"Solid","glyphName":"admin-tools","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1556.61126,1920 C1502.52719,1920 1448.44311,1899.30791 1407.2779,1858.14271 L740.094984,1190.95979 C541.93268,1232.6724 333.369592,1171.69097 189.619809,1027.94118 C14.4487116,852.770087 -35.2560874,582.787632 65.7957397,356.269506 L98.2023928,283.573501 L488.396013,673.767121 C512.810485,698.072111 552.66191,698.072111 577.076381,673.767121 L687.762619,563.080884 C699.586668,551.147353 706.046102,535.491436 706.046102,518.740699 C706.046102,501.989963 699.586668,486.224564 687.762619,474.400515 L297.568998,84.2068949 L370.265004,51.8002418 C596.892612,-49.2515852 866.875066,0.453213761 1041.93668,175.51483 C1196.9631,330.650733 1254.76957,560.672281 1193.78813,770.330189 L1844.43927,1420.98134 C1884.40018,1460.83276 1906.40605,1513.9315 1906.40605,1570.42418 C1906.40605,1626.80738 1884.40018,1679.90611 1844.43927,1719.75754 L1706.16359,1858.14271 C1664.8889,1899.30791 1610.80482,1920 1556.61126,1920 L1556.61126,1920 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAdminLine":{"variant":"Line","glyphName":"admin","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M276.941176,440.583529 L276.941176,1006.30588 C276.941176,1428.70588 651.115294,1631.77412 951.651765,1794.97412 L959.670588,1799.26588 L967.802353,1794.97412 C1268.33882,1631.77412 1642.51294,1428.70588 1642.51294,1006.30588 L1642.51294,440.583529 L959.670588,118.927059 L276.941176,440.583529 Z M959.670588,1920.11294 C950.409412,1920.11294 941.148235,1917.74118 932.677647,1913.22353 L897.778824,1894.24941 C588.094118,1726.08 164,1495.90588 164,1006.30588 L164,404.781176 C164,382.870588 176.649412,362.992941 196.414118,353.618824 L935.727059,5.42117647 C950.861176,-1.80705882 968.592941,-1.80705882 983.727059,5.42117647 L1723.04,353.618824 C1742.80471,362.992941 1755.45412,382.870588 1755.45412,404.781176 L1755.45412,1006.30588 C1755.45412,1495.90588 1331.24706,1726.08 1021.67529,1894.24941 L986.776471,1913.22353 C978.305882,1917.74118 969.044706,1920.11294 959.670588,1920.11294 L959.670588,1920.11294 Z M1426.82918,1372.46118 L1113.41741,1372.46118 L1021.82212,1280.97882 L1021.82212,1197.17647 L905.040941,1197.17647 L905.040941,1080.39529 L821.351529,1080.39529 L762.848,1021.89176 C760.928,1022.00471 759.008,1022.00471 757.088,1022.00471 C581.012706,1022.00471 437.803294,878.795294 437.803294,702.72 C437.803294,526.644706 581.012706,383.322353 757.088,383.322353 C933.163294,383.322353 1076.37271,526.644706 1076.37271,702.72 C1076.37271,704.64 1076.37271,706.56 1076.25976,708.367059 L1426.82918,1059.04941 L1426.82918,1372.46118 Z M1160.17506,1259.52 L1313.888,1259.52 L1313.888,1105.80706 L958.462118,750.155294 L962.415059,712.884706 C963.431529,588.988235 870.819765,496.263529 757.088,496.263529 C643.356235,496.263529 550.744471,588.988235 550.744471,702.72 C550.744471,816.564706 643.356235,909.063529 757.088,909.063529 L804.297412,903.755294 L868.109176,967.454118 L1017.98212,967.454118 L1017.98212,1084.23529 L1134.76329,1084.23529 L1134.76329,1234.22118 L1160.17506,1259.52 Z M846.774588,705.950118 C846.774588,752.707765 808.826353,790.656 762.068706,790.656 C715.311059,790.656 677.362824,752.707765 677.362824,705.950118 C677.362824,659.192471 715.311059,621.244235 762.068706,621.244235 C808.826353,621.244235 846.774588,659.192471 846.774588,705.950118\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAdminSolid":{"variant":"Solid","glyphName":"admin","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M983.727059,5.42117647 L1723.04,353.618824 C1742.80471,362.992941 1755.45412,382.870588 1755.45412,404.781176 L1755.45412,1006.30588 C1755.45412,1495.90588 1331.24706,1726.08 1021.67529,1894.24941 L986.776471,1913.22353 C978.305882,1917.74118 969.044706,1920.11294 959.670588,1920.11294 C950.409412,1920.11294 941.148235,1917.74118 932.677647,1913.22353 L897.778824,1894.24941 C588.094118,1726.08 164,1495.90588 164,1006.30588 L164,404.781176 C164,382.870588 176.649412,362.992941 196.414118,353.618824 L935.727059,5.42117647 C950.861176,-1.80705882 968.592941,-1.80705882 983.727059,5.42117647 Z M757.088,383.322353 C581.012706,383.322353 437.803294,526.644706 437.803294,702.72 C437.803294,878.795294 581.012706,1022.00471 757.088,1022.00471 C759.008,1022.00471 760.928,1022.00471 762.848,1021.89176 L762.848,1021.89176 L821.351529,1080.39529 L905.040941,1080.39529 L905.040941,1197.17647 L1021.82212,1197.17647 L1021.82212,1280.97882 L1113.41741,1372.46118 L1426.82918,1372.46118 L1426.82918,1059.04941 L1076.25976,708.367059 C1076.37271,706.56 1076.37271,704.64 1076.37271,702.72 C1076.37271,526.644706 933.163294,383.322353 757.088,383.322353 Z M757.088,496.263529 C870.819765,496.263529 963.431529,588.988235 962.415059,712.884706 L962.415059,712.884706 L958.462118,750.155294 L1313.888,1105.80706 L1313.888,1259.52 L1160.17506,1259.52 L1134.76329,1234.22118 L1134.76329,1084.23529 L1017.98212,1084.23529 L1017.98212,967.454118 L868.109176,967.454118 L804.297412,903.755294 L757.088,909.063529 C643.356235,909.063529 550.744471,816.564706 550.744471,702.72 C550.744471,588.988235 643.356235,496.263529 757.088,496.263529 Z M762.068706,621.244235 C715.311059,621.244235 677.362824,659.192471 677.362824,705.950118 C677.362824,752.707765 715.311059,790.656 762.068706,790.656 C808.826353,790.656 846.774588,752.707765 846.774588,705.950118 C846.774588,659.192471 808.826353,621.244235 762.068706,621.244235 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAlertsLine":{"variant":"Line","glyphName":"alerts","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1185.92753,1581.17647 C1185.92753,1705.75059 1084.61929,1807.05882 960.045176,1807.05882 C835.471059,1807.05882 734.162824,1705.75059 734.162824,1581.17647 L1185.92753,1581.17647 Z M960.045176,225.882353 C1302.48282,225.882353 1581.22165,504.508235 1581.22165,847.058824 L1581.22165,1242.35294 C1581.22165,1329.09176 1613.97459,1408.26353 1667.62165,1468.23529 L252.355765,1468.23529 C306.115765,1408.26353 338.868706,1329.09176 338.868706,1242.35294 L338.868706,847.058824 C338.868706,504.508235 617.494588,225.882353 960.045176,225.882353 Z M1694.16282,1242.35294 L1694.16282,847.058824 C1694.16282,461.364706 1394.86871,144.790588 1016.51576,115.764706 L1016.51576,2.84217094e-14 L903.574588,2.84217094e-14 L903.574588,115.764706 C525.108706,144.790588 225.927529,461.364706 225.927529,847.058824 L225.927529,1242.35294 C225.927529,1366.92706 124.619294,1468.23529 0.0451764706,1468.23529 L0.0451764706,1581.17647 L621.221647,1581.17647 C621.221647,1767.98118 773.127529,1920 960.045176,1920 C1146.84988,1920 1298.86871,1767.98118 1298.86871,1581.17647 L1920.04518,1581.17647 L1920.04518,1468.23529 C1795.47106,1468.23529 1694.16282,1366.92706 1694.16282,1242.35294 L1694.16282,1242.35294 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAlertsSolid":{"variant":"Solid","glyphName":"alerts","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1298.82353,1581.17647 C1298.82353,1767.98118 1146.80471,1920 960,1920 C773.195294,1920 621.176471,1767.98118 621.176471,1581.17647 L1298.82353,1581.17647 Z M1016.47059,0 L1016.47059,115.764706 C1394.93647,144.790588 1694.11765,461.364706 1694.11765,847.058824 L1694.11765,847.058824 L1694.11765,1129.41176 C1694.11765,1253.98588 1795.42588,1355.29412 1920,1355.29412 L1920,1355.29412 L1920,1468.23529 L0,1468.23529 L0,1355.29412 C124.574118,1355.29412 225.882353,1253.98588 225.882353,1129.41176 L225.882353,1129.41176 L225.882353,847.058824 C225.882353,461.364706 525.063529,144.790588 903.529412,115.764706 L903.529412,115.764706 L903.529412,0 L1016.47059,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAnalyticsLine":{"variant":"Line","glyphName":"analytics","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M112.941176,153.572235 L112.941176,1734.74871 L338.823529,1734.74871 L338.823529,944.160471 L790.588235,944.160471 L790.588235,1734.74871 L903.529412,1734.74871 L903.529412,1170.04282 L1355.29412,1170.04282 L1355.29412,1734.74871 L1468.23529,1734.74871 L1468.23529,718.278118 L1920,718.278118 L1920,1847.68988 L0,1847.68988 L0,153.572235 L112.941176,153.572235 Z M1807.05882,831.219294 L1581.17647,831.219294 L1581.17647,1734.74871 L1807.05882,1734.74871 L1807.05882,831.219294 Z M1242.35294,1282.984 L1016.47059,1282.984 L1016.47059,1734.74871 L1242.35294,1734.74871 L1242.35294,1282.984 Z M677.647059,1057.10165 L451.764706,1057.10165 L451.764706,1734.74871 L677.647059,1734.74871 L677.647059,1057.10165 Z M1586.60894,73 L1688.70776,121.112941 C1681.70541,136.247059 1511.95482,491.785882 1248.35012,557.404706 C1138.68424,584.736471 1030.03482,559.098824 926.128941,481.056471 C805.733647,390.703529 706.006588,364.501176 629.997176,402.449412 C496.274824,469.197647 451.776,714.844706 451.776,774.703529 L451.776,774.703529 L338.834824,774.703529 C338.834824,680.510588 395.870118,393.188235 579.512471,301.367059 C697.197176,242.750588 836.566588,272.792941 993.893647,390.703529 C1070.24188,448.077647 1144.44424,466.825882 1220.67953,447.851765 C1432.33129,395.334118 1585.02776,76.2752941 1586.60894,73 L1586.60894,73 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAnalyticsSolid":{"variant":"Solid","glyphName":"analytics","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M112.941176,153.527059 L112.941176,1734.70353 L338.823529,1734.70353 L338.823529,944.115294 L790.588235,944.115294 L790.588235,1734.70353 L903.529412,1734.70353 L903.529412,1169.99765 L1355.29412,1169.99765 L1355.29412,1734.70353 L1468.23529,1734.70353 L1468.23529,718.232941 L1920,718.232941 L1920,1847.64471 L-5.68434189e-14,1847.64471 L-5.68434189e-14,153.527059 L112.941176,153.527059 Z M1586.59765,73 L1688.69647,121 C1681.69412,136.134118 1511.94353,491.672941 1248.33882,557.404706 C1138.56,584.623529 1030.02353,559.098824 926.117647,481.056471 C805.609412,390.703529 705.882353,364.501176 629.985882,402.449412 C496.376471,469.197647 451.764706,714.731765 451.764706,774.703529 L338.823529,774.703529 C338.823529,680.510588 395.858824,393.188235 579.501176,301.367059 C697.298824,242.637647 836.555294,272.68 993.882353,390.703529 C1070.34353,447.964706 1144.43294,466.712941 1220.78118,447.738824 C1432.43294,395.334118 1585.01647,76.1623529 1586.59765,73 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAndroidLine":{"variant":"Line","glyphName":"android","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M535.055664,9.51200987 C560.805916,-7.76776446 596.043103,-0.878442667 613.435817,25.0976887 L613.435817,25.0976887 L707.740468,166.159376 C767.59851,140.183244 831.522381,121.548194 899.625021,115.56239 C1008.95065,106.075455 1116.58219,123.694048 1213.71033,163.787642 L1213.71033,163.787642 L1306.09501,25.2106284 C1323.26184,-0.878442667 1358.27315,-7.76776446 1384.36222,9.51200987 C1410.33835,26.7917842 1417.34061,61.9160314 1400.06084,87.779223 L1400.06084,87.779223 L1314.3396,216.417543 C1343.59099,235.278473 1371.71297,255.833499 1397.46322,279.437896 C1515.93697,387.97295 1581.21612,532.761647 1581.21612,687.037279 L1581.21612,687.037279 L1581.21612,1421.14534 C1581.21612,1509.35125 1505.2077,1581.1809 1411.80657,1581.1809 L1411.80657,1581.1809 L1242.39701,1581.1809 L1242.39701,1920 L1129.45731,1920 L1129.45731,1581.1809 L790.638209,1581.1809 L790.638209,1920 L677.698507,1920 L677.698507,1581.1809 L508.288955,1581.1809 C414.887822,1581.1809 338.879403,1509.35125 338.879403,1421.14534 L338.879403,1421.14534 L338.879403,709.2864 C338.879403,508.81843 446.172119,329.018425 608.127651,220.370433 L608.127651,220.370433 L519.582925,87.8921627 C502.190211,62.0289711 509.192473,26.9047239 535.055664,9.51200987 Z M959.483063,225.904478 C942.880926,225.904478 926.165851,226.695056 909.450775,228.163272 C652.851773,250.638273 451.819104,461.948454 451.819104,709.2864 L451.819104,709.2864 L451.819104,1421.14534 C451.819104,1447.00853 477.117598,1468.24119 508.288955,1468.24119 L508.288955,1468.24119 L1411.80657,1468.24119 C1442.97792,1468.24119 1468.27642,1447.00853 1468.27642,1421.14534 L1468.27642,1421.14534 L1468.27642,687.037279 C1468.27642,564.723582 1416.09828,449.525087 1321.11599,362.674456 C1225.0043,274.46855 1095.34952,225.904478 959.483063,225.904478 Z M113,1298.83164 L225.939701,1298.83164 L225.939701,734.133135 L113,734.133135 L113,1298.83164 Z M1694.15582,1298.83164 L1807.09552,1298.83164 L1807.09552,734.133135 L1694.15582,734.133135 L1694.15582,1298.83164 Z M734.168358,474.394409 C684.24901,474.394409 643.816597,514.826822 643.816597,564.74617 C643.816597,614.552579 684.24901,655.097931 734.168358,655.097931 C784.087706,655.097931 824.520119,614.552579 824.520119,564.74617 C824.520119,514.826822 784.087706,474.394409 734.168358,474.394409 M1185.92716,474.394409 C1136.00782,474.394409 1095.5754,514.826822 1095.5754,564.74617 C1095.5754,614.552579 1136.00782,655.097931 1185.92716,655.097931 C1235.84651,655.097931 1276.27893,614.552579 1276.27893,564.74617 C1276.27893,514.826822 1235.84651,474.394409 1185.92716,474.394409\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAndroidSolid":{"variant":"Solid","glyphName":"android","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1306.08595,25.2250056 C1323.25266,-0.750928644 1358.37664,-7.86607585 1384.35257,9.52650621 C1410.32851,26.8061494 1417.33072,61.8171912 1400.05107,87.7931255 L1400.05107,87.7931255 L1314.33049,216.430469 C1343.58165,235.291256 1371.70342,255.846126 1397.45348,279.337406 C1515.92633,387.984574 1581.20498,532.772173 1581.20498,687.046634 L1581.20498,687.046634 L1581.20498,1421.14912 C1581.20498,1509.4673 1505.19714,1581.18347 1411.79671,1581.18347 L1411.79671,1581.18347 L1242.38845,1581.18347 L1242.38845,1920 L1129.4496,1920 L1129.4496,1581.18347 L790.633067,1581.18347 L790.633067,1920 L677.694223,1920 L677.694223,1581.18347 L508.285956,1581.18347 C414.885531,1581.18347 338.877689,1509.4673 338.877689,1421.14912 L338.877689,1421.14912 L338.877689,709.295587 C338.877689,508.716199 446.169591,329.030497 608.123894,220.383329 L608.123894,220.383329 L519.57984,87.9060643 C502.187258,61.9301301 509.189467,26.9190883 535.052462,9.52650621 C560.915457,-7.753137 596.039438,-0.750928644 613.43202,25.1120667 L613.43202,25.1120667 L707.735955,166.172684 C767.593543,140.309688 831.516929,121.56184 899.619052,115.576081 C1008.94385,105.976279 1116.57457,123.4818 1213.70198,163.688029 L1213.70198,163.688029 Z M225.938845,734.142133 L225.938845,1298.83636 L113,1298.83636 L113,734.142133 L225.938845,734.142133 Z M1807.08267,734.142133 L1807.08267,1298.83636 L1694.14382,1298.83636 L1694.14382,734.142133 L1807.08267,734.142133 Z M1185.91902,451.795021 C1123.68972,451.795021 1072.98018,502.504563 1072.98018,564.733866 C1072.98018,626.963169 1123.68972,677.67271 1185.91902,677.67271 C1248.14833,677.67271 1298.85787,626.963169 1298.85787,564.733866 C1298.85787,502.504563 1248.14833,451.795021 1185.91902,451.795021 Z M734.163645,451.795021 C671.934341,451.795021 621.2248,502.504563 621.2248,564.733866 C621.2248,626.963169 671.934341,677.67271 734.163645,677.67271 C796.392948,677.67271 847.102489,626.963169 847.102489,564.733866 C847.102489,502.504563 796.392948,451.795021 734.163645,451.795021 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAnnotateLine":{"variant":"Line","glyphName":"annotate","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\">\n        <path d=\"M1468.23529,113 L1468.23529,212.388235 L1355.29412,325.329412 L1355.29412,225.941176 L112.941176,225.941176 L112.941176,1694.17647 L1355.29412,1694.17647 L1355.29412,1255.96471 L1468.23529,1143.02353 L1468.23529,1807.11765 L0,1807.11765 L0,113 L1468.23529,113 Z M421.270588,1163.35294 C517.270588,1154.31765 576,1271.77647 612.141176,1361 C640.376471,1429.89412 650.541176,1453.61176 684.423529,1457 C718.305882,1460.38824 773.647059,1398.27059 797.364706,1355.35294 C813.894264,1328.84327 848.78445,1320.7528 875.294118,1337.28235 C901.803786,1353.81191 909.894264,1388.7021 893.364706,1415.21176 C884.329412,1432.15294 800.752941,1575.58824 687.811765,1575.58824 L687.811765,1575.58824 L678.776471,1575.58824 C608.752941,1571.07059 556.8,1527.02353 509.364706,1409.56471 C461.929412,1292.10588 431.435294,1281.94118 431.435294,1281.94118 C380.174711,1347.63097 346.721038,1425.43021 334.305882,1507.82353 C327.756435,1539.01137 297.164315,1558.98474 265.976471,1552.43529 C234.788626,1545.88585 214.815258,1515.29373 221.364706,1484.10588 C241.694118,1389.23529 300.423529,1173.51765 421.270588,1163.35294 Z M677.647059,677.705882 L677.647059,790.647059 L338.823529,790.647059 L338.823529,677.705882 L677.647059,677.705882 Z M903.529412,451.823529 L903.529412,564.764706 L338.823529,564.764706 L338.823529,451.823529 L903.529412,451.823529 Z\"/>\n        <path d=\"M1903.05882,468.764706 L1677.17647,242.882353 C1666.57318,232.191756 1652.13953,226.178448 1637.08235,226.178448 C1622.02517,226.178448 1607.59153,232.191756 1596.98824,242.882353 L919.341176,920.529412 C909.115192,931.138347 903.440895,945.324088 903.528392,960.058824 L903.528392,1242.41176 L1185.88235,1242.41176 C1200.77756,1242.1996 1214.98557,1236.11045 1225.41176,1225.47059 L1903.05882,547.823529 C1924.58219,525.865308 1924.58219,490.722928 1903.05882,468.764706 Z M1162.16471,1129.47059 L1016.47059,1129.47059 L1016.47059,983.776471 L1468.23529,532.011765 L1613.92941,677.705882 L1162.16471,1129.47059 Z M1694.11765,597.517647 L1548.42353,451.823529 L1637.64706,362.6 L1783.34118,508.294118 L1694.11765,597.517647 Z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconAnnotateSolid":{"variant":"Solid","glyphName":"annotate","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\">\n        <path d=\"M1468.23529,113 L1468.23529,204.142488 L822.674025,862.889857 C806.765611,879.394022 797.938192,901.462569 798.075895,924.385181 L798.07387,1354.24398 C797.833891,1354.60997 797.597478,1354.97963 797.364706,1355.35294 C773.647059,1398.27059 718.305882,1460.38824 684.423529,1457 C650.541176,1453.61176 640.376471,1429.89412 612.141176,1361 C576,1271.77647 517.270588,1154.31765 421.270588,1163.35294 C300.423529,1173.51765 241.694118,1389.23529 221.364706,1484.10588 C214.815258,1515.29373 234.788626,1545.88585 265.976471,1552.43529 C297.164315,1558.98474 327.756435,1539.01137 334.305882,1507.82353 C346.721038,1425.43021 380.174711,1347.63097 431.435294,1281.94118 C431.435294,1281.94118 461.929412,1292.10588 509.364706,1409.56471 C556.8,1527.02353 608.752941,1571.07059 678.776471,1575.58824 L687.811765,1575.58824 C800.752941,1575.58824 884.329412,1432.15294 893.364706,1415.21176 C903.401798,1399.11454 904.36106,1379.92728 897.630818,1363.63712 L1237.32821,1363.63749 C1260.50046,1363.30743 1282.60366,1353.83463 1298.82353,1337.28235 L1468.23529,1164.41022 L1468.23529,1807.11765 L0,1807.11765 L0,113 L1468.23529,113 Z M564.705882,677.705882 L225.882353,677.705882 L225.882353,790.647059 L564.705882,790.647059 L564.705882,677.705882 Z M790.588235,451.823529 L225.882353,451.823529 L225.882353,564.764706 L790.588235,564.764706 L790.588235,451.823529 Z\"/>\n        <path d=\"M1903.05882,468.764706 L1677.17647,242.882353 C1666.57318,232.191756 1652.13953,226.178448 1637.08235,226.178448 C1622.02517,226.178448 1607.59153,232.191756 1596.98824,242.882353 L919.341176,920.529412 C909.115192,931.138347 903.440895,945.324088 903.528392,960.058824 L903.528392,1242.41176 L1185.88235,1242.41176 C1200.77756,1242.1996 1214.98557,1236.11045 1225.41176,1225.47059 L1903.05882,547.823529 C1924.58219,525.865308 1924.58219,490.722928 1903.05882,468.764706 Z M1694.11765,597.517647 L1548.42353,451.823529 L1637.64706,362.6 L1783.34118,508.294118 L1694.11765,597.517647 Z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconAnnouncementLine":{"variant":"Line","glyphName":"announcement","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1587.16235,31.2784941 C1598.68235,7.78672942 1624.43294,-4.41091764 1650.63529,1.46202354 C1676.16,7.56084707 1694.11765,30.2620235 1694.11765,56.4643765 L1694.11765,56.4643765 L1694.11765,570.459671 C1822.87059,596.662024 1920,710.732612 1920,847.052612 C1920,983.372612 1822.87059,1097.55614 1694.11765,1123.75849 L1694.11765,1123.75849 L1694.11765,1637.64085 C1694.11765,1663.8432 1676.16,1686.65732 1650.63529,1692.6432 C1646.23059,1693.65967 1641.93882,1694.11144 1637.64706,1694.11144 C1616.52706,1694.11144 1596.87529,1682.36555 1587.16235,1662.93967 C1379.23765,1247.2032 964.178824,1242.34673 960,1242.34673 L960,1242.34673 L564.705882,1242.34673 L564.705882,1807.05261 L652.461176,1807.05261 C640.602353,1716.92555 634.955294,1560.05026 715.934118,1456.37026 C768.338824,1389.2832 845.590588,1355.28791 945.882353,1355.28791 L945.882353,1355.28791 L945.882353,1468.22908 C881.392941,1468.22908 835.312941,1487.09026 805.044706,1525.71614 C736.263529,1613.58438 759.981176,1789.54673 774.776471,1849.97026 C778.955294,1866.79849 775.115294,1884.6432 764.498824,1898.30908 C753.769412,1911.97496 737.28,1919.99379 720,1919.99379 L720,1919.99379 L508.235294,1919.99379 C477.063529,1919.99379 451.764706,1894.80791 451.764706,1863.5232 L451.764706,1863.5232 L451.764706,1242.34673 L395.294118,1242.34673 C239.548235,1242.34673 112.941176,1115.73967 112.941176,959.993788 L112.941176,959.993788 L112.941176,903.5232 L56.4705882,903.5232 C25.2988235,903.5232 0,878.337318 0,847.052612 C0,815.880847 25.2988235,790.582024 56.4705882,790.582024 L56.4705882,790.582024 L112.941176,790.582024 L112.941176,734.111435 C112.941176,578.478494 239.548235,451.758494 395.294118,451.758494 L395.294118,451.758494 L959.887059,451.758494 C976.828235,451.645553 1380.36706,444.756141 1587.16235,31.2784941 Z M1581.17647,249.706729 C1386.46588,492.078494 1128.96,547.871435 1016.47059,560.746729 L1016.47059,560.746729 L1016.47059,1133.47144 C1128.96,1146.34673 1386.46588,1202.02673 1581.17647,1444.51144 L1581.17647,1444.51144 Z M903.529412,564.699671 L395.294118,564.699671 C301.891765,564.699671 225.882353,640.709082 225.882353,734.111435 L225.882353,734.111435 L225.882353,959.993788 C225.882353,1053.39614 301.891765,1129.40555 395.294118,1129.40555 L395.294118,1129.40555 L903.529412,1129.40555 L903.529412,564.699671 Z M1694.11765,688.144376 L1694.11765,1006.07379 C1759.73647,982.694965 1807.05882,920.577318 1807.05882,847.052612 C1807.05882,773.527906 1759.73647,711.5232 1694.11765,688.144376 L1694.11765,688.144376 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAnnouncementSolid":{"variant":"Solid","glyphName":"announcement","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M959.341941,1355.2828 C963.628574,1355.28974 980.239059,1355.46322 1005.17647,1359.80016 L1005.17647,1359.80016 L1001.78824,1415.14134 C1000.65882,1444.50604 975.811765,1468.22369 946.447059,1468.22369 C880.941176,1468.22369 835.764706,1487.42369 805.270588,1525.82369 C736.376471,1613.91781 760.094118,1788.97663 774.776471,1849.96487 C779.294118,1866.90604 774.776471,1884.97663 764.611765,1898.52957 C753.317647,1912.08251 737.505882,1919.9884 720.564706,1919.9884 L720.564706,1919.9884 L508.235294,1919.9884 C476.611765,1919.9884 451.764706,1895.14134 451.764706,1863.51781 L451.764706,1863.51781 L451.764706,1355.28251 Z M1587.16235,31.2392196 C1598.79529,7.74745494 1624.77176,-4.33725094 1650.63529,1.42274906 C1676.16,7.52157259 1694.11765,30.2227491 1694.11765,56.425102 L1694.11765,56.425102 L1694.11765,570.420396 C1822.87059,596.622749 1920,710.693337 1920,847.013337 C1920,983.333337 1822.87059,1097.51687 1694.11765,1123.71922 L1694.11765,1123.71922 L1694.11765,1637.60157 C1694.11765,1663.80393 1676.16,1686.61804 1650.63529,1692.60393 C1646.23059,1693.6204 1641.93882,1694.07216 1637.64706,1694.07216 C1616.52706,1694.07216 1596.87529,1682.32628 1587.16235,1662.9004 C1379.23765,1247.16393 964.178824,1242.30745 960,1242.30745 L960,1242.30745 L395.294118,1242.30745 C239.548235,1242.30745 112.941176,1115.7004 112.941176,959.954514 L112.941176,959.954514 L112.941176,903.483926 L56.4705882,903.483926 C25.2988235,903.483926 0,878.298043 0,847.013337 C0,815.841573 25.2988235,790.542749 56.4705882,790.542749 L56.4705882,790.542749 L112.941176,790.542749 L112.941176,734.072161 C112.941176,578.43922 239.548235,451.71922 395.294118,451.71922 L395.294118,451.71922 L959.887059,451.71922 C976.828235,451.606278 1380.36706,444.716867 1587.16235,31.2392196 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAppleLine":{"variant":"Line","glyphName":"apple","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1380.66395,0 L1386.2108,52.8648075 C1400.1345,184.630623 1354.74095,331.565356 1264.97266,446.011438 C1263.61425,447.59625 1262.02944,448.728259 1260.78423,450.313071 C1275.72675,449.747067 1290.66926,448.615058 1306.17778,450.086669 C1373.8719,452.916691 1551.82367,478.72649 1668.19417,652.263428 L1668.19417,652.263428 L1699.77721,699.468192 L1652.45925,730.938034 C1611.70694,756.747833 1486.61997,849.68575 1488.31798,1024.01509 C1490.2424,1244.7568 1668.19417,1325.69542 1688.45713,1334.18548 L1688.45713,1334.18548 L1737.0203,1354.56164 L1720.71938,1404.82283 C1707.24847,1448.29196 1668.42057,1559.56842 1592.57599,1672.76929 C1520.24063,1780.53652 1430.35914,1914.79276 1278.33037,1917.62278 C1206.56101,1919.434 1160.71466,1897.81263 1118.71714,1879.36089 C1078.75723,1861.70155 1044.45736,1846.53263 987.630525,1846.53263 C927.520862,1846.53263 891.183382,1862.26755 849.072657,1880.6061 C809.565552,1897.81263 764.738007,1917.28318 702.590728,1919.8868 C699.760706,1920 696.930684,1920 694.327064,1920 C547.052729,1920 444.71914,1769.10324 376.572215,1668.69406 L376.572215,1668.69406 L371.385341,1660.95884 C200.971353,1404.05599 105.685923,985.769047 262.918539,707.165851 C349.517206,553.552267 507.092821,456.539119 674.177309,454.0487 C739.267811,453.143093 799.151072,473.51925 850.77067,493.895407 C859.600338,374.015683 916.653578,262.173221 975.857634,189.951064 C1061.8903,84.447851 1206.44781,7.24485585 1327.57275,2.26401745 L1327.57275,2.26401745 L1380.66395,0 Z M1297.91412,562.947939 C1224.22035,555.137079 1153.583,584.229703 1090.75652,609.586699 C1043.32535,628.717646 1002.45984,645.131773 964.537547,645.131773 C932.162097,645.131773 898.201836,634.151288 862.883163,620.340782 L862.883163,620.340782 L857.449522,619.887978 L857.22312,618.189965 C849.751862,615.133542 842.280605,612.190319 834.582945,609.133895 C785.000963,588.98414 730.551343,562.608337 676.101724,567.249573 C548.977144,569.173987 428.418214,644.112965 361.516499,762.86068 C216.619382,1019.48706 337.857516,1409.91687 470.302537,1605.07517 C540.71348,1708.88037 615.426056,1811.44036 698.062693,1806.79913 C739.041409,1805.10111 767.568029,1792.64902 803.905509,1776.9141 C850.77067,1756.42474 903.97508,1733.33176 987.630525,1733.33176 C1068.34275,1733.33176 1119.39634,1755.85873 1164.45029,1775.78209 C1201.69338,1792.30942 1232.59721,1806.23312 1276.17955,1804.42191 C1362.55181,1802.8371 1422.88788,1722.69088 1498.50606,1609.71641 C1548.08805,1535.79624 1579.78429,1463.00808 1597.78323,1414.4449 C1521.14624,1368.48535 1377.15473,1252.00165 1375.11711,1025.0339 C1373.4191,844.931313 1472.35666,730.37203 1540.72999,672.865987 C1455.37653,580.267673 1345.34528,564.985555 1297.91412,562.947939 Z M1274.82114,124.634161 C1198.29735,145.123519 1116.11352,197.082719 1063.58831,261.494016 L1063.58831,261.494016 L1063.47511,261.607217 C1016.94955,318.434055 967.48077,412.390779 962.38673,509.064324 C1047.06098,496.385826 1127.66,437.294971 1175.99678,376.053299 C1234.40843,301.680325 1269.3875,211.232828 1274.82114,124.634161 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAppleSolid":{"variant":"Solid","glyphName":"apple","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M972.668586,550.592337 C1047.03925,550.592337 1186.48425,447.198973 1333.29829,462.277172 C1394.74479,464.88468 1567.18043,487.558663 1677.94284,652.738632 C1669.09998,658.633868 1472.06307,775.518252 1474.44384,1018.92346 C1476.93797,1309.83067 1724.4245,1406.42184 1727.25875,1407.89565 C1724.99135,1414.4711 1687.69265,1545.75347 1596.76998,1681.34389 C1518.20462,1798.45501 1436.80502,1914.99928 1308.47028,1917.38005 C1182.28956,1919.87419 1141.70313,1841.0821 997.383228,1841.0821 C853.176694,1841.0821 808.168837,1914.99928 688.676945,1919.87419 C564.763626,1924.63573 470.439855,1793.35336 391.307653,1676.69572 C229.415412,1437.8253 105.728833,1002.03135 271.815761,707.836411 C354.235691,561.702589 501.616582,469.192737 661.694904,466.811969 C783.340825,464.54457 898.29792,550.592337 972.668586,550.592337 Z M1367.75141,-5.68434189e-14 C1380.78895,110.535669 1333.06021,221.524817 1262.6575,301.450608 C1191.91467,381.26303 1076.16398,443.389744 962.680696,435.00037 C947.375757,326.50536 1004.62757,213.815663 1069.92864,142.846095 C1142.93886,63.0336736 1266.17196,3.85457717 1367.75141,-5.68434189e-14 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArcLine":{"variant":"Line","glyphName":"Arc","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1142.27704,1243.13845 L777.213784,1243.13845 L777.213784,1590.3165 C843.331544,1613.45917 890.752197,1676.40107 890.752197,1750.41865 C890.752197,1844.07584 814.828042,1920 721.17085,1920 C627.513658,1920 551.589502,1844.07584 551.589502,1750.41865 C551.589502,1676.40107 599.010155,1613.45917 665.127916,1590.3165 L665.127916,1243.13845 L541.655579,1243.13845 L541.689247,1441.24547 C541.689247,1518.33991 479.191853,1580.8373 402.09741,1580.8373 L342.960786,1580.78862 C320.046924,1647.32281 256.896612,1695.12566 182.581348,1695.12566 C88.9241555,1695.12566 13,1619.2015 13,1525.54431 C13,1431.88712 88.9241555,1355.96296 182.581348,1355.96296 C256.288255,1355.96296 319.012258,1402.98637 342.389983,1468.66981 L403.85272,1468.66981 C418.054328,1468.66981 429.567006,1457.15713 429.567006,1442.95552 L429.567006,1243.13845 L183.114532,1243.13845 C150.653714,1243.13845 124.339021,1216.82376 124.339021,1184.36294 L124.339021,58.7755102 C124.339021,26.3146923 150.653714,0 183.114532,0 L1735.1347,0 C1767.59552,0 1793.91021,26.3146923 1793.91021,58.7755102 L1793.91021,1184.36294 C1793.91021,1216.82376 1767.59552,1243.13845 1735.1347,1243.13845 L1489.85675,1243.13845 L1489.85675,1442.95552 C1489.85675,1457.15713 1501.36943,1468.66981 1515.57103,1468.66981 L1577.03377,1468.66981 C1600.4115,1402.98637 1663.1355,1355.96296 1736.84241,1355.96296 C1830.4996,1355.96296 1906.42375,1431.88712 1906.42375,1525.54431 C1906.42375,1619.2015 1830.4996,1695.12566 1736.84241,1695.12566 C1662.52714,1695.12566 1599.37683,1647.32281 1576.46297,1580.78862 L1517.36272,1580.8373 C1440.2319,1580.8373 1377.73451,1518.33991 1377.73451,1441.24547 L1377.76817,1243.13845 L1254.36291,1243.13845 L1254.36291,1590.3165 C1320.48067,1613.45917 1367.90132,1676.40107 1367.90132,1750.41865 C1367.90132,1844.07584 1291.97717,1920 1198.31997,1920 C1104.66278,1920 1028.73863,1844.07584 1028.73863,1750.41865 C1028.73863,1676.40107 1076.15928,1613.45917 1142.27704,1590.3165 L1142.27704,1243.13845 Z M1199.67111,1806.04755 C1230.3941,1806.04755 1255.30001,1781.14164 1255.30001,1750.41865 C1255.30001,1719.69566 1230.3941,1694.78976 1199.67111,1694.78976 C1168.94812,1694.78976 1144.04222,1719.69566 1144.04222,1750.41865 C1144.04222,1781.14164 1168.94812,1806.04755 1199.67111,1806.04755 Z M722.52199,1806.04755 C753.244979,1806.04755 778.150884,1781.14164 778.150884,1750.41865 C778.150884,1719.69566 753.244979,1694.78976 722.52199,1694.78976 C691.799,1694.78976 666.893096,1719.69566 666.893096,1750.41865 C666.893096,1781.14164 691.799,1806.04755 722.52199,1806.04755 Z M1738.19355,1581.17321 C1768.91654,1581.17321 1793.82244,1556.2673 1793.82244,1525.54431 C1793.82244,1494.82132 1768.91654,1469.91542 1738.19355,1469.91542 C1707.47056,1469.91542 1682.56465,1494.82132 1682.56465,1525.54431 C1682.56465,1556.2673 1707.47056,1581.17321 1738.19355,1581.17321 Z M181.230208,1581.17321 C211.953198,1581.17321 236.859102,1556.2673 236.859102,1525.54431 C236.859102,1494.82132 211.953198,1469.91542 181.230208,1469.91542 C150.507218,1469.91542 125.601314,1494.82132 125.601314,1525.54431 C125.601314,1556.2673 150.507218,1581.17321 181.230208,1581.17321 Z M901.046855,348.664896 L1121.08185,480.46113 C1133.59009,489.628452 1141,504.337618 1141,520 C1141,535.662382 1133.59009,550.371548 1121.08185,559.53887 L901.046855,691.335104 C886.19456,700.041024 867.897012,700.046423 853.039735,691.349269 C838.182458,682.652115 829.019897,666.572114 829,649.160309 L829,390.839691 C829.019897,373.427886 838.182458,357.347885 853.039735,348.650731 C867.897012,339.953577 886.19456,339.958976 901.046855,348.664896 Z M1687.20211,933.333333 L1687.20211,136.054422 C1687.20211,119.824013 1674.04476,106.666667 1657.81435,106.666667 L260.434877,106.666667 C244.204468,106.666667 231.047122,119.824013 231.047122,136.054422 L231.047122,933.333333 L1687.20211,933.333333 Z M1687.20211,1040 L231.047122,1040 L231.047122,1107.09854 C231.047122,1123.32895 244.204468,1136.48629 260.434877,1136.48629 L1657.81435,1136.48629 C1674.04476,1136.48629 1687.20211,1123.32895 1687.20211,1107.09854 L1687.20211,1040 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArcSolid":{"variant":"Solid","glyphName":"Arc","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1142.27704,1243.13845 L777.213784,1243.13845 L777.213784,1590.3165 C843.331544,1613.45917 890.752197,1676.40107 890.752197,1750.41865 C890.752197,1844.07584 814.828042,1920 721.17085,1920 C627.513658,1920 551.589502,1844.07584 551.589502,1750.41865 C551.589502,1676.40107 599.010155,1613.45917 665.127916,1590.3165 L665.127916,1243.13845 L541.655579,1243.13845 L541.689247,1441.24547 C541.689247,1518.33991 479.191853,1580.8373 402.09741,1580.8373 L342.960786,1580.78862 C320.046924,1647.32281 256.896612,1695.12566 182.581348,1695.12566 C88.9241555,1695.12566 13,1619.2015 13,1525.54431 C13,1431.88712 88.9241555,1355.96296 182.581348,1355.96296 C256.288255,1355.96296 319.012258,1402.98637 342.389983,1468.66981 L403.85272,1468.66981 C418.054328,1468.66981 429.567006,1457.15713 429.567006,1442.95552 L429.567006,1243.13845 L183.114532,1243.13845 C150.653714,1243.13845 124.339021,1216.82376 124.339021,1184.36294 L124.339021,58.7755102 C124.339021,26.3146923 150.653714,0 183.114532,0 L1735.1347,0 C1767.59552,0 1793.91021,26.3146923 1793.91021,58.7755102 L1793.91021,1184.36294 C1793.91021,1216.82376 1767.59552,1243.13845 1735.1347,1243.13845 L1489.85675,1243.13845 L1489.85675,1442.95552 C1489.85675,1457.15713 1501.36943,1468.66981 1515.57103,1468.66981 L1577.03377,1468.66981 C1600.4115,1402.98637 1663.1355,1355.96296 1736.84241,1355.96296 C1830.4996,1355.96296 1906.42375,1431.88712 1906.42375,1525.54431 C1906.42375,1619.2015 1830.4996,1695.12566 1736.84241,1695.12566 C1662.52714,1695.12566 1599.37683,1647.32281 1576.46297,1580.78862 L1517.36272,1580.8373 C1440.2319,1580.8373 1377.73451,1518.33991 1377.73451,1441.24547 L1377.76817,1243.13845 L1254.36291,1243.13845 L1254.36291,1590.3165 C1320.48067,1613.45917 1367.90132,1676.40107 1367.90132,1750.41865 C1367.90132,1844.07584 1291.97717,1920 1198.31997,1920 C1104.66278,1920 1028.73863,1844.07584 1028.73863,1750.41865 C1028.73863,1676.40107 1076.15928,1613.45917 1142.27704,1590.3165 L1142.27704,1243.13845 Z M1199.67111,1806.04755 C1230.3941,1806.04755 1255.30001,1781.14164 1255.30001,1750.41865 C1255.30001,1719.69566 1230.3941,1694.78976 1199.67111,1694.78976 C1168.94812,1694.78976 1144.04222,1719.69566 1144.04222,1750.41865 C1144.04222,1781.14164 1168.94812,1806.04755 1199.67111,1806.04755 Z M722.52199,1806.04755 C753.244979,1806.04755 778.150884,1781.14164 778.150884,1750.41865 C778.150884,1719.69566 753.244979,1694.78976 722.52199,1694.78976 C691.799,1694.78976 666.893096,1719.69566 666.893096,1750.41865 C666.893096,1781.14164 691.799,1806.04755 722.52199,1806.04755 Z M1738.19355,1581.17321 C1768.91654,1581.17321 1793.82244,1556.2673 1793.82244,1525.54431 C1793.82244,1494.82132 1768.91654,1469.91542 1738.19355,1469.91542 C1707.47056,1469.91542 1682.56465,1494.82132 1682.56465,1525.54431 C1682.56465,1556.2673 1707.47056,1581.17321 1738.19355,1581.17321 Z M181.230208,1581.17321 C211.953198,1581.17321 236.859102,1556.2673 236.859102,1525.54431 C236.859102,1494.82132 211.953198,1469.91542 181.230208,1469.91542 C150.507218,1469.91542 125.601314,1494.82132 125.601314,1525.54431 C125.601314,1556.2673 150.507218,1581.17321 181.230208,1581.17321 Z M901.046855,348.664896 L1121.08185,480.46113 C1133.59009,489.628452 1141,504.337618 1141,520 C1141,535.662382 1133.59009,550.371548 1121.08185,559.53887 L901.046855,691.335104 C886.19456,700.041024 867.897012,700.046423 853.039735,691.349269 C838.182458,682.652115 829.019897,666.572114 829,649.160309 L829,390.839691 C829.019897,373.427886 838.182458,357.347885 853.039735,348.650731 C867.897012,339.953577 886.19456,339.958976 901.046855,348.664896 Z M1687.20211,933.333333 L1687.20211,136.054422 C1687.20211,119.824013 1674.04476,106.666667 1657.81435,106.666667 L260.434877,106.666667 C244.204468,106.666667 231.047122,119.824013 231.047122,136.054422 L231.047122,933.333333 L1687.20211,933.333333 Z M1687.20211,1040 L231.047122,1040 L231.047122,1107.09854 C231.047122,1123.32895 244.204468,1136.48629 260.434877,1136.48629 L1657.81435,1136.48629 C1674.04476,1136.48629 1687.20211,1123.32895 1687.20211,1107.09854 L1687.20211,1040 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArchiveLine":{"variant":"Line","glyphName":"archive","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M533.333,586.667 L533.333,693.333 L213.333,693.333 L213.333,1173.33 L213.755,1173.33 L447.355,1386.67 L1472.64,1386.67 L1706.24,1173.33 L1706.67,1173.33 L1706.67,693.333 L1386.67,693.333 L1386.67,586.667 L1738.67,586.667 C1779.9,586.667 1813.33,620.096 1813.33,661.333 L1813.33,661.333 L1813.33,1173.33 L1856,1173.33 C1891.35,1173.33 1920,1201.99 1920,1237.33 L1920,1856 C1920,1891.35 1891.35,1920 1856,1920 L64,1920 C28.6538,1920 0,1891.35 0,1856 L0,1237.33 C0,1201.99 28.6538,1173.33 64,1173.33 L106.667,1173.33 L106.667,661.333 C106.667,620.096 140.096,586.667 181.333,586.667 L533.333,586.667 Z M172.378,1280 L106.667,1280 L106.667,1813.33 L1813.33,1813.33 L1813.33,1280 L1747.62,1280 L1514.02,1493.33 L405.978,1493.33 L172.378,1280 Z M1013.33,0 L1013.33,1044.579 L1242.29,815.621 L1317.71,891.046 L960,1248.76 L602.288,891.046 L677.712,815.621 L906.667,1044.576 L906.667,0 L1013.33,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArchiveSolid":{"variant":"Solid","glyphName":"archive","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M533.333,560 L533.333,720 L240,720 L240.008,1173.33 L240.008,1173.33 L449.074,1386.67 L1470.93,1386.67 L1679.99,1173.33 L1680,720 L1386.67,720 L1386.67,560 L1738.67,560 C1794.63,560 1840,605.368 1840,661.333 L1840,661.333 L1840,1173.33 L1856,1173.33 C1891.35,1173.33 1920,1201.99 1920,1237.33 L1920,1856 C1920,1891.35 1891.35,1920 1856,1920 L64,1920 C28.6538,1920 0,1891.35 0,1856 L0,1237.33 C0,1201.99 28.6538,1173.33 64,1173.33 L80,1173.33 L80,661.333 C80,605.368 125.369,560 181.333,560 L533.333,560 Z M1040,0 L1040,958.86 L1223.43,775.431 L1336.57,888.569 L960,1265.14 L583.431,888.569 L696.569,775.431 L880,958.86 L880,0 L1040,0 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconArrowDownLine":{"variant":"Line","glyphName":"arrow-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M902.830849 0L902.830849 1699.92458 426.364697 1223.45843 345 1304.82313 960.176872 1920 1575.58359 1304.82313 1494.21889 1223.45843 1017.75274 1699.92458 1017.75274 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowDownSolid":{"variant":"Solid","glyphName":"arrow-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M849.972557 0.0110255483L849.972557 1497.94201 486.901252 1134.87071 331 1290.77196 960.228039 1920 1589.45608 1290.77196 1433.55483 1134.87071 1070.48352 1497.94201 1070.48352 0.0110255483z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowEndLine":{"variant":"Line","glyphName":"arrow-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1304.824 345.002L1223.574 426.251 1700.04 902.833 0 902.833 0 1017.755 1700.04 1017.755 1223.574 1494.22 1304.824 1575.47 1920 960.293z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowEndSolid":{"variant":"Solid","glyphName":"arrow-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1290.761 331.004L1134.86 486.905 1497.931 849.976 0 849.976 0 1070.487 1497.931 1070.487 1134.86 1433.558 1290.761 1589.46 1919.989 960.232z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowLeftLine":{"variant":"Line","glyphName":"arrow-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M615.176872 345L0 960.291794 615.176872 1575.46867 696.426648 1494.21889 219.960496 1017.75274 1920 1017.75274 1920 902.830849 219.960496 902.830849 696.426648 426.249776z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconArrowLeftSolid":{"variant":"Solid","glyphName":"arrow-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M629.228039 331.011026L0 960.239065 629.228039 1589.4671 785.129292 1433.56585 422.057987 1070.49455 1919.98897 1070.49455 1919.98897 849.983582 422.057987 849.983582 785.129292 486.912278z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconArrowOpenDownLine":{"variant":"Line","glyphName":"arrow-open-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path transform=\"matrix(0 1 1 0 .153 -.153)\" d=\"M526.298905 0L434 92.1683552 1301.63582 959.934725 434 1827.57054 526.298905 1920 1486.23363 959.934725z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowOpenDownSolid":{"variant":"Solid","glyphName":"arrow-open-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path transform=\"matrix(0 1 1 0 .067 -.067)\" d=\"M568.129648 0.0124561278L392 176.142104 1175.86412 960.130789 392 1743.87035 568.129648 1920 1528.24798 960.130789z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowOpenEndLine":{"variant":"Line","glyphName":"arrow-open-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M526.298905 0L434 92.1683552 1301.63582 959.934725 434 1827.57054 526.298905 1920 1486.23363 959.934725z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowOpenEndSolid":{"variant":"Solid","glyphName":"arrow-open-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M568.129648 0.0124561278L392 176.142104 1175.86412 960.130789 392 1743.87035 568.129648 1920 1528.24798 960.130789z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowOpenLeftLine":{"variant":"Line","glyphName":"arrow-open-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path transform=\"matrix(-1 0 0 1 1920.305 0)\" d=\"M526.298905 0L434 92.1683552 1301.63582 959.934725 434 1827.57054 526.298905 1920 1486.23363 959.934725z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconArrowOpenLeftSolid":{"variant":"Solid","glyphName":"arrow-open-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path transform=\"matrix(-1 0 0 1 1920.135 0)\" d=\"M568.129648 0.0124561278L392 176.142104 1175.86412 960.130789 392 1743.87035 568.129648 1920 1528.24798 960.130789z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconArrowOpenRightLine":{"variant":"Line","glyphName":"arrow-open-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M526.298905 0L434 92.1683552 1301.63582 959.934725 434 1827.57054 526.298905 1920 1486.23363 959.934725z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconArrowOpenRightSolid":{"variant":"Solid","glyphName":"arrow-open-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M568.129648 0.0124561278L392 176.142104 1175.86412 960.130789 392 1743.87035 568.129648 1920 1528.24798 960.130789z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconArrowOpenStartLine":{"variant":"Line","glyphName":"arrow-open-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path transform=\"matrix(-1 0 0 1 1920.305 0)\" d=\"M526.298905 0L434 92.1683552 1301.63582 959.934725 434 1827.57054 526.298905 1920 1486.23363 959.934725z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowOpenStartSolid":{"variant":"Solid","glyphName":"arrow-open-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path transform=\"matrix(-1 0 0 1 1920.135 0)\" d=\"M568.129648 0.0124561278L392 176.142104 1175.86412 960.130789 392 1743.87035 568.129648 1920 1528.24798 960.130789z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowOpenUpLine":{"variant":"Line","glyphName":"arrow-open-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path transform=\"rotate(-90 960.153 960)\" d=\"M526.298905 0L434 92.1683552 1301.63582 959.934725 434 1827.57054 526.298905 1920 1486.23363 959.934725z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowOpenUpSolid":{"variant":"Solid","glyphName":"arrow-open-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path transform=\"rotate(-90 960.067 960)\" d=\"M568.129648 0.0124561278L392 176.142104 1175.86412 960.130789 392 1743.87035 568.129648 1920 1528.24798 960.130789z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowRightLine":{"variant":"Line","glyphName":"arrow-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1304.824 345.002L1223.574 426.251 1700.04 902.833 0 902.833 0 1017.755 1700.04 1017.755 1223.574 1494.22 1304.824 1575.47 1920 960.293z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconArrowRightSolid":{"variant":"Solid","glyphName":"arrow-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1290.761 331.004L1134.86 486.905 1497.931 849.976 0 849.976 0 1070.487 1497.931 1070.487 1134.86 1433.558 1290.761 1589.46 1919.989 960.232z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconArrowStartLine":{"variant":"Line","glyphName":"arrow-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M615.176872 345L0 960.291794 615.176872 1575.46867 696.426648 1494.21889 219.960496 1017.75274 1920 1017.75274 1920 902.830849 219.960496 902.830849 696.426648 426.249776z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowStartSolid":{"variant":"Solid","glyphName":"arrow-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M629.228039 331.011026L0 960.239065 629.228039 1589.4671 785.129292 1433.56585 422.057987 1070.49455 1919.98897 1070.49455 1919.98897 849.983582 422.057987 849.983582 785.129292 486.912278z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowUpLine":{"variant":"Line","glyphName":"arrow-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.406 0L345 615.176 426.364 696.542 902.83 220.075 902.83 1920 1017.752 1920 1017.752 220.075 1494.218 696.542 1575.584 615.176z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconArrowUpSolid":{"variant":"Solid","glyphName":"arrow-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M906.228 0.001L277 629.229 432.901 785.13 795.973 422.059 795.973 1919.99 1016.483 1919.99 1016.483 422.059 1379.556 785.13 1535.456 629.229z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAssignmentLine":{"variant":"Line","glyphName":"assignment","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.2137,0 L1468.2137,564.697578 L1355.27419,564.697578 L1355.27419,112.939516 L112.939516,112.939516 L112.939516,1807.03225 L1355.27419,1807.03225 L1355.27419,1581.15322 L1468.2137,1581.15322 L1468.2137,1919.97177 L2.5243549e-29,1919.97177 L2.5243549e-29,0 L1468.2137,0 Z M1597.64239,581.310981 C1619.77853,559.174836 1655.46742,559.174836 1677.60356,581.310981 L1677.60356,581.310981 L1903.4826,807.190012 C1925.5058,829.213217 1925.5058,864.902104 1903.4826,887.038249 L1903.4826,887.038249 L1225.8455,1564.67534 C1215.22919,1575.17872 1200.88587,1581.16451 1185.86491,1581.16451 L1185.86491,1581.16451 L959.985883,1581.16451 C928.814576,1581.16451 903.516125,1555.86606 903.516125,1524.69475 L903.516125,1524.69475 L903.516125,1298.81572 C903.516125,1283.79477 909.501919,1269.45145 920.005294,1258.94807 L920.005294,1258.94807 Z M1442.35055,896.29929 L1016.45564,1322.1942 L1016.45564,1468.225 L1162.48643,1468.225 L1588.38135,1042.33008 L1442.35055,896.29929 Z M677.637094,1242.34597 L677.637094,1355.28548 L338.818547,1355.28548 L338.818547,1242.34597 L677.637094,1242.34597 Z M903.516125,1016.46693 L903.516125,1129.40645 L338.818547,1129.40645 L338.818547,1016.46693 L903.516125,1016.46693 Z M1637.62298,701.026867 L1522.19879,816.451052 L1668.22958,962.481846 L1783.65377,847.057661 L1637.62298,701.026867 Z M1129.39516,338.829841 L1129.39516,790.587903 L338.818547,790.587903 L338.818547,338.829841 L1129.39516,338.829841 Z M1016.45564,451.769356 L451.758062,451.769356 L451.758062,677.648388 L1016.45564,677.648388 L1016.45564,451.769356 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAssignmentSolid":{"variant":"Solid","glyphName":"assignment","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.2137,0 L1468.2137,551.144836 L840.269996,1179.08854 C808.646932,1210.71161 790.576609,1253.62862 790.576609,1298.80443 L790.576609,1298.80443 L790.576609,1694.09273 L1185.86491,1694.09273 C1231.04072,1694.09273 1273.95774,1676.02241 1305.5808,1644.39935 L1305.5808,1644.39935 L1468.2137,1481.76644 L1468.2137,1919.97177 L0,1919.97177 L0,0 L1468.2137,0 Z M1597.64239,581.299687 C1619.77853,559.163542 1655.46742,559.163542 1677.60356,581.299687 L1677.60356,581.299687 L1903.4826,807.178718 C1925.5058,829.201924 1925.5058,864.89081 1903.4826,887.026955 L1903.4826,887.026955 L1225.8455,1564.66405 C1215.22919,1575.16742 1200.88587,1581.15322 1185.86491,1581.15322 L1185.86491,1581.15322 L903.516125,1581.15322 L903.516125,1298.80443 C903.516125,1283.78347 909.501919,1269.44016 920.005294,1258.93678 L920.005294,1258.93678 Z M677.637094,1129.39516 L338.818547,1129.39516 L338.818547,1242.33467 L677.637094,1242.33467 L677.637094,1129.39516 Z M903.516125,903.516125 L338.818547,903.516125 L338.818547,1016.45564 L903.516125,1016.45564 L903.516125,903.516125 Z M1637.62298,701.015573 L1548.06194,790.576609 L1694.09273,936.607403 L1783.65377,847.046367 L1637.62298,701.015573 Z M1129.39516,338.818547 L338.818547,338.818547 L338.818547,677.637094 L1129.39516,677.637094 L1129.39516,338.818547 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAttachMediaLine":{"variant":"Line","glyphName":"attach-media","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M101.002105,1230.63705 L101.002105,377.954947 C658.711579,230.317053 1177.31368,342.485474 1315.45263,377.954947 L1315.45263,773.879158 L1416.50526,743.563368 L1416.50526,302.165474 L1380.83368,291.150737 C1354.56,282.864421 729.246316,93.9970526 31.68,292.464421 L-0.0505263158,305.197053 L-0.0505263158,1306.42653 L35.6210526,1317.34021 C52.9010526,1322.79705 331.402105,1406.87284 717.827368,1406.87284 C840,1406.87284 973.692632,1396.86863 1112.53895,1374.94021 L1112.53895,1273.68547 C636.176842,1351.496 222.063158,1261.66021 101.002105,1230.63705 M1919.90905,789.309895 L1919.90905,1482.83411 C1919.808,1585.90779 1837.65221,1669.68042 1736.59958,1669.68042 C1644.74274,1669.68042 1569.25642,1600.15621 1556.01853,1510.21937 C1554.60379,1501.12463 1553.29011,1492.02989 1553.29011,1482.53095 C1553.29011,1379.45726 1635.44589,1295.48253 1736.59958,1295.48253 C1753.27326,1295.48253 1769.13853,1298.41305 1784.49853,1302.75832 C1796.52379,1305.992 1808.04379,1310.64042 1818.85642,1316.29937 L1818.85642,1316.29937 L1818.85642,924.619368 L1779.04168,936.442526 L1416.46484,1043.76042 L1388.57432,1051.94568 L1388.57432,1631.88674 C1388.57432,1634.71621 1387.86695,1637.34358 1387.76589,1640.072 C1383.52168,1739.30568 1303.58905,1819.03621 1205.16379,1819.03621 C1104.01011,1819.03621 1021.85432,1735.06147 1021.85432,1631.88674 C1021.85432,1563.37305 1058.53642,1503.85305 1112.49853,1471.31411 C1139.88379,1454.84253 1171.21011,1444.73726 1205.16379,1444.73726 C1234.97432,1444.73726 1262.66274,1452.72042 1287.52168,1465.55411 L1287.52168,1465.55411 L1287.52168,976.459368 L1315.41221,968.274105 L1416.46484,938.362526 L1777.42484,831.549895 L1919.90905,789.309895 Z M527.514947,480.634526 L1088.35705,810.470316 L527.514947,1140.20505 L527.514947,480.634526 Z M628.567579,657.274526 L628.567579,963.565053 L888.980211,810.470316 L628.567579,657.274526 Z M1736.59958,1568.62779 C1698.50274,1568.62779 1667.78274,1540.93937 1658.48589,1503.95411 C1656.66695,1496.98147 1654.34274,1490.21095 1654.34274,1482.53095 C1654.34274,1435.13726 1691.22695,1396.53516 1736.59958,1396.53516 C1755.49642,1396.53516 1772.27116,1404.31621 1786.11537,1415.63411 C1805.61853,1431.39832 1818.85642,1454.94358 1818.85642,1482.53095 C1818.85642,1530.02568 1781.97221,1568.62779 1736.59958,1568.62779 L1736.59958,1568.62779 Z M1205.16379,1717.98358 C1159.79116,1717.98358 1122.90695,1679.38147 1122.90695,1631.88674 C1122.90695,1584.392 1159.79116,1545.78989 1205.16379,1545.78989 C1250.53642,1545.78989 1287.52168,1584.392 1287.52168,1631.88674 C1287.52168,1679.38147 1250.53642,1717.98358 1205.16379,1717.98358 L1205.16379,1717.98358 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAttachMediaSolid":{"variant":"Solid","glyphName":"attach-media","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,707.040389 L1920,1419.44309 C1919.89621,1525.20334 1835.41256,1611.24381 1731.62429,1611.24381 C1627.73223,1611.24381 1543.35236,1525.09955 1543.35236,1419.13172 C1543.35236,1313.1639 1627.73223,1226.91584 1731.62429,1226.91584 C1762.24183,1226.91584 1790.7836,1235.01133 1816.21173,1248.29623 L1816.21173,1248.29623 L1816.21173,846.012885 L1374.17748,976.786108 L1374.17748,1580.83385 L1373.34717,1580.83385 C1368.98806,1682.85772 1286.89154,1764.64288 1185.90555,1764.64288 C1082.01349,1764.64288 997.529839,1678.49861 997.529839,1572.427 C997.529839,1466.56296 1082.01349,1380.31491 1185.90555,1380.31491 C1216.4193,1380.31491 1244.85729,1388.41039 1270.38921,1401.69529 L1270.38921,1401.69529 L1270.38921,899.256269 L1920,707.040389 Z M0.207576544,244.954245 C704.51479,44.7466685 1351.01194,245.058033 1351.01194,245.058033 L1351.01194,245.058033 L1351.01194,725.597732 L1149.03996,786.313871 L1149.03996,1246.30349 C527.970939,1362.1312 0,1199.91014 0,1199.91014 L0,1199.91014 L0,245.058033 Z M541.774779,480.761199 L541.774779,976.76535 L752.56876,852.738365 L963.466528,728.815169 L752.56876,604.684396 L541.774779,480.761199 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAudioOffLine":{"variant":"Line","glyphName":"audio-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1129.4317,113 L1129.4317,1807.14754 L936.637705,1807.14754 L484.865027,1355.37487 L169.414754,1355.37487 C76.9447931,1355.37487 1.52195439,1280.87673 0.0227446084,1188.75695 L-4.54747351e-13,1185.96011 L-4.54747351e-13,734.187433 C-4.54747351e-13,641.717471 74.4981391,566.294633 166.617911,564.795423 L169.414754,564.772678 L484.865027,564.772678 L936.637705,113 L1129.4317,113 Z M1016.48853,225.94317 L983.396178,225.94317 L564.715848,644.623499 L564.715848,1275.52404 L983.396178,1694.20437 L1016.48853,1694.20437 L1016.48853,225.94317 Z M1840.15059,637.722353 L1920,717.571765 L1677.62824,959.943529 L1920,1202.42824 L1840.15059,1282.27765 L1597.66588,1039.90588 L1355.29412,1282.27765 L1275.44471,1202.42824 L1517.81647,959.943529 L1275.44471,717.571765 L1355.29412,637.722353 L1597.66588,880.094118 L1840.15059,637.722353 Z M451.772678,677.715848 L169.414754,677.715848 C138.665976,677.715848 113.451979,702.511662 112.950773,733.254045 L112.94317,734.187433 L112.94317,1185.96011 C112.94317,1216.8207 137.84968,1241.92512 168.484687,1242.42413 L169.414754,1242.4317 L451.772678,1242.4317 L451.772678,677.715848 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAudioOffSolid":{"variant":"Solid","glyphName":"audio-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1129.43333,113 L1129.43333,1807.15 L903.546667,1807.15 L451.773333,1355.37667 L451.773333,564.773333 L903.546667,113 L1129.43333,113 Z M338.83,564.773333 L338.83,1355.37667 L169.415,1355.37667 C76.609463,1355.37667 1.51524776,1281.21051 0.0226440087,1188.76848 L-2.02476258e-10,1185.96167 L-2.02476258e-10,734.188333 C-2.02476258e-10,641.382796 74.1661599,566.288581 166.60819,564.795977 L169.415,564.773333 L338.83,564.773333 Z M1789.95097,635 L1920,764.926457 L1724.98774,959.938714 L1920,1154.95097 L1789.95097,1285 L1595.06129,1089.98774 L1400.04903,1285 L1270,1154.95097 L1465.01226,959.938714 L1270,764.926457 L1400.04903,635 L1595.06129,830.012257 L1789.95097,635 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAudioLine":{"variant":"Line","glyphName":"audio","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1129.4317,113 L1129.4317,1807.14754 L936.637705,1807.14754 L484.865027,1355.37487 L169.414754,1355.37487 C76.0107531,1355.37487 0,1279.36411 0,1185.96011 L0,1185.96011 L0,734.187433 C0,640.783431 76.0107531,564.772678 169.414754,564.772678 L169.414754,564.772678 L484.865027,564.772678 L936.637705,113 L1129.4317,113 Z M1016.48853,225.94317 L983.396178,225.94317 L564.715848,644.623499 L564.715848,1275.52404 L983.396178,1694.20437 L1016.48853,1694.20437 L1016.48853,225.94317 Z M1671.9768,361.057083 C1831.90433,521.097555 1920,733.769543 1920,960.107655 C1920,1186.33282 1831.90433,1399.00481 1671.9768,1559.04528 L1671.9768,1559.04528 L1592.12598,1479.19446 C1730.82019,1340.50025 1807.05683,1156.177 1807.05683,960.107655 C1807.05683,763.925369 1730.82019,579.602117 1592.12598,440.907904 L1592.12598,440.907904 Z M1432.86482,600.801549 C1528.52768,697.819732 1581.1592,825.445514 1581.1592,960.073772 C1581.1592,1094.70203 1528.52768,1222.32781 1432.86482,1319.34599 L1432.86482,1319.34599 L1352.33634,1240.05989 C1427.10471,1164.27502 1468.21603,1064.88503 1468.21603,960.073772 C1468.21603,855.262511 1427.10471,755.872521 1352.33634,680.087654 L1352.33634,680.087654 Z M451.772678,677.715848 L169.414754,677.715848 C138.355383,677.715848 112.94317,703.015118 112.94317,734.187433 L112.94317,734.187433 L112.94317,1185.96011 C112.94317,1217.13243 138.355383,1242.4317 169.414754,1242.4317 L169.414754,1242.4317 L451.772678,1242.4317 L451.772678,677.715848 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconAudioSolid":{"variant":"Solid","glyphName":"audio","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1129.4317,113 L1129.4317,1807.14754 L903.545357,1807.14754 L451.772678,1355.37487 L451.772678,564.772678 L903.545357,113 L1129.4317,113 Z M1671.9768,361.057083 C1832.01727,521.097555 1920,733.882486 1920,960.107655 C1920,1186.33282 1832.01727,1399.00481 1671.9768,1559.04528 L1671.9768,1559.04528 L1592.12598,1479.19446 C1730.82019,1340.61319 1807.05683,1156.177 1807.05683,960.107655 C1807.05683,763.925369 1730.82019,579.602117 1592.12598,440.907904 L1592.12598,440.907904 Z M338.829509,564.772678 L338.829509,1355.37487 L169.414754,1355.37487 C75.6719236,1355.37487 0,1279.70294 0,1185.96011 L0,1185.96011 L0,734.187433 C0,640.444602 75.6719236,564.772678 169.414754,564.772678 L169.414754,564.772678 L338.829509,564.772678 Z M1432.75187,600.858021 C1528.52768,697.876204 1581.1592,825.501985 1581.1592,960.0173 C1581.1592,1094.64556 1528.52768,1222.27134 1432.75187,1319.28952 L1432.75187,1319.28952 L1352.44928,1240.11636 C1427.10471,1164.21855 1468.21603,1064.71562 1468.21603,960.0173 C1468.21603,855.431925 1427.10471,755.928993 1352.44928,680.031183 L1352.44928,680.031183 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBankLine":{"variant":"Line","glyphName":"bank","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M561.272621,1604.00563 L755.546927,1604.00563 C780.4209,1604.00563 784.602301,1594.67789 786.746609,1589.63877 L820.841106,1515.55292 C839.496586,1467.30599 898.572271,1427.31465 957.004664,1425.49199 C984.022945,1424.74148 1040.31103,1424.95591 1087.80745,1425.27756 L1140.98629,1425.49199 C1194.16513,1425.49199 1237.8018,1454.01128 1270.5025,1510.19215 L1310.60106,1580.73989 C1316.4979,1591.46143 1328.18438,1602.93348 1343.51618,1602.93348 L1527.28338,1603.68398 L1472.81796,1370.06163 L1509.91448,1350.87007 C1625.38547,1291.25831 1704.18879,1160.24109 1693.36003,1046.1639 L1689.71471,1008.5313 L1724.13085,992.448986 C1795.96517,959.104996 1829.95246,921.25796 1804.11354,817.259021 C1789.10339,756.253458 1737.53278,699.536512 1670.41594,714.439452 L1631.49675,723.1239 L1611.87633,688.38611 C1494.58268,479.744941 1325.28957,399.011744 1204.02895,367.919278 C1010.07629,318.171332 836.172908,363.094585 772.165314,403.085929 L731.423462,428.495979 L701.724796,390.863374 C637.824417,309.701316 534.361556,300.695222 452.877852,336.290735 C483.112594,387.003619 509.487583,448.116398 524.497739,504.511698 L535.755356,546.754566 L496.72895,566.267769 C432.828572,598.217958 349.843852,717.227053 332.367741,802.034434 L328.722418,819.832191 L314.891631,831.7331 C251.312899,886.627385 169.829194,906.355019 107.2154,912.573512 L107.2154,1092.90982 C107.2154,1148.44739 133.483174,1177.50277 189.771259,1184.47177 C282.298149,1195.94382 328.507987,1245.37012 369.249839,1289.00678 C414.601954,1337.46814 453.84279,1379.38937 564.596299,1389.78926 L624.851354,1395.47168 L611.87829,1454.65458 C604.694859,1487.67692 581.10747,1552.43502 561.272621,1604.00563 L561.272621,1604.00563 Z M1662.482,1711.54268 L1343.30175,1710.14888 C1291.30228,1710.14888 1242.73371,1680.45021 1216.8948,1632.73936 L1177.65396,1563.69264 C1159.64177,1532.70739 1146.99035,1532.70739 1140.98629,1532.70739 L1087.16416,1532.49296 C1041.16875,1532.27853 986.596115,1531.95688 960.328342,1532.70739 C942.852232,1533.24347 923.124598,1548.03919 919.479274,1557.36693 L884.527054,1633.59708 C863.083974,1682.59452 815.909197,1711.22103 755.546927,1711.22103 L402.80826,1711.22103 L432.828572,1637.45683 C445.158343,1607.11488 472.069408,1538.71145 490.296026,1486.39034 C384.259995,1462.05244 333.225465,1407.4798 290.982597,1362.2349 C254.529361,1323.2085 230.513111,1297.58402 176.69098,1290.93666 C66.0446867,1277.3203 0,1203.23446 0,1092.90982 L0,808.145712 L53.6077002,808.145712 C125.442019,808.145712 189.342397,790.884033 232.228557,760.434859 C256.995315,671.017215 327.97191,556.082306 409.348399,494.969528 C388.655827,436.215488 358.313868,382.822219 334.190403,351.944183 L299.98869,308.521946 L344.590297,275.714034 C474.642578,180.077896 646.61608,189.08399 755.332496,291.045836 C866.086005,241.405105 1050.71092,217.817717 1230.61837,264.027555 C1365.9242,298.658129 1552.26457,386.038681 1687.14154,604.758098 C1784.81477,604.329236 1879.7004,676.592416 1908.2197,791.42011 C1940.59875,921.901252 1906.61147,1012.28383 1801.54037,1073.07497 C1799.18164,1206.987 1718.12679,1345.61651 1595.68681,1424.95591 L1662.482,1711.54268 Z M850.722038,645.446342 L797.75763,552.276159 C945.929314,468.004854 1120.04712,467.468777 1263.2869,550.882359 L1209.46477,643.516465 C1097.74632,578.758363 967.050748,579.401655 850.722038,645.446342 M750.518525,853.497827 C750.518525,912.680728 702.486025,960.713227 643.303124,960.713227 C584.120223,960.713227 536.087724,912.680728 536.087724,853.497827 C536.087724,794.314926 584.120223,746.282426 643.303124,746.282426 C702.486025,746.282426 750.518525,794.314926 750.518525,853.497827\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBankSolid":{"variant":"Solid","glyphName":"bank","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1209.41883,643.473317 C1097.6977,578.713656 966.998976,579.356964 850.667466,645.510458 L797.701783,552.230814 C945.877034,467.957481 1119.99904,467.528609 1263.24226,550.944199 L1209.41883,643.473317 Z M643.30789,960.731324 C584.016346,960.731324 536.089908,912.804886 536.089908,853.513343 C536.089908,794.221799 584.016346,746.295361 643.30789,746.295361 C702.492215,746.295361 750.525871,794.221799 750.525871,853.513343 C750.525871,912.804886 702.492215,960.731324 643.30789,960.731324 L643.30789,960.731324 Z M1908.26564,791.541349 C1879.74565,676.603673 1784.85774,604.338753 1687.18216,604.767625 C1552.19472,386.150161 1365.95709,298.660288 1230.64799,264.02888 C1050.73622,217.81793 866.106855,241.405886 755.35068,291.047811 C646.631647,189.083511 474.546787,180.0772 344.491375,275.71564 L299.995913,308.417124 L334.091231,351.947625 C358.322495,382.719185 388.665183,436.11374 409.358254,494.976412 C327.979806,556.090662 257.001502,671.028338 232.12693,760.555353 C189.239738,790.898041 125.33782,808.052918 53.6089908,808.052918 L0,808.052918 L0,1092.9311 C0,1203.2584 65.9390587,1277.34602 176.588016,1290.96271 C230.51866,1297.61022 254.535488,1323.23532 290.882384,1362.15545 C333.233487,1407.40144 384.162028,1462.08261 490.30783,1486.42109 C472.080773,1538.74346 445.16906,1607.14854 432.731774,1637.49122 L402.817957,1711.2572 L755.565116,1711.2572 C815.92884,1711.2572 863.104752,1682.52278 884.548348,1633.52416 L919.394192,1557.39939 C923.146822,1548.17865 942.87493,1533.27535 960.351461,1532.73926 C986.512649,1531.98873 1041.0866,1532.31038 1087.19033,1532.63204 L1140.90654,1532.84647 C1146.91075,1532.84647 1159.56247,1532.84647 1177.57509,1563.61803 L1216.92409,1632.77363 C1242.76362,1680.48563 1291.22615,1710.18502 1343.33409,1710.18502 L1662.4148,1711.57885 L1595.72522,1424.98518 C1718.16816,1345.64388 1799.22495,1207.01103 1801.47653,1073.09577 C1906.65737,1012.19596 1940.53825,922.025633 1908.26564,791.541349 L1908.26564,791.541349 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBlueprintLockLine":{"variant":"Line","glyphName":"blueprint-lock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1300.007,676.9996 C1485.521,676.9996 1636.515,827.9376 1636.515,1013.5066 L1636.515,1013.5066 L1636.515,1246.9996 L1779.015,1246.9996 L1779.015,1761.6316 C1779.015,1848.9856 1707.985,1920.0146 1620.632,1920.0146 L1620.632,1920.0146 L979.382,1920.0146 C892.029,1920.0146 821,1848.9856 821,1761.6316 L821,1761.6316 L821,1246.9996 L963.5,1246.9996 L963.5,1013.5066 C963.5,827.9376 1114.492,676.9996 1300.007,676.9996 Z M1676,1350.0146 L924.015,1350.0146 L924.015,1761.6316 C924.015,1792.1836 948.886,1816.9996 979.382,1816.9996 L979.382,1816.9996 L1620.632,1816.9996 C1651.184,1816.9996 1676,1792.1836 1676,1761.6316 L1676,1761.6316 L1676,1350.0146 Z M1581.1771,338.8234 L1581.1771,564.7054 L1468.2351,564.7054 L1468.2351,451.7644 L451.7651,451.7644 L451.7651,1468.2354 L564.7061,1468.2354 L564.7061,1581.1764 L338.8241,1581.1764 L338.8241,338.8234 L1581.1771,338.8234 Z M1300.007,780.0146 C1171.294,780.0146 1066.515,884.7936 1066.515,1013.5066 L1066.515,1013.5066 L1066.515,1246.9996 L1533.5,1246.9996 L1533.5,1013.5066 C1533.5,884.7936 1428.721,780.0146 1300.007,780.0146 Z M1242.353,0 L1242.353,225.882 L1129.412,225.882 L1129.412,112.941 L112.941,112.941 L112.941,1129.412 L225.882,1129.412 L225.882,1242.352 L5.68434189e-14,1242.352 L5.68434189e-14,0 L1242.353,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBlueprintLockSolid":{"variant":"Solid","glyphName":"blueprint-lock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1300.007,676.9996 C1485.521,676.9996 1636.515,827.9376 1636.515,1013.5066 L1636.515,1013.5066 L1636.515,1246.9996 L1779.015,1246.9996 L1779.015,1761.6316 C1779.015,1848.9856 1707.985,1920.0146 1620.632,1920.0146 L1620.632,1920.0146 L979.382,1920.0146 C892.029,1920.0146 821,1848.9856 821,1761.6316 L821,1761.6316 L821,1246.9996 L963.5,1246.9996 L963.5,1013.5066 C963.5,827.9376 1114.492,676.9996 1300.007,676.9996 Z M1581.1771,338.8234 L1581.1771,564.7054 L1468.2351,564.7054 L1468.2351,451.7644 L451.7651,451.7644 L451.7651,1468.2354 L564.7061,1468.2354 L564.7061,1581.1764 L338.8241,1581.1764 L338.8241,338.8234 L1581.1771,338.8234 Z M1300.007,780.0146 C1171.294,780.0146 1066.515,884.7936 1066.515,1013.5066 L1066.515,1013.5066 L1066.515,1246.9996 L1533.5,1246.9996 L1533.5,1013.5066 C1533.5,884.7936 1428.721,780.0146 1300.007,780.0146 Z M1242.353,0 L1242.353,225.882 L1129.412,225.882 L1129.412,112.941 L112.941,112.941 L112.941,1129.412 L225.882,1129.412 L225.882,1242.352 L5.68434189e-14,1242.352 L5.68434189e-14,0 L1242.353,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBlueprintLine":{"variant":"Line","glyphName":"blueprint","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M790.5886,1750.588 L790.5886,1807.059 L847.0586,1807.059 L847.0586,1920 L677.6466,1920 L677.6466,1750.588 L790.5886,1750.588 Z M1208.383,1807.059 L1208.383,1920 L1027.721,1920 L1027.721,1807.059 L1208.383,1807.059 Z M1569.816,1807.059 L1569.816,1920 L1389.154,1920 L1389.154,1807.059 L1569.816,1807.059 Z M1920,1750.588 L1920,1920 L1750.588,1920 L1750.588,1807.059 L1807.059,1807.059 L1807.059,1750.588 L1920,1750.588 Z M1581.1771,338.8238 L1581.1771,564.7058 L1468.2351,564.7058 L1468.2351,451.7648 L451.7651,451.7648 L451.7651,1468.2358 L564.7061,1468.2358 L564.7061,1581.1768 L338.8241,1581.1768 L338.8241,338.8238 L1581.1771,338.8238 Z M1920,1389.265 L1920,1569.927 L1807.059,1569.927 L1807.059,1389.265 L1920,1389.265 Z M790.588,1389.154 L790.588,1569.816 L677.647,1569.816 L677.647,1389.154 L790.588,1389.154 Z M1242.353,0.0004 L1242.353,225.8824 L1129.412,225.8824 L1129.412,112.9414 L112.941,112.9414 L112.941,1129.4124 L225.882,1129.4124 L225.882,1242.3524 L5.68434189e-14,1242.3524 L5.68434189e-14,0.0004 L1242.353,0.0004 Z M1920,1027.831 L1920,1208.492 L1807.059,1208.492 L1807.059,1027.831 L1920,1027.831 Z M790.588,1027.721 L790.588,1208.383 L677.647,1208.383 L677.647,1027.721 L790.588,1027.721 Z M1920,677.6466 L1920,847.0586 L1807.059,847.0586 L1807.059,790.5886 L1750.588,790.5886 L1750.588,677.6466 L1920,677.6466 Z M847.0584,677.6466 L847.0584,790.5886 L790.5884,790.5886 L790.5884,847.0586 L677.6474,847.0586 L677.6474,677.6466 L847.0584,677.6466 Z M1208.492,677.647 L1208.492,790.588 L1027.831,790.588 L1027.831,677.647 L1208.492,677.647 Z M1569.927,677.647 L1569.927,790.588 L1389.265,790.588 L1389.265,677.647 L1569.927,677.647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBlueprintSolid":{"variant":"Solid","glyphName":"blueprint","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M790.5886,1750.588 L790.5886,1807.059 L847.0586,1807.059 L847.0586,1920 L677.6466,1920 L677.6466,1750.588 L790.5886,1750.588 Z M1208.383,1807.059 L1208.383,1920 L1027.721,1920 L1027.721,1807.059 L1208.383,1807.059 Z M1569.816,1807.059 L1569.816,1920 L1389.154,1920 L1389.154,1807.059 L1569.816,1807.059 Z M1920,1750.588 L1920,1920 L1750.588,1920 L1750.588,1807.059 L1807.059,1807.059 L1807.059,1750.588 L1920,1750.588 Z M1581.1771,338.8238 L1581.1771,564.7058 L1468.2351,564.7058 L1468.2351,451.7648 L451.7651,451.7648 L451.7651,1468.2358 L564.7061,1468.2358 L564.7061,1581.1768 L338.8241,1581.1768 L338.8241,338.8238 L1581.1771,338.8238 Z M1920,1389.265 L1920,1569.927 L1807.059,1569.927 L1807.059,1389.265 L1920,1389.265 Z M790.588,1389.154 L790.588,1569.816 L677.647,1569.816 L677.647,1389.154 L790.588,1389.154 Z M1242.353,0.0004 L1242.353,225.8824 L1129.412,225.8824 L1129.412,112.9414 L112.941,112.9414 L112.941,1129.4124 L225.882,1129.4124 L225.882,1242.3524 L5.68434189e-14,1242.3524 L5.68434189e-14,0.0004 L1242.353,0.0004 Z M1920,1027.831 L1920,1208.492 L1807.059,1208.492 L1807.059,1027.831 L1920,1027.831 Z M790.588,1027.721 L790.588,1208.383 L677.647,1208.383 L677.647,1027.721 L790.588,1027.721 Z M1920,677.6466 L1920,847.0586 L1807.059,847.0586 L1807.059,790.5886 L1750.588,790.5886 L1750.588,677.6466 L1920,677.6466 Z M847.0584,677.6466 L847.0584,790.5886 L790.5884,790.5886 L790.5884,847.0586 L677.6474,847.0586 L677.6474,677.6466 L847.0584,677.6466 Z M1208.492,677.647 L1208.492,790.588 L1027.831,790.588 L1027.831,677.647 L1208.492,677.647 Z M1569.927,677.647 L1569.927,790.588 L1389.265,790.588 L1389.265,677.647 L1569.927,677.647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBoldLine":{"variant":"Line","glyphName":"bold","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M480.285714,822.857143 L1028.85714,822.857143 C1180.12571,822.857143 1303.14286,699.84 1303.14286,548.571429 C1303.14286,397.302857 1180.12571,274.285714 1028.85714,274.285714 L480.285714,274.285714 L480.285714,822.857143 Z M480.285714,1645.71429 L1166,1645.71429 C1317.26857,1645.71429 1440.28571,1522.69714 1440.28571,1371.42857 C1440.28571,1220.16 1317.26857,1097.14286 1166,1097.14286 L480.285714,1097.14286 L480.285714,1645.71429 Z M1166,1920 L206,1920 L206,0 L1028.85714,0 C1331.39429,0 1577.42857,246.034286 1577.42857,548.571429 C1577.42857,682.834286 1528.88,805.988571 1448.65143,901.302857 C1607.87429,997.44 1714.57143,1172.29714 1714.57143,1371.42857 C1714.57143,1673.96571 1468.53714,1920 1166,1920 L1166,1920 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBoldSolid":{"variant":"Solid","glyphName":"bold","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M480.285714,822.857143 L1028.85714,822.857143 C1180.12571,822.857143 1303.14286,699.84 1303.14286,548.571429 C1303.14286,397.302857 1180.12571,274.285714 1028.85714,274.285714 L480.285714,274.285714 L480.285714,822.857143 Z M480.285714,1645.71429 L1166,1645.71429 C1317.26857,1645.71429 1440.28571,1522.69714 1440.28571,1371.42857 C1440.28571,1220.16 1317.26857,1097.14286 1166,1097.14286 L480.285714,1097.14286 L480.285714,1645.71429 Z M1166,1920 L206,1920 L206,0 L1028.85714,0 C1331.39429,0 1577.42857,246.034286 1577.42857,548.571429 C1577.42857,682.834286 1528.88,805.988571 1448.65143,901.302857 C1607.87429,997.44 1714.57143,1172.29714 1714.57143,1371.42857 C1714.57143,1673.96571 1468.53714,1920 1166,1920 L1166,1920 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBookmarkLine":{"variant":"Line","glyphName":"bookmark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.481253,1412.10922 L1472.23864,1719.16366 L1472.23864,170.585796 C1472.23864,139.311734 1446.65077,113.723864 1415.37671,113.723864 L505.585796,113.723864 C474.311734,113.723864 448.723864,139.311734 448.723864,170.585796 L448.723864,1719.16366 L960.481253,1412.10922 Z M1585.96251,1920 L960.481253,1544.71125 L335,1920 L335,170.585796 C335,76.5361606 411.536161,0 505.585796,0 L1415.37671,0 C1509.42635,0 1585.96251,76.5361606 1585.96251,170.585796 L1585.96251,1920 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBookmarkSolid":{"variant":"Solid","glyphName":"bookmark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1585.96251,1920 L960.481253,1544.71125 L335,1920 L335,170.585796 C335,76.5361606 411.536161,0 505.585796,0 L1415.37671,0 C1509.42635,0 1585.96251,76.5361606 1585.96251,170.585796 L1585.96251,1920 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBoxLine":{"variant":"Line","glyphName":"box","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.23529,0 L1468.23529,112.941176 L451.764706,112.941176 L451.764706,0 L0,0 L0,451.877647 L112.941176,451.877647 L112.941176,1468.34824 L0,1468.34824 L0,1920 L451.764706,1920 L451.764706,1807.05882 L1468.23529,1807.05882 L1468.23529,1920 L1920.11294,1920 L1920.11294,1468.34824 L1807.17176,1468.34824 L1807.17176,451.877647 L1920.11294,451.877647 L1920.11294,0 L1468.23529,0 Z M1581.28941,338.823529 L1807.17176,338.823529 L1807.17176,112.941176 L1581.28941,112.941176 L1581.28941,338.823529 Z M112.941176,338.823529 L338.823529,338.823529 L338.823529,112.941176 L112.941176,112.941176 L112.941176,338.823529 Z M225.882353,451.877647 L451.764706,451.877647 L451.764706,225.882353 L1468.23529,225.882353 L1468.23529,451.877647 L1694.23059,451.877647 L1694.23059,1468.34824 L1468.23529,1468.34824 L1468.23529,1694.11765 L451.764706,1694.11765 L451.764706,1468.34824 L225.882353,1468.34824 L225.882353,451.877647 Z M1581.28941,1807.05882 L1807.17176,1807.05882 L1807.17176,1581.17647 L1581.28941,1581.17647 L1581.28941,1807.05882 Z M112.941176,1807.05882 L338.823529,1807.05882 L338.823529,1581.17647 L112.941176,1581.17647 L112.941176,1807.05882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBoxSolid":{"variant":"Solid","glyphName":"box","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.23529,0 L1468.23529,112.941176 L451.764706,112.941176 L451.764706,0 L0,0 L0,451.877647 L112.941176,451.877647 L112.941176,1468.34824 L0,1468.34824 L0,1920 L451.764706,1920 L451.764706,1807.05882 L1468.23529,1807.05882 L1468.23529,1920 L1920.11294,1920 L1920.11294,1468.34824 L1807.17176,1468.34824 L1807.17176,451.877647 L1920.11294,451.877647 L1920.11294,0 L1468.23529,0 Z M225.882353,451.877647 L451.764706,451.877647 L451.764706,225.882353 L1468.23529,225.882353 L1468.23529,451.877647 L1694.23059,451.877647 L1694.23059,1468.34824 L1468.23529,1468.34824 L1468.23529,1694.11765 L451.764706,1694.11765 L451.764706,1468.34824 L225.882353,1468.34824 L225.882353,451.877647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListAlphaLine":{"variant":"Line","glyphName":"bullet-list-alpha","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M546.15,1603.617 L1906.15,1603.617 L1906.15,1483.617 L546.15,1483.617 L546.15,1603.617 Z M546.15,482.616 L1906.15,482.616 L1906.15,362.616 L546.15,362.616 L546.15,482.616 Z M546.15,1043.616 L1906.15,1043.616 L1906.15,923.616 L546.15,923.616 L546.15,1043.616 Z M271.675,429.5 L234.55,319.775 C231.8,312.808 228.867,304.604 225.75,295.162 C222.633,285.721 219.517,275.5 216.4,264.5 C213.65,275.683 210.717,286.042 207.6,295.575 C204.483,305.108 201.55,313.358 198.8,320.325 L161.95,429.5 L271.675,429.5 Z M419.35,582.675 L347.3,582.675 C339.233,582.675 332.725,580.796 327.775,577.037 C322.825,573.279 319.067,568.467 316.5,562.6 L292.85,492.75 L140.5,492.75 L116.85,562.6 C114.833,567.733 111.213,572.362 105.988,576.487 C100.762,580.613 94.3,582.675 86.6,582.675 L14,582.675 L169.1,182 L264.25,182 L419.35,582.675 Z M230.325,1112.55 C242.608,1112.55 252.646,1110.992 260.437,1107.875 C268.229,1104.758 274.325,1100.725 278.725,1095.775 C283.125,1090.825 286.15,1085.234 287.8,1079 C289.45,1072.767 290.275,1066.442 290.275,1060.025 C290.275,1052.692 289.312,1046.092 287.388,1040.225 C285.463,1034.359 282.162,1029.409 277.488,1025.375 C272.812,1021.341 266.625,1018.225 258.925,1016.025 C251.225,1013.825 241.509,1012.725 229.775,1012.725 L164.875,1012.725 L164.875,1112.55 L230.325,1112.55 Z M164.875,851.575 L164.875,950.575 L213.275,950.575 C223.542,950.575 232.8,949.842 241.05,948.375 C249.3,946.908 256.312,944.342 262.088,940.675 C267.863,937.008 272.263,931.967 275.287,925.55 C278.312,919.133 279.825,911.067 279.825,901.35 C279.825,891.817 278.633,883.888 276.25,877.562 C273.867,871.238 270.2,866.15 265.25,862.3 C260.3,858.45 254.021,855.7 246.412,854.05 C238.804,852.4 229.775,851.575 219.325,851.575 L164.875,851.575 Z M219.325,782 C247.009,782 270.567,784.567 290,789.7 C309.433,794.833 325.292,802.075 337.575,811.425 C349.858,820.775 358.796,832.141 364.388,845.525 C369.979,858.909 372.775,873.85 372.775,890.35 C372.775,899.333 371.492,907.996 368.925,916.337 C366.358,924.679 362.325,932.471 356.825,939.712 C351.325,946.954 344.267,953.6 335.65,959.65 C327.034,965.7 316.675,970.925 304.575,975.325 C330.975,981.742 350.5,992.1 363.15,1006.4 C375.8,1020.701 382.125,1039.216 382.125,1061.95 C382.125,1079 378.825,1094.859 372.225,1109.525 C365.625,1124.192 355.954,1136.979 343.213,1147.887 C330.471,1158.796 314.75,1167.321 296.05,1173.462 C277.35,1179.604 255.992,1182.675 231.975,1182.675 L71.925,1182.675 L71.925,782 L219.325,782 Z M345.975,1629 C348.175,1629 350.375,1629.412 352.575,1630.238 C354.775,1631.063 356.883,1632.484 358.9,1634.5 L395.75,1673.275 C379.617,1694.359 359.404,1710.262 335.113,1720.988 C310.821,1731.712 282.083,1737.075 248.9,1737.075 C218.467,1737.075 191.196,1731.896 167.088,1721.537 C142.979,1711.179 122.537,1696.879 105.762,1678.637 C88.988,1660.396 76.108,1638.763 67.125,1613.738 C58.141,1588.712 53.65,1561.534 53.65,1532.2 C53.65,1502.317 58.508,1474.863 68.225,1449.837 C77.942,1424.813 91.6,1403.225 109.2,1385.075 C126.8,1366.925 147.883,1352.808 172.45,1342.725 C197.017,1332.642 224.058,1327.6 253.575,1327.6 C268.608,1327.6 282.771,1328.929 296.062,1331.587 C309.354,1334.245 321.775,1337.912 333.325,1342.587 C344.875,1347.262 355.508,1352.9 365.225,1359.5 C374.942,1366.1 383.558,1373.25 391.075,1380.95 L359.725,1423.025 C357.708,1425.592 355.325,1427.929 352.575,1430.037 C349.825,1432.146 345.975,1433.2 341.025,1433.2 C337.725,1433.2 334.608,1432.467 331.675,1431 C328.742,1429.534 325.625,1427.745 322.325,1425.637 C319.025,1423.53 315.404,1421.238 311.463,1418.762 C307.521,1416.287 302.846,1413.995 297.437,1411.887 C292.029,1409.78 285.704,1407.992 278.463,1406.525 C271.221,1405.058 262.742,1404.325 253.025,1404.325 C237.625,1404.325 223.554,1407.166 210.812,1412.85 C198.071,1418.534 187.071,1426.829 177.812,1437.738 C168.554,1448.646 161.404,1462.029 156.363,1477.887 C151.321,1493.745 148.8,1511.85 148.8,1532.2 C148.8,1552.734 151.596,1570.975 157.187,1586.925 C162.779,1602.875 170.387,1616.304 180.012,1627.212 C189.637,1638.12 200.867,1646.416 213.7,1652.1 C226.533,1657.784 240.283,1660.625 254.95,1660.625 C263.384,1660.625 271.083,1660.212 278.05,1659.387 C285.017,1658.563 291.525,1657.188 297.575,1655.262 C303.625,1653.337 309.308,1650.771 314.625,1647.563 C319.942,1644.354 325.35,1640.275 330.85,1635.325 C333.05,1633.492 335.433,1631.979 338,1630.787 C340.567,1629.596 343.225,1629 345.975,1629 L345.975,1629 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListAlphaSolid":{"variant":"Solid","glyphName":"bullet-list-alpha","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M626.15,530.675 L1906.15,530.675 L1906.15,305.675 L626.15,305.675 L626.15,530.675 Z M626.15,1095.675 L1906.15,1095.675 L1906.15,870.675 L626.15,870.675 L626.15,1095.675 Z M626.15,1658.675 L1906.15,1658.675 L1906.15,1433.675 L626.15,1433.675 L626.15,1658.675 Z M271.675,429.5 L234.55,319.775 C231.8,312.808 228.867,304.604 225.75,295.162 C222.633,285.721 219.517,275.5 216.4,264.5 C213.65,275.683 210.717,286.042 207.6,295.575 C204.483,305.108 201.55,313.358 198.8,320.325 L161.95,429.5 L271.675,429.5 Z M419.35,582.675 L347.3,582.675 C339.233,582.675 332.725,580.796 327.775,577.037 C322.825,573.279 319.067,568.467 316.5,562.6 L292.85,492.75 L140.5,492.75 L116.85,562.6 C114.833,567.733 111.213,572.362 105.988,576.487 C100.762,580.613 94.3,582.675 86.6,582.675 L14,582.675 L169.1,182 L264.25,182 L419.35,582.675 Z M230.325,1112.55 C242.608,1112.55 252.646,1110.992 260.437,1107.875 C268.229,1104.758 274.325,1100.725 278.725,1095.775 C283.125,1090.825 286.15,1085.234 287.8,1079 C289.45,1072.767 290.275,1066.442 290.275,1060.025 C290.275,1052.692 289.312,1046.092 287.388,1040.225 C285.463,1034.359 282.162,1029.409 277.488,1025.375 C272.812,1021.341 266.625,1018.225 258.925,1016.025 C251.225,1013.825 241.509,1012.725 229.775,1012.725 L164.875,1012.725 L164.875,1112.55 L230.325,1112.55 Z M164.875,851.575 L164.875,950.575 L213.275,950.575 C223.542,950.575 232.8,949.842 241.05,948.375 C249.3,946.908 256.312,944.342 262.088,940.675 C267.863,937.008 272.263,931.967 275.287,925.55 C278.312,919.133 279.825,911.067 279.825,901.35 C279.825,891.817 278.633,883.888 276.25,877.562 C273.867,871.238 270.2,866.15 265.25,862.3 C260.3,858.45 254.021,855.7 246.412,854.05 C238.804,852.4 229.775,851.575 219.325,851.575 L164.875,851.575 Z M219.325,782 C247.009,782 270.567,784.567 290,789.7 C309.433,794.833 325.292,802.075 337.575,811.425 C349.858,820.775 358.796,832.141 364.388,845.525 C369.979,858.909 372.775,873.85 372.775,890.35 C372.775,899.333 371.492,907.996 368.925,916.337 C366.358,924.679 362.325,932.471 356.825,939.712 C351.325,946.954 344.267,953.6 335.65,959.65 C327.034,965.7 316.675,970.925 304.575,975.325 C330.975,981.742 350.5,992.1 363.15,1006.4 C375.8,1020.701 382.125,1039.216 382.125,1061.95 C382.125,1079 378.825,1094.859 372.225,1109.525 C365.625,1124.192 355.954,1136.979 343.213,1147.887 C330.471,1158.796 314.75,1167.321 296.05,1173.462 C277.35,1179.604 255.992,1182.675 231.975,1182.675 L71.925,1182.675 L71.925,782 L219.325,782 Z M345.975,1629 C348.175,1629 350.375,1629.412 352.575,1630.238 C354.775,1631.063 356.883,1632.484 358.9,1634.5 L395.75,1673.275 C379.617,1694.359 359.404,1710.262 335.113,1720.988 C310.821,1731.712 282.083,1737.075 248.9,1737.075 C218.467,1737.075 191.196,1731.896 167.088,1721.537 C142.979,1711.179 122.537,1696.879 105.762,1678.637 C88.988,1660.396 76.108,1638.763 67.125,1613.738 C58.141,1588.712 53.65,1561.534 53.65,1532.2 C53.65,1502.317 58.508,1474.863 68.225,1449.837 C77.942,1424.813 91.6,1403.225 109.2,1385.075 C126.8,1366.925 147.883,1352.808 172.45,1342.725 C197.017,1332.642 224.058,1327.6 253.575,1327.6 C268.608,1327.6 282.771,1328.929 296.062,1331.587 C309.354,1334.245 321.775,1337.912 333.325,1342.587 C344.875,1347.262 355.508,1352.9 365.225,1359.5 C374.942,1366.1 383.558,1373.25 391.075,1380.95 L359.725,1423.025 C357.708,1425.592 355.325,1427.929 352.575,1430.037 C349.825,1432.146 345.975,1433.2 341.025,1433.2 C337.725,1433.2 334.608,1432.467 331.675,1431 C328.742,1429.534 325.625,1427.745 322.325,1425.637 C319.025,1423.53 315.404,1421.238 311.463,1418.762 C307.521,1416.287 302.846,1413.995 297.437,1411.887 C292.029,1409.78 285.704,1407.992 278.463,1406.525 C271.221,1405.058 262.742,1404.325 253.025,1404.325 C237.625,1404.325 223.554,1407.166 210.812,1412.85 C198.071,1418.534 187.071,1426.829 177.812,1437.738 C168.554,1448.646 161.404,1462.029 156.363,1477.887 C151.321,1493.745 148.8,1511.85 148.8,1532.2 C148.8,1552.734 151.596,1570.975 157.187,1586.925 C162.779,1602.875 170.387,1616.304 180.012,1627.212 C189.637,1638.12 200.867,1646.416 213.7,1652.1 C226.533,1657.784 240.283,1660.625 254.95,1660.625 C263.384,1660.625 271.083,1660.212 278.05,1659.387 C285.017,1658.563 291.525,1657.188 297.575,1655.262 C303.625,1653.337 309.308,1650.771 314.625,1647.563 C319.942,1644.354 325.35,1640.275 330.85,1635.325 C333.05,1633.492 335.433,1631.979 338,1630.787 C340.567,1629.596 343.225,1629 345.975,1629 L345.975,1629 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListCircleOutlineLine":{"variant":"Line","glyphName":"bullet-list-circle-outline","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M559.706,1575.941 L1919.706,1575.941 L1919.706,1455.941 L559.706,1455.941 L559.706,1575.941 Z M559.706,454.941 L1919.706,454.941 L1919.706,334.941 L559.706,334.941 L559.706,454.941 Z M559.706,1015.941 L1919.706,1015.941 L1919.706,895.941 L559.706,895.941 L559.706,1015.941 Z M169.5,565 C75.888,565 0,489.112 0,395.5 C0,301.888 75.888,226 169.5,226 C263.112,226 339,301.888 339,395.5 C339,489.112 263.112,565 169.5,565 L169.5,565 Z M169.5,481 C216.72,481 255,442.72 255,395.5 C255,348.28 216.72,310 169.5,310 C122.28,310 84,348.28 84,395.5 C84,442.72 122.28,481 169.5,481 L169.5,481 Z M169.5,1689 C75.888,1689 0,1613.112 0,1519.5 C0,1425.888 75.888,1350 169.5,1350 C263.112,1350 339,1425.888 339,1519.5 C339,1613.112 263.112,1689 169.5,1689 L169.5,1689 Z M169.5,1605 C216.72,1605 255,1566.721 255,1519.5 C255,1472.279 216.72,1434 169.5,1434 C122.28,1434 84,1472.279 84,1519.5 C84,1566.721 122.28,1605 169.5,1605 L169.5,1605 Z M169.5,1127 C75.888,1127 0,1051.112 0,957.5 C0,863.888 75.888,788 169.5,788 C263.112,788 339,863.888 339,957.5 C339,1051.112 263.112,1127 169.5,1127 L169.5,1127 Z M169.5,1043 C216.72,1043 255,1004.721 255,957.5 C255,910.28 216.72,872 169.5,872 C122.28,872 84,910.28 84,957.5 C84,1004.721 122.28,1043 169.5,1043 L169.5,1043 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListCircleOutlineSolid":{"variant":"Solid","glyphName":"bullet-list-circle-outline","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M640,498 L1920,498 L1920,273 L640,273 L640,498 Z M640,1063 L1920,1063 L1920,838 L640,838 L640,1063 Z M640,1628 L1920,1628 L1920,1403 L640,1403 L640,1628 Z M226.5,612 C101.408,612 0,510.592 0,385.5 C0,260.408 101.408,159 226.5,159 C351.592,159 453,260.408 453,385.5 C453,510.592 351.592,612 226.5,612 L226.5,612 Z M226.5,502 C290.841,502 343,449.841 343,385.5 C343,321.159 290.841,269 226.5,269 C162.159,269 110,321.159 110,385.5 C110,449.841 162.159,502 226.5,502 L226.5,502 Z M226.5,1750 C101.408,1750 0,1648.593 0,1523.5 C0,1398.407 101.408,1297 226.5,1297 C351.592,1297 453,1398.407 453,1523.5 C453,1648.593 351.592,1750 226.5,1750 L226.5,1750 Z M226.5,1640 C290.841,1640 343,1587.841 343,1523.5 C343,1459.159 290.841,1407 226.5,1407 C162.159,1407 110,1459.159 110,1523.5 C110,1587.841 162.159,1640 226.5,1640 L226.5,1640 Z M226.5,1177 C101.408,1177 0,1075.593 0,950.5 C0,825.407 101.408,724 226.5,724 C351.592,724 453,825.407 453,950.5 C453,1075.593 351.592,1177 226.5,1177 L226.5,1177 Z M226.5,1067 C290.841,1067 343,1014.841 343,950.5 C343,886.159 290.841,834 226.5,834 C162.159,834 110,886.159 110,950.5 C110,1014.841 162.159,1067 226.5,1067 L226.5,1067 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListRomanLine":{"variant":"Line","glyphName":"bullet-list-roman","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M368,585.675 L461.5,585.675 L461.5,185 L368,185 L368,585.675 Z M639,484.675 L1919,484.675 L1919,364.675 L639,364.675 L639,484.675 Z M368.275,1184.675 L461.775,1184.675 L461.775,784 L368.275,784 L368.275,1184.675 Z M183.225,1184.675 L276.725,1184.675 L276.725,784 L183.225,784 L183.225,1184.675 Z M639,1045.675 L1919,1045.675 L1919,925.674 L639,925.674 L639,1045.675 Z M368.225,1734.675 L461.725,1734.675 L461.725,1333.999 L368.225,1333.999 L368.225,1734.675 Z M184.225,1734.675 L277.725,1734.675 L277.725,1333.999 L184.225,1333.999 L184.225,1734.675 Z M1,1734.675 L94.5,1734.675 L94.5,1333.999 L1,1333.999 L1,1734.675 Z M639,1605.675 L1919,1605.675 L1919,1485.675 L639,1485.675 L639,1605.675 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListRomanSolid":{"variant":"Solid","glyphName":"bullet-list-roman","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M375,585.675 L468.5,585.675 L468.5,185 L375,185 L375,585.675 Z M640.225,532.675 L1920.225,532.675 L1920.225,307.675 L640.225,307.675 L640.225,532.675 Z M375.275,1184.675 L468.775,1184.675 L468.775,784 L375.275,784 L375.275,1184.675 Z M190.225,1184.675 L283.725,1184.675 L283.725,784 L190.225,784 L190.225,1184.675 Z M640.225,1097.676 L1920.225,1097.676 L1920.225,872.675 L640.225,872.675 L640.225,1097.676 Z M375.225,1734.675 L468.724,1734.675 L468.724,1333.999 L375.225,1333.999 L375.225,1734.675 Z M191.225,1734.675 L284.725,1734.675 L284.725,1333.999 L191.225,1333.999 L191.225,1734.675 Z M8,1734.675 L101.5,1734.675 L101.5,1333.999 L8,1333.999 L8,1734.675 Z M640.225,1660.675 L1920.225,1660.675 L1920.225,1435.675 L640.225,1435.675 L640.225,1660.675 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListSquareLine":{"variant":"Line","glyphName":"bullet-list-square","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,560 L320,560 L320,240 L0,240 L0,560 Z M560,459.941 L1920,459.941 L1920,339.941 L560,339.941 L560,459.941 Z M0,1120 L320,1120 L320,800 L0,800 L0,1120 Z M560,1020.942 L1920,1020.942 L1920,900.941 L560,900.941 L560,1020.942 Z M0,1680 L320,1680 L320,1360 L0,1360 L0,1680 Z M560,1580.941 L1920,1580.941 L1920,1460.941 L560,1460.941 L560,1580.941 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListSquareSolid":{"variant":"Solid","glyphName":"bullet-list-square","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,612.001 L425,612.001 L425,187 L0,187 L0,612.001 Z M640,507.001 L1920,507.001 L1920,282.001 L640,282.001 L640,507.001 Z M0,1172.001 L425,1172.001 L425,747.001 L0,747.001 L0,1172.001 Z M640,1072.001 L1920,1072.001 L1920,847.001 L640,847.001 L640,1072.001 Z M0,1732.001 L425,1732.001 L425,1307.001 L0,1307.001 L0,1732.001 Z M640,1635.001 L1920,1635.001 L1920,1410.001 L640,1410.001 L640,1635.001 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListLine":{"variant":"Line","glyphName":"bullet-list","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M169.411765,1355.41176 C262.814118,1355.41176 338.823529,1431.42118 338.823529,1524.82353 C338.823529,1618.22588 262.814118,1694.23529 169.411765,1694.23529 C76.0094118,1694.23529 0,1618.22588 0,1524.82353 C0,1431.42118 76.0094118,1355.41176 169.411765,1355.41176 Z M1920,1468.35294 L1920,1581.29412 L564.705882,1581.29412 L564.705882,1468.35294 L1920,1468.35294 Z M169.411765,790.705882 C262.814118,790.705882 338.823529,866.715294 338.823529,960.117647 C338.823529,1053.52 262.814118,1129.52941 169.411765,1129.52941 C76.0094118,1129.52941 0,1053.52 0,960.117647 C0,866.715294 76.0094118,790.705882 169.411765,790.705882 Z M1920,903.647059 L1920,1016.58824 L564.705882,1016.58824 L564.705882,903.647059 L1920,903.647059 Z M169.411765,226 C262.814118,226 338.823529,302.009412 338.823529,395.411765 C338.823529,488.814118 262.814118,564.823529 169.411765,564.823529 C76.0094118,564.823529 0,488.814118 0,395.411765 C0,302.009412 76.0094118,226 169.411765,226 Z M1920,338.941176 L1920,451.882353 L564.705882,451.882353 L564.705882,338.941176 L1920,338.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconBulletListSolid":{"variant":"Solid","glyphName":"bullet-list","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M225.882353,1298.41176 C350.456471,1298.41176 451.764706,1399.72 451.764706,1524.29412 C451.764706,1648.86824 350.456471,1750.17647 225.882353,1750.17647 C101.308235,1750.17647 0,1648.86824 0,1524.29412 C0,1399.72 101.308235,1298.41176 225.882353,1298.41176 Z M1920,1411.35294 L1920,1637.23529 L677.647059,1637.23529 L677.647059,1411.35294 L1920,1411.35294 Z M225.882353,733.705882 C350.456471,733.705882 451.764706,835.014118 451.764706,959.588235 C451.764706,1084.16235 350.456471,1185.47059 225.882353,1185.47059 C101.308235,1185.47059 0,1084.16235 0,959.588235 C0,835.014118 101.308235,733.705882 225.882353,733.705882 Z M1920,846.647059 L1920,1072.52941 L677.647059,1072.52941 L677.647059,846.647059 L1920,846.647059 Z M225.882353,169 C350.456471,169 451.764706,270.308235 451.764706,394.882353 C451.764706,519.456471 350.456471,620.764706 225.882353,620.764706 C101.308235,620.764706 0,519.456471 0,394.882353 C0,270.308235 101.308235,169 225.882353,169 Z M1920,281.941176 L1920,507.823529 L677.647059,507.823529 L677.647059,281.941176 L1920,281.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalculatorDesmosLine":{"variant":"Line","glyphName":"calculator-desmos","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1440,0 C1616.73,0 1760,143.269 1760,320 L1760,320 L1760,1600 C1760,1776.73 1616.73,1920 1440,1920 L1440,1920 L480,1920 C303.269,1920 160,1776.73 160,1600 L160,1600 L160,320 C160,143.269 303.269,0 480,0 L480,0 Z M1440,106.667 L480,106.667 C362.179,106.667 266.667,202.179 266.667,320 L266.667,1600 C266.667,1717.82 362.179,1813.33 480,1813.33 L1440,1813.33 C1557.82,1813.33 1653.33,1717.82 1653.33,1600 L1653.33,320 C1653.33,202.179 1557.82,106.667 1440,106.667 Z M586.667,1493.33 C645.577,1493.33 693.333,1541.09 693.333,1600 C693.333,1658.91 645.577,1706.67 586.667,1706.67 L480,1706.67 C421.09,1706.67 373.333,1658.91 373.333,1600 C373.333,1541.09 421.09,1493.33 480,1493.33 L586.667,1493.33 Z M1013.33,1493.33 C1072.24,1493.33 1120,1541.09 1120,1600 C1120,1658.91 1072.24,1706.67 1013.33,1706.67 L906.667,1706.67 C847.756,1706.67 800,1658.91 800,1600 C800,1541.09 847.756,1493.33 906.667,1493.33 L1013.33,1493.33 Z M1440,1493.33 C1498.91,1493.33 1546.67,1541.09 1546.67,1600 C1546.67,1658.91 1498.91,1706.67 1440,1706.67 L1333.33,1706.67 C1274.42,1706.67 1226.67,1658.91 1226.67,1600 C1226.67,1541.09 1274.42,1493.33 1333.33,1493.33 L1440,1493.33 Z M586.667,1173.33 C645.577,1173.33 693.333,1221.09 693.333,1280 C693.333,1338.91 645.577,1386.67 586.667,1386.67 L480,1386.67 C421.09,1386.67 373.333,1338.91 373.333,1280 C373.333,1221.09 421.09,1173.33 480,1173.33 L586.667,1173.33 Z M1013.33,1173.33 C1072.24,1173.33 1120,1221.09 1120,1280 C1120,1338.91 1072.24,1386.67 1013.33,1386.67 L906.667,1386.67 C847.756,1386.67 800,1338.91 800,1280 C800,1221.09 847.756,1173.33 906.667,1173.33 L1013.33,1173.33 Z M1440,1173.33 C1498.91,1173.33 1546.67,1221.09 1546.67,1280 C1546.67,1338.91 1498.91,1386.67 1440,1386.67 L1333.33,1386.67 C1274.42,1386.67 1226.67,1338.91 1226.67,1280 C1226.67,1221.09 1274.42,1173.33 1333.33,1173.33 L1440,1173.33 Z M586.667,853.333 C645.577,853.333 693.333,901.09 693.333,960 C693.333,1018.91 645.577,1066.67 586.667,1066.67 L480,1066.67 C421.09,1066.67 373.333,1018.91 373.333,960 C373.333,901.09 421.09,853.333 480,853.333 L586.667,853.333 Z M1013.33,853.333 C1072.24,853.333 1120,901.09 1120,960 C1120,1018.91 1072.24,1066.67 1013.33,1066.67 L906.667,1066.67 C847.756,1066.67 800,1018.91 800,960 C800,901.09 847.756,853.333 906.667,853.333 L1013.33,853.333 Z M1440,853.333 C1498.91,853.333 1546.67,901.09 1546.67,960 C1546.67,1018.91 1498.91,1066.67 1440,1066.67 L1333.33,1066.67 C1274.42,1066.67 1226.67,1018.91 1226.67,960 C1226.67,901.09 1274.42,853.333 1333.33,853.333 L1440,853.333 Z M825.656,324.944 C911.439,340.736 969.456,400.472 1013.06,445.365 C1016.14,448.542 1019.15,451.645 1022.1,454.652 C1071.69,505.278 1105.11,533.333 1152,533.333 C1206.47,533.333 1257.21,507.25 1300.97,468.836 C1344.67,430.471 1376.75,383.722 1392.59,352.976 C1406.07,326.79 1438.23,316.495 1464.42,329.982 C1490.61,343.469 1500.9,375.63 1487.41,401.816 C1466.33,442.761 1426.41,500.647 1371.34,548.995 C1316.33,597.293 1241.53,640 1152,640 C1054.89,640 992.311,576.674 945.899,529.292 C945.2,528.579 944.504,527.868 943.811,527.16 C893.491,475.779 857.781,439.317 806.344,429.848 C750.443,419.557 691.87,435.018 639.787,466.092 C587.354,497.375 546.887,541.369 527.414,579.178 C513.928,605.364 481.766,615.659 455.58,602.172 C429.394,588.685 419.099,556.524 432.586,530.338 C462.344,472.559 517.877,414.618 585.136,374.49 C652.745,334.152 737.557,308.726 825.656,324.944 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalculatorDesmosSolid":{"variant":"Solid","glyphName":"calculator-desmos","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M160,320 C160,143.269 303.269,0 480,0 L1440,0 C1616.73,0 1760,143.269 1760,320 L1760,1600 C1760,1776.73 1616.73,1920 1440,1920 L480,1920 C303.269,1920 160,1776.73 160,1600 L160,320 Z M480,1173.33 L586.667,1173.33 C645.577,1173.33 693.333,1221.09 693.333,1280 C693.333,1338.91 645.577,1386.67 586.667,1386.67 L480,1386.67 C421.09,1386.67 373.333,1338.91 373.333,1280 C373.333,1221.09 421.09,1173.33 480,1173.33 Z M586.667,853.333 L480,853.333 C421.09,853.333 373.333,901.09 373.333,960 C373.333,1018.91 421.09,1066.67 480,1066.67 L586.667,1066.67 C645.577,1066.67 693.333,1018.91 693.333,960 C693.333,901.09 645.577,853.333 586.667,853.333 Z M906.667,1173.33 L1013.33,1173.33 C1072.24,1173.33 1120,1221.09 1120,1280 C1120,1338.91 1072.24,1386.67 1013.33,1386.67 L906.667,1386.67 C847.756,1386.67 800,1338.91 800,1280 C800,1221.09 847.756,1173.33 906.667,1173.33 Z M1013.33,853.333 L906.667,853.333 C847.756,853.333 800,901.09 800,960 C800,1018.91 847.756,1066.67 906.667,1066.67 L1013.33,1066.67 C1072.24,1066.67 1120,1018.91 1120,960 C1120,901.09 1072.24,853.333 1013.33,853.333 Z M1333.33,1173.33 L1440,1173.33 C1498.91,1173.33 1546.67,1221.09 1546.67,1280 C1546.67,1338.91 1498.91,1386.67 1440,1386.67 L1333.33,1386.67 C1274.42,1386.67 1226.67,1338.91 1226.67,1280 C1226.67,1221.09 1274.42,1173.33 1333.33,1173.33 Z M1440,853.333 L1333.33,853.333 C1274.42,853.333 1226.67,901.09 1226.67,960 C1226.67,1018.91 1274.42,1066.67 1333.33,1066.67 L1440,1066.67 C1498.91,1066.67 1546.67,1018.91 1546.67,960 C1546.67,901.09 1498.91,853.333 1440,853.333 Z M480,1493.33 L586.667,1493.33 C645.577,1493.33 693.333,1541.09 693.333,1600 C693.333,1658.91 645.577,1706.67 586.667,1706.67 L480,1706.67 C421.09,1706.67 373.333,1658.91 373.333,1600 C373.333,1541.09 421.09,1493.33 480,1493.33 Z M1013.33,1493.33 L906.667,1493.33 C847.756,1493.33 800,1541.09 800,1600 C800,1658.91 847.756,1706.67 906.667,1706.67 L1013.33,1706.67 C1072.24,1706.67 1120,1658.91 1120,1600 C1120,1541.09 1072.24,1493.33 1013.33,1493.33 Z M1333.33,1493.33 L1440,1493.33 C1498.91,1493.33 1546.67,1541.09 1546.67,1600 C1546.67,1658.91 1498.91,1706.67 1440,1706.67 L1333.33,1706.67 C1274.42,1706.67 1226.67,1658.91 1226.67,1600 C1226.67,1541.09 1274.42,1493.33 1333.33,1493.33 Z M527.414,579.177 C546.887,541.369 587.354,497.375 639.787,466.092 C691.87,435.018 750.443,419.557 806.344,429.848 C857.781,439.317 893.491,475.779 943.811,527.16 L945.899,529.292 C992.311,576.674 1054.89,640 1152,640 C1241.53,640 1316.33,597.293 1371.34,548.995 C1426.41,500.647 1466.33,442.761 1487.41,401.816 C1500.9,375.63 1490.61,343.469 1464.42,329.982 C1438.23,316.495 1406.07,326.79 1392.59,352.976 C1376.75,383.722 1344.67,430.471 1300.97,468.836 C1257.21,507.25 1206.47,533.333 1152,533.333 C1105.11,533.333 1071.69,505.278 1022.1,454.652 C1019.15,451.645 1016.14,448.542 1013.06,445.365 C969.456,400.472 911.439,340.736 825.656,324.944 C737.557,308.726 652.745,334.152 585.136,374.49 C517.877,414.618 462.344,472.559 432.586,530.338 C419.099,556.524 429.394,588.685 455.58,602.172 C481.766,615.659 513.928,605.364 527.414,579.177 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalculatorLine":{"variant":"Line","glyphName":"calculator","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M480,106.666667 C362.179253,106.666667 266.666667,202.179253 266.666667,320 L266.666667,1600 C266.666667,1717.82075 362.179253,1813.33333 480,1813.33333 L1440,1813.33333 C1557.82075,1813.33333 1653.33333,1717.82075 1653.33333,1600 L1653.33333,320 C1653.33333,202.179253 1557.82075,106.666667 1440,106.666667 L480,106.666667 Z M480,0 L1440,0 C1616.73112,0 1760,143.26888 1760,320 L1760,1600 C1760,1776.73112 1616.73112,1920 1440,1920 L480,1920 C303.26888,1920 160,1776.73112 160,1600 L160,320 C160,143.26888 303.26888,0 480,0 Z M586.666667,320 C527.756293,320 480,367.756293 480,426.666667 L480,533.333333 C480,592.243707 527.756293,640 586.666667,640 L1333.33333,640 C1392.24371,640 1440,592.243707 1440,533.333333 L1440,426.666667 C1440,367.756293 1392.24371,320 1333.33333,320 L586.666667,320 Z M586.666667,213.333333 L1333.33333,213.333333 C1451.15408,213.333333 1546.66667,308.84592 1546.66667,426.666667 L1546.66667,533.333333 C1546.66667,651.15408 1451.15408,746.666667 1333.33333,746.666667 L586.666667,746.666667 C468.84592,746.666667 373.333333,651.15408 373.333333,533.333333 L373.333333,426.666667 C373.333333,308.84592 468.84592,213.333333 586.666667,213.333333 Z M480,853.333333 L586.666667,853.333333 C645.57704,853.333333 693.333333,901.089627 693.333333,960 C693.333333,1018.91037 645.57704,1066.66667 586.666667,1066.66667 L480,1066.66667 C421.089627,1066.66667 373.333333,1018.91037 373.333333,960 C373.333333,901.089627 421.089627,853.333333 480,853.333333 Z M906.666667,853.333333 L1013.33333,853.333333 C1072.24371,853.333333 1120,901.089627 1120,960 C1120,1018.91037 1072.24371,1066.66667 1013.33333,1066.66667 L906.666667,1066.66667 C847.756293,1066.66667 800,1018.91037 800,960 C800,901.089627 847.756293,853.333333 906.666667,853.333333 Z M1333.33333,853.333333 L1440,853.333333 C1498.91037,853.333333 1546.66667,901.089627 1546.66667,960 C1546.66667,1018.91037 1498.91037,1066.66667 1440,1066.66667 L1333.33333,1066.66667 C1274.42296,1066.66667 1226.66667,1018.91037 1226.66667,960 C1226.66667,901.089627 1274.42296,853.333333 1333.33333,853.333333 Z M480,1173.33333 L586.666667,1173.33333 C645.57704,1173.33333 693.333333,1221.08963 693.333333,1280 C693.333333,1338.91037 645.57704,1386.66667 586.666667,1386.66667 L480,1386.66667 C421.089627,1386.66667 373.333333,1338.91037 373.333333,1280 C373.333333,1221.08963 421.089627,1173.33333 480,1173.33333 Z M906.666667,1173.33333 L1013.33333,1173.33333 C1072.24371,1173.33333 1120,1221.08963 1120,1280 C1120,1338.91037 1072.24371,1386.66667 1013.33333,1386.66667 L906.666667,1386.66667 C847.756293,1386.66667 800,1338.91037 800,1280 C800,1221.08963 847.756293,1173.33333 906.666667,1173.33333 Z M1333.33333,1173.33333 L1440,1173.33333 C1498.91037,1173.33333 1546.66667,1221.08963 1546.66667,1280 C1546.66667,1338.91037 1498.91037,1386.66667 1440,1386.66667 L1333.33333,1386.66667 C1274.42296,1386.66667 1226.66667,1338.91037 1226.66667,1280 C1226.66667,1221.08963 1274.42296,1173.33333 1333.33333,1173.33333 Z M480,1493.33333 L586.666667,1493.33333 C645.57704,1493.33333 693.333333,1541.08963 693.333333,1600 C693.333333,1658.91037 645.57704,1706.66667 586.666667,1706.66667 L480,1706.66667 C421.089627,1706.66667 373.333333,1658.91037 373.333333,1600 C373.333333,1541.08963 421.089627,1493.33333 480,1493.33333 Z M906.666667,1493.33333 L1013.33333,1493.33333 C1072.24371,1493.33333 1120,1541.08963 1120,1600 C1120,1658.91037 1072.24371,1706.66667 1013.33333,1706.66667 L906.666667,1706.66667 C847.756293,1706.66667 800,1658.91037 800,1600 C800,1541.08963 847.756293,1493.33333 906.666667,1493.33333 Z M1333.33333,1493.33333 L1440,1493.33333 C1498.91037,1493.33333 1546.66667,1541.08963 1546.66667,1600 C1546.66667,1658.91037 1498.91037,1706.66667 1440,1706.66667 L1333.33333,1706.66667 C1274.42296,1706.66667 1226.66667,1658.91037 1226.66667,1600 C1226.66667,1541.08963 1274.42296,1493.33333 1333.33333,1493.33333 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconCalculatorSolid":{"variant":"Solid","glyphName":"calculator","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M480,0 L1440,0 C1616.73112,0 1760,143.26888 1760,320 L1760,1600 C1760,1776.73112 1616.73112,1920 1440,1920 L480,1920 C303.26888,1920 160,1776.73112 160,1600 L160,320 C160,143.26888 303.26888,0 480,0 Z M586.666667,213.333333 C468.84592,213.333333 373.333333,308.84592 373.333333,426.666667 C373.333333,544.487413 468.84592,640 586.666667,640 L1333.33333,640 C1451.15408,640 1546.66667,544.487413 1546.66667,426.666667 C1546.66667,308.84592 1451.15408,213.333333 1333.33333,213.333333 L586.666667,213.333333 Z M480,853.333333 C421.089627,853.333333 373.333333,901.089627 373.333333,960 C373.333333,1018.91037 421.089627,1066.66667 480,1066.66667 L586.666667,1066.66667 C645.57704,1066.66667 693.333333,1018.91037 693.333333,960 C693.333333,901.089627 645.57704,853.333333 586.666667,853.333333 L480,853.333333 Z M906.666667,853.333333 C847.756293,853.333333 800,901.089627 800,960 C800,1018.91037 847.756293,1066.66667 906.666667,1066.66667 L1013.33333,1066.66667 C1072.24371,1066.66667 1120,1018.91037 1120,960 C1120,901.089627 1072.24371,853.333333 1013.33333,853.333333 L906.666667,853.333333 Z M1333.33333,853.333333 C1274.42296,853.333333 1226.66667,901.089627 1226.66667,960 C1226.66667,1018.91037 1274.42296,1066.66667 1333.33333,1066.66667 L1440,1066.66667 C1498.91037,1066.66667 1546.66667,1018.91037 1546.66667,960 C1546.66667,901.089627 1498.91037,853.333333 1440,853.333333 L1333.33333,853.333333 Z M480,1173.33333 C421.089627,1173.33333 373.333333,1221.08963 373.333333,1280 C373.333333,1338.91037 421.089627,1386.66667 480,1386.66667 L586.666667,1386.66667 C645.57704,1386.66667 693.333333,1338.91037 693.333333,1280 C693.333333,1221.08963 645.57704,1173.33333 586.666667,1173.33333 L480,1173.33333 Z M906.666667,1173.33333 C847.756293,1173.33333 800,1221.08963 800,1280 C800,1338.91037 847.756293,1386.66667 906.666667,1386.66667 L1013.33333,1386.66667 C1072.24371,1386.66667 1120,1338.91037 1120,1280 C1120,1221.08963 1072.24371,1173.33333 1013.33333,1173.33333 L906.666667,1173.33333 Z M1333.33333,1173.33333 C1274.42296,1173.33333 1226.66667,1221.08963 1226.66667,1280 C1226.66667,1338.91037 1274.42296,1386.66667 1333.33333,1386.66667 L1440,1386.66667 C1498.91037,1386.66667 1546.66667,1338.91037 1546.66667,1280 C1546.66667,1221.08963 1498.91037,1173.33333 1440,1173.33333 L1333.33333,1173.33333 Z M480,1493.33333 C421.089627,1493.33333 373.333333,1541.08963 373.333333,1600 C373.333333,1658.91037 421.089627,1706.66667 480,1706.66667 L586.666667,1706.66667 C645.57704,1706.66667 693.333333,1658.91037 693.333333,1600 C693.333333,1541.08963 645.57704,1493.33333 586.666667,1493.33333 L480,1493.33333 Z M906.666667,1493.33333 C847.756293,1493.33333 800,1541.08963 800,1600 C800,1658.91037 847.756293,1706.66667 906.666667,1706.66667 L1013.33333,1706.66667 C1072.24371,1706.66667 1120,1658.91037 1120,1600 C1120,1541.08963 1072.24371,1493.33333 1013.33333,1493.33333 L906.666667,1493.33333 Z M1333.33333,1493.33333 C1274.42296,1493.33333 1226.66667,1541.08963 1226.66667,1600 C1226.66667,1658.91037 1274.42296,1706.66667 1333.33333,1706.66667 L1440,1706.66667 C1498.91037,1706.66667 1546.66667,1658.91037 1546.66667,1600 C1546.66667,1541.08963 1498.91037,1493.33333 1440,1493.33333 L1333.33333,1493.33333 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarAddLine":{"variant":"Line","glyphName":"calendar-add","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1411.8238,9.99999997e-05 C1442.9948,9.99999997e-05 1468.2938,25.2991 1468.2938,56.4711 L1468.2938,56.4711 L1468.2938,112.9411 L1637.7058,112.9411 C1731.1088,112.9411 1807.1178,188.9511 1807.1178,282.3531 L1807.1178,282.3531 L1807.1178,1920.0001 L112.9998,1920.0001 L112.9998,282.3531 C112.9998,188.9511 189.0088,112.9411 282.4118,112.9411 L282.4118,112.9411 L451.8228,112.9411 L451.8228,56.4711 C451.8228,25.2991 477.1228,9.99999997e-05 508.2938,9.99999997e-05 C539.4658,9.99999997e-05 564.7648,25.2991 564.7648,56.4711 L564.7648,56.4711 L564.7648,112.9411 L1355.3528,112.9411 L1355.3528,56.4711 C1355.3528,25.2991 1380.6518,9.99999997e-05 1411.8238,9.99999997e-05 Z M1694.1758,564.7051 L225.9418,564.7051 L225.9418,1807.0581 L1694.1758,1807.0581 L1694.1758,564.7051 Z M1016.5294,790.5878 L1016.5294,1129.4118 L1355.3534,1129.4118 L1355.3534,1242.3528 L1016.5294,1242.3528 L1016.5294,1581.1768 L903.5884,1581.1768 L903.5884,1242.3528 L564.7644,1242.3528 L564.7644,1129.4118 L903.5884,1129.4118 L903.5884,790.5878 L1016.5294,790.5878 Z M451.8228,225.8821 L282.4118,225.8821 C251.3528,225.8821 225.9418,251.1811 225.9418,282.3531 L225.9418,282.3531 L225.9418,451.7651 L1694.1758,451.7651 L1694.1758,282.3531 C1694.1758,251.1811 1668.7648,225.8821 1637.7058,225.8821 L1637.7058,225.8821 L1468.2938,225.8821 L1468.2938,282.3531 C1468.2938,313.5251 1442.9948,338.8241 1411.8238,338.8241 C1380.6518,338.8241 1355.3528,313.5251 1355.3528,282.3531 L1355.3528,282.3531 L1355.3528,225.8821 L564.7648,225.8821 L564.7648,282.3531 C564.7648,313.5251 539.4658,338.8241 508.2938,338.8241 C477.1228,338.8241 451.8228,313.5251 451.8228,282.3531 L451.8228,282.3531 L451.8228,225.8821 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarAddSolid":{"variant":"Solid","glyphName":"calendar-add","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.176,451.765 L112.942,451.765 L112.942,282.353 C112.942,251.181 138.353,225.882 169.412,225.882 L338.823,225.882 L338.823,282.353 C338.823,313.525 364.123,338.824 395.294,338.824 C426.466,338.824 451.765,313.525 451.765,282.353 L451.765,225.882 L1242.354,225.882 L1242.354,282.353 C1242.354,313.525 1267.654,338.824 1298.824,338.824 C1329.995,338.824 1355.294,313.525 1355.294,282.353 L1355.294,225.882 L1524.706,225.882 C1555.765,225.882 1581.176,251.181 1581.176,282.353 L1581.176,451.765 Z M1242.354,1242.351 L903.53,1242.351 L903.53,1581.177 L790.589,1581.177 L790.589,1242.351 L451.765,1242.351 L451.765,1129.412 L790.589,1129.412 L790.589,790.588 L903.53,790.588 L903.53,1129.412 L1242.354,1129.412 L1242.354,1242.351 Z M1524.706,112.941 L1355.294,112.941 L1355.294,56.471 C1355.294,25.299 1329.995,0 1298.824,0 C1267.654,0 1242.354,25.299 1242.354,56.471 L1242.354,112.941 L451.765,112.941 L451.765,56.471 C451.765,25.299 426.466,0 395.294,0 C364.123,0 338.823,25.299 338.823,56.471 L338.823,112.941 L169.412,112.941 C76.009,112.941 0,188.951 0,282.353 L0,1920 L1694.118,1920 L1694.118,282.353 C1694.118,188.951 1618.11,112.941 1524.706,112.941 L1524.706,112.941 Z\" transform=\"translate(113)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarClockLine":{"variant":"Line","glyphName":"calendar-clock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1386.667,1226.667 L1280,1226.667 L1280,1440 C1280,1454.187 1285.653,1467.733 1295.573,1477.76 L1418.987,1601.066 L1494.4,1525.653 L1386.667,1417.92 L1386.667,1226.667 Z\" transform=\"translate(53)\"/>\n        <path d=\"M1333.333,1813.333 C1127.467,1813.333 960,1645.867 960,1440 C960,1234.133 1127.467,1066.667 1333.333,1066.667 C1539.2,1066.667 1706.667,1234.133 1706.667,1440 C1706.667,1645.867 1539.2,1813.333 1333.333,1813.333 M1333.333,960 C1068.693,960 853.333,1175.36 853.333,1440 C853.333,1704.64 1068.693,1920 1333.333,1920 C1597.973,1920 1813.333,1704.64 1813.333,1440 C1813.333,1175.36 1597.973,960 1333.333,960\" transform=\"translate(53)\"/>\n        <path d=\"M1493.333,426.667 L106.666,426.667 L106.666,266.667 C106.666,237.227 130.666,213.333 160,213.333 L320,213.333 L320,266.667 C320,296.107 343.894,320 373.333,320 C402.773,320 426.666,296.107 426.666,266.667 L426.666,213.333 L1173.333,213.333 L1173.333,266.667 C1173.333,296.107 1197.227,320 1226.667,320 C1256.107,320 1280,296.107 1280,266.667 L1280,213.333 L1440,213.333 C1469.333,213.333 1493.333,237.227 1493.333,266.667 L1493.333,426.667 Z M1440,106.667 L1280,106.667 L1280,53.333 C1280,23.893 1256.107,0 1226.667,0 C1197.227,0 1173.333,23.893 1173.333,53.333 L1173.333,106.667 L426.666,106.667 L426.666,53.333 C426.666,23.893 402.773,0 373.333,0 C343.894,0 320,23.893 320,53.333 L320,106.667 L160,106.667 C71.787,106.667 0,178.453 0,266.667 L0,1813.333 L746.666,1813.333 L746.666,1706.667 L106.666,1706.667 L106.666,533.333 L1493.333,533.333 L1493.333,853.333 L1600,853.333 L1600,266.667 C1600,178.453 1528.213,106.667 1440,106.667 L1440,106.667 Z\" transform=\"translate(53)\"/>\n    </g>\n</svg>\n","deprecated":false},"IconCalendarClockSolid":{"variant":"Solid","glyphName":"calendar-clock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1386.667,1417.9199 L1386.667,1226.6669 L1280,1226.6669 L1280,1439.9999 C1280,1454.1879 1285.653,1467.7329 1295.573,1477.7599 L1418.987,1601.0659 L1494.4,1525.6529 L1386.667,1417.9199 Z\" transform=\"translate(53)\"/>\n        <path d=\"M1333.333,1813.333 C1127.467,1813.333 960,1645.867 960,1440 C960,1234.133 1127.467,1066.667 1333.333,1066.667 C1539.2,1066.667 1706.667,1234.133 1706.667,1440 C1706.667,1645.867 1539.2,1813.333 1333.333,1813.333 L1333.333,1813.333 Z M106.666,266.667 C106.666,237.227 130.666,213.333 160,213.333 L320,213.333 L320,266.667 C320,296.107 343.894,320 373.333,320 C402.773,320 426.666,296.107 426.666,266.667 L426.666,213.333 L1173.333,213.333 L1173.333,266.667 C1173.333,296.107 1197.227,320 1226.667,320 C1256.107,320 1280,296.107 1280,266.667 L1280,213.333 L1440,213.333 C1469.333,213.333 1493.333,237.227 1493.333,266.667 L1493.333,426.667 L106.666,426.667 L106.666,266.667 Z M1600,1041.28 L1600,266.667 C1600,178.453 1528.213,106.667 1440,106.667 L1280,106.667 L1280,53.333 C1280,23.893 1256.107,0 1226.667,0 C1197.227,0 1173.333,23.893 1173.333,53.333 L1173.333,106.667 L426.666,106.667 L426.666,53.333 C426.666,23.893 402.773,0 373.333,0 C343.894,0 320,23.893 320,53.333 L320,106.667 L160,106.667 C71.787,106.667 0,178.453 0,266.667 L0,1813.333 L1035.307,1813.333 C1117.547,1879.04 1220.16,1920 1333.333,1920 C1597.973,1920 1813.333,1704.64 1813.333,1440 C1813.333,1273.92 1728.533,1127.467 1600,1041.28 L1600,1041.28 Z\" transform=\"translate(53)\"/>\n    </g>\n</svg>\n","deprecated":false},"IconCalendarDayLine":{"variant":"Line","glyphName":"calendar-day","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1298.8238,9.99999997e-05 C1329.9948,9.99999997e-05 1355.2938,25.2991 1355.2938,56.4711 L1355.2938,56.4711 L1355.2938,112.9411 L1524.7058,112.9411 C1618.1088,112.9411 1694.1178,188.9511 1694.1178,282.3531 L1694.1178,282.3531 L1694.1178,1920.0001 L-0.0002,1920.0001 L-0.0002,282.3531 C-0.0002,188.9511 76.0088,112.9411 169.4118,112.9411 L169.4118,112.9411 L338.8228,112.9411 L338.8228,56.4711 C338.8228,25.2991 364.1228,9.99999997e-05 395.2938,9.99999997e-05 C426.4658,9.99999997e-05 451.7648,25.2991 451.7648,56.4711 L451.7648,56.4711 L451.7648,112.9411 L1242.3528,112.9411 L1242.3528,56.4711 C1242.3528,25.2991 1267.6518,9.99999997e-05 1298.8238,9.99999997e-05 Z M1581.1758,564.7051 L112.9418,564.7051 L112.9418,1807.0581 L1581.1758,1807.0581 L1581.1758,564.7051 Z M338.8228,225.8821 L169.4118,225.8821 C138.3528,225.8821 112.9418,251.1811 112.9418,282.3531 L112.9418,282.3531 L112.9418,451.7651 L1581.1758,451.7651 L1581.1758,282.3531 C1581.1758,251.1811 1555.7648,225.8821 1524.7058,225.8821 L1524.7058,225.8821 L1355.2938,225.8821 L1355.2938,282.3531 C1355.2938,313.5251 1329.9948,338.8241 1298.8238,338.8241 C1267.6518,338.8241 1242.3528,313.5251 1242.3528,282.3531 L1242.3528,282.3531 L1242.3528,225.8821 L451.7648,225.8821 L451.7648,282.3531 C451.7648,313.5251 426.4658,338.8241 395.2938,338.8241 C364.1228,338.8241 338.8228,313.5251 338.8228,282.3531 L338.8228,282.3531 L338.8228,225.8821 Z M846.5054,1416.6211 C764.1714,1416.6211 704.9904,1382.1741 652.1334,1320.7341 L561.3294,1404.0851 C623.5594,1479.0771 715.6064,1532.1601 844.4724,1532.1601 C998.7504,1532.1601 1103.3344,1435.3691 1103.3344,1300.9701 L1103.3344,1298.9361 C1103.3344,1164.5361 997.7334,1108.2921 885.8094,1094.7381 L1091.7014,886.4751 L1091.7014,790.5881 L602.5524,790.5881 L602.5524,902.0601 L922.6284,902.0601 L722.9474,1111.4541 L744.0674,1191.6421 L804.3784,1191.6421 C907.8324,1191.6421 974.4674,1232.1881 974.4674,1304.0181 L974.4674,1306.1651 C974.4674,1372.8001 919.4654,1416.6211 846.5054,1416.6211\" transform=\"translate(113)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarDaySolid":{"variant":"Solid","glyphName":"calendar-day","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.176,451.765 L112.942,451.765 L112.942,282.353 C112.942,250.729 137.788,225.882 169.412,225.882 L338.823,225.882 L338.823,282.353 C338.823,313.976 363.671,338.824 395.294,338.824 C426.918,338.824 451.765,313.976 451.765,282.353 L451.765,225.882 L1242.354,225.882 L1242.354,282.353 C1242.354,313.976 1267.2,338.824 1298.824,338.824 C1330.447,338.824 1355.294,313.976 1355.294,282.353 L1355.294,225.882 L1524.706,225.882 C1556.329,225.882 1581.176,250.729 1581.176,282.353 L1581.176,451.765 Z M1103.436,1301.082 C1103.436,1435.482 998.401,1532.611 844.8,1532.611 C716.047,1532.611 623.436,1479.529 561.318,1403.859 L651.671,1320.282 C704.753,1382.4 764.612,1416.282 847.059,1416.282 C919.341,1416.282 974.683,1373.365 974.683,1306.728 L974.683,1304.471 C974.683,1232.187 908.047,1191.529 804.141,1191.529 L744.282,1191.529 L722.823,1111.341 L922.73,902.4 L603.106,902.4 L603.106,790.588 L1092.141,790.588 L1092.141,886.588 L885.459,1094.4 C997.271,1107.953 1103.436,1164.424 1103.436,1298.823 L1103.436,1301.082 Z M1524.706,112.941 L1355.294,112.941 L1355.294,56.471 C1355.294,24.847 1330.447,0 1298.824,0 C1267.2,0 1242.354,24.847 1242.354,56.471 L1242.354,112.941 L451.765,112.941 L451.765,56.471 C451.765,24.847 426.918,0 395.294,0 C363.671,0 338.823,24.847 338.823,56.471 L338.823,112.941 L169.412,112.941 C75.671,112.941 -4.54747351e-13,188.612 -4.54747351e-13,282.353 L-4.54747351e-13,1920 L1694.118,1920 L1694.118,282.353 C1694.118,188.612 1618.447,112.941 1524.706,112.941 L1524.706,112.941 Z\" transform=\"translate(113)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarDaysLine":{"variant":"Line","glyphName":"calendar-days","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1411.8238,9.99999997e-05 C1442.9948,9.99999997e-05 1468.2938,25.2991 1468.2938,56.4711 L1468.2938,56.4711 L1468.2938,112.9411 L1637.7058,112.9411 C1731.1088,112.9411 1807.1178,188.9511 1807.1178,282.3531 L1807.1178,282.3531 L1807.1178,1920.0001 L112.9998,1920.0001 L112.9998,282.3531 C112.9998,188.9511 189.0088,112.9411 282.4118,112.9411 L282.4118,112.9411 L451.8228,112.9411 L451.8228,56.4711 C451.8228,25.2991 477.1228,9.99999997e-05 508.2938,9.99999997e-05 C539.4658,9.99999997e-05 564.7648,25.2991 564.7648,56.4711 L564.7648,56.4711 L564.7648,112.9411 L1355.3528,112.9411 L1355.3528,56.4711 C1355.3528,25.2991 1380.6518,9.99999997e-05 1411.8238,9.99999997e-05 Z M1694.1758,564.7051 L225.9418,564.7051 L225.9418,1807.0581 L1694.1758,1807.0581 L1694.1758,564.7051 Z M451.8228,225.8821 L282.4118,225.8821 C251.3528,225.8821 225.9418,251.1811 225.9418,282.3531 L225.9418,282.3531 L225.9418,451.7651 L1694.1758,451.7651 L1694.1758,282.3531 C1694.1758,251.1811 1668.7648,225.8821 1637.7058,225.8821 L1637.7058,225.8821 L1468.2938,225.8821 L1468.2938,282.3531 C1468.2938,313.5251 1442.9948,338.8241 1411.8238,338.8241 C1380.6518,338.8241 1355.3528,313.5251 1355.3528,282.3531 L1355.3528,282.3531 L1355.3528,225.8821 L564.7648,225.8821 L564.7648,282.3531 C564.7648,313.5251 539.4658,338.8241 508.2938,338.8241 C477.1228,338.8241 451.8228,313.5251 451.8228,282.3531 L451.8228,282.3531 L451.8228,225.8821 Z M959.5054,1416.6211 C877.1714,1416.6211 817.9904,1382.1741 765.1334,1320.7341 L674.3294,1404.0851 C736.5594,1479.0771 828.6064,1532.1601 957.4724,1532.1601 C1111.7504,1532.1601 1216.3344,1435.3691 1216.3344,1300.9701 L1216.3344,1298.9361 C1216.3344,1164.5361 1110.7334,1108.2921 998.8094,1094.7381 L1204.7014,886.4751 L1204.7014,790.5881 L715.5524,790.5881 L715.5524,902.0601 L1035.6284,902.0601 L835.9474,1111.4541 L857.0674,1191.6421 L917.3784,1191.6421 C1020.8324,1191.6421 1087.4674,1232.1881 1087.4674,1304.0181 L1087.4674,1306.1651 C1087.4674,1372.8001 1032.4654,1416.6211 959.5054,1416.6211\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarDaysSolid":{"variant":"Solid","glyphName":"calendar-days","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.176,451.765 L112.942,451.765 L112.942,282.353 C112.942,250.729 137.788,225.882 169.412,225.882 L338.823,225.882 L338.823,282.353 C338.823,313.976 363.671,338.824 395.294,338.824 C426.918,338.824 451.765,313.976 451.765,282.353 L451.765,225.882 L1242.354,225.882 L1242.354,282.353 C1242.354,313.976 1267.2,338.824 1298.824,338.824 C1330.447,338.824 1355.294,313.976 1355.294,282.353 L1355.294,225.882 L1524.706,225.882 C1556.329,225.882 1581.176,250.729 1581.176,282.353 L1581.176,451.765 Z M1103.436,1301.082 C1103.436,1435.482 998.401,1532.611 844.8,1532.611 C716.047,1532.611 623.436,1479.529 561.318,1403.859 L651.671,1320.282 C704.753,1382.4 764.612,1416.282 847.059,1416.282 C919.341,1416.282 974.683,1373.365 974.683,1306.728 L974.683,1304.471 C974.683,1232.187 908.047,1191.529 804.141,1191.529 L744.282,1191.529 L722.823,1111.341 L922.73,902.4 L603.106,902.4 L603.106,790.588 L1092.141,790.588 L1092.141,886.588 L885.459,1094.4 C997.271,1107.953 1103.436,1164.424 1103.436,1298.823 L1103.436,1301.082 Z M1524.706,112.941 L1355.294,112.941 L1355.294,56.471 C1355.294,24.847 1330.447,0 1298.824,0 C1267.2,0 1242.354,24.847 1242.354,56.471 L1242.354,112.941 L451.765,112.941 L451.765,56.471 C451.765,24.847 426.918,0 395.294,0 C363.671,0 338.823,24.847 338.823,56.471 L338.823,112.941 L169.412,112.941 C75.671,112.941 -4.54747351e-13,188.612 -4.54747351e-13,282.353 L-4.54747351e-13,1920 L1694.118,1920 L1694.118,282.353 C1694.118,188.612 1618.447,112.941 1524.706,112.941 L1524.706,112.941 Z\" transform=\"translate(113)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarMonthLine":{"variant":"Line","glyphName":"calendar-month","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1411.8238,9.99999997e-05 C1442.9948,9.99999997e-05 1468.2938,25.2991 1468.2938,56.4711 L1468.2938,56.4711 L1468.2938,112.9411 L1637.7058,112.9411 C1731.1088,112.9411 1807.1178,188.9511 1807.1178,282.3531 L1807.1178,282.3531 L1807.1178,1920.0001 L112.9998,1920.0001 L112.9998,282.3531 C112.9998,188.9511 189.0088,112.9411 282.4118,112.9411 L282.4118,112.9411 L451.8228,112.9411 L451.8228,56.4711 C451.8228,25.2991 477.1228,9.99999997e-05 508.2938,9.99999997e-05 C539.4658,9.99999997e-05 564.7648,25.2991 564.7648,56.4711 L564.7648,56.4711 L564.7648,112.9411 L1355.3528,112.9411 L1355.3528,56.4711 C1355.3528,25.2991 1380.6518,9.99999997e-05 1411.8238,9.99999997e-05 Z M1694.1758,564.7051 L225.9418,564.7051 L225.9418,1807.0581 L1694.1758,1807.0581 L1694.1758,564.7051 Z M677.706,1242.353 L677.706,1581.177 L338.882,1581.177 L338.882,1242.353 L677.706,1242.353 Z M1129.471,1242.353 L1129.471,1581.177 L790.647,1581.177 L790.647,1242.353 L1129.471,1242.353 Z M1581.235,1242.353 L1581.235,1581.177 L1242.412,1581.177 L1242.412,1242.353 L1581.235,1242.353 Z M564.765,1355.294 L451.824,1355.294 L451.824,1468.235 L564.765,1468.235 L564.765,1355.294 Z M1016.529,1355.294 L903.588,1355.294 L903.588,1468.235 L1016.529,1468.235 L1016.529,1355.294 Z M1468.294,1355.294 L1355.353,1355.294 L1355.353,1468.235 L1468.294,1468.235 L1468.294,1355.294 Z M677.706,790.588 L677.706,1129.412 L338.882,1129.412 L338.882,790.588 L677.706,790.588 Z M1129.471,790.588 L1129.471,1129.412 L790.647,1129.412 L790.647,790.588 L1129.471,790.588 Z M1581.235,790.588 L1581.235,1129.412 L1242.412,1129.412 L1242.412,790.588 L1581.235,790.588 Z M564.765,903.53 L451.824,903.53 L451.824,1016.471 L564.765,1016.471 L564.765,903.53 Z M1016.529,903.53 L903.588,903.53 L903.588,1016.471 L1016.529,1016.471 L1016.529,903.53 Z M1468.294,903.53 L1355.353,903.53 L1355.353,1016.471 L1468.294,1016.471 L1468.294,903.53 Z M451.8228,225.8821 L282.4118,225.8821 C251.3528,225.8821 225.9418,251.1811 225.9418,282.3531 L225.9418,282.3531 L225.9418,451.7651 L1694.1758,451.7651 L1694.1758,282.3531 C1694.1758,251.1811 1668.7648,225.8821 1637.7058,225.8821 L1637.7058,225.8821 L1468.2938,225.8821 L1468.2938,282.3531 C1468.2938,313.5251 1442.9948,338.8241 1411.8238,338.8241 C1380.6518,338.8241 1355.3528,313.5251 1355.3528,282.3531 L1355.3528,282.3531 L1355.3528,225.8821 L564.7648,225.8821 L564.7648,282.3531 C564.7648,313.5251 539.4658,338.8241 508.2938,338.8241 C477.1228,338.8241 451.8228,313.5251 451.8228,282.3531 L451.8228,282.3531 L451.8228,225.8821 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarMonthSolid":{"variant":"Solid","glyphName":"calendar-month","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1411.824,2.84217094e-14 C1442.995,2.84217094e-14 1468.294,25.299 1468.294,56.471 L1468.294,56.471 L1468.294,112.941 L1637.706,112.941 C1731.11,112.941 1807.118,188.951 1807.118,282.353 L1807.118,282.353 L1807.118,1920 L113,1920 L113,282.353 C113,188.951 189.009,112.941 282.412,112.941 L282.412,112.941 L451.823,112.941 L451.823,56.471 C451.823,25.299 477.123,2.84217094e-14 508.294,2.84217094e-14 C539.466,2.84217094e-14 564.765,25.299 564.765,56.471 L564.765,56.471 L564.765,112.941 L1355.354,112.941 L1355.354,56.471 C1355.354,25.299 1380.653,2.84217094e-14 1411.824,2.84217094e-14 Z M1581.237,1242.354 L1242.414,1242.354 L1242.414,1581.177 L1581.237,1581.177 L1581.237,1242.354 Z M1129.471,1242.354 L790.647,1242.354 L790.647,1581.177 L1129.471,1581.177 L1129.471,1242.354 Z M677.706,1242.354 L338.882,1242.354 L338.882,1581.177 L677.706,1581.177 L677.706,1242.354 Z M1581.237,790.588 L1242.414,790.588 L1242.414,1129.412 L1581.237,1129.412 L1581.237,790.588 Z M1129.471,790.588 L790.647,790.588 L790.647,1129.412 L1129.471,1129.412 L1129.471,790.588 Z M677.706,790.588 L338.882,790.588 L338.882,1129.412 L677.706,1129.412 L677.706,790.588 Z M451.823,225.882 L282.412,225.882 C251.353,225.882 225.942,251.181 225.942,282.353 L225.942,282.353 L225.942,451.765 L1694.176,451.765 L1694.176,282.353 C1694.176,251.181 1668.765,225.882 1637.706,225.882 L1637.706,225.882 L1468.294,225.882 L1468.294,282.353 C1468.294,313.525 1442.995,338.824 1411.824,338.824 C1380.653,338.824 1355.354,313.525 1355.354,282.353 L1355.354,282.353 L1355.354,225.882 L564.765,225.882 L564.765,282.353 C564.765,313.525 539.466,338.824 508.294,338.824 C477.123,338.824 451.823,313.525 451.823,282.353 L451.823,282.353 L451.823,225.882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarReservedLine":{"variant":"Line","glyphName":"calendar-reserved","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1298.8238,9.99999997e-05 C1329.9948,9.99999997e-05 1355.2938,25.2991 1355.2938,56.4711 L1355.2938,56.4711 L1355.2938,112.9411 L1524.7058,112.9411 C1618.1088,112.9411 1694.1178,188.9511 1694.1178,282.3531 L1694.1178,282.3531 L1694.1178,1920.0001 L-0.0002,1920.0001 L-0.0002,282.3531 C-0.0002,188.9511 76.0088,112.9411 169.4118,112.9411 L169.4118,112.9411 L338.8228,112.9411 L338.8228,56.4711 C338.8228,25.2991 364.1228,9.99999997e-05 395.2938,9.99999997e-05 C426.4658,9.99999997e-05 451.7648,25.2991 451.7648,56.4711 L451.7648,56.4711 L451.7648,112.9411 L1242.3528,112.9411 L1242.3528,56.4711 C1242.3528,25.2991 1267.6518,9.99999997e-05 1298.8238,9.99999997e-05 Z M1581.1758,564.7051 L112.9418,564.7051 L112.9418,1807.0581 L1581.1758,1807.0581 L1581.1758,564.7051 Z M1258.899,807.1334 L1338.748,886.9844 L734.061,1491.6714 L355.369,1112.8664 L435.219,1033.0164 L734.061,1331.8584 L1258.899,807.1334 Z M338.8228,225.8821 L169.4118,225.8821 C138.3528,225.8821 112.9418,251.1811 112.9418,282.3531 L112.9418,282.3531 L112.9418,451.7651 L1581.1758,451.7651 L1581.1758,282.3531 C1581.1758,251.1811 1555.7648,225.8821 1524.7058,225.8821 L1524.7058,225.8821 L1355.2938,225.8821 L1355.2938,282.3531 C1355.2938,313.5251 1329.9948,338.8241 1298.8238,338.8241 C1267.6518,338.8241 1242.3528,313.5251 1242.3528,282.3531 L1242.3528,282.3531 L1242.3528,225.8821 L451.7648,225.8821 L451.7648,282.3531 C451.7648,313.5251 426.4658,338.8241 395.2938,338.8241 C364.1228,338.8241 338.8228,313.5251 338.8228,282.3531 L338.8228,282.3531 L338.8228,225.8821 Z\" transform=\"translate(113)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCalendarReservedSolid":{"variant":"Solid","glyphName":"calendar-reserved","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.176,451.765 L112.942,451.765 L112.942,282.353 C112.942,250.729 137.788,225.882 169.412,225.882 L338.823,225.882 L338.823,282.353 C338.823,313.976 363.671,338.824 395.294,338.824 C426.918,338.824 451.765,313.976 451.765,282.353 L451.765,225.882 L1242.354,225.882 L1242.354,282.353 C1242.354,313.976 1267.2,338.824 1298.824,338.824 C1330.447,338.824 1355.294,313.976 1355.294,282.353 L1355.294,225.882 L1524.706,225.882 C1556.329,225.882 1581.176,250.729 1581.176,282.353 L1581.176,451.765 Z M734.118,1491.953 L355.765,1112.471 L434.823,1033.412 L734.118,1331.576 L1259.294,807.529 L1338.354,886.588 L734.118,1491.953 Z M1524.706,112.941 L1355.294,112.941 L1355.294,56.471 C1355.294,24.847 1330.447,0 1298.824,0 C1267.2,0 1242.354,24.847 1242.354,56.471 L1242.354,112.941 L451.765,112.941 L451.765,56.471 C451.765,24.847 426.918,0 395.294,0 C363.671,0 338.823,24.847 338.823,56.471 L338.823,112.941 L169.412,112.941 C75.671,112.941 -4.54747351e-13,188.612 -4.54747351e-13,282.353 L-4.54747351e-13,1920 L1694.118,1920 L1694.118,282.353 C1694.118,188.612 1618.447,112.941 1524.706,112.941 L1524.706,112.941 Z\" transform=\"translate(113)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCertifiedLine":{"variant":"Line","glyphName":"certified","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,15 L1226.66667,256.92 L1586.56,243.053333 L1635.30667,599.96 L1920,820.546667 L1728,1125.18667 L1804.26667,1477.29333 L1461.33333,1587.16 L1293.44,1905.77333 L960,1769.56 L626.56,1905.77333 L458.666667,1587.16 L115.733333,1477.29333 L192,1125.18667 L0,820.546667 L284.693333,599.96 L333.44,243.053333 L693.333333,256.92 L960,15 Z M960,159 L764.906667,335.96 L732.693333,365.186667 L689.173333,363.586667 L425.92,353.453333 L390.293333,614.36 L384.426667,657.56 L349.973333,684.12 L141.866667,845.506667 L282.24,1068.44 L305.493333,1105.13333 L296.213333,1147.8 L240.533333,1405.18667 L491.306667,1485.61333 L532.8,1498.94667 L553.173333,1537.45333 L675.84,1770.41333 L919.68,1670.89333 L960,1654.36 L1000.32,1670.89333 L1244.16,1770.41333 L1366.93333,1537.45333 L1387.2,1498.94667 L1428.69333,1485.61333 L1679.46667,1405.18667 L1623.78667,1147.8 L1614.50667,1105.13333 L1637.76,1068.44 L1778.24,845.506667 L1570.02667,684.12 L1535.57333,657.56 L1529.70667,614.36 L1493.97333,353.453333 L1230.93333,363.586667 L1187.30667,365.186667 L1155.09333,335.96 L960,159 Z M1301.056,772.482667 L1365.58933,857.496 L803.989333,1283.736 L548.949333,1028.696 L624.362667,953.282667 L813.589333,1142.50933 L1301.056,772.482667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCertifiedSolid":{"variant":"Solid","glyphName":"certified","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,15 L693.226667,257.026667 L333.44,243.053333 L284.693333,599.96 L0,820.546667 L192,1125.18667 L115.733333,1477.18667 L458.666667,1587.16 L626.56,1905.77333 L960,1769.56 L1293.44,1905.77333 L1461.33333,1587.16 L1804.26667,1477.18667 L1728,1125.18667 L1920,820.546667 L1635.30667,599.96 L1586.56,243.053333 L1226.66667,257.026667 L960,15 Z M1312.74667,631.426667 L1460.58667,785.24 L860.586667,1362.52 L457.813333,959.746667 L608.64,808.92 L863.573333,1063.74667 L1312.74667,631.426667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconChatLine":{"variant":"Line","glyphName":"chat","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M677.680941,-0.0338823529 L677.680941,338.902588 L790.622118,338.902588 L790.622118,113.020235 L1807.09271,113.020235 L1807.09271,903.495529 L1581.09741,903.495529 L1581.09741,1163.26024 L1321.44565,903.495529 L1242.27388,903.495529 L1242.27388,451.843765 L677.680941,451.843765 L0.0338823529,451.843765 L0.0338823529,1468.31435 L338.744471,1468.31435 L338.744471,1887.21318 L756.739765,1468.31435 L1242.27388,1468.31435 L1242.27388,1016.43671 L1275.02682,1016.43671 L1694.15153,1435.56141 L1694.15153,1016.43671 L1920.03388,1016.43671 L1920.03388,-0.0338823529 L677.680941,-0.0338823529 Z M338.823529,903.529412 L903.529412,903.529412 L903.529412,790.588235 L338.823529,790.588235 L338.823529,903.529412 Z M338.823529,1129.41176 L677.76,1129.41176 L677.76,1016.35765 L338.823529,1016.35765 L338.823529,1129.41176 Z M112.975059,564.672 L1129.44565,564.672 L1129.44565,1355.37318 L710.433882,1355.37318 L451.685647,1615.02494 L451.685647,1355.37318 L112.975059,1355.37318 L112.975059,564.672 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconChatSolid":{"variant":"Solid","glyphName":"chat","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1242.35294,451.753412 L1242.35294,1468.224 L757.496471,1468.224 L338.823529,1886.89694 L338.823529,1468.224 L0,1468.224 L0,451.753412 L1242.35294,451.753412 Z M1920.03388,0.0338823529 L1920.03388,1016.50447 L1694.15153,1016.50447 L1694.15153,1435.51624 L1355.21506,1096.57976 L1355.21506,338.857412 L677.680941,338.857412 L677.680941,0.0338823529 L1920.03388,0.0338823529 Z M677.76,1016.45929 L338.823529,1016.45929 L338.823529,1129.40047 L677.76,1129.40047 L677.76,1016.45929 Z M903.529412,790.576941 L338.823529,790.576941 L338.823529,903.631059 L903.529412,903.631059 L903.529412,790.576941 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckDarkLine":{"variant":"Line","glyphName":"check-dark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1827.70109 303.065275L698.834569 1431.80125 92.2989053 825.265588 0 917.564493 698.834569 1616.39906 1919.86945 395.23363z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckDarkSolid":{"variant":"Solid","glyphName":"check-dark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1743.8579 267.012456L710.746654 1300.1237 176.005086 765.382131 0 941.387217 710.746654 1652.25843 1919.98754 443.142104z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckMarkIndeterminateLine":{"variant":"Line","glyphName":"check-mark-indeterminate","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M288 864L288 1056 1632 1056 1632 864z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckMarkIndeterminateSolid":{"variant":"Solid","glyphName":"check-mark-indeterminate","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M288 864L288 1056 1632 1056 1632 864z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckMarkLine":{"variant":"Line","glyphName":"check-mark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1827.70109 303.065275L698.834569 1431.80125 92.2989053 825.265588 0 917.564493 698.834569 1616.39906 1919.86945 395.23363z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckMarkSolid":{"variant":"Solid","glyphName":"check-mark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1743.8579 267.012456L710.746654 1300.1237 176.005086 765.382131 0 941.387217 710.746654 1652.25843 1919.98754 443.142104z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckPlusLine":{"variant":"Line","glyphName":"check-plus","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1709.28872,959.672847 L1709.28872,1814.27733 L341.807607,1814.27733 L341.807607,1016.53253 L455.754871,1016.53253 L455.754871,1700.33006 L1595.34146,1700.33006 L1595.34146,959.672847 L1709.28872,959.672847 Z M1840.35086,434.569671 L1920,516.155912 L1122.36915,1295.78309 L757.851857,939.242102 L837.500994,857.883756 L1122.36915,1136.37087 L1840.35086,434.569671 Z M455.789055,105 L455.789055,446.955739 L797.744794,446.955739 L797.744794,560.903002 L455.789055,560.903002 L455.789055,902.630846 L341.841791,902.630846 L341.841791,560.903002 L-5.68434189e-14,560.903002 L-5.68434189e-14,446.955739 L341.841791,446.955739 L341.841791,105 L455.789055,105 Z M1538.32225,446.875976 L1538.32225,560.823239 L911.612294,560.823239 L911.612294,446.875976 L1538.32225,446.875976 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckPlusSolid":{"variant":"Solid","glyphName":"check-plus","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M459.896763,902.84233 L459.896763,1592.68747 L1494.66448,1592.68747 L1494.66448,1017.81652 L1724.72783,1017.81652 L1724.72783,1822.63586 L229.948381,1822.63586 L229.948381,902.84233 L459.896763,902.84233 Z M1759.26608,331.926488 L1920,496.454555 L1074.9397,1322.31417 L666.896296,923.468699 L827.745188,759.055607 L1074.9397,1000.73136 L1759.26608,331.926488 Z M459.896763,98 L459.896763,328.063356 L689.960118,328.063356 L689.960118,558.011737 L459.896763,558.011737 L459.896763,787.845144 L229.948381,787.845144 L229.948381,558.011737 L5.68434189e-14,558.011737 L5.68434189e-14,328.063356 L229.948381,328.063356 L229.948381,98 L459.896763,98 Z M1379.71328,327.982874 L1379.71328,557.931255 L804.84233,557.931255 L804.84233,327.982874 L1379.71328,327.982874 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckLine":{"variant":"Line","glyphName":"check","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1827.70109 303.065275L698.834569 1431.80125 92.2989053 825.265588 0 917.564493 698.834569 1616.39906 1919.86945 395.23363z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCheckSolid":{"variant":"Solid","glyphName":"check","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1743.8579 267.012456L710.746654 1300.1237 176.005086 765.382131 0 941.387217 710.746654 1652.25843 1919.98754 443.142104z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCircleArrowDownLine":{"variant":"Line","glyphName":"circle-arrow-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1559.23847,360.761532 C1228.77843,30.3014919 691.221573,30.3014919 360.761532,360.761532 C30.3014919,691.221573 30.3014919,1228.77843 360.761532,1559.23847 C691.221573,1889.69851 1228.77843,1889.69851 1559.23847,1559.23847 C1889.69851,1228.77843 1889.69851,691.221573 1559.23847,360.761532 Z M280.86307,1639.13693 C-93.6210233,1264.65284 -93.6210233,655.347163 280.86307,280.86307 C655.347163,-93.6210233 1264.65284,-93.6210233 1639.13693,280.86307 C2013.62102,655.347163 2013.62102,1264.65284 1639.13693,1639.13693 C1264.65284,2013.62102 655.347163,2013.62102 280.86307,1639.13693 Z M640.406151,1039.89846 L903.511787,1303.0041 L903.431889,480.609226 L1016.56811,480.609226 L1016.48821,1303.0041 L1279.59385,1039.89846 L1359.49231,1119.79692 L960,1519.28924 L560.507688,1119.79692 L640.406151,1039.89846 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCircleArrowDownSolid":{"variant":"Solid","glyphName":"circle-arrow-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1359.49231,1119.79692 L1279.59385,1039.89846 L1016.48821,1303.0041 L1016.56811,480.609226 L903.431889,480.609226 L903.511787,1303.0041 L640.406151,1039.89846 L560.507688,1119.79692 L960,1519.28924 L1359.49231,1119.79692 Z M280.86307,1639.13693 C-93.6210233,1264.65284 -93.6210233,655.347163 280.86307,280.86307 C655.347163,-93.6210233 1264.65284,-93.6210233 1639.13693,280.86307 C2013.62102,655.347163 2013.62102,1264.65284 1639.13693,1639.13693 C1264.65284,2013.62102 655.347163,2013.62102 280.86307,1639.13693 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCircleArrowUpLine":{"variant":"Line","glyphName":"circle-arrow-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1559.23847,1559.23847 C1889.69851,1228.77843 1889.69851,691.221573 1559.23847,360.761532 C1228.77843,30.3014919 691.221573,30.3014919 360.761532,360.761532 C30.3014919,691.221573 30.3014919,1228.77843 360.761532,1559.23847 C691.221573,1889.69851 1228.77843,1889.69851 1559.23847,1559.23847 Z M280.86307,280.86307 C655.347163,-93.6210233 1264.65284,-93.6210233 1639.13693,280.86307 C2013.62102,655.347163 2013.62102,1264.65284 1639.13693,1639.13693 C1264.65284,2013.62102 655.347163,2013.62102 280.86307,1639.13693 C-93.6210233,1264.65284 -93.6210233,655.347163 280.86307,280.86307 Z M640.406151,880.101538 L560.507688,800.203075 L960,400.710763 L1359.49231,800.203075 L1279.59385,880.101538 L1016.48821,616.995901 L1016.56811,1439.39077 L903.431889,1439.39077 L903.511787,616.995901 L640.406151,880.101538 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCircleArrowUpSolid":{"variant":"Solid","glyphName":"circle-arrow-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1359.49231,800.203075 L960,400.710763 L560.507688,800.203075 L640.406151,880.101538 L903.511787,616.995901 L903.431889,1439.39077 L1016.56811,1439.39077 L1016.48821,616.995901 L1279.59385,880.101538 L1359.49231,800.203075 Z M280.86307,280.86307 C655.347163,-93.6210233 1264.65284,-93.6210233 1639.13693,280.86307 C2013.62102,655.347163 2013.62102,1264.65284 1639.13693,1639.13693 C1264.65284,2013.62102 655.347163,2013.62102 280.86307,1639.13693 C-93.6210233,1264.65284 -93.6210233,655.347163 280.86307,280.86307 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconClearTextFormattingLine":{"variant":"Line","glyphName":"clear-text-formatting","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1235.1411,1439.9223 L1044.8241,1439.9223 L864.8271,1259.9243 L1499.9761,624.7753 L1775.1321,899.9303 L1235.1411,1439.9223 Z M1902.4501,857.4503 L1542.4561,497.4563 C1518.9351,474.0573 1481.0161,474.0573 1457.6171,497.4563 L737.6281,1217.4453 C714.1091,1240.9653 714.1091,1278.8843 737.6281,1302.4033 L875.1461,1439.9223 L0.0001,1439.9223 L0.0001,1559.9203 L1259.9801,1559.9203 C1275.9401,1559.9203 1291.1801,1553.5603 1302.4601,1542.4003 L1902.4501,942.4093 C1925.8491,918.8903 1925.8491,880.9703 1902.4501,857.4503 L1902.4501,857.4503 Z\" transform=\"translate(0 180)\"/>\n        <path d=\"M120.0339 0.004L120.0339 120.003 615.0269 120.003 243.3919 1180.066 356.5499 1219.786 742.1049 120.003 1200.0169 120.003 1200.0169 0.004z\" transform=\"translate(0 180)\"/>\n    </g>\n</svg>\n","deprecated":false},"IconClearTextFormattingSolid":{"variant":"Solid","glyphName":"clear-text-formatting","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1902.45,857.571 C1925.849,880.97 1925.849,919.01 1902.45,942.41 L1302.46,1542.4 C1291.179,1553.68 1275.939,1560.04 1259.98,1560.04 L1019.984,1560.04 L0,1560.04 L0,1440.042 L875.146,1440.042 L737.628,1302.404 C714.229,1279.005 714.229,1240.966 737.628,1217.565 L1457.617,497.577 C1481.016,474.177 1519.055,474.177 1542.456,497.577 L1902.45,857.571 Z\" transform=\"translate(0 180)\"/>\n        <path d=\"M243.452 1180.186L615.086 120.003 120.094 120.003 120.094 0.005 1200.077 0.005 1200.077 120.003 742.164 120.003 356.61 1219.786z\" transform=\"translate(0 180)\"/>\n    </g>\n</svg>\n","deprecated":false},"IconClockLine":{"variant":"Line","glyphName":"clock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 M960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 M1377.90494,1344.04518 L903.552,988.280471 L903.552,395.339294 L1016.49318,395.339294 L1016.49318,931.809882 L1445.66965,1253.57929 L1377.90494,1344.04518 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconClockSolid":{"variant":"Solid","glyphName":"clock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1377.88235,1344 L903.529412,988.235294 L903.529412,395.294118 L1016.47059,395.294118 L1016.47059,931.764706 L1445.64706,1253.53412 L1377.88235,1344 Z M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.24235 430.644706,1920 960,1920 C1489.24235,1920 1920,1489.24235 1920,960 C1920,430.644706 1489.24235,0 960,0 L960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconClosedCaptioningOffLine":{"variant":"Line","glyphName":"closed-captioning-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1264.8398,456.278941 C1295.85311,650.740726 1465.16897,799.939855 1668.85093,799.939855 C1671.36552,799.939855 1673.88011,799.939855 1676.3947,799.101658 L1676.3947,799.101658 L1676.3947,1629.75523 C1676.3947,1721.95694 1600.95694,1797.3947 1508.75523,1797.3947 L1508.75523,1797.3947 L167.63947,1797.3947 C75.4377617,1797.3947 0,1721.95694 0,1629.75523 L0,1629.75523 L0,623.918411 C0,531.716702 75.4377617,456.278941 167.63947,456.278941 L167.63947,456.278941 Z M754.377617,783.242964 L502.918411,783.242964 C364.615848,783.242964 251.459206,896.399606 251.459206,1034.70217 L251.459206,1034.70217 L251.459206,1202.34164 C251.459206,1340.6442 364.615848,1453.80085 502.918411,1453.80085 L502.918411,1453.80085 L754.377617,1453.80085 L754.377617,1286.16137 L502.918411,1286.16137 C456.817557,1286.16137 419.098676,1248.44249 419.098676,1202.34164 L419.098676,1202.34164 L419.098676,1034.70217 C419.098676,988.601315 456.817557,950.882434 502.918411,950.882434 L502.918411,950.882434 L754.377617,950.882434 L754.377617,783.242964 Z M1424.9355,783.242964 L1173.47629,783.242964 C1035.17373,783.242964 922.017087,896.399606 922.017087,1034.70217 L922.017087,1034.70217 L922.017087,1202.34164 C922.017087,1340.6442 1035.17373,1453.80085 1173.47629,1453.80085 L1173.47629,1453.80085 L1424.9355,1453.80085 L1424.9355,1286.16137 L1173.47629,1286.16137 C1127.37544,1286.16137 1089.65656,1248.44249 1089.65656,1202.34164 L1089.65656,1202.34164 L1089.65656,1034.70217 C1089.65656,988.601315 1127.37544,950.882434 1173.47629,950.882434 L1173.47629,950.882434 L1424.9355,950.882434 L1424.9355,783.242964 Z M1822.68529,121 L1920,219.320549 L1762.25126,378.661866 L1920,538.087002 L1822.68529,636.323732 L1664.93655,476.982415 L1507.10398,636.323732 L1409.78927,538.087002 L1567.62183,378.661866 L1409.78927,219.320549 L1507.10398,121 L1664.93655,280.425136 L1822.68529,121 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconClosedCaptioningOffSolid":{"variant":"Solid","glyphName":"closed-captioning-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1264.8398,456.278941 C1295.85311,650.740726 1465.16897,799.939855 1668.85093,799.939855 C1671.36552,799.939855 1673.88011,799.939855 1676.3947,799.101658 L1676.3947,799.101658 L1676.3947,1629.75523 C1676.3947,1721.95694 1600.95694,1797.3947 1508.75523,1797.3947 L1508.75523,1797.3947 L167.63947,1797.3947 C75.4377617,1797.3947 0,1721.95694 0,1629.75523 L0,1629.75523 L0,623.918411 C0,531.716702 75.4377617,456.278941 167.63947,456.278941 L167.63947,456.278941 Z M754.377617,783.242964 L502.918411,783.242964 C364.615848,783.242964 251.459206,896.399606 251.459206,1034.70217 L251.459206,1034.70217 L251.459206,1202.34164 C251.459206,1340.6442 364.615848,1453.80085 502.918411,1453.80085 L502.918411,1453.80085 L754.377617,1453.80085 L754.377617,1286.16137 L502.918411,1286.16137 C456.817557,1286.16137 419.098676,1248.44249 419.098676,1202.34164 L419.098676,1202.34164 L419.098676,1034.70217 C419.098676,988.601315 456.817557,950.882434 502.918411,950.882434 L502.918411,950.882434 L754.377617,950.882434 L754.377617,783.242964 Z M1424.9355,783.242964 L1173.47629,783.242964 C1035.17373,783.242964 922.017087,896.399606 922.017087,1034.70217 L922.017087,1034.70217 L922.017087,1202.34164 C922.017087,1340.6442 1035.17373,1453.80085 1173.47629,1453.80085 L1173.47629,1453.80085 L1424.9355,1453.80085 L1424.9355,1286.16137 L1173.47629,1286.16137 C1127.37544,1286.16137 1089.65656,1248.44249 1089.65656,1202.34164 L1089.65656,1202.34164 L1089.65656,1034.70217 C1089.65656,988.601315 1127.37544,950.882434 1173.47629,950.882434 L1173.47629,950.882434 L1424.9355,950.882434 L1424.9355,783.242964 Z M1822.68529,121 L1920,219.320549 L1762.25126,378.661866 L1920,538.087002 L1822.68529,636.323732 L1664.93655,476.982415 L1507.10398,636.323732 L1409.78927,538.087002 L1567.62183,378.661866 L1409.78927,219.320549 L1507.10398,121 L1664.93655,280.425136 L1822.68529,121 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconClosedCaptioningOnLine":{"variant":"Line","glyphName":"closed-captioning-on","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1220.70108,478.258262 C1250.97967,664.668368 1411.36786,807.38735 1606.29131,799.516523 L1606.29131,799.516523 L1606.29131,1602.66218 C1606.29131,1691.0082 1534.0082,1763.29131 1445.66218,1763.29131 L1445.66218,1763.29131 L160.629131,1763.29131 C72.2831088,1763.29131 0,1691.0082 0,1602.66218 L0,1602.66218 L0,638.887392 C0,550.54137 72.2831088,478.258262 160.629131,478.258262 L160.629131,478.258262 Z M1365.34761,791.509161 L1124.40392,791.509161 C991.563624,791.509161 883.460219,899.612566 883.460219,1032.45286 L883.460219,1032.45286 L883.460219,1193.08199 C883.460219,1325.92228 991.563624,1434.02568 1124.40392,1434.02568 L1124.40392,1434.02568 L1365.34761,1434.02568 L1365.34761,1273.39655 L1124.40392,1273.39655 C1080.15059,1273.39655 1044.08935,1237.33531 1044.08935,1193.08199 L1044.08935,1193.08199 L1044.08935,1032.45286 C1044.08935,988.199531 1080.15059,952.138292 1124.40392,952.138292 L1124.40392,952.138292 L1365.34761,952.138292 L1365.34761,791.509161 Z M722.831088,791.509161 L481.887392,791.509161 C349.047101,791.509161 240.943696,899.612566 240.943696,1032.45286 L240.943696,1032.45286 L240.943696,1193.08199 C240.943696,1325.92228 349.047101,1434.02568 481.887392,1434.02568 L481.887392,1434.02568 L722.831088,1434.02568 L722.831088,1273.39655 L481.887392,1273.39655 C437.634067,1273.39655 401.572827,1237.33531 401.572827,1193.08199 L401.572827,1193.08199 L401.572827,1032.45286 C401.572827,988.199531 437.634067,952.138292 481.887392,952.138292 L481.887392,952.138292 L722.831088,952.138292 L722.831088,791.509161 Z M1825.87133,157 L1920,251.208985 L1539.95148,631.257509 L1293.0645,384.370535 L1387.27349,290.241864 L1539.95148,442.919853 L1825.87133,157 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconClosedCaptioningOnSolid":{"variant":"Solid","glyphName":"closed-captioning-on","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1220.70108,478.258262 C1250.97967,664.668368 1411.36786,807.38735 1606.29131,799.516523 L1606.29131,799.516523 L1606.29131,1602.66218 C1606.29131,1691.0082 1534.0082,1763.29131 1445.66218,1763.29131 L1445.66218,1763.29131 L160.629131,1763.29131 C72.2831088,1763.29131 0,1691.0082 0,1602.66218 L0,1602.66218 L0,638.887392 C0,550.54137 72.2831088,478.258262 160.629131,478.258262 L160.629131,478.258262 Z M1365.34761,791.509161 L1124.40392,791.509161 C991.563624,791.509161 883.460219,899.612566 883.460219,1032.45286 L883.460219,1032.45286 L883.460219,1193.08199 C883.460219,1325.92228 991.563624,1434.02568 1124.40392,1434.02568 L1124.40392,1434.02568 L1365.34761,1434.02568 L1365.34761,1273.39655 L1124.40392,1273.39655 C1080.15059,1273.39655 1044.08935,1237.33531 1044.08935,1193.08199 L1044.08935,1193.08199 L1044.08935,1032.45286 C1044.08935,988.199531 1080.15059,952.138292 1124.40392,952.138292 L1124.40392,952.138292 L1365.34761,952.138292 L1365.34761,791.509161 Z M722.831088,791.509161 L481.887392,791.509161 C349.047101,791.509161 240.943696,899.612566 240.943696,1032.45286 L240.943696,1032.45286 L240.943696,1193.08199 C240.943696,1325.92228 349.047101,1434.02568 481.887392,1434.02568 L481.887392,1434.02568 L722.831088,1434.02568 L722.831088,1273.39655 L481.887392,1273.39655 C437.634067,1273.39655 401.572827,1237.33531 401.572827,1193.08199 L401.572827,1193.08199 L401.572827,1032.45286 C401.572827,988.199531 437.634067,952.138292 481.887392,952.138292 L481.887392,952.138292 L722.831088,952.138292 L722.831088,791.509161 Z M1825.87133,157 L1920,251.208985 L1539.95148,631.257509 L1293.0645,384.370535 L1387.27349,290.241864 L1539.95148,442.919853 L1825.87133,157 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconClosedCaptioningLine":{"variant":"Line","glyphName":"closed-captioning","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1800,1745 L1800,185 C1800,152 1773,125 1740,125 L180,125 C147,125 120,152 120,185 L120,1745 C120,1778 147,1805 180,1805 L1740,1805 C1773,1805 1800,1778 1800,1745 Z M1740,5 C1839.24,5 1920,85.76 1920,185 L1920,1745 C1920,1844.24 1839.24,1925 1740,1925 L180,1925 C80.76,1925 0,1844.24 0,1745 L0,185 C0,85.76 80.76,5 180,5 L1740,5 Z M859.522039,853.668863 L699.522039,853.668863 L699.522039,800.335529 L486.188706,800.335529 L486.188706,1120.33553 L699.522039,1120.33553 L699.522039,1067.0022 L859.522039,1067.0022 L859.522039,1173.66886 C859.522039,1232.33553 811.522039,1280.33553 752.855373,1280.33553 L432.855373,1280.33553 C374.188706,1280.33553 326.188706,1232.33553 326.188706,1173.66886 L326.188706,747.002196 C326.188706,688.335529 374.188706,640.335529 432.855373,640.335529 L752.855373,640.335529 C811.522039,640.335529 859.522039,688.335529 859.522039,747.002196 L859.522039,853.668863 Z M1584.52204,853.668863 L1424.52204,853.668863 L1424.52204,800.335529 L1211.18871,800.335529 L1211.18871,1120.33553 L1424.52204,1120.33553 L1424.52204,1067.0022 L1584.52204,1067.0022 L1584.52204,1173.66886 C1584.52204,1232.33553 1536.52204,1280.33553 1477.85537,1280.33553 L1157.85537,1280.33553 C1099.18871,1280.33553 1051.18871,1232.33553 1051.18871,1173.66886 L1051.18871,747.002196 C1051.18871,688.335529 1099.18871,640.335529 1157.85537,640.335529 L1477.85537,640.335529 C1536.52204,640.335529 1584.52204,688.335529 1584.52204,747.002196 L1584.52204,853.668863 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconClosedCaptioningSolid":{"variant":"Solid","glyphName":"closed-captioning","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1706.66667,0 L213.333333,0 C94.9333333,0 0,108 0,240 L0,1680 C0,1812 94.9333333,1920 213.333333,1920 L1706.66667,1920 C1824,1920 1920,1812 1920,1680 L1920,240 C1920,108 1824,0 1706.66667,0 Z M853.333333,853.333333 L693.333333,853.333333 L693.333333,800 L480,800 L480,1120 L693.333333,1120 L693.333333,1066.66667 L853.333333,1066.66667 L853.333333,1173.33333 C853.333333,1232 805.333333,1280 746.666667,1280 L426.666667,1280 C368,1280 320,1232 320,1173.33333 L320,746.666667 C320,688 368,640 426.666667,640 L746.666667,640 C805.333333,640 853.333333,688 853.333333,746.666667 L853.333333,853.333333 Z M1600.33333,853.333333 L1440.33333,853.333333 L1440.33333,800 L1227,800 L1227,1120 L1440.33333,1120 L1440.33333,1066.66667 L1600.33333,1066.66667 L1600.33333,1173.33333 C1600.33333,1232 1552.33333,1280 1493.66667,1280 L1173.66667,1280 C1115,1280 1067,1232 1067,1173.33333 L1067,746.666667 C1067,688 1115,640 1173.66667,640 L1493.66667,640 C1552.33333,640 1600.33333,688 1600.33333,746.666667 L1600.33333,853.333333 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconCloudDownloadLine":{"variant":"Line","glyphName":"cloud-download","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1016.47059,903.047529 L1016.47059,1613.78635 L1202.37176,1427.88518 L1282.33412,1507.73459 L960,1829.95576 L637.665882,1507.73459 L717.628235,1427.88518 L903.529412,1613.78635 L903.529412,903.047529 L1016.47059,903.047529 Z M960,56 C1181.81647,56 1368.84706,199.661176 1438.08,398.211765 C1448.13176,397.534118 1458.07059,394.823529 1468.23529,394.823529 C1717.38353,394.823529 1920,597.44 1920,846.588235 C1920,1095.73647 1717.38353,1298.35294 1468.23529,1298.35294 L1468.23529,1298.35294 L1355.29412,1298.35294 L1355.29412,1185.41176 L1468.23529,1185.41176 C1655.04,1185.41176 1807.05882,1033.39294 1807.05882,846.588235 C1807.05882,659.783529 1655.04,507.764706 1468.23529,507.764706 C1466.31529,507.764706 1464.50824,508.329412 1462.58824,508.442353 C1464.73412,526.964706 1468.23529,545.148235 1468.23529,564.235294 C1468.23529,608.395294 1462.47529,652.329412 1451.29412,694.908235 L1451.29412,694.908235 L1342.08,665.995294 C1350.88941,632.790588 1355.29412,598.569412 1355.29412,564.235294 C1355.29412,346.258824 1177.97647,168.941176 960,168.941176 C747.557647,168.941176 574.870588,337.901176 566.4,548.310588 C604.574118,566.72 640.602353,590.098824 671.774118,620.592941 L671.774118,620.592941 L592.828235,701.345882 C539.745882,649.28 469.609412,620.705882 395.294118,620.705882 C239.548235,620.705882 112.941176,747.425882 112.941176,903.058824 C112.941176,1058.80471 239.548235,1185.41176 395.294118,1185.41176 L395.294118,1185.41176 L564.705882,1185.41176 L564.705882,1298.35294 L395.294118,1298.35294 C177.317647,1298.35294 0,1121.03529 0,903.058824 C0,685.082353 177.317647,507.764706 395.294118,507.764706 C416.188235,507.764706 436.517647,510.475294 456.847059,513.750588 C482.597647,257.487059 697.072941,56 960,56 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCloudDownloadSolid":{"variant":"Solid","glyphName":"cloud-download","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,73 C1181.81647,73 1368.84706,216.661176 1438.08,415.211765 C1448.13176,414.534118 1458.07059,411.823529 1468.23529,411.823529 C1717.38353,411.823529 1920,614.44 1920,863.588235 C1920,1112.73647 1717.38353,1315.35294 1468.23529,1315.35294 L1468.23529,1315.35294 L1016.47059,1315.35294 L1016.47059,1630.79765 L1202.37176,1444.78353 L1282.33412,1524.63294 L960,1846.96706 L637.665882,1524.63294 L717.628235,1444.78353 L903.529412,1630.79765 L903.529412,1315.35294 L395.294118,1315.35294 C177.317647,1315.35294 0,1138.03529 0,920.058824 C0,702.082353 177.317647,524.764706 395.294118,524.764706 C416.188235,524.764706 436.517647,527.475294 456.847059,530.750588 C482.597647,274.487059 697.072941,73 960,73 Z M1016.47059,920.058824 L903.529412,920.058824 L903.529412,1202.41176 L1016.47059,1202.41176 L1016.47059,920.058824 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCloudLockLine":{"variant":"Line","glyphName":"cloud-lock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1027.71953,849.164706 C1152.40659,849.164706 1253.60188,950.472941 1253.60188,1075.04706 L1253.60188,1075.04706 L1253.60188,1187.98824 L1366.54306,1187.98824 L1366.54306,1583.28235 C1366.54306,1676.68471 1290.64659,1752.69412 1197.13129,1752.69412 L1197.13129,1752.69412 L858.307765,1752.69412 C764.905412,1752.69412 688.896,1676.68471 688.896,1583.28235 L688.896,1583.28235 L688.896,1187.98824 L801.837176,1187.98824 L801.837176,1075.04706 C801.837176,950.472941 903.145412,849.164706 1027.71953,849.164706 Z M1253.60188,1300.92941 L801.837176,1300.92941 L801.837176,1583.28235 C801.837176,1614.45412 827.248941,1639.75294 858.307765,1639.75294 L858.307765,1639.75294 L1197.13129,1639.75294 C1228.30306,1639.75294 1253.60188,1614.45412 1253.60188,1583.28235 L1253.60188,1583.28235 L1253.60188,1300.92941 Z M960,167 C1181.81647,167 1368.84706,310.661176 1438.08,509.211765 C1448.24471,508.534118 1458.07059,505.823529 1468.23529,505.823529 C1717.27059,505.823529 1920,708.44 1920,957.588235 C1920,1206.73647 1717.27059,1409.35294 1468.23529,1409.35294 L1468.23529,1409.35294 L1468.23529,1296.41176 C1655.04,1296.41176 1807.05882,1144.39294 1807.05882,957.588235 C1807.05882,770.783529 1655.04,618.764706 1468.23529,618.764706 C1466.31529,618.764706 1464.50824,619.329412 1462.58824,619.442353 C1464.73412,637.964706 1468.23529,656.148235 1468.23529,675.235294 C1468.23529,719.621176 1462.47529,763.555294 1451.29412,806.021176 L1451.29412,806.021176 L1342.08,776.882353 C1350.88941,744.016471 1355.29412,709.795294 1355.29412,675.235294 C1355.29412,457.258824 1177.97647,279.941176 960,279.941176 C747.557647,279.941176 574.870588,448.901176 566.287059,659.197647 C604.574118,677.72 640.715294,701.098824 671.887059,731.592941 L671.887059,731.592941 L592.941176,812.345882 C539.745882,760.28 469.609412,731.705882 395.294118,731.705882 C239.661176,731.705882 112.941176,858.425882 112.941176,1014.05882 C112.941176,1169.69176 239.661176,1296.41176 395.294118,1296.41176 L395.294118,1296.41176 L564.705882,1296.41176 L564.705882,1409.35294 L395.294118,1409.35294 C177.317647,1409.35294 0,1232.03529 0,1014.05882 C0,796.082353 177.317647,618.764706 395.294118,618.764706 C416.188235,618.764706 436.630588,621.475294 456.847059,624.750588 C482.597647,368.487059 697.072941,167 960,167 Z M1027.71953,962.105882 C965.488941,962.105882 914.778353,1012.81647 914.778353,1075.04706 L914.778353,1075.04706 L914.778353,1187.98824 L1140.66071,1187.98824 L1140.66071,1075.04706 C1140.66071,1012.81647 1090.06306,962.105882 1027.71953,962.105882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCloudLockSolid":{"variant":"Solid","glyphName":"cloud-lock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1129.418,1017.4577 L903.538,1017.4577 L903.538,904.5187 C903.538,842.2877 954.248,791.5777 1016.479,791.5777 C1078.708,791.5777 1129.418,842.2877 1129.418,904.5187 L1129.418,1017.4577 Z M1242.358,1017.4577 L1242.358,904.5187 C1242.358,779.9447 1141.051,678.6377 1016.479,678.6377 C891.905,678.6377 790.598,779.9447 790.598,904.5187 L790.598,1017.4577 L677.657,1017.4577 L677.657,1412.7487 C677.657,1506.1497 753.666,1582.1597 847.067,1582.1597 L1185.888,1582.1597 C1279.29,1582.1597 1355.299,1506.1497 1355.299,1412.7487 L1355.299,1017.4577 L1242.358,1017.4577 Z\" transform=\"translate(0 168)\"/>\n        <path d=\"M1468.2393,339.8176 C1458.0743,339.8176 1447.9103,342.0766 1437.7453,343.2056 C1368.8503,144.4306 1181.3713,0.9966 960.0083,0.9966 C696.8573,0.9966 482.2703,202.0306 457.4243,458.4046 C437.0943,455.0166 415.6353,452.7566 395.3063,452.7566 C150.2263,452.7566 -43.4667,676.9436 8.4863,930.9466 C46.3213,1115.8296 217.9903,1243.3386 406.6003,1243.3386 L564.7173,1243.3386 L564.7173,960.9876 C564.7173,929.8166 590.0153,904.5176 621.1873,904.5176 L677.6573,904.5176 C677.6573,718.1666 830.1263,565.6976 1016.4783,565.6976 C1202.8293,565.6976 1355.2993,718.1666 1355.2993,904.5176 L1411.7693,904.5176 C1442.9393,904.5176 1468.2393,929.8166 1468.2393,960.9876 L1468.2393,1243.3386 C1717.8373,1243.3386 1920.0003,1041.1756 1920.0003,791.5786 C1920.0003,541.9806 1717.8373,339.8176 1468.2393,339.8176\" transform=\"translate(0 168)\"/>\n    </g>\n</svg>\n","deprecated":false},"IconCodeLine":{"variant":"Line","glyphName":"code","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M561.813333,286 L643.84,354.373333 L138.88,960.133333 L643.84,1566 L561.813333,1634.37333 L0,960.133333 L561.813333,286 Z M1362.048,286 L1923.86133,960.133333 L1362.048,1634.37333 L1280.02133,1566 L1784.98133,960.133333 L1280.02133,354.373333 L1362.048,286 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCodeSolid":{"variant":"Solid","glyphName":"code","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M590.453817,251 L716.417298,355.969568 L213.438121,959.544581 L716.417298,1563.11959 L590.453817,1668.08916 L0,959.544581 L590.453817,251 Z M1328.84912,251 L1919.30294,959.544581 L1328.84912,1668.08916 L1202.77629,1563.11959 L1705.86482,959.544581 L1202.77629,355.969568 L1328.84912,251 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCollapseLine":{"variant":"Line","glyphName":"collapse","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1694.17647 L1920,1807.11765 L0,1807.11765 L0,1694.17647 L1920,1694.17647 Z M1750.58824,113 C1843.99059,113 1920,189.009412 1920,282.411765 L1920,1468.29412 L1807.05882,1468.29412 L1807.05882,282.411765 C1807.05882,251.352941 1781.64706,225.941176 1750.58824,225.941176 L169.411765,225.941176 C138.352941,225.941176 112.941176,251.352941 112.941176,282.411765 L112.941176,1468.29412 L0,1468.29412 L0,282.411765 C0,189.009412 76.0094118,113 169.411765,113 L1750.58824,113 Z M1016.47059,564.764706 L1016.47059,1219.03294 L1258.84235,976.548235 L1338.80471,1056.51059 L960,1435.20235 L581.195294,1056.51059 L661.157647,976.548235 L903.529412,1219.03294 L903.529412,564.764706 L1016.47059,564.764706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCollapseSolid":{"variant":"Solid","glyphName":"collapse","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1694 L1920,1806.94118 L0,1806.94118 L0,1694 L1920,1694 Z M1016.47059,338.882353 L1016.47059,993.150588 L1258.84235,750.665882 L1338.80471,830.515294 L960,1209.32 L581.195294,830.515294 L661.157647,750.665882 L903.529412,993.150588 L903.529412,338.882353 L1016.47059,338.882353 Z M1750.58824,113 L169.411765,113 C76.0094118,113 0,189.009412 0,282.411765 L0,1468.29412 L56.4705882,1468.29412 L112.941176,1468.29412 L1807.05882,1468.29412 L1863.52941,1468.29412 L1920,1468.29412 L1920,282.411765 C1920,189.009412 1843.99059,113 1750.58824,113 L1750.58824,113 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCollectionSaveLine":{"variant":"Line","glyphName":"collection-save","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1510.85359,1779.58302 L409.146414,1779.58302 L81.2546391,1451.57632 L0,1532.94589 L361.565904,1894.51179 L1558.4341,1894.51179 L1920,1532.94589 L1838.86029,1451.57632 L1510.85359,1779.58302 Z M962.333054,1432.53262 L462.048126,932.247695 L543.187837,850.878128 L904.86867,1212.55896 L904.86867,25 L1019.68251,25 L1019.68251,1212.55896 L1381.47827,850.878128 L1462.61798,932.247695 L962.333054,1432.53262 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCollectionSaveSolid":{"variant":"Solid","glyphName":"collection-save","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1467.55189,1700.25248 L459.789763,1700.25248 L162.361496,1402.82421 L7,1558.18571 L368.81429,1920 L1558.52736,1920 L1920.34165,1558.18571 L1764.98015,1402.82421 L1467.55189,1700.25248 Z M965.901262,1423.30468 L448.725476,906.128896 L604.086972,750.7674 L856.027503,1002.70793 L856.027503,0 L1075.77502,0 L1075.77502,1002.70793 L1327.71555,750.7674 L1483.07705,906.128896 L965.901262,1423.30468 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCollectionLine":{"variant":"Line","glyphName":"collection","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1242.35294,677.647059 L1242.35294,1920 L0,1920 L0,677.647059 L1242.35294,677.647059 Z M1129.41176,790.588235 L112.941176,790.588235 L112.941176,1807.05882 L1129.41176,1807.05882 L1129.41176,790.588235 Z M338.823529,1129.41176 L903.529412,1129.41176 L903.529412,1016.47059 L338.823529,1016.47059 L338.823529,1129.41176 Z M338.823529,1581.17647 L903.529412,1581.17647 L903.529412,1468.23529 L338.823529,1468.23529 L338.823529,1581.17647 Z M1581.17647,338.823529 L1581.17647,1581.17647 L1355.29412,1581.17647 L1355.29412,1468.23529 L1468.23529,1468.23529 L1468.23529,451.764706 L451.764706,451.764706 L451.764706,564.705882 L338.823529,564.705882 L338.823529,338.823529 L1581.17647,338.823529 Z M790.701176,1242.35294 L790.701176,1355.29412 L338.823529,1355.29412 L338.823529,1242.35294 L790.701176,1242.35294 Z M1920.03388,-0.0112941176 L1920.03388,1242.34165 L1694.15153,1242.34165 L1694.15153,1129.40047 L1807.09271,1129.40047 L1807.09271,112.929882 L790.622118,112.929882 L790.622118,225.871059 L677.680941,225.871059 L677.680941,-0.0112941176 L1920.03388,-0.0112941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCollectionSolid":{"variant":"Solid","glyphName":"collection","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1242.35294,677.647059 L1242.35294,1920 L0,1920 L0,677.647059 L1242.35294,677.647059 Z M903.529412,1468.23529 L338.823529,1468.23529 L338.823529,1581.17647 L903.529412,1581.17647 L903.529412,1468.23529 Z M1581.17647,338.823529 L1581.17647,1581.17647 L1355.29412,1581.17647 L1355.29412,564.705882 L338.823529,564.705882 L338.823529,338.823529 L1581.17647,338.823529 Z M790.701176,1242.35294 L338.823529,1242.35294 L338.823529,1355.29412 L790.701176,1355.29412 L790.701176,1242.35294 Z M1920.03388,-0.0112941176 L1920.03388,1242.34165 L1694.15153,1242.34165 L1694.15153,225.871059 L677.680941,225.871059 L677.680941,-0.0112941176 L1920.03388,-0.0112941176 Z M903.529412,1016.47059 L338.823529,1016.47059 L338.823529,1129.41176 L903.529412,1129.41176 L903.529412,1016.47059 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCommentLine":{"variant":"Line","glyphName":"comment","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1662.17776,0 L1662.17776,1359.96362 L1013.47511,1359.96362 L453.321206,1920.11752 L453.321206,1359.96362 L0,1359.96362 L0,0 L1662.17776,0 Z M1511.07069,151.107069 L151.107069,151.107069 L151.107069,1208.85655 L604.428275,1208.85655 L604.428275,1555.34506 L950.916784,1208.85655 L1511.07069,1208.85655 L1511.07069,151.107069 Z M906.79352,755.550454 L906.79352,873.079027 L453.321206,873.079027 L453.321206,755.550454 L906.79352,755.550454 Z M1208.85655,453.18521 L1208.85655,570.713782 L453.321206,570.713782 L453.321206,453.18521 L1208.85655,453.18521 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCommentSolid":{"variant":"Solid","glyphName":"comment","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1662.17776,0 L1662.17776,1359.96362 L1013.47511,1359.96362 L453.321206,1920.11752 L453.321206,1359.96362 L0,1359.96362 L0,0 L1662.17776,0 Z M906.79352,755.550454 L453.321206,755.550454 L453.321206,873.079027 L906.79352,873.079027 L906.79352,755.550454 Z M1208.85655,453.18521 L453.321206,453.18521 L453.321206,570.713782 L1208.85655,570.713782 L1208.85655,453.18521 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCommentsOffLine":{"variant":"Line","glyphName":"comments-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M853.333333,309.653333 L853.333333,416.426667 L106.666667,416.426667 L106.666667,1459.62667 L372.016412,1459.52878 L371.946667,1706.66667 L701.5892,1459.52878 L1610.24,1459.62667 L1610.24,853.333333 L1716.90667,853.333333 L1716.98189,1566.19545 L737.141594,1566.19545 L265.349746,1920 L265.349746,1566.19545 L0,1566.19545 L0,309.653333 L853.333333,309.653333 Z M1677.01333,0 L1756.86275,79.8494118 L1514.49098,322.221176 L1756.86275,564.705882 L1677.01333,644.555294 L1434.52863,402.183529 L1192.15686,644.555294 L1112.30745,564.705882 L1354.67922,322.221176 L1112.30745,79.8494118 L1192.15686,0 L1434.52863,242.371765 L1677.01333,0 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconCommentsOffSolid":{"variant":"Solid","glyphName":"comments-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M971.153351,416.337587 C1012.92433,667.183858 1228.43455,858.591238 1488.69314,858.591238 L1488.69314,858.591238 L1488.69314,1566.19708 L729.809921,1566.19708 L262.710555,1920 L262.710555,1566.19708 L1.64515022e-12,1566.19708 L2.28664911e-13,416.337587 Z M1689.50909,0 L1813.33333,125.069332 L1612.5349,327.886857 L1813.33333,530.704381 L1689.50909,655.773714 L1488.71066,452.956189 L1287.91222,655.773714 L1164.08798,530.704381 L1364.88642,327.886857 L1164.08798,125.069332 L1287.91222,0 L1488.71066,202.817524 L1689.50909,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCommentsOnLine":{"variant":"Line","glyphName":"comments-on","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M853.333333,309.653333 L853.333333,416.426667 L106.666667,416.426667 L106.666667,1459.62667 L372.016412,1459.52878 L371.946667,1706.66667 L701.5892,1459.52878 L1610.24,1459.62667 L1610.24,853.333333 L1716.90667,853.333333 L1716.98189,1566.19545 L737.141594,1566.19545 L265.349746,1920 L265.349746,1566.19545 L5.7411853e-11,1566.19545 L5.7411853e-11,309.653333 L853.333333,309.653333 Z M1840.15059,0 L1920,79.8494118 L1444.51765,555.331765 L1162.50353,273.430588 L1242.35294,193.581176 L1444.51765,395.632941 L1840.15059,0 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconCommentsOnSolid":{"variant":"Solid","glyphName":"comments-on","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M981.138824,416 C1023.33929,666.991059 1241.06541,858.352941 1504,858.352941 L1504,858.352941 L1504,1566.11765 L737.313882,1566.11765 L265.411765,1920 L265.411765,1566.11765 L2.60902411e-15,1566.11765 L0,416 Z M1794.88188,0 L1920,125.097599 L1415.01477,630 L1087,302.039039 L1212.11812,176.941441 L1415.01477,379.804803 L1794.88188,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCommonsLine":{"variant":"Line","glyphName":"commons","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M715.925665,1409.20256 C465.79765,1409.20256 262.832119,1207.42628 262.832119,959.559245 C262.832119,711.957107 467.318627,509.91593 717.713638,509.91593 L990.537375,509.91593 L990.537375,352.174918 L715.925665,352.174918 C379.45569,352.174918 105.174918,624.503057 105.174918,959.559245 C105.174918,1294.61319 379.456948,1566.94357 715.925665,1566.94357 L988.749401,1566.94357 L988.749401,1409.20256 L715.925665,1409.20256 Z M368.007037,959.559245 C368.007037,1149.20097 523.746245,1304.02764 715.925665,1304.02764 L1093.92432,1304.02764 L1093.92432,1672.11849 L715.925665,1672.11849 C321.537905,1672.11849 0,1352.86848 0,959.559245 C0,566.247679 321.536733,247 715.925665,247 L1095.71229,247 L1095.71229,615.090848 L717.713638,615.090848 C525.123781,615.090848 368.007037,770.328728 368.007037,959.559245 Z M1358.54441,603.995571 L1358.54441,854.756138 L742.745269,854.756138 C684.181187,854.756138 637.991051,900.960481 637.991051,959.559245 C637.991051,1018.15801 684.181187,1064.36235 742.745269,1064.36235 L1358.54441,1064.36235 L1358.54441,1315.12292 L1761.12212,959.559245 L1358.54441,603.995571 Z M1253.36949,370.779519 L1920,959.559245 L1253.36949,1548.33897 L1253.36949,1169.53727 L742.745269,1169.53727 C626.087442,1169.53727 532.816133,1076.23727 532.816133,959.559245 C532.816133,842.881218 626.087442,749.58122 742.745269,749.58122 L1253.36949,749.58122 L1253.36949,370.779519 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconCommonsSolid":{"variant":"Solid","glyphName":"commons","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1063.68,251 L1063.68,533.33 L714.24,533.33 C476.16,533.33 282.24,725.39 282.24,959.705 C282.24,1194.02 474.24,1386.08 712.32,1386.08 L712.32,1386.08 L1061.76,1386.08 L1061.76,1668.41 L712.32,1668.41 C320.64,1668.41 0,1351.505 0,959.705 C0,567.90125 320.64,251 712.32,251 L712.32,251 L1063.68,251 Z M1345.92,452.6675 L1920,959.705 L1920,959.7125 L1345.92,1466.7425 L1345.92,1128.7175 L741.12,1128.7175 C647.04,1128.7175 572.16,1053.815 572.16,959.705 C572.16,865.595 647.04,790.6925 741.12,790.6925 L741.12,790.6925 L1345.92,790.6925 L1345.92,452.6675 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCompassLine":{"variant":"Line","glyphName":"compass","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C930.545,0 906.667,23.8782 906.667,53.3333 L906.667,217.758 C755.322,243.149 640,374.774 640,533.333 C640,568.903 645.803,603.117 656.515,635.081 L142.857,1524.76 C63.9596,1661.42 110.781,1836.16 247.436,1915.06 C263.835,1924.52 284.804,1918.9 294.271,1902.51 L592.091,1386.67 L906.667,1386.67 L906.667,1493.33 C906.667,1522.79 930.545,1546.67 960,1546.67 C989.455,1546.67 1013.33,1522.79 1013.33,1493.33 L1013.33,1386.67 L1327.7,1386.67 L1625.52,1902.51 C1634.99,1918.9 1655.96,1924.52 1672.36,1915.06 C1809.01,1836.16 1855.84,1661.42 1776.94,1524.76 L1263.41,635.306 C1274.17,603.278 1280,568.987 1280,533.333 C1280,374.774 1164.68,243.149 1013.33,217.758 L1013.33,53.3333 C1013.33,23.8781 989.455,0 960,0 Z M960,320 C842.179,320 746.667,415.513 746.667,533.333 C746.667,651.154 842.179,746.667 960,746.667 C1077.82,746.667 1173.33,651.154 1173.33,533.333 C1173.33,415.513 1077.82,320 960,320 Z M960,853.333 C979.41,853.333 998.417,851.605 1016.87,848.294 L1266.12,1280 L1013.33,1280 L1013.33,1173.33 C1013.33,1143.88 989.455,1120 960,1120 C930.545,1120 906.667,1143.88 906.667,1173.33 L906.667,1280 L653.675,1280 L902.94,848.261 C921.456,851.594 940.525,853.333 960,853.333 Z M1674.09,1773.3 L1118.68,811.285 C1150.27,793.208 1178.49,769.898 1202.15,742.537 L1684.56,1578.1 C1721.12,1641.42 1714.6,1717.8 1674.09,1773.3 Z M235.233,1578.1 L717.726,742.394 C741.372,769.773 769.581,793.101 801.171,811.197 L245.702,1773.3 C205.192,1717.8 198.671,1641.42 235.233,1578.1 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCompassSolid":{"variant":"Solid","glyphName":"compass","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C930.545,0 906.667,23.8782 906.667,53.3333 L906.667,217.758 C755.322,243.149 640,374.774 640,533.333 C640,568.903 645.803,603.117 656.515,635.081 L142.857,1524.76 C63.9596,1661.42 110.781,1836.16 247.436,1915.06 C263.835,1924.52 284.804,1918.9 294.271,1902.51 L592.091,1386.67 L906.667,1386.67 L906.667,1493.33 C906.667,1522.79 930.545,1546.67 960,1546.67 C989.455,1546.67 1013.33,1522.79 1013.33,1493.33 L1013.33,1386.67 L1327.7,1386.67 L1625.52,1902.51 C1634.99,1918.9 1655.96,1924.52 1672.36,1915.06 C1809.01,1836.16 1855.84,1661.42 1776.94,1524.76 L1263.41,635.306 C1274.17,603.278 1280,568.987 1280,533.333 C1280,374.774 1164.68,243.149 1013.33,217.758 L1013.33,53.3333 C1013.33,23.8781 989.455,0 960,0 Z M1266.12,1280 L1016.87,848.294 C998.417,851.605 979.41,853.333 960,853.333 C940.525,853.333 921.456,851.594 902.94,848.261 L653.675,1280 L906.667,1280 L906.667,1173.33 C906.667,1143.88 930.545,1120 960,1120 C989.455,1120 1013.33,1143.88 1013.33,1173.33 L1013.33,1280 L1266.12,1280 Z M960,714.667 C1060.15,714.667 1141.33,633.481 1141.33,533.333 C1141.33,433.186 1060.15,352 960,352 C859.852,352 778.667,433.186 778.667,533.333 C778.667,633.481 859.852,714.667 960,714.667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCompleteLine":{"variant":"Line","glyphName":"complete","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 M854.343529,1157.97459 L583.058824,886.689882 L503.209412,966.539294 L854.343529,1317.67341 L1454.4,717.616941 L1374.55059,637.767529 L854.343529,1157.97459 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCompleteSolid":{"variant":"Solid","glyphName":"complete","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M854.343529,1317.68471 L503.209412,966.550588 L583.058824,886.701176 L854.343529,1157.98588 L1374.55059,637.665882 L1454.4,717.628235 L854.343529,1317.68471 Z M960.056471,0 C430.701176,0 0.0564705882,430.644706 0.0564705882,960 C0.0564705882,1489.35529 430.701176,1920 960.056471,1920 C1489.29882,1920 1920.05647,1489.35529 1920.05647,960 C1920.05647,430.644706 1489.29882,0 960.056471,0 L960.056471,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconComposeLine":{"variant":"Line","glyphName":"compose","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M909.191356,303.659811 L909.191356,404.681073 L101.021262,404.681073 L101.021262,1818.97874 L1515.31893,1818.97874 L1515.31893,1097.48489 L1616.34019,1097.48489 L1616.34019,1920 L0,1920 L0,303.659811 L909.191356,303.659811 Z M1562.13218,0 C1602.64171,0 1640.6257,15.7593168 1669.1137,44.3483339 L1669.1137,44.3483339 L1875.70218,250.835793 C1934.69859,309.933231 1934.69859,406.105473 1875.70218,465.101889 L1875.70218,465.101889 L1666.18408,674.619986 L1316.75154,325.288463 L497.974208,1144.06579 L775.883699,1421.97528 L1499.39798,698.562025 L1570.82001,769.984058 L713.452559,1627.25049 L187.434849,1732.41362 L292.699004,1206.49693 L1454.8476,44.3483339 C1483.43662,15.7593168 1521.52163,0 1562.03116,0 L1562.03116,0 Z M426.552176,1215.48782 L385.840607,1256.30041 L316.337979,1603.71253 L663.750099,1534.2099 L704.461667,1493.39731 L426.552176,1215.48782 Z M1310.55893,538.019036 L1381.98096,609.441068 L757.265481,1234.15655 L685.843449,1162.73452 L1310.55893,538.019036 Z M1562.13218,101.021262 L1562.03116,101.021262 C1548.49431,101.021262 1535.86665,106.274367 1526.26963,115.770366 L1526.26963,115.770366 L1388.17357,253.866431 L1666.18408,531.775922 L1804.28014,393.679857 C1823.87827,373.980711 1823.87827,341.956971 1804.28014,322.156804 L1804.28014,322.156804 L1597.69166,115.770366 C1588.09464,106.173346 1575.46699,101.021262 1562.13218,101.021262 L1562.13218,101.021262 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconComposeSolid":{"variant":"Solid","glyphName":"compose","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1108.6752,239.0016 L271.0752,1077.3696 C257.6352,1090.8096 248.5152,1107.8976 244.7712,1126.4256 L244.7712,1126.4256 L144.9312,1625.6256 C138.6912,1657.1136 148.4832,1689.6576 171.1392,1712.4096 C189.3792,1730.5536 213.8592,1740.5376 239.1072,1740.5376 C245.3472,1740.5376 251.5872,1739.8656 257.9232,1738.6176 L257.9232,1738.6176 L757.1232,1638.7776 C775.6512,1635.0336 792.7392,1625.9136 806.1792,1612.5696 L806.1792,1612.5696 L1631.9712,787.3536 L1631.9712,1871.0016 L-0.0288,1871.0016 L-0.0288,239.0016 L1108.6752,239.0016 Z M1442.8992,40.3296 C1497.5232,-13.4304 1592.6592,-13.4304 1646.4192,40.3296 L1646.4192,40.3296 L1843.2192,237.1296 C1870.0992,264.0096 1885.3632,300.4896 1885.3632,338.8896 C1885.3632,377.2896 1870.0992,413.7696 1843.2192,440.6496 L1843.2192,440.6496 L1643.5392,639.3696 L738.1632,1544.6496 L239.0592,1644.4896 L338.8992,1145.2896 L1244.1792,240.0096 Z M465.5232,1153.9296 L427.2192,1192.3296 L360.9792,1522.5696 L691.2192,1456.3296 L729.5232,1417.9296 L465.5232,1153.9296 Z M1305.5232,509.7696 L712.3392,1103.0496 L780.4992,1171.2096 L1373.7792,577.9296 L1305.5232,509.7696 Z M1544.6592,94.0896 C1532.1792,94.0896 1519.6992,99.8496 1511.0592,108.4896 L1511.0592,108.4896 L1379.5392,240.0096 L1643.5392,504.0096 L1775.0592,372.4896 C1783.6992,363.8496 1789.3632,351.3696 1789.3632,338.8896 C1789.3632,325.4496 1783.6992,313.9296 1775.0592,304.3296 L1775.0592,304.3296 L1579.2192,108.4896 C1569.5232,99.8496 1558.0992,94.0896 1544.6592,94.0896 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCopyCourseLine":{"variant":"Line","glyphName":"copy-course","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1919.88709 L1467.87912,1919.88709 L1467.87912,452.007969 L0,452.007969 L0,1919.88709 Z M1354.96534,564.921747 L1354.96534,1806.97331 L112.913778,1806.97331 L112.913778,564.921747 L1354.96534,564.921747 Z M1920,0 L1920,1467.99203 L1581.25867,1467.99203 L1581.25867,1354.96534 L1807.08622,1354.96534 L1807.08622,112.913778 L565.034661,112.913778 L565.034661,338.741335 L452.007969,338.741335 L452.007969,0 L1920,0 Z M338.741335,1016.92972 L1129.13778,1016.92972 L1129.13778,904.015937 L338.741335,904.015937 L338.741335,1016.92972 Z M338.741335,1467.99203 L1129.13778,1467.99203 L1129.13778,1354.96534 L338.741335,1354.96534 L338.741335,1467.99203 Z M338.741335,1242.40442 L903.310226,1242.40442 L903.310226,1129.49064 L338.741335,1129.49064 L338.741335,1242.40442 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconCopyCourseSolid":{"variant":"Solid","glyphName":"copy-course","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.18348,451.760056 L1468.18348,1919.94353 L1.13686838e-13,1919.94353 L1.13686838e-13,451.760056 L1468.18348,451.760056 Z M1920,0 L1920,1468.29641 L1581.18843,1468.29641 L1581.18843,338.811571 L451.703587,338.811571 L451.703587,0 L1920,0 Z M338.811571,1016.44601 L1129.3719,1016.44601 L1129.3719,903.508817 L338.811571,903.508817 L338.811571,1016.44601 Z M338.811571,1242.32039 L903.497524,1242.32039 L903.497524,1129.3832 L338.811571,1129.3832 L338.811571,1242.32039 Z M338.811571,1468.30771 L1129.3719,1468.30771 L1129.3719,1355.25758 L338.811571,1355.25758 L338.811571,1468.30771 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconCopyLine":{"variant":"Line","glyphName":"copy","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1919.88709 L1467.87912,1919.88709 L1467.87912,452.007969 L0,452.007969 L0,1919.88709 Z M1354.96534,564.921747 L1354.96534,1806.97331 L112.913778,1806.97331 L112.913778,564.921747 L1354.96534,564.921747 Z M1920,0 L1920,1467.99203 L1581.25867,1467.99203 L1581.25867,1354.96534 L1807.08622,1354.96534 L1807.08622,112.913778 L565.034661,112.913778 L565.034661,338.741335 L452.007969,338.741335 L452.007969,0 L1920,0 Z M338.741335,1016.92972 L1129.13778,1016.92972 L1129.13778,904.015937 L338.741335,904.015937 L338.741335,1016.92972 Z M338.741335,1467.99203 L1129.13778,1467.99203 L1129.13778,1354.96534 L338.741335,1354.96534 L338.741335,1467.99203 Z M338.741335,1242.40442 L903.310226,1242.40442 L903.310226,1129.49064 L338.741335,1129.49064 L338.741335,1242.40442 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCopySolid":{"variant":"Solid","glyphName":"copy","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.18348,451.760056 L1468.18348,1919.94353 L1.13686838e-13,1919.94353 L1.13686838e-13,451.760056 L1468.18348,451.760056 Z M1920,0 L1920,1468.29641 L1581.18843,1468.29641 L1581.18843,338.811571 L451.703587,338.811571 L451.703587,0 L1920,0 Z M338.811571,1016.44601 L1129.3719,1016.44601 L1129.3719,903.508817 L338.811571,903.508817 L338.811571,1016.44601 Z M338.811571,1242.32039 L903.497524,1242.32039 L903.497524,1129.3832 L338.811571,1129.3832 L338.811571,1242.32039 Z M338.811571,1468.30771 L1129.3719,1468.30771 L1129.3719,1355.25758 L338.811571,1355.25758 L338.811571,1468.30771 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCoursesLine":{"variant":"Line","glyphName":"courses","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.21035,0 L1581.21035,1468.23529 L1355.328,1468.23529 L1355.328,1807.05882 L1524.73976,1807.05882 L1524.73976,1920 L282.386824,1920 C199.939765,1920 120.880941,1883.85882 67.6856471,1820.61176 C23.7515294,1768.65882 0.0338823529,1704.28235 0.0338823529,1637.64706 L0.0338823529,282.352941 C0.0338823529,126.494118 126.528,0 282.386824,0 L1581.21035,0 Z M1242.38682,1468.23529 L294.810353,1468.23529 C205.586824,1468.23529 128.673882,1528.09412 115.233882,1608.28235 C113.991529,1617.31765 112.975059,1626.35294 112.975059,1635.38824 L112.975059,1637.64706 C112.975059,1678.30588 126.528,1715.57647 153.633882,1747.2 C186.386824,1785.6 232.692706,1807.05882 282.386824,1807.05882 L1242.38682,1807.05882 L1242.38682,1694.11765 L240.598588,1694.11765 L240.598588,1581.17647 L1242.38682,1581.17647 L1242.38682,1468.23529 Z M1468.26918,112.941176 L282.386824,112.941176 C189.662118,112.941176 112.975059,188.611765 112.975059,282.352941 L112.975059,1415.15294 C163.798588,1377.88235 226.932706,1355.29412 294.810353,1355.29412 L1468.26918,1355.29412 L1468.26918,112.941176 Z M1185.88235,903.529412 L1185.88235,1016.47059 L395.294118,1016.47059 L395.294118,903.529412 L1185.88235,903.529412 Z M1242.35294,338.823529 L1242.35294,790.588235 L338.823529,790.588235 L338.823529,338.823529 L1242.35294,338.823529 Z M1129.41176,451.764706 L451.764706,451.764706 L451.764706,677.647059 L1129.41176,677.647059 L1129.41176,451.764706 Z\" transform=\"translate(169)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconCoursesSolid":{"variant":"Solid","glyphName":"courses","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1750.17647,0 L1750.17647,1468.23529 L1524.29412,1468.23529 L1524.29412,1807.05882 L1693.70588,1807.05882 L1693.70588,1920 L451.352941,1920 C368.905882,1920 289.847059,1883.85882 235.635294,1820.61176 C192.717647,1769.78824 169,1704.28235 169,1637.64706 L169,1637.64706 L169,282.352941 C169,126.494118 295.494118,0 451.352941,0 L451.352941,0 L1750.17647,0 Z M1411.35294,1468.23529 L463.776471,1468.23529 C374.552941,1468.23529 297.752941,1529.22353 284.2,1608.28235 C283.070588,1617.31765 281.941176,1626.35294 281.941176,1634.25882 L281.941176,1634.25882 L281.941176,1637.64706 C281.941176,1678.30588 295.494118,1716.70588 322.6,1747.2 C354.223529,1785.6 401.658824,1807.05882 451.352941,1807.05882 L451.352941,1807.05882 L1411.35294,1807.05882 L1411.35294,1694.11765 L408.435294,1694.11765 L408.435294,1581.17647 L1411.35294,1581.17647 L1411.35294,1468.23529 Z M1354.88235,903.529412 L564.294118,903.529412 L564.294118,1016.47059 L1354.88235,1016.47059 L1354.88235,903.529412 Z M1411.35294,338.823529 L507.823529,338.823529 L507.823529,790.588235 L1411.35294,790.588235 L1411.35294,338.823529 Z M620.764706,677.647059 L1298.41176,677.647059 L1298.41176,451.764706 L620.764706,451.764706 L620.764706,677.647059 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDashboardLine":{"variant":"Line","glyphName":"dashboard","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M833.935059,1063.32706 C862.848,1233.64235 897.972706,1411.52471 917.398588,1448.11765 C944.956235,1499.95765 1009.44565,1520.06118 1061.39859,1492.50353 C1113.23859,1464.94588 1133.11624,1400.23059 1105.55859,1348.39059 C1086.13271,1311.79765 958.622118,1182.93176 833.935059,1063.32706 Z M790.113882,866.922353 C851.666824,923.844706 1161.01271,1211.73176 1205.39859,1295.53412 C1262.09506,1402.37647 1221.21035,1535.42118 1114.25506,1592.23059 C1081.61506,1609.51059 1046.49035,1617.64235 1011.93035,1617.64235 C933.210353,1617.64235 856.975059,1575.28941 817.558588,1501.08706 C773.172706,1417.28471 708.457412,999.741176 695.920941,916.842353 C692.419765,893.124706 704.165647,869.632941 725.285647,858.564706 C746.631529,847.270588 772.382118,850.545882 790.113882,866.922353 Z M960.045176,281.988706 C1489.40047,281.988706 1920.04518,712.746353 1920.04518,1241.98871 C1920.04518,1319.12753 1911.12282,1395.13694 1893.39106,1467.87106 L1883.00047,1511.01459 L1358.61459,1511.01459 L1358.61459,1398.07341 L1792.87341,1398.07341 C1802.36047,1347.36282 1807.104,1294.95812 1807.104,1241.98871 C1807.104,774.864 1427.05694,394.929882 960.045176,394.929882 C492.920471,394.929882 112.986353,774.864 112.986353,1241.98871 C112.986353,1294.95812 117.729882,1347.36282 127.104,1398.07341 L614.558118,1398.07341 L614.558118,1511.01459 L36.9769412,1511.01459 L26.5863529,1467.87106 C8.96752941,1395.13694 0.0451764706,1319.12753 0.0451764706,1241.98871 C0.0451764706,712.746353 430.689882,281.988706 960.045176,281.988706 Z M1502.592,672.674824 L1582.44141,752.524235 L1469.72612,865.239529 L1389.87671,785.390118 L1502.592,672.674824 Z M417.408,672.674824 L530.123294,785.390118 L450.273882,865.239529 L337.558588,752.524235 L417.408,672.674824 Z M1016.47059,471.312 L1016.47059,630.784941 L903.529412,630.784941 L903.529412,471.312 L1016.47059,471.312 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDashboardSolid":{"variant":"Solid","glyphName":"dashboard","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,282 C1489.35529,282 1920,712.757647 1920,1242 C1920,1319.13882 1911.07765,1395.14824 1893.45882,1467.88235 L1882.95529,1511.02588 L1322.76706,1511.02588 C1295.66118,1585.90588 1242.91765,1651.86353 1167.24706,1692.07059 C1119.36,1717.25647 1065.6,1730.69647 1011.61412,1730.69647 C888.169412,1730.69647 775.567059,1663.04471 717.854118,1554.05647 C711.981176,1542.87529 705.995294,1528.30588 700.009412,1511.02588 L37.0447059,1511.02588 L26.5411765,1467.88235 C8.92235294,1395.14824 0,1319.13882 0,1242 C0,712.757647 430.644706,282 960,282 Z M1128.16941,1511.02588 C1175.83059,1461.67059 1189.38353,1385.88706 1155.50118,1321.96235 C1113.26118,1242.45176 751.736471,908.371765 751.736471,908.371765 C751.736471,908.371765 825.374118,1395.14824 867.501176,1474.65882 C874.842353,1488.55059 884.442353,1500.18353 894.72,1511.02588 L893.816471,1511.02588 C895.849412,1513.17176 898.334118,1514.64 900.367059,1516.56 C904.997647,1520.96471 909.741176,1525.03059 914.710588,1528.75765 C918.437647,1531.58118 922.390588,1534.06588 926.230588,1536.43765 C931.425882,1539.6 936.621176,1542.53647 942.155294,1545.24706 C946.447059,1547.16706 950.738824,1548.97412 955.256471,1550.66824 C960.677647,1552.58824 966.211765,1554.39529 971.971765,1555.75059 C976.715294,1556.99294 981.458824,1558.00941 986.202353,1558.8 C991.962353,1559.70353 997.609412,1560.26824 1003.36941,1560.49412 C1006.19294,1560.60706 1008.90353,1561.28471 1011.61412,1561.28471 C1013.53412,1561.28471 1015.45412,1560.60706 1017.37412,1560.60706 C1025.61882,1560.38118 1033.75059,1559.25176 1041.88235,1557.67059 C1045.60941,1556.88 1049.44941,1556.54118 1053.17647,1555.52471 C1064.92235,1552.36235 1076.44235,1548.29647 1087.51059,1542.31059 L1087.84941,1542.31059 L1087.84941,1542.19765 C1103.54824,1533.95294 1116.53647,1522.99765 1128.16941,1511.02588 Z M1489.69412,885.218824 L1602.40941,772.503529 L1482.69176,652.672941 L1369.86353,765.388235 L1489.69412,885.218824 Z M875.294118,630.762353 L1044.70588,630.762353 L1044.70588,471.289412 L875.294118,471.289412 L875.294118,630.762353 Z M430.305882,885.218824 L550.136471,765.388235 L437.421176,652.672941 L317.590588,772.503529 L430.305882,885.218824 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDeactivateUserLine":{"variant":"Line","glyphName":"deactivate-user","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1285.31639,1467.34405 C1166.21041,1550.13985 944.064891,1669.78138 649.298998,1655.6429 C410.765697,1644.39638 225.787246,1550.46118 107.109699,1467.45116 L107.109699,1316.10515 C107.109699,1187.68062 189.155729,1077.14342 302.156462,1053.36506 C415.906963,1029.4796 532.335206,1015.76956 648.120791,1012.8776 C795.075299,1009.02165 944.921768,1022.73169 1090.59096,1053.47217 C1203.37747,1077.25052 1285.31639,1187.68062 1285.31639,1316.21226 L1285.31639,1467.34405 Z M428.438798,637.993647 L428.438798,631.031517 C474.388859,618.606792 503.736916,591.722257 526.765502,570.407427 C553.542927,545.772196 569.716491,530.883948 607.311996,530.883948 C644.157732,530.883948 660.117078,545.665087 686.573173,570.193208 C717.742096,598.791497 760.371756,637.993647 839.740044,637.993647 C897.686391,637.993647 935.496115,616.678817 963.987295,594.078671 L963.987295,637.993647 C963.987295,785.697923 843.917322,905.767896 696.213046,905.767896 C548.508771,905.767896 428.438798,785.697923 428.438798,637.993647 L428.438798,637.993647 Z M696.213046,263.109699 C819.817639,263.109699 923.07139,347.726362 953.811873,461.798192 C940.530271,471.545175 929.069533,482.041925 918.358563,491.896017 C892.009577,516.209919 876.264451,530.883948 839.740044,530.883948 C802.144539,530.883948 785.970974,515.9957 759.19355,491.360469 C728.345956,462.869289 685.930515,423.774249 607.311996,423.774249 C527.943708,423.774249 485.314048,463.083508 454.145126,491.681798 C445.46924,499.715025 437.864451,506.248717 430.366772,512.032641 C440.220865,373.32558 555.042462,263.109699 696.213046,263.109699 L696.213046,263.109699 Z M1112.65556,948.718885 C1055.45898,936.615489 997.512631,927.832494 939.566283,920.763254 C1019.47012,851.998827 1071.09699,751.422819 1071.09699,637.993647 L1071.09699,530.883948 C1071.09699,324.269338 902.934766,156 696.213046,156 C489.491326,156 321.329098,324.269338 321.329098,530.883948 L321.329098,637.993647 C321.329098,751.2086 372.741754,851.570388 452.43137,920.441925 C394.592133,927.404055 336.967114,936.615489 280.091864,948.611776 C117.820669,982.67266 0,1137.23196 0,1316.10515 L0,1521.97 L21.743269,1538.03645 C150.917566,1633.25697 363.744539,1749.471 644.264842,1762.64549 C661.509504,1763.39526 678.539946,1763.8237 695.356169,1763.8237 C1013.79331,1763.8237 1253.07637,1624.25976 1370.57571,1538.03645 L1392.42609,1522.07711 L1392.42609,1316.21226 C1392.42609,1137.33907 1274.71253,982.77977 1112.65556,948.718885 L1112.65556,948.718885 Z M1839.91504,156 L1639.64602,356.269027 L1439.49027,156 L1359.29204,236.084956 L1559.56106,436.353982 L1359.29204,636.623009 L1439.49027,716.707965 L1639.64602,516.438938 L1839.91504,716.707965 L1920,636.623009 L1719.73097,436.353982 L1920,236.084956 L1839.91504,156 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDeactivateUserSolid":{"variant":"Solid","glyphName":"deactivate-user","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M696.208213,156.026053 C902.928497,156.026053 1071.08956,324.187114 1071.08956,530.907398 L1071.08956,530.907398 L1071.08956,638.016354 C1071.08956,751.444738 1019.35593,852.020048 939.452651,920.891106 C997.505705,927.853188 1055.34454,936.636123 1112.64783,948.632326 C1274.70368,982.800083 1392.41643,1137.35831 1392.41643,1316.23026 L1392.41643,1316.23026 L1392.41643,1521.98657 L1370.5662,1538.05291 C1253.17478,1624.27562 1013.78627,1763.83859 695.45845,1763.83859 C678.535235,1763.83859 661.504911,1763.41015 644.260369,1762.66039 C363.742014,1749.48599 150.916519,1633.27277 21.743118,1537.9458 L21.743118,1537.9458 L0,1521.87946 L0,1316.12315 C0,1137.2512 117.819851,982.692974 279.98281,948.525217 C336.964775,936.636123 394.589393,927.424753 452.428229,920.355561 C372.739166,851.591612 321.326867,751.23052 321.326867,638.016354 L321.326867,638.016354 L321.326867,530.907398 C321.326867,324.187114 489.487928,156.026053 696.208213,156.026053 Z M607.307779,477.35292 C512.409244,477.35292 493.772286,547.295069 428.435823,573.750981 L428.435823,573.750981 L428.435823,638.016354 C428.435823,785.612495 548.612071,905.788744 696.208213,905.788744 C843.804354,905.788744 963.980602,785.612495 963.980602,638.016354 L963.980602,638.016354 L963.980602,530.907398 C963.980602,528.443892 963.337948,526.087495 963.230839,523.51688 C962.594612,524.095269 961.959627,524.6749 961.325586,525.255492 L959.425993,526.999872 C959.109766,527.290989 958.793701,527.582276 958.477759,527.873698 L956.583293,529.623569 C955.952099,530.207211 955.321102,530.791113 954.690001,531.374992 L952.79609,533.126282 C952.480287,533.418058 952.164383,533.709759 951.848341,534.001349 L949.950137,535.749277 C922.710236,560.775759 893.89707,584.461876 839.734213,584.461876 C722.985451,584.461876 722.985451,477.35292 607.307779,477.35292 Z M1839.91504,156 L1920,236.084956 L1719.73097,436.353982 L1920,636.623009 L1839.91504,716.707965 L1639.64602,516.438938 L1439.49027,716.707965 L1359.29204,636.623009 L1559.56106,436.353982 L1359.29204,236.084956 L1439.49027,156 L1639.64602,356.269027 L1839.91504,156 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDiscussionCheckLine":{"variant":"Line","glyphName":"discussion-check","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1827.70109 303.065275L698.834569 1431.80125 92.2989053 825.265588 0 917.564493 698.834569 1616.39906 1919.86945 395.23363z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDiscussionCheckSolid":{"variant":"Solid","glyphName":"discussion-check","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1743.8579 267.012456L710.746654 1300.1237 176.005086 765.382131 0 941.387217 710.746654 1652.25843 1919.98754 443.142104z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDiscussionNewLine":{"variant":"Line","glyphName":"discussion-new","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M915.743529 213L915.743529 915.743529 213 915.743529 213 1003.58647 915.743529 1003.58647 915.743529 1706.33 1003.58647 1706.33 1003.58647 1003.58647 1706.33 1003.58647 1706.33 915.743529 1003.58647 915.743529 1003.58647 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDiscussionNewSolid":{"variant":"Solid","glyphName":"discussion-new","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M866.331875 213L866.331875 866.331875 213 866.331875 213 1052.99813 866.331875 1052.99813 866.331875 1706.33 1052.99813 1706.33 1052.99813 1052.99813 1706.33 1052.99813 1706.33 866.331875 1052.99813 866.331875 1052.99813 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDiscussionReply2Line":{"variant":"Line","glyphName":"discussion-reply-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M835.9424,632.5632 L244.9664,632.5632 L723.0464,154.4832 L632.5504,63.9872 L-0.0256,696.5632 L632.5504,1329.1392 L723.0464,1238.6432 L244.9664,760.5632 L835.9424,760.5632 C1340.3904,760.5632 1750.7584,1170.9312 1750.7584,1675.3792 L1750.7584,1784.5632 L1878.7584,1784.5632 L1878.7584,1675.3792 C1878.7584,1100.4032 1410.9184,632.5632 835.9424,632.5632\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDiscussionReply2Solid":{"variant":"Solid","glyphName":"discussion-reply-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M874.738114,645.125705 L462.691378,645.125705 L810.918614,296.898469 L640.008058,126 L0,765.995971 L640.008058,1406.00403 L810.918614,1235.09347 L462.691378,886.866237 L874.738114,886.866237 C1317.72764,886.866237 1678.16277,1247.30137 1678.16277,1690.29089 L1678.16277,1793.39323 L1919.9033,1793.39323 L1919.9033,1690.29089 C1919.9033,1113.98147 1451.16841,645.125705 874.738114,645.125705\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDiscussionReplyDarkLine":{"variant":"Line","glyphName":"discussion-reply-dark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1468.23529 C1053.44753,1468.23529 1129.41176,1544.19953 1129.41176,1637.64706 C1129.41176,1731.09459 1053.44753,1807.05882 960,1807.05882 C866.552471,1807.05882 790.588235,1731.09459 790.588235,1637.64706 C790.588235,1544.19953 866.552471,1468.23529 960,1468.23529 Z M960,790.588235 C1053.44753,790.588235 1129.41176,866.552471 1129.41176,960 C1129.41176,1053.44753 1053.44753,1129.41176 960,1129.41176 C866.552471,1129.41176 790.588235,1053.44753 790.588235,960 C790.588235,866.552471 866.552471,790.588235 960,790.588235 Z M960,112.941176 C1053.44753,112.941176 1129.41176,188.905412 1129.41176,282.352941 C1129.41176,375.800471 1053.44753,451.764706 960,451.764706 C866.552471,451.764706 790.588235,375.800471 790.588235,282.352941 C790.588235,188.905412 866.552471,112.941176 960,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconDiscussionReplyDarkSolid":{"variant":"Solid","glyphName":"discussion-reply-dark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1468.23529 C1053.44753,1468.23529 1129.41176,1544.19953 1129.41176,1637.64706 C1129.41176,1731.09459 1053.44753,1807.05882 960,1807.05882 C866.552471,1807.05882 790.588235,1731.09459 790.588235,1637.64706 C790.588235,1544.19953 866.552471,1468.23529 960,1468.23529 Z M960,790.588235 C1053.44753,790.588235 1129.41176,866.552471 1129.41176,960 C1129.41176,1053.44753 1053.44753,1129.41176 960,1129.41176 C866.552471,1129.41176 790.588235,1053.44753 790.588235,960 C790.588235,866.552471 866.552471,790.588235 960,790.588235 Z M960,112.941176 C1053.44753,112.941176 1129.41176,188.905412 1129.41176,282.352941 C1129.41176,375.800471 1053.44753,451.764706 960,451.764706 C866.552471,451.764706 790.588235,375.800471 790.588235,282.352941 C790.588235,188.905412 866.552471,112.941176 960,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconDiscussionReplyLine":{"variant":"Line","glyphName":"discussion-reply","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1468.23529 C1053.44753,1468.23529 1129.41176,1544.19953 1129.41176,1637.64706 C1129.41176,1731.09459 1053.44753,1807.05882 960,1807.05882 C866.552471,1807.05882 790.588235,1731.09459 790.588235,1637.64706 C790.588235,1544.19953 866.552471,1468.23529 960,1468.23529 Z M960,790.588235 C1053.44753,790.588235 1129.41176,866.552471 1129.41176,960 C1129.41176,1053.44753 1053.44753,1129.41176 960,1129.41176 C866.552471,1129.41176 790.588235,1053.44753 790.588235,960 C790.588235,866.552471 866.552471,790.588235 960,790.588235 Z M960,112.941176 C1053.44753,112.941176 1129.41176,188.905412 1129.41176,282.352941 C1129.41176,375.800471 1053.44753,451.764706 960,451.764706 C866.552471,451.764706 790.588235,375.800471 790.588235,282.352941 C790.588235,188.905412 866.552471,112.941176 960,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconDiscussionReplySolid":{"variant":"Solid","glyphName":"discussion-reply","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1468.23529 C1053.44753,1468.23529 1129.41176,1544.19953 1129.41176,1637.64706 C1129.41176,1731.09459 1053.44753,1807.05882 960,1807.05882 C866.552471,1807.05882 790.588235,1731.09459 790.588235,1637.64706 C790.588235,1544.19953 866.552471,1468.23529 960,1468.23529 Z M960,790.588235 C1053.44753,790.588235 1129.41176,866.552471 1129.41176,960 C1129.41176,1053.44753 1053.44753,1129.41176 960,1129.41176 C866.552471,1129.41176 790.588235,1053.44753 790.588235,960 C790.588235,866.552471 866.552471,790.588235 960,790.588235 Z M960,112.941176 C1053.44753,112.941176 1129.41176,188.905412 1129.41176,282.352941 C1129.41176,375.800471 1053.44753,451.764706 960,451.764706 C866.552471,451.764706 790.588235,375.800471 790.588235,282.352941 C790.588235,188.905412 866.552471,112.941176 960,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconDiscussionSearchLine":{"variant":"Line","glyphName":"discussion-search","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M790.588235,1468.23529 C416.865882,1468.23529 112.941176,1164.31059 112.941176,790.588235 C112.941176,416.865882 416.865882,112.941176 790.588235,112.941176 C1164.31059,112.941176 1468.23529,416.865882 1468.23529,790.588235 C1468.23529,1164.31059 1164.31059,1468.23529 790.588235,1468.23529 L790.588235,1468.23529 Z M1387.36941,1307.52 C1507.76471,1168.82824 1581.17647,988.235294 1581.17647,790.588235 C1581.17647,354.748235 1226.42824,2.84217094e-14 790.588235,2.84217094e-14 C354.748235,2.84217094e-14 2.84217094e-14,354.748235 2.84217094e-14,790.588235 C2.84217094e-14,1226.42824 354.748235,1581.17647 790.588235,1581.17647 C988.235294,1581.17647 1168.82824,1507.76471 1307.52,1387.36941 L1823.54824,1903.51059 L1903.51059,1823.54824 L1387.36941,1307.52 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconDiscussionSearchSolid":{"variant":"Solid","glyphName":"discussion-search","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1458.94844,1305.62602 C1563.58502,1168.67679 1626.47541,998.439035 1626.47541,813.237703 C1626.47541,364.764218 1261.71119,0 813.237703,0 C364.764218,0 0,364.764218 0,813.237703 C0,1261.71119 364.764218,1626.47541 813.237703,1626.47541 C998.439035,1626.47541 1168.78523,1563.58502 1305.73446,1458.94844 L1766.67759,1920 L1920,1766.67759 L1458.94844,1305.62602 Z M813.237703,1409.61202 C484.364376,1409.61202 216.863387,1142.0026 216.863387,813.237703 C216.863387,484.472807 484.364376,216.863387 813.237703,216.863387 C1142.11103,216.863387 1409.61202,484.472807 1409.61202,813.237703 C1409.61202,1142.0026 1142.11103,1409.61202 813.237703,1409.61202 L813.237703,1409.61202 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconDiscussionXLine":{"variant":"Line","glyphName":"discussion-x","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1827.70109 0L960.065275 867.63582 92.2989053 0 0 92.1683552 867.63582 959.934725 0 1827.57054 92.2989053 1920 960.065275 1052.23363 1827.70109 1920 1919.86945 1827.57054 1052.23363 959.934725 1919.86945 92.1683552z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconDiscussionXSolid":{"variant":"Solid","glyphName":"discussion-x","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1743.8579 0.0124561278L959.869211 783.876581 176.005086 0.0124561278 0 176.142104 783.739563 960.130789 0 1743.87035 176.005086 1920 959.869211 1136.26044 1743.8579 1920 1919.98754 1743.87035 1136.12342 960.130789 1919.98754 176.142104z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconDiscussionLine":{"variant":"Line","glyphName":"discussion","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M677.647059,16 L677.647059,354.936471 L790.588235,354.936471 L790.588235,129.054118 L1807.05882,129.054118 L1807.05882,919.529412 L1581.06353,919.529412 L1581.06353,1179.29412 L1321.41176,919.529412 L1242.24,919.529412 L1242.24,467.877647 L677.647059,467.877647 L0,467.877647 L0,1484.34824 L338.710588,1484.34824 L338.710588,1903.24706 L756.705882,1484.34824 L1242.24,1484.34824 L1242.24,1032.47059 L1274.99294,1032.47059 L1694.11765,1451.59529 L1694.11765,1032.47059 L1920,1032.47059 L1920,16 L677.647059,16 Z M338.789647,919.563294 L903.495529,919.563294 L903.495529,806.622118 L338.789647,806.622118 L338.789647,919.563294 Z M338.789647,1145.44565 L677.726118,1145.44565 L677.726118,1032.39153 L338.789647,1032.39153 L338.789647,1145.44565 Z M112.941176,580.705882 L1129.41176,580.705882 L1129.41176,1371.40706 L710.4,1371.40706 L451.651765,1631.05882 L451.651765,1371.40706 L112.941176,1371.40706 L112.941176,580.705882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDiscussionSolid":{"variant":"Solid","glyphName":"discussion","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1242.35294,451.753412 L1242.35294,1468.224 L757.496471,1468.224 L338.823529,1886.89694 L338.823529,1468.224 L0,1468.224 L0,451.753412 L1242.35294,451.753412 Z M1920.03388,0.0338823529 L1920.03388,1016.50447 L1694.15153,1016.50447 L1694.15153,1435.51624 L1355.21506,1096.57976 L1355.21506,338.857412 L677.680941,338.857412 L677.680941,0.0338823529 L1920.03388,0.0338823529 Z M677.76,1016.45929 L338.823529,1016.45929 L338.823529,1129.40047 L677.76,1129.40047 L677.76,1016.45929 Z M903.529412,790.576941 L338.823529,790.576941 L338.823529,903.631059 L903.529412,903.631059 L903.529412,790.576941 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDocumentLine":{"variant":"Line","glyphName":"document","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.2354,1807.0586 L112.9414,1807.0586 L112.9414,112.9406 L1016.4714,112.9406 L1016.4714,564.7056 L1468.2354,564.7056 L1468.2354,1807.0586 Z M1129.4124,136.3196 L1444.8554,451.7656 L1129.4124,451.7656 L1129.4124,136.3196 Z M1531.5944,378.8056 L1202.3724,49.5806 C1170.2964,17.6196 1127.7174,-0.0004 1082.5414,-0.0004 L0.0004,-0.0004 L0.0004,1919.9996 L1581.1754,1919.9996 L1581.1754,498.6346 C1581.1754,453.4586 1563.5574,410.8796 1531.5944,378.8056 L1531.5944,378.8056 Z M338.823,1242.353 L1129.412,1242.353 L1129.412,1129.413 L338.823,1129.413 L338.823,1242.353 Z M338.823,790.588 L1242.353,790.588 L1242.353,677.647 L338.823,677.647 L338.823,790.588 Z M338.823,1468.235 L790.588,1468.235 L790.588,1355.294 L338.823,1355.294 L338.823,1468.235 Z M338.823,1016.471 L1016.471,1016.471 L1016.471,903.53 L338.823,903.53 L338.823,1016.471 Z M338.823,564.706 L790.588,564.706 L790.588,451.765 L338.823,451.765 L338.823,564.706 Z\" transform=\"translate(238)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDocumentSolid":{"variant":"Solid","glyphName":"document","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1016.471,0 L1016.471,564.706 L1581.176,564.706 L1581.176,1920 L0,1920 L0,0 L1016.471,0 Z M790.701,1355.294 L338.823,1355.294 L338.823,1468.348 L790.701,1468.348 L790.701,1355.294 Z M1129.412,1129.413 L338.823,1129.413 L338.823,1242.353 L1129.412,1242.353 L1129.412,1129.413 Z M1016.471,903.529 L338.823,903.529 L338.823,1016.47 L1016.471,1016.47 L1016.471,903.529 Z M1242.353,677.647 L338.823,677.647 L338.823,790.588 L1242.353,790.588 L1242.353,677.647 Z M790.701,451.878 L338.823,451.878 L338.823,564.819 L790.701,564.819 L790.701,451.878 Z\" transform=\"translate(169)\"/>\n        <path d=\"M1498.6729,345.623 C1529.0539,375.891 1550.5129,412.258 1564.2919,451.787 L1129.3549,451.787 L1129.3549,16.851 C1168.8849,30.63 1205.2519,52.201 1235.6329,82.47 L1498.6729,345.623 Z\" transform=\"translate(169)\"/>\n    </g>\n</svg>\n","deprecated":false},"IconDownloadLine":{"variant":"Line","glyphName":"download","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1807.09271,1482.47718 L1886.82918,1562.43953 L1531.51624,1917.75247 L355.346824,1917.75247 L0.0338823529,1562.43953 L79.8832941,1482.47718 L402.104471,1804.81129 L1484.75859,1804.81129 L1807.09271,1482.47718 Z M997.677176,-0.0338823529 L997.677176,1166.98729 L1352.99012,811.674353 L1432.95247,891.523765 L941.093647,1383.15671 L449.460706,891.523765 L529.423059,811.674353 L884.736,1166.98729 L884.736,-0.0338823529 L997.677176,-0.0338823529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDownloadSolid":{"variant":"Solid","glyphName":"download","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1764.09785,1355.41151 L1920,1511.31366 L1556.92661,1874.38704 L363.073389,1874.38704 L0,1511.31366 L155.902148,1355.41151 L454.365453,1653.87481 L1465.63455,1653.87481 L1764.09785,1355.41151 Z M1070.3333,-7.10542736e-15 L1070.3333,949.966693 L1320.83519,699.354542 L1476.73734,855.25669 L957.761801,1374.23223 L438.786264,855.25669 L594.688412,699.354542 L849.710807,954.376938 L849.710807,-7.10542736e-15 L1070.3333,-7.10542736e-15 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDragHandleLine":{"variant":"Line","glyphName":"drag-handle","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M686.211429,137.142857 C686.211429,137.142857 686.211429,137.142857 686.211429,137.005714 L754.782857,137.142857 L686.211429,137.142857 Z M686.211429,1645.71429 C761.777143,1645.71429 823.354286,1707.29143 823.354286,1782.85714 C823.354286,1858.42286 761.777143,1920 686.211429,1920 C610.508571,1920 549.068571,1858.42286 549.068571,1782.85714 C549.068571,1707.29143 610.508571,1645.71429 686.211429,1645.71429 Z M1234.78286,1645.71429 C1310.34857,1645.71429 1371.92571,1707.29143 1371.92571,1782.85714 C1371.92571,1858.42286 1310.34857,1920 1234.78286,1920 C1159.08,1920 1097.64,1858.42286 1097.64,1782.85714 C1097.64,1707.29143 1159.08,1645.71429 1234.78286,1645.71429 Z M686.211429,1097.14286 C761.777143,1097.14286 823.354286,1158.72 823.354286,1234.28571 C823.354286,1309.85143 761.777143,1371.42857 686.211429,1371.42857 C610.508571,1371.42857 549.068571,1309.85143 549.068571,1234.28571 C549.068571,1158.72 610.508571,1097.14286 686.211429,1097.14286 Z M1234.78286,1097.14286 C1310.34857,1097.14286 1371.92571,1158.72 1371.92571,1234.28571 C1371.92571,1309.85143 1310.34857,1371.42857 1234.78286,1371.42857 C1159.08,1371.42857 1097.64,1309.85143 1097.64,1234.28571 C1097.64,1158.72 1159.08,1097.14286 1234.78286,1097.14286 Z M686.211429,548.571429 C761.777143,548.571429 823.354286,610.148571 823.354286,685.714286 C823.354286,761.28 761.777143,822.857143 686.211429,822.857143 C610.508571,822.857143 549.068571,761.28 549.068571,685.714286 C549.068571,610.148571 610.508571,548.571429 686.211429,548.571429 Z M1234.78286,548.571429 C1310.34857,548.571429 1371.92571,610.148571 1371.92571,685.714286 C1371.92571,761.28 1310.34857,822.857143 1234.78286,822.857143 C1159.08,822.857143 1097.64,761.28 1097.64,685.714286 C1097.64,610.148571 1159.08,548.571429 1234.78286,548.571429 Z M686.211429,0 C761.777143,0 823.354286,61.5771429 823.354286,137.142857 C823.354286,212.708571 761.777143,274.285714 686.211429,274.285714 C610.508571,274.285714 549.068571,212.708571 549.068571,137.142857 C549.068571,61.5771429 610.508571,0 686.211429,0 Z M1234.71429,0 C1310.28,0 1371.85714,61.5771429 1371.85714,137.142857 C1371.85714,212.708571 1310.28,274.285714 1234.71429,274.285714 C1159.14857,274.285714 1097.57143,212.708571 1097.57143,137.142857 C1097.57143,61.5771429 1159.14857,0 1234.71429,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDragHandleSolid":{"variant":"Solid","glyphName":"drag-handle","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M600,1440 C732.36,1440 840,1547.64 840,1680 C840,1812.36 732.36,1920 600,1920 C467.64,1920 360,1812.36 360,1680 C360,1547.64 467.64,1440 600,1440 Z M1320,1440 C1452.36,1440 1560,1547.64 1560,1680 C1560,1812.36 1452.36,1920 1320,1920 C1187.64,1920 1080,1812.36 1080,1680 C1080,1547.64 1187.64,1440 1320,1440 Z M600,720 C732.36,720 840,827.64 840,960 C840,1092.36 732.36,1200 600,1200 C467.64,1200 360,1092.36 360,960 C360,827.64 467.64,720 600,720 Z M1320,720 C1452.36,720 1560,827.64 1560,960 C1560,1092.36 1452.36,1200 1320,1200 C1187.64,1200 1080,1092.36 1080,960 C1080,827.64 1187.64,720 1320,720 Z M600,0 C732.36,0 840,107.64 840,240 C840,372.36 732.36,480 600,480 C467.64,480 360,372.36 360,240 C360,107.64 467.64,0 600,0 Z M1320,0 C1452.36,0 1560,107.64 1560,240 C1560,372.36 1452.36,480 1320,480 C1187.64,480 1080,372.36 1080,240 C1080,107.64 1187.64,0 1320,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDropDownLine":{"variant":"Line","glyphName":"drop-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 M1016.47059,1275.44471 L1016.47059,451.764706 L903.529412,451.764706 L903.529412,1275.44471 L604.687059,976.602353 L524.724706,1056.45176 L960,1491.61412 L1395.27529,1056.45176 L1315.31294,976.602353 L1016.47059,1275.44471 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDropDownSolid":{"variant":"Solid","glyphName":"drop-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1491.61412 L524.724706,1056.33882 L604.687059,976.489412 L903.529412,1275.44471 L903.529412,451.764706 L1016.47059,451.764706 L1016.47059,1275.44471 L1315.31294,976.489412 L1395.27529,1056.33882 L960,1491.61412 Z M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 L960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDuplicateLine":{"variant":"Line","glyphName":"duplicate","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1919.88709 L1467.87912,1919.88709 L1467.87912,452.007969 L0,452.007969 L0,1919.88709 Z M1354.96534,564.921747 L1354.96534,1806.97331 L112.913778,1806.97331 L112.913778,564.921747 L1354.96534,564.921747 Z M777.202768,800 L665.202768,800 L665.202,1118.041 L333,1118.04116 L333,1230.04116 L665.202,1230.041 L665.202768,1580 L777.202768,1580 L777.202,1230.041 L1113,1230.04116 L1113,1118.04116 L777.202,1118.041 L777.202768,800 Z M1920,0 L1920,1467.99203 L1581.25867,1467.99203 L1581.25867,1354.96534 L1807.08622,1354.96534 L1807.08622,112.913778 L565.034661,112.913778 L565.034661,338.741335 L452.007969,338.741335 L452.007969,0 L1920,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconDuplicateSolid":{"variant":"Solid","glyphName":"duplicate","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.18348,451.760056 L1468.18348,1919.94353 L1.13686838e-13,1919.94353 L1.13686838e-13,451.760056 L1468.18348,451.760056 Z M777.202768,800 L665.202768,800 L665.202,1118.041 L333,1118.04116 L333,1230.04116 L665.202,1230.041 L665.202768,1580 L777.202768,1580 L777.202,1230.041 L1113,1230.04116 L1113,1118.04116 L777.202,1118.041 L777.202768,800 Z M1920,0 L1920,1468.29641 L1581.18843,1468.29641 L1581.18843,338.811571 L451.703587,338.811571 L451.703587,0 L1920,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEditLine":{"variant":"Line","glyphName":"edit","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M277.974095,49.0764867 C343.241473,-16.3028415 449.706783,-16.4147924 515.421964,49.0764867 L515.421964,49.0764867 L747.608139,281.262662 L1803.30517,1337.07164 L1919.95801,1920 L1337.02965,1803.34716 L386.902325,853.331783 L466.051615,774.182494 L1267.84399,1575.86292 L1575.82093,1267.88598 L668.45885,360.411952 L281.220672,747.65013 L49.0344961,515.463954 C-16.344832,449.860724 -16.344832,343.395414 49.0344961,278.016086 L49.0344961,278.016086 Z M1654.97022,1347.03527 L1346.99328,1655.01221 L1392.1095,1700.12842 L1777.10866,1777.15065 L1700.08643,1392.15149 L1654.97022,1347.03527 Z M675.355026,596.258922 L1367.65942,1288.56331 L1288.51013,1367.7126 L596.205736,675.408211 L675.355026,596.258922 Z M396.642054,111.880944 C382.312338,111.880944 368.094573,117.254587 357.123385,128.225776 L357.123385,128.225776 L128.183785,357.165375 C106.46531,378.883851 106.46531,414.484238 128.183785,436.314665 L128.183785,436.314665 L281.220672,589.351551 L589.30956,281.262662 L436.272674,128.225776 C425.301486,117.254587 410.97177,111.880944 396.642054,111.880944 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEditSolid":{"variant":"Solid","glyphName":"edit","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1392.69971,1700.33236 L1347.91837,1655.55102 L1655.79009,1347.6793 L1700.57143,1392.46064 L1777.81924,1777.58017 L1392.69971,1700.33236 Z M1288.58309,1367.8309 L596.71137,675.959184 L676.198251,596.472303 L1368.06997,1288.34402 L1288.58309,1367.8309 Z M282.122449,589.755102 L128.746356,436.379009 C118.670554,426.303207 111.953353,411.749271 111.953353,397.195335 C111.953353,381.521866 118.670554,368.087464 128.746356,356.892128 L357.131195,128.507289 C368.326531,118.431487 381.760933,111.714286 397.434402,111.714286 C411.988338,111.714286 426.542274,118.431487 436.618076,128.507289 L589.994169,281.883382 L282.122449,589.755102 Z M1803.56851,1337.6035 L747.848397,281.883382 L516.104956,49.0204082 C452.291545,-13.6734694 341.457726,-13.6734694 278.763848,49.0204082 L49.2594752,278.524781 C17.9125364,309.87172 0,352.413994 0,397.195335 C0,441.976676 17.9125364,484.51895 49.2594752,515.865889 L282.122449,747.609329 L1337.84257,1803.32945 L1920,1919.76093 L1803.56851,1337.6035 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEducatorsLine":{"variant":"Line","glyphName":"educators","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M640.376471,790.588235 C679.228235,790.588235 696.056471,806.174118 723.952941,831.924706 C756.818824,862.08 801.769412,903.529412 885.458824,903.529412 C945.769412,903.529412 985.524706,881.505882 1015.34118,857.901176 C1009.46824,1008.45176 886.136471,1129.41176 734.117647,1129.41176 C594.635294,1129.41176 479.096471,1027.42588 456.508235,894.268235 C501.910588,880.602353 532.178824,853.835294 555.444706,832.263529 C583.68,806.287059 600.734118,790.588235 640.376471,790.588235 Z M1920,-0.0112941176 L1920,1129.40047 L1581.17647,1129.40047 L1581.17647,1016.45929 L1807.05882,1016.45929 L1807.05882,112.929882 L112.941176,112.929882 L112.941176,1016.45929 L225.882353,1016.45929 L225.882353,1129.40047 L0,1129.40047 L0,-0.0112941176 L1920,-0.0112941176 Z M734.117647,451.764706 C882.522353,451.764706 1003.25647,567.303529 1014.32471,712.997647 C996.931765,724.630588 981.571765,737.167059 968.357647,749.364706 C940.574118,775.115294 923.971765,790.588235 885.458824,790.588235 C845.816471,790.588235 828.762353,774.889412 800.527059,748.912941 C768,718.870588 723.275294,677.647059 640.376471,677.647059 C556.687059,677.647059 511.736471,719.096471 478.870588,749.251765 C468.931765,758.4 460.348235,765.741176 451.764706,772.065882 L451.764706,734.117647 C451.764706,578.484706 578.371765,451.764706 734.117647,451.764706 Z M1471.84941,714.24 L1161.71294,1541.19529 C944.301176,1563.78353 679.115294,1565.81647 523.143529,1508.89412 L484.291765,1615.05882 C716.950588,1699.99059 1099.14353,1663.39765 1231.62353,1654.81412 L1238.73882,1657.52471 L1239.98118,1654.24941 C1240.65882,1654.24941 1241.90118,1654.13647 1242.69176,1654.13647 L1210.84235,1741.21412 C1206.43765,1753.52471 1196.27294,1762.33412 1183.17176,1765.27059 C1065.71294,1792.26353 906.127059,1807.05882 734.117647,1807.05882 C562.334118,1807.05882 387.501176,1774.41882 225.882353,1712.41412 L225.882353,1459.2 C225.882353,1383.52941 276.48,1316.44235 349.101176,1295.77412 C472.997647,1260.42353 600.508235,1242.01412 731.294118,1242.12706 C732.197647,1242.12706 733.101176,1242.35294 734.117647,1242.35294 C734.682353,1242.35294 735.134118,1242.24 735.698824,1242.24 C861.967059,1242.69176 991.171765,1260.19765 1123.2,1296.90353 L1160.24471,1190.28706 L1145.56235,1185.65647 C1092.02824,1170.86118 1037.81647,1160.01882 983.717647,1150.98353 C1071.81176,1078.47529 1129.41176,969.938824 1129.41176,847.058824 L1129.41176,734.117647 C1129.41176,516.141176 952.094118,338.823529 734.117647,338.823529 C516.141176,338.823529 338.823529,516.141176 338.823529,734.117647 L338.823529,847.058824 C338.823529,969.712941 396.197647,1078.13647 484.178824,1150.75765 C428.16,1160.01882 372.592941,1171.65176 318.155294,1187.12471 C197.308235,1221.45882 112.941176,1333.38353 112.941176,1459.2 L112.941176,1788.19765 L147.84,1802.76706 C332.385882,1879.45412 535.228235,1920 734.117647,1920 C914.484706,1920 1082.88,1904.18824 1208.35765,1875.38824 C1258.72941,1863.75529 1299.27529,1828.29176 1316.89412,1780.06588 L1348.74353,1692.98824 C1363.08706,1653.68471 1356.31059,1610.76706 1330.33412,1578.24 C1317.34588,1561.86353 1300.74353,1549.55294 1282.10824,1541.98588 L1577.56235,753.995294 L1471.84941,714.24 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEducatorsSolid":{"variant":"Solid","glyphName":"educators","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M640.376471,734.117647 C762.352941,734.117647 762.352941,847.058824 885.458824,847.058824 C944.396047,847.058824 974.820774,820.557944 1004.36389,793.262914 L1006.37715,791.40096 C1009.73139,788.296659 1013.08235,785.189647 1016.47059,782.117647 L1016.47059,847.058824 C1016.47059,1002.80471 889.863529,1129.41176 734.117647,1129.41176 C578.371765,1129.41176 451.764706,1002.80471 451.764706,847.058824 L451.764706,835.764706 C477.255529,825.401224 496.005075,808.791236 514.580831,791.975917 L517.59263,789.248263 C548.218187,761.518216 579.336282,734.117647 640.376471,734.117647 Z M1920,-0.0112941176 L1920,1129.40047 L1581.17647,1129.40047 L1581.17647,1016.45929 L1807.05882,1016.45929 L1807.05882,112.929882 L112.941176,112.929882 L112.941176,1016.45929 L225.882353,1016.45929 L225.882353,1129.40047 L0,1129.40047 L0,-0.0112941176 L1920,-0.0112941176 Z M1471.84941,714.24 L1115.52,1663.17176 C941.251765,1673.56235 666.578824,1681.12941 484.517647,1615.05882 L522.917647,1508.89412 C653.251765,1556.32941 860.724706,1562.76706 1052.72471,1550.56941 L1185.31765,1195.93412 L1124.89412,1180.12235 C1078.13647,1167.92471 1031.04,1158.77647 983.717647,1150.98353 C1071.92471,1078.47529 1129.41176,969.938824 1129.41176,847.058824 L1129.41176,734.117647 C1129.41176,516.141176 952.094118,338.823529 734.117647,338.823529 C516.141176,338.823529 338.823529,516.141176 338.823529,734.117647 L338.823529,847.058824 C338.823529,969.712941 396.197647,1078.13647 484.065882,1150.64471 C428.047059,1160.01882 372.592941,1171.53882 318.042353,1187.12471 C197.308235,1221.45882 112.941176,1333.49647 112.941176,1459.2 L112.941176,1788.31059 L147.84,1802.76706 C332.272941,1879.45412 535.115294,1920 734.117647,1920 C914.371765,1920 1082.76706,1904.07529 1208.24471,1875.27529 C1258.61647,1863.86824 1299.16235,1828.29176 1316.89412,1780.17882 L1348.74353,1692.87529 C1363.08706,1653.68471 1356.31059,1610.88 1330.33412,1578.35294 C1317.34588,1561.86353 1300.51765,1549.44 1281.76941,1541.87294 L1577.56235,753.995294 L1471.84941,714.24 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEmailLine":{"variant":"Line","glyphName":"email","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1694.23529 L1920,1694.23529 L1920,226 L0,226 L0,1694.23529 Z M112.941176,376.663529 L112.941176,338.941176 L1807.05882,338.941176 L1807.05882,376.663529 L960,1111.23294 L112.941176,376.663529 Z M1807.05882,526.197647 L1807.05882,1476.71059 L1455.92471,1037.82118 L1367.60471,1108.29647 L1745.95765,1581.29412 L174.042353,1581.29412 L552.395294,1108.29647 L464.075294,1037.82118 L112.941176,1476.71059 L112.941176,526.197647 L960,1260.76706 L1807.05882,526.197647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEmailSolid":{"variant":"Solid","glyphName":"email","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,428.265749 L1920,1617.80519 L1455.83907,1037.66049 L1367.6372,1108.24457 L1836.31551,1694.14893 L83.6844891,1694.14893 L552.362802,1108.24457 L464.160932,1037.66049 L0,1617.80519 L0,428.265749 L959.943533,1260.70619 L1920,428.265749 Z M1919.93224,226 L1919.93224,278.627493 L959.988707,1111.06794 L0.0451738133,278.627493 L0.0451738133,226 L1919.93224,226 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEmptyLine":{"variant":"Line","glyphName":"empty","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,-5.68434189e-14 C430.644706,-5.68434189e-14 -5.68434189e-14,430.644706 -5.68434189e-14,960 C-5.68434189e-14,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,-5.68434189e-14 960,-5.68434189e-14\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEmptySolid":{"variant":"Solid","glyphName":"empty","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEndLine":{"variant":"Line","glyphName":"end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M954.63973 826.4177L426.666667 298.444637 298.444637 426.666667 826.4177 954.63973 298.444637 1482.61279 426.666667 1610.83482 954.63973 1082.86176 1482.61279 1610.83482 1610.83482 1482.61279 1082.86176 954.63973 1610.83482 426.666667 1482.61279 298.444637z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconEndSolid":{"variant":"Solid","glyphName":"end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M797.319865 985.881673L344.771525 1438.43001 533.333333 1626.99182 985.881673 1174.44348 1438.43001 1626.99182 1626.99182 1438.43001 1174.44348 985.881673 1626.99182 533.333333 1438.43001 344.771525 985.881673 797.319865 533.333333 344.771525 344.771525 533.333333z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconEportfolioLine":{"variant":"Line","glyphName":"eportfolio","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1653.33333,1707 L266.666667,1707 C178.453333,1707 106.666667,1635.21333 106.666667,1547 L106.666667,960.333333 L640,960.333333 L640,1173.66667 L1280,1173.66667 L1280,960.333333 L1813.33333,960.333333 L1813.33333,1547 C1813.33333,1635.21333 1741.54667,1707 1653.33333,1707 L1653.33333,1707 Z M746.666667,1067 L1173.33333,1067 L1173.33333,853.666667 L746.666667,853.666667 L746.666667,1067 Z M266.666667,533.666667 L640,533.666667 L1280,533.666667 L1653.33333,533.666667 C1741.54667,533.666667 1813.33333,605.453333 1813.33333,693.666667 L1813.33333,853.666667 L1280,853.666667 L1280,747 L640,747 L640,853.666667 L106.666667,853.666667 L106.666667,693.666667 C106.666667,605.453333 178.453333,533.666667 266.666667,533.666667 L266.666667,533.666667 Z M746.666667,267 C746.666667,237.56 770.56,213.666667 800,213.666667 L1120,213.666667 C1149.44,213.666667 1173.33333,237.56 1173.33333,267 L1173.33333,427 L746.666667,427 L746.666667,267 Z M1653.33333,427 L1280,427 L1280,267 C1280,178.786667 1208.21333,107 1120,107 L800,107 C711.786667,107 640,178.786667 640,267 L640,427 L266.666667,427 C119.68,427 0,546.68 0,693.666667 L0,1547 C0,1693.98667 119.68,1813.66667 266.666667,1813.66667 L1653.33333,1813.66667 C1800.32,1813.66667 1920,1693.98667 1920,1547 L1920,693.666667 C1920,546.68 1800.32,427 1653.33333,427 L1653.33333,427 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEportfolioSolid":{"variant":"Solid","glyphName":"eportfolio","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M640,960.333333 L640,1173.66667 L1280,1173.66667 L1280,960.333333 L1920,960.333333 L1920,1547 C1920,1693.98667 1800.32,1813.66667 1653.33333,1813.66667 L1653.33333,1813.66667 L266.666667,1813.66667 C119.68,1813.66667 0,1693.98667 0,1547 L0,1547 L0,960.333333 L640,960.333333 Z M1120,107 C1208.21333,107 1280,178.786667 1280,267 L1280,267 L1280,427 L1653.33333,427 C1800.32,427 1920,546.68 1920,693.666667 L1920,693.666667 L1920,853.666667 L1280,853.666667 L1280,747 L640,747 L640,853.666667 L0,853.666667 L0,693.666667 C0,546.68 119.68,427 266.666667,427 L266.666667,427 L640,427 L640,267 C640,178.786667 711.786667,107 800,107 L800,107 Z M1120,213.666667 L800,213.666667 C770.56,213.666667 746.666667,237.56 746.666667,267 L746.666667,267 L746.666667,427 L1173.33333,427 L1173.33333,267 C1173.33333,237.56 1149.44,213.666667 1120,213.666667 L1120,213.666667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEquationLine":{"variant":"Line","glyphName":"equation","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,260 L1920,372.941176 L1048.43294,372.941176 L558.494118,1660.69647 L451.990588,1658.32471 L244.743529,1031.04941 L0,1031.04941 L0,918.108235 L285.515294,918.108235 L339.162353,956.847059 L509.364706,1471.97176 L956.611765,296.367059 L1009.46824,260 L1920,260 Z M1786.01788,863.218824 L1865.86729,943.181176 L1585.66024,1223.16235 L1865.86729,1503.36941 L1786.01788,1583.10588 L1505.81082,1303.01176 L1225.82965,1583.10588 L1145.98024,1503.36941 L1426.07435,1223.16235 L1145.98024,943.181176 L1225.82965,863.218824 L1505.81082,1143.31294 L1786.01788,863.218824 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEquationSolid":{"variant":"Solid","glyphName":"equation","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1919.98871,168.954824 L1919.98871,394.950118 L1087.27341,394.950118 L611.113412,1646.33835 L398.332235,1641.59482 L203.960471,1053.05835 L-0.0112941176,1053.05835 L-0.0112941176,827.176 L285.504,827.176 L392.798118,904.766588 L513.080471,1268.88894 L903.856941,241.801882 L1009.45694,168.954824 L1919.98871,168.954824 Z M1265.72047,788.990588 L1505.89671,1029.16682 L1746.05929,789.047059 L1905.75812,948.632941 L1665.55971,1188.82982 L1905.75812,1429.02824 L1746.05929,1588.61412 L1505.89571,1348.49382 L1265.72047,1588.67059 L1106.02165,1428.97176 L1346.20471,1188.82982 L1106.02165,948.689412 L1265.72047,788.990588 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEquellaLine":{"variant":"Line","glyphName":"equella","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M880.72175,1814.60102 C882.291049,1806.14978 891.10327,1799.26806 900.398352,1799.26806 L974.879725,1799.26806 C984.054091,1799.26806 990.089859,1806.14978 988.399844,1814.60102 L973.914002,1885.10847 C972.223987,1893.55971 963.411766,1900.56216 954.116684,1900.56216 L879.514596,1900.56216 C870.460945,1900.56216 864.425177,1893.55971 866.235907,1885.10847 L880.72175,1814.60102 Z M161.620395,1834.15959 C163.31041,1825.70836 172.12263,1818.7059 181.296997,1818.7059 L255.899085,1818.7059 C265.073452,1818.7059 271.109219,1825.70836 269.177774,1834.15959 L254.933362,1904.66704 C253.122632,1913.11828 244.310411,1920 235.136044,1920 L160.654672,1920 C151.480305,1920 145.444537,1913.11828 147.134552,1904.66704 L161.620395,1834.15959 Z M133.010856,591.827957 C134.700871,583.376721 143.513092,576.374269 152.687458,576.374269 L227.168831,576.374269 C236.343198,576.374269 242.378965,583.376721 240.44752,591.827957 L226.203108,662.335408 C224.271663,670.786644 215.338726,677.668364 206.285075,677.668364 L131.803703,677.668364 C122.629336,677.668364 116.593568,670.786644 118.283583,662.335408 L132.769425,591.827957 L133.010856,591.827957 Z M632.048123,15.332956 C633.858854,6.88172043 642.671074,0 651.845441,0 L726.326814,0 C735.621896,0 741.657663,7.00245237 739.967649,15.332956 L725.481806,85.9611394 C723.791791,94.412375 714.858855,101.414827 705.684488,101.414827 L631.082401,101.414827 C621.908034,101.414827 615.872266,94.1709111 617.803712,85.9611394 L632.048123,15.332956 Z M1416.21505,15.332956 C1417.90507,6.88172043 1426.71729,0 1435.89166,0 L1510.37303,0 C1519.5474,0 1525.58316,7.00245237 1523.65172,15.332956 L1509.40731,85.9611394 C1507.59658,94.412375 1498.78435,101.294095 1489.48927,101.294095 L1415.0079,101.294095 C1405.83353,101.294095 1399.79777,94.0501792 1401.48778,85.8404075 L1415.97362,15.2122241 L1416.21505,15.332956 L1416.21505,15.332956 Z M932.629351,397.208074 C934.560797,388.515374 943.493733,381.512922 952.547384,381.512922 L1027.02876,381.512922 C1036.20312,381.512922 1042.23889,388.756838 1040.54888,397.208074 L1026.06303,467.594793 C1024.37302,476.046029 1015.5608,482.927749 1006.26572,482.927749 L931.784344,482.927749 C922.609977,482.927749 916.694925,476.046029 918.505655,467.594793 L932.750067,397.087342 L932.629351,397.208074 Z M723.429645,256.796831 C725.240376,248.345595 734.294027,241.584607 743.106248,241.584607 L875.651705,241.584607 C884.826072,241.584607 890.741124,248.587059 888.930394,256.917563 L863.8216,381.99585 C862.01087,390.447085 852.957219,397.208074 844.024282,397.208074 L711.237395,397.208074 C702.183743,397.208074 696.147976,390.326354 697.958706,381.99585 L723.30893,256.796831 L723.429645,256.796831 Z M383.374497,1479.56989 C385.185227,1471.11866 394.238879,1464.35767 403.0511,1464.35767 L535.475841,1464.35767 C544.770924,1464.35767 550.685976,1471.11866 548.995961,1479.44916 L523.404306,1604.64818 C521.714291,1613.09942 512.781355,1619.8604 503.848419,1619.8604 L371.061531,1619.8604 C362.128595,1619.8604 356.092828,1612.97868 357.782842,1604.64818 L383.374497,1479.44916 L383.374497,1479.56989 Z M918.988516,1608.14941 C920.799247,1599.69817 929.852898,1592.81645 938.665119,1592.81645 L1071.21058,1592.81645 C1080.38494,1592.81645 1086.29999,1599.69817 1084.48926,1608.02867 L1059.13904,1733.22769 C1057.32831,1741.67893 1048.27466,1748.31919 1039.34172,1748.31919 L906.796266,1748.31919 C897.742614,1748.31919 891.706847,1741.43746 893.517577,1733.22769 L918.867801,1607.90794 L918.988516,1608.14941 Z M1267.9766,1510.35654 C1273.16736,1485.00283 1299.60402,1464.4784 1326.88569,1464.4784 L1534.15395,1464.4784 C1561.55634,1464.4784 1579.54293,1485.00283 1574.35217,1510.35654 L1534.27467,1706.4252 C1529.08391,1731.77891 1502.52653,1752.30334 1475.12415,1752.30334 L1268.21803,1752.30334 C1240.81565,1752.30334 1222.82906,1732.02037 1228.14053,1706.4252 L1268.21803,1510.35654 L1267.9766,1510.35654 Z M303.702365,1043.12394 C308.893125,1017.77023 335.329787,997.004339 362.611457,997.004339 L569.879717,997.004339 C597.282102,997.004339 615.268689,1017.52877 610.077929,1042.88248 L570.000432,1239.19261 C564.809672,1264.54631 538.252294,1285.07074 510.849909,1285.07074 L303.702365,1285.07074 C276.420695,1285.07074 258.313392,1264.54631 263.624867,1239.19261 L303.702365,1043.12394 Z M370.095808,637.947557 C375.165853,612.59385 401.4818,592.069421 429.0049,592.069421 L636.152445,592.069421 C663.55483,592.069421 681.541418,612.59385 676.350658,637.947557 L636.273161,834.257687 C631.082401,859.611394 604.525023,880.135823 577.122638,880.135823 L370.095808,880.135823 C342.693423,880.135823 324.58612,859.611394 329.897596,834.257687 L369.975093,637.947557 L370.095808,637.947557 Z M1496.61148,240.860215 C1501.80224,215.506508 1528.35962,194.982079 1555.762,194.982079 L1762.90955,194.982079 C1790.31193,194.982079 1808.29852,215.506508 1803.10776,240.860215 L1763.15098,437.049613 C1757.96022,462.40332 1731.52355,482.927749 1704.24188,482.927749 L1496.97362,482.927749 C1469.57124,482.927749 1451.58465,462.40332 1456.77541,437.049613 L1496.85291,240.860215 L1496.61148,240.860215 Z M855.612956,699.037917 C867.684492,639.879268 929.490752,591.948689 993.469889,591.948689 L1623.12117,591.948689 C1687.1003,591.948689 1729.35068,639.879268 1717.27914,699.158649 L1595.35664,1294.97076 C1583.2851,1354.12941 1521.47884,1402.18072 1457.4997,1402.18072 L827.848425,1402.18072 C763.869288,1402.18072 721.618915,1354.25014 733.69045,1294.97076 L855.612956,699.279381 L855.612956,699.037917 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEquellaSolid":{"variant":"Solid","glyphName":"equella","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M878.72175,1814.60102 C880.291049,1806.14978 889.10327,1799.26806 898.398352,1799.26806 L972.879725,1799.26806 C982.054091,1799.26806 988.089859,1806.14978 986.399844,1814.60102 L971.914002,1885.10847 C970.223987,1893.55971 961.411766,1900.56216 952.116684,1900.56216 L877.514596,1900.56216 C868.460945,1900.56216 862.425177,1893.55971 864.235907,1885.10847 L878.72175,1814.60102 Z M159.620395,1834.15959 C161.31041,1825.70836 170.12263,1818.7059 179.296997,1818.7059 L253.899085,1818.7059 C263.073452,1818.7059 269.109219,1825.70836 267.177774,1834.15959 L252.933362,1904.66704 C251.122632,1913.11828 242.310411,1920 233.136044,1920 L158.654672,1920 C149.480305,1920 143.444537,1913.11828 145.134552,1904.66704 L159.620395,1834.15959 Z M131.010856,591.827957 C132.700871,583.376721 141.513092,576.374269 150.687458,576.374269 L225.168831,576.374269 C234.343198,576.374269 240.378965,583.376721 238.44752,591.827957 L224.203108,662.335408 C222.271663,670.786644 213.338726,677.668364 204.285075,677.668364 L129.803703,677.668364 C120.629336,677.668364 114.593568,670.786644 116.283583,662.335408 L130.769425,591.827957 L131.010856,591.827957 Z M630.048123,15.332956 C631.858854,6.88172043 640.671074,0 649.845441,0 L724.326814,0 C733.621896,0 739.657663,7.00245237 737.967649,15.332956 L723.481806,85.9611394 C721.791791,94.412375 712.858855,101.414827 703.684488,101.414827 L629.082401,101.414827 C619.908034,101.414827 613.872266,94.1709111 615.803712,85.9611394 L630.048123,15.332956 Z M1414.21505,15.332956 C1415.90507,6.88172043 1424.71729,0 1433.89166,0 L1508.37303,0 C1517.5474,0 1523.58316,7.00245237 1521.65172,15.332956 L1507.40731,85.9611394 C1505.59658,94.412375 1496.78435,101.294095 1487.48927,101.294095 L1413.0079,101.294095 C1403.83353,101.294095 1397.79777,94.0501792 1399.48778,85.8404075 L1413.97362,15.2122241 L1414.21505,15.332956 L1414.21505,15.332956 Z M930.629351,397.208074 C932.560797,388.515374 941.493733,381.512922 950.547384,381.512922 L1025.02876,381.512922 C1034.20312,381.512922 1040.23889,388.756838 1038.54888,397.208074 L1024.06303,467.594793 C1022.37302,476.046029 1013.5608,482.927749 1004.26572,482.927749 L929.784344,482.927749 C920.609977,482.927749 914.694925,476.046029 916.505655,467.594793 L930.750067,397.087342 L930.629351,397.208074 Z M721.429645,256.796831 C723.240376,248.345595 732.294027,241.584607 741.106248,241.584607 L873.651705,241.584607 C882.826072,241.584607 888.741124,248.587059 886.930394,256.917563 L861.8216,381.99585 C860.01087,390.447085 850.957219,397.208074 842.024282,397.208074 L709.237395,397.208074 C700.183743,397.208074 694.147976,390.326354 695.958706,381.99585 L721.30893,256.796831 L721.429645,256.796831 Z M381.374497,1479.56989 C383.185227,1471.11866 392.238879,1464.35767 401.0511,1464.35767 L533.475841,1464.35767 C542.770924,1464.35767 548.685976,1471.11866 546.995961,1479.44916 L521.404306,1604.64818 C519.714291,1613.09942 510.781355,1619.8604 501.848419,1619.8604 L369.061531,1619.8604 C360.128595,1619.8604 354.092828,1612.97868 355.782842,1604.64818 L381.374497,1479.44916 L381.374497,1479.56989 Z M916.988516,1608.14941 C918.799247,1599.69817 927.852898,1592.81645 936.665119,1592.81645 L1069.21058,1592.81645 C1078.38494,1592.81645 1084.29999,1599.69817 1082.48926,1608.02867 L1057.13904,1733.22769 C1055.32831,1741.67893 1046.27466,1748.31919 1037.34172,1748.31919 L904.796266,1748.31919 C895.742614,1748.31919 889.706847,1741.43746 891.517577,1733.22769 L916.867801,1607.90794 L916.988516,1608.14941 Z M1265.9766,1510.35654 C1271.16736,1485.00283 1297.60402,1464.4784 1324.88569,1464.4784 L1532.15395,1464.4784 C1559.55634,1464.4784 1577.54293,1485.00283 1572.35217,1510.35654 L1532.27467,1706.4252 C1527.08391,1731.77891 1500.52653,1752.30334 1473.12415,1752.30334 L1266.21803,1752.30334 C1238.81565,1752.30334 1220.82906,1732.02037 1226.14053,1706.4252 L1266.21803,1510.35654 L1265.9766,1510.35654 Z M301.702365,1043.12394 C306.893125,1017.77023 333.329787,997.004339 360.611457,997.004339 L567.879717,997.004339 C595.282102,997.004339 613.268689,1017.52877 608.077929,1042.88248 L568.000432,1239.19261 C562.809672,1264.54631 536.252294,1285.07074 508.849909,1285.07074 L301.702365,1285.07074 C274.420695,1285.07074 256.313392,1264.54631 261.624867,1239.19261 L301.702365,1043.12394 Z M368.095808,637.947557 C373.165853,612.59385 399.4818,592.069421 427.0049,592.069421 L634.152445,592.069421 C661.55483,592.069421 679.541418,612.59385 674.350658,637.947557 L634.273161,834.257687 C629.082401,859.611394 602.525023,880.135823 575.122638,880.135823 L368.095808,880.135823 C340.693423,880.135823 322.58612,859.611394 327.897596,834.257687 L367.975093,637.947557 L368.095808,637.947557 Z M1494.61148,240.860215 C1499.80224,215.506508 1526.35962,194.982079 1553.762,194.982079 L1760.90955,194.982079 C1788.31193,194.982079 1806.29852,215.506508 1801.10776,240.860215 L1761.15098,437.049613 C1755.96022,462.40332 1729.52355,482.927749 1702.24188,482.927749 L1494.97362,482.927749 C1467.57124,482.927749 1449.58465,462.40332 1454.77541,437.049613 L1494.85291,240.860215 L1494.61148,240.860215 Z M853.612956,699.037917 C865.684492,639.879268 927.490752,591.948689 991.469889,591.948689 L1621.12117,591.948689 C1685.1003,591.948689 1727.35068,639.879268 1715.27914,699.158649 L1593.35664,1294.97076 C1581.2851,1354.12941 1519.47884,1402.18072 1455.4997,1402.18072 L825.848425,1402.18072 C761.869288,1402.18072 719.618915,1354.25014 731.69045,1294.97076 L853.612956,699.279381 L853.612956,699.037917 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEssayLine":{"variant":"Line","glyphName":"essay","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1131.00421,220.5232 L1131.00421,333.623621 L113.100421,333.623621 L113.100421,1803.92909 L1583.40589,1803.92909 L1583.40589,1464.62783 L1696.50631,1464.62783 L1696.50631,1917.02951 L0,1917.02951 L0,220.5232 L1131.00421,220.5232 Z M1831.09581,0 L1850.32288,52.0261936 C1880.86,132.214392 1901.21807,219.414816 1911.39711,308.764149 L1911.39711,308.764149 L1837.88184,357.39733 C1837.88184,357.39733 1876.33598,368.707372 1917.05213,380.017414 C1926.10017,514.606915 1913.65912,650.32742 1888.77703,772.475874 L1888.77703,772.475874 L1888.77703,773.606878 L1791.51067,797.357967 C1791.51067,797.357967 1825.97282,821.290016 1861.43054,846.255929 L1864.90125,848.700751 C1866.82989,850.059935 1868.75825,851.419968 1870.68096,852.777173 C1850.32288,929.685459 1825.44079,999.80772 1796.03468,1058.61994 C1774.5456,1101.5981 1741.74648,1151.36228 1696.50631,1195.47145 C1664.83819,1227.13957 1626.38405,1255.41467 1583.40589,1278.03475 C1531.3797,1305.17886 1471.43647,1322.14392 1402.44522,1322.14392 C1356.07405,1322.14392 1306.30986,1314.22689 1253.15266,1296.13082 L1253.15266,1296.13082 L1147.96927,1509.89062 L1052.96492,1569.83384 L1046.17889,1458.99543 L1150.23128,1247.49764 C1062.01295,1196.60245 1000.93872,1128.7422 969.270606,1043.91688 C918.375417,902.541358 968.139602,766.820853 991.89069,711.401647 L991.89069,711.401647 L1090.28806,714.794659 C1090.28806,714.794659 1059.75094,676.340516 1031.47584,640.148382 C1089.15705,541.751016 1176.24438,433.174612 1281.42777,333.646241 C1281.42777,333.646241 1353.81204,263.52398 1412.62426,220.545821 C1524.59367,134.589501 1650.13514,62.2052314 1779.06962,18.0960673 L1779.06962,18.0960673 L1831.09581,0 Z M410.260466,1178.1897 C456.292338,1169.25477 523.473988,1180.33861 585.792319,1284.8434 C594.840353,1299.99886 603.549085,1315.71982 612.257818,1331.10147 C636.348208,1374.53203 669.37353,1433.90975 693.124619,1435.83246 C700.476146,1436.73727 736.668281,1433.57045 817.987483,1330.64907 C837.440756,1305.99318 873.067388,1302.03466 897.497079,1321.37484 C921.92677,1340.71501 926.111486,1376.34164 906.771314,1400.77133 C826.130714,1502.67481 760.306269,1549.04598 695.160426,1549.04598 C691.541213,1549.04598 687.808899,1548.93288 683.963485,1548.59358 C599.816772,1541.69446 555.933808,1462.63726 513.40805,1386.06828 C505.26482,1371.59142 497.12159,1357.00147 488.639058,1342.75082 C464.661769,1302.48707 443.172689,1286.76611 432.315048,1289.14122 C403.926843,1294.79624 354.84126,1370.00802 336.405892,1496.34119 C331.768774,1527.2176 302.023364,1548.70668 272.277953,1544.18267 C241.288438,1539.65865 220.025559,1510.93114 224.436475,1480.05473 C243.663547,1348.17964 302.588866,1199.67878 410.260466,1178.1897 Z M1763.23556,144.768539 C1712.34037,166.257619 1662.57619,191.139711 1613.943,220.545821 C1558.5238,254.475947 1504.2356,291.799086 1453.34041,333.646241 C1442.03037,342.694275 1431.85133,352.873313 1420.54129,363.052351 L1420.54129,363.052351 L1485.00852,482.938797 L1351.55003,424.126578 C1268.98672,502.165868 1201.12647,584.616075 1150.23128,663.89947 L1150.23128,663.89947 L1221.48454,806.406 L1084.63304,789.440937 C1062.01295,852.777173 1049.5719,931.947467 1076.71601,1005.46274 C1097.07408,1063.14396 1138.92124,1109.51513 1199.99546,1146.83827 L1199.99546,1146.83827 L1403.57622,738.545748 C1417.14827,710.270643 1451.0784,698.9606 1479.3535,712.532651 C1507.62861,727.235706 1518.93865,760.034828 1505.3666,788.309933 L1505.3666,788.309933 L1304.04785,1193.20944 C1426.19631,1229.40157 1518.93865,1194.34044 1583.40589,1143.44525 C1651.26614,1090.28806 1687.45828,1022.4278 1694.2443,1007.72475 C1695.37531,1005.46274 1696.50631,1004.33174 1696.50631,1002.06973 C1716.86439,960.222572 1733.82945,911.589392 1749.66351,860.694202 C1710.07836,832.419097 1619.59803,767.951857 1619.59803,767.951857 L1619.59803,767.951857 L1781.33163,728.36671 C1799.42769,628.83834 1808.47573,521.39294 1803.95171,414.965444 C1788.87543,409.040113 1769.45156,401.354012 1749.82444,393.568243 L1744.12429,391.306563 C1702.33641,374.722459 1661.44518,358.415233 1661.44518,358.415233 L1661.44518,358.415233 L1792.64167,290.668081 C1785.85564,240.903896 1776.80761,191.139711 1763.23556,144.768539 Z\" transform=\"translate(0 3)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEssaySolid":{"variant":"Solid","glyphName":"essay","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1401.41412,1433.30259 C1378.26118,1433.30259 1353.75294,1430.592 1329.13176,1427.20376 L1313.88471,1425.17082 L1242.28,1570.63906 C1237.19765,1580.80376 1229.51765,1589.38729 1219.80471,1595.48612 L1039.55059,1709.33082 C999.908235,1734.40376 947.842353,1707.74965 945.018824,1660.992 L932.143529,1450.24376 C931.465882,1439.62729 933.611765,1428.89788 938.355294,1419.29788 L985.677647,1323.072 C997.649412,1298.90259 991.211765,1270.78024 972.237647,1251.69318 C923.447059,1202.67671 886.967059,1145.98024 863.136471,1081.94259 C821.235294,965.500235 819.767059,827.260235 872.849412,703.815529 C897.470588,634.356706 957.442353,544.907294 957.442353,544.907294 C1022.04471,443.599059 1106.97647,341.952 1202.86353,251.260235 L1202.75059,250.695529 C1203.76706,249.566118 1216.19059,238.384941 1235.50353,220.201412 L0.943529412,220.201412 L0.943529412,1914.31906 L1695.06118,1914.31906 L1695.06118,1338.65788 C1675.86118,1351.872 1656.09647,1364.97318 1634.86353,1376.15435 C1562.01647,1414.10259 1483.63529,1433.30259 1401.41412,1433.30259 M1829.46118,0.0225882353 L1848.66118,51.9755294 C1876.67059,125.500235 1895.08,205.236706 1905.92235,286.667294 L1905.92235,286.667294 L1784.51059,361.434353 L1916.08706,405.255529 C1921.62118,523.392 1911.34353,641.415529 1890.78824,749.952 L1890.78824,749.952 L1751.53176,783.834353 L1862.10118,874.074353 C1843.01412,941.726118 1820.87765,1004.40847 1794.44941,1057.152 C1772.99059,1100.06965 1740.23765,1149.76376 1695.06118,1193.81082 C1663.43765,1225.43435 1625.03765,1253.66965 1582.12,1276.25788 C1530.16706,1303.36376 1470.30824,1320.30494 1401.41412,1320.30494 C1383.11765,1320.30494 1363.80471,1318.04612 1344.49176,1315.33553 L1344.49176,1315.33553 L1477.76235,891.580235 C1496.39765,832.060235 1488.71765,828.897882 1460.48235,884.577882 L1460.48235,884.577882 L1252.44471,1294.32847 L1147.29647,1507.78729 L1052.53882,1567.64612 L1045.64941,1456.96376 L1149.55529,1245.76376 C1061.57412,1194.94024 1000.58588,1127.17553 968.849412,1042.46965 C926.044706,923.316706 954.618824,808.907294 978.901176,742.610824 L978.901176,742.610824 L1130.35529,742.610824 L1052.65176,605.726118 C1109.46118,516.615529 1187.27765,421.519059 1280.68,333.199059 C1280.68,333.199059 1352.84941,263.175529 1411.69176,220.257882 C1523.39059,134.422588 1648.75529,62.1402353 1777.50824,18.0931765 L1777.50824,18.0931765 L1829.46118,0.0225882353 Z M618.167059,1356.95435 C645.611765,1425.73553 673.282353,1451.37318 689.884706,1452.50259 C719.588235,1455.10024 774.703529,1393.43435 798.76,1350.40376 C813.894118,1323.072 848.228235,1313.35906 875.56,1328.60612 C902.778824,1343.74024 912.604706,1378.18729 897.357647,1405.40612 C887.983529,1422.12141 804.858824,1565.44376 691.24,1565.44376 C688.416471,1565.44376 685.592941,1565.33082 682.656471,1565.21788 C612.632941,1560.70024 555.597647,1504.68141 513.244706,1398.85553 C466.261176,1281.39671 435.767059,1271.45788 435.428235,1271.34494 C410.242353,1280.60612 361.790588,1392.98259 338.637647,1502.42259 C332.2,1532.91671 302.157647,1552.68141 271.663529,1546.13082 C241.169412,1539.58024 221.743529,1509.65082 228.068235,1479.15671 C247.607059,1386.432 306.223529,1169.472 427.522353,1158.96847 C523.635294,1150.61082 582.477647,1267.95671 618.167059,1356.95435 Z\" transform=\"translate(-1)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExitFullScreenLine":{"variant":"Line","glyphName":"exit-full-screen","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M876.612259,1043.38774 L876.612259,1753.55901 L761.268541,1753.55901 L761.268541,1240.27947 L81.6633525,1920 L0,1838.33665 L679.720532,1158.73146 L166.440985,1158.73146 L166.440985,1043.38774 L876.612259,1043.38774 Z M1838.39432,0 L1919.94233,81.5480088 L1240.33714,761.268541 L1753.61669,761.268541 L1753.61669,876.612259 L1043.44541,876.612259 L1043.44541,166.440985 L1158.78913,166.440985 L1158.78913,679.605188 L1838.39432,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExitFullScreenSolid":{"variant":"Solid","glyphName":"exit-full-screen","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M884.311012,1035.68899 L884.311012,1732.00676 L675.185528,1732.00676 L675.185528,1392.84477 L147.92568,1920 L0,1772.07432 L527.259849,1244.91909 L187.888629,1244.91909 L187.888629,1035.68899 L884.311012,1035.68899 Z M1772.11617,0 L1920.04185,147.92568 L1392.88661,675.080913 L1732.0486,675.080913 L1732.0486,884.415627 L1035.62622,884.415627 L1035.62622,187.888629 L1244.96093,187.888629 L1244.96093,527.155233 L1772.11617,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExpandItemsLine":{"variant":"Line","glyphName":"expand-items","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.18174 0.0116972603L451 509.193437 533.69963 592.01004 901.812411 223.897259 901.812411 1696.11444 533.69963 1328.11863 451 1410.81826 960.18174 1920 1469.36348 1410.81826 1386.78082 1328.11863 1018.66804 1696.11444 1018.66804 223.897259 1386.78082 592.01004 1469.36348 509.193437z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExpandItemsSolid":{"variant":"Solid","glyphName":"expand-items","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M959.921096 0.0107695155L453 506.931866 605.28095 659.212816 852.225941 412.267824 852.225941 1507.74295 605.28095 1260.79795 453 1413.0789 959.921096 1920 1466.84219 1413.0789 1314.56124 1260.79795 1067.61625 1507.74295 1067.61625 412.267824 1314.56124 659.212816 1466.84219 506.931866z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExpandLeftLine":{"variant":"Line","glyphName":"expand-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.29412,0 L1468.29412,112.941176 L282.411765,112.941176 C251.208324,112.941176 225.941176,138.190874 225.941176,169.411765 L225.941176,169.411765 L225.941176,1750.58824 C225.941176,1781.80913 251.208324,1807.05882 282.411765,1807.05882 L282.411765,1807.05882 L1468.29412,1807.05882 L1468.29412,1920 L282.411765,1920 C188.850095,1920 113,1844.20229 113,1750.58824 L113,1750.58824 L113,169.411765 C113,75.7977119 188.850095,0 282.411765,0 L282.411765,0 L1468.29412,0 Z M1807.11765,0 L1807.11765,1920 L1694.17647,1920 L1694.17647,0 L1807.11765,0 Z M863.657499,581.245735 L943.518971,661.107206 L701.096,903.529 L1355.35294,903.529412 L1355.35294,1016.47059 L701.097,1016.47 L943.518971,1258.89279 L863.657499,1338.75427 L484.903234,960 L863.657499,581.245735 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":true},"IconExpandLeftSolid":{"variant":"Solid","glyphName":"expand-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1807.12429,0.0564689274 L1807.12429,1920 L1694.18644,1920 L1694.18644,0.0564689274 L1807.12429,0.0564689274 Z M1468.25426,1.13686838e-13 L1468.25426,1919.94353 L282.406782,1919.94353 C189.007176,1919.94353 113,1844.04929 113,1750.53675 L113,1750.53675 L113,169.406782 C113,76.0071763 189.007176,1.13686838e-13 282.406782,1.13686838e-13 L282.406782,1.13686838e-13 L1468.25426,1.13686838e-13 Z M830.607129,661.138202 L588.242493,903.502838 L1242.37855,903.502838 L1242.37855,1016.44069 L588.242493,1016.44069 L830.607129,1258.91827 L750.760066,1338.76533 L371.966501,959.971766 L750.760066,581.291138 L830.607129,661.138202 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconExpandStartLine":{"variant":"Line","glyphName":"expand-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1807.11765,1807.05882 L621.235294,1807.05882 C590.031854,1807.05882 564.764706,1781.80913 564.764706,1750.58824 L564.764706,169.411765 C564.764706,138.190874 590.031854,112.941176 621.235294,112.941176 L1807.11765,112.941176 L1807.11765,0 L621.235294,0 C527.673624,0 451.823529,75.7977119 451.823529,169.411765 L451.823529,1750.58824 C451.823529,1844.20229 527.673624,1920 621.235294,1920 L1807.11765,1920 L1807.11765,1807.05882 Z\" fill-rule=\"nonzero\" transform=\"matrix(-1 0 0 1 2258.941 0)\"/>\n        <path d=\"M225.941176 0L225.941176 1920 338.882353 1920 338.882353 0zM1219.02218 1016.47059L564.76001 1016.47059 564.76001 903.529412 1219.02218 903.529412 976.599976 661.107206 1056.46145 581.245735 1435.21571 960 1056.46145 1338.75427 976.599976 1258.89279z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconExpandStartSolid":{"variant":"Solid","glyphName":"expand-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1637.71751 1.13686838e-13C1731.11711 1.13686838e-13 1807.12429 76.0071763 1807.12429 169.406782L1807.12429 1750.53675C1807.12429 1844.04929 1731.11711 1919.94353 1637.71751 1919.94353L451.870033 1919.94353 451.870033 1.13686838e-13 1637.71751 1.13686838e-13zM1158.70144 581L1078.83997 660.861472 1321.26217 903.283677 667 903.283677 667 1016.22485 1321.26217 1016.22485 1078.83997 1258.64706 1158.70144 1338.50853 1537.4557 959.754265 1158.70144 581zM225.937855 1920L338.87571 1920 338.87571.0564689274 225.937855.0564689274z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExpandLine":{"variant":"Line","glyphName":"expand","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1694.17647 L1920,1807.11765 L0,1807.11765 L0,1694.17647 L1920,1694.17647 Z M1750.58824,113 C1843.99059,113 1920,189.009412 1920,282.411765 L1920,1468.29412 L1807.05882,1468.29412 L1807.05882,282.411765 C1807.05882,251.352941 1781.64706,225.941176 1750.58824,225.941176 L169.411765,225.941176 C138.352941,225.941176 112.941176,251.352941 112.941176,282.411765 L112.941176,1468.29412 L0,1468.29412 L0,282.411765 C0,189.009412 76.0094118,113 169.411765,113 L1750.58824,113 Z M960,484.915294 L1338.80471,863.607059 L1258.84235,943.569412 L1016.47059,701.084706 L1016.47059,1355.35294 L903.529412,1355.35294 L903.529412,701.084706 L661.157647,943.569412 L581.195294,863.607059 L960,484.915294 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExpandSolid":{"variant":"Solid","glyphName":"expand","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1694.17647 L1920,1807.11765 L0,1807.11765 L0,1694.17647 L1920,1694.17647 Z M960.056471,371.917647 L1338.74824,750.722353 L1258.89882,830.571765 L1016.52706,588.2 L1016.52706,1242.35529 L903.585882,1242.35529 L903.585882,588.2 L661.101176,830.571765 L581.251765,750.722353 L960.056471,371.917647 Z M1750.64471,112.943529 L169.468235,112.943529 C75.9529412,112.943529 0.0564705882,188.952941 0.0564705882,282.355294 L0.0564705882,1468.23765 L56.5270588,1468.23765 L112.997647,1468.23765 L1807.11529,1468.23765 L1863.58588,1468.23765 L1920.05647,1468.23765 L1920.05647,282.355294 C1920.05647,188.952941 1844.04706,112.943529 1750.64471,112.943529 L1750.64471,112.943529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExportContentLine":{"variant":"Line","glyphName":"export-content","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1016.08141 L409.185882,1425.15435 L489.035294,1345.41788 L216.169412,1072.43906 L1352.58353,1072.43906 L1352.58353,959.610824 L216.169412,959.610824 L489.035294,686.744941 L409.185882,606.895529 L0,1016.08141 Z M1465.59247,305.32 L1781.03718,620.764706 L1465.59247,620.764706 L1465.59247,305.32 Z M1867.776,547.691765 L1538.55247,218.581176 C1507.04188,187.070588 1463.33365,169 1418.83482,169 L675.004235,169 L675.004235,846.647059 L787.945412,846.647059 L787.945412,281.941176 L1352.65129,281.941176 L1352.65129,733.705882 L1804.416,733.705882 L1804.416,1637.23529 L787.945412,1637.23529 L787.945412,1185.47059 L675.004235,1185.47059 L675.004235,1750.17647 L1917.35718,1750.17647 L1917.35718,667.522353 C1917.35718,623.023529 1899.28659,579.315294 1867.776,547.691765 L1867.776,547.691765 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExportContentSolid":{"variant":"Solid","glyphName":"export-content","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1352.68518,168.954824 L1352.68518,733.660706 L1917.39106,733.660706 L1917.39106,1750.13129 L675.038118,1750.13129 L675.038118,1072.48424 L216.158118,1072.48424 L489.136941,1345.46306 L409.174588,1425.31247 L-0.0112941176,1016.12659 L409.174588,606.827765 L489.136941,686.677176 L216.158118,959.543059 L675.038118,959.543059 L675.038118,168.954824 L1352.68518,168.954824 Z M1352.68518,959.543059 L787.979294,959.543059 L787.979294,1072.48424 L1352.68518,1072.48424 L1352.68518,959.543059 Z\"/>\n        <path d=\"M1465.64894 620.776L1900.47247 620.776 1465.64894 185.839529z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconExportLine":{"variant":"Line","glyphName":"export","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1016.08141 L409.185882,1425.15435 L489.035294,1345.41788 L216.169412,1072.43906 L1352.58353,1072.43906 L1352.58353,959.610824 L216.169412,959.610824 L489.035294,686.744941 L409.185882,606.895529 L0,1016.08141 Z M1465.59247,305.32 L1781.03718,620.764706 L1465.59247,620.764706 L1465.59247,305.32 Z M1867.776,547.691765 L1538.55247,218.581176 C1507.04188,187.070588 1463.33365,169 1418.83482,169 L675.004235,169 L675.004235,846.647059 L787.945412,846.647059 L787.945412,281.941176 L1352.65129,281.941176 L1352.65129,733.705882 L1804.416,733.705882 L1804.416,1637.23529 L787.945412,1637.23529 L787.945412,1185.47059 L675.004235,1185.47059 L675.004235,1750.17647 L1917.35718,1750.17647 L1917.35718,667.522353 C1917.35718,623.023529 1899.28659,579.315294 1867.776,547.691765 L1867.776,547.691765 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExportSolid":{"variant":"Solid","glyphName":"export","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1352.68518,168.954824 L1352.68518,733.660706 L1917.39106,733.660706 L1917.39106,1750.13129 L675.038118,1750.13129 L675.038118,1072.48424 L216.158118,1072.48424 L489.136941,1345.46306 L409.174588,1425.31247 L-0.0112941176,1016.12659 L409.174588,606.827765 L489.136941,686.677176 L216.158118,959.543059 L675.038118,959.543059 L675.038118,168.954824 L1352.68518,168.954824 Z M1352.68518,959.543059 L787.979294,959.543059 L787.979294,1072.48424 L1352.68518,1072.48424 L1352.68518,959.543059 Z\"/>\n        <path d=\"M1465.64894 620.776L1900.47247 620.776 1465.64894 185.839529z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconExternalLinkLine":{"variant":"Line","glyphName":"external-link","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1226.66667,267 C1314.88,267 1386.66667,338.786667 1386.66667,427 L1386.66667,427 L1386.66667,853.666667 L1280,853.666667 L1280,693.666667 L106.666667,693.666667 L106.666667,1493.66667 C106.666667,1523 130.56,1547 160,1547 L160,1547 L1226.66667,1547 C1256.10667,1547 1280,1523 1280,1493.66667 L1280,1493.66667 L1280,1280.33333 L1386.66667,1280.33333 L1386.66667,1493.66667 C1386.66667,1581.88 1314.88,1653.66667 1226.66667,1653.66667 L1226.66667,1653.66667 L160,1653.66667 C71.7866667,1653.66667 0,1581.88 0,1493.66667 L0,1493.66667 L0,427 C0,338.786667 71.7866667,267 160,267 L160,267 Z M1584.37333,709.293333 L1904.37333,1029.29333 C1925.17333,1050.09333 1925.17333,1083.90667 1904.37333,1104.70667 L1904.37333,1104.70667 L1584.37333,1424.70667 L1508.96,1349.29333 L1737.86667,1120.38667 L906.613333,1120.38667 L906.613333,1013.72 L1737.86667,1013.72 L1508.96,784.706667 L1584.37333,709.293333 Z M1226.66667,373.666667 L160,373.666667 C130.56,373.666667 106.666667,397.666667 106.666667,427 L106.666667,427 L106.666667,587 L1280,587 L1280,427 C1280,397.666667 1256.10667,373.666667 1226.66667,373.666667 L1226.66667,373.666667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconExternalLinkSolid":{"variant":"Solid","glyphName":"external-link","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1386.667 160.0034C1386.667 71.7904 1314.88.0034 1226.667.0034L160 .0034C71.787.0034 0 71.7904 0 160.0034L0 320.0034 1386.667 320.0034 1386.667 160.0034zM1904.373 762.2963L1584.373 442.2963 1508.96 517.7103 1737.867 746.7233 1386.613 746.7233 1386.613 853.3363 853.333 853.3363 853.333 746.6703 1386.667 746.6703 1386.667 426.6703 0 426.6703 0 1226.6703C0 1315.2033 71.467 1386.6703 160 1386.6703L1226.667 1386.6703C1315.2 1386.6703 1386.667 1315.2033 1386.667 1226.6703L1386.667 853.3903 1737.867 853.3903 1508.96 1082.2963 1584.373 1157.7103 1904.373 837.7103C1925.173 816.9093 1925.173 783.0973 1904.373 762.2963\" transform=\"translate(0 266)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEyeLine":{"variant":"Line","glyphName":"eye","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1489.82027 C611.525723,1489.82027 291.455067,1287.49746 118.7017,959.901965 C291.455067,632.306469 611.525723,429.983661 960,429.983661 C1308.47428,429.983661 1628.54493,632.306469 1801.2983,959.901965 C1628.54493,1287.49746 1308.47428,1489.82027 960,1489.82027 L960,1489.82027 Z M1908.3418,936.267609 C1720.64473,558.647825 1357.33274,324 960,324 C562.667255,324 199.355266,558.647825 11.6582027,936.267609 L0,959.901965 L11.6582027,983.536321 C199.355266,1361.15611 562.667255,1595.80393 960,1595.80393 C1357.33274,1595.80393 1720.64473,1361.15611 1908.3418,983.536321 L1920,959.901965 L1908.3418,936.267609 Z M960,1171.86929 C843.100022,1171.86929 748.032678,1076.80194 748.032678,959.901965 C748.032678,843.001987 843.100022,747.934643 960,747.934643 C1076.89998,747.934643 1171.96732,843.001987 1171.96732,959.901965 C1171.96732,1076.80194 1076.89998,1171.86929 960,1171.86929 M960,641.950983 C784.703025,641.950983 642.049017,784.60499 642.049017,959.901965 C642.049017,1135.19894 784.703025,1277.85295 960,1277.85295 C1135.29698,1277.85295 1277.95098,1135.19894 1277.95098,959.901965 C1277.95098,784.60499 1135.29698,641.950983 960,641.950983\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconEyeSolid":{"variant":"Solid","glyphName":"eye","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1277.85295 C784.703025,1277.85295 642.049017,1135.19894 642.049017,959.901965 C642.049017,784.60499 784.703025,641.950983 960,641.950983 C1135.29698,641.950983 1277.95098,784.60499 1277.95098,959.901965 C1277.95098,1135.19894 1135.29698,1277.85295 960,1277.85295 L960,1277.85295 Z M1908.3418,936.267609 C1720.64473,558.647825 1357.33274,324 960,324 C562.667255,324 199.355266,558.647825 11.6582027,936.267609 L0,959.901965 L11.6582027,983.536321 C199.355266,1361.15611 562.667255,1595.80393 960,1595.80393 C1357.33274,1595.80393 1720.64473,1361.15611 1908.3418,983.536321 L1920,959.901965 L1908.3418,936.267609 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFacebookBoxedLine":{"variant":"Line","glyphName":"facebook-boxed","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1416.01293,791.915394 L1385.10341,1017.53231 L1013.85076,1017.53231 L1013.85076,1807.19154 L788.233843,1807.19154 L788.233843,1017.53231 L449.808461,1017.53231 L449.808461,791.915394 L788.233843,791.915394 L788.233843,585.137485 C788.233843,298.26557 964.440658,112.808461 1237.32432,112.808461 C1354.19389,112.808461 1427.06816,119.012926 1469.14571,124.653349 L1465.87427,338.312573 L1292.37485,338.650999 C1287.6369,338.199765 1174.60282,329.400705 1093.0423,404.305523 C1040.47356,452.474736 1013.85076,521.73913 1013.85076,609.955347 L1013.85076,791.915394 L1416.01293,791.915394 Z M1168.73678,487.896592 C1213.18331,446.495887 1282.44771,451.008226 1287.52409,451.233843 L1576.9906,451.121034 L1583.19506,33.6169213 L1539.651,22.9001175 C1511.6745,16.0188014 1426.05288,0 1237.32432,0 C901.26792,0 675.425382,235.20564 675.425382,585.137485 L675.425382,679.106933 L337,679.106933 L337,1130.34078 L675.425382,1130.34078 L675.425382,1920 L1126.65922,1920 L1126.65922,1130.34078 L1483.35958,1130.34078 L1545.29142,679.106933 L1126.65922,679.106933 L1126.65922,609.955347 C1126.65922,555.017626 1140.87309,513.955347 1168.73678,487.896592 L1168.73678,487.896592 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFacebookBoxedSolid":{"variant":"Solid","glyphName":"facebook-boxed","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1168.73678,487.896592 C1213.40893,446.495887 1282.56052,451.008226 1287.6369,451.233843 L1576.9906,451.121034 L1583.30787,33.6169213 L1539.651,22.9001175 C1511.6745,16.0188014 1426.05288,0 1237.32432,0 C901.26792,0 675.425382,235.20564 675.425382,585.137485 L675.425382,679.106933 L337,679.106933 L337,1130.34078 L675.425382,1130.34078 L675.425382,1920 L1126.65922,1920 L1126.65922,1130.34078 L1483.35958,1130.34078 L1545.40423,679.106933 L1126.65922,679.106933 L1126.65922,609.955347 C1126.65922,555.017626 1140.87309,513.842538 1168.73678,487.896592\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFacebookLine":{"variant":"Line","glyphName":"facebook","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1416.01293,791.915394 L1385.10341,1017.53231 L1013.85076,1017.53231 L1013.85076,1807.19154 L788.233843,1807.19154 L788.233843,1017.53231 L449.808461,1017.53231 L449.808461,791.915394 L788.233843,791.915394 L788.233843,585.137485 C788.233843,298.26557 964.440658,112.808461 1237.32432,112.808461 C1354.19389,112.808461 1427.06816,119.012926 1469.14571,124.653349 L1465.87427,338.312573 L1292.37485,338.650999 C1287.6369,338.199765 1174.60282,329.400705 1093.0423,404.305523 C1040.47356,452.474736 1013.85076,521.73913 1013.85076,609.955347 L1013.85076,791.915394 L1416.01293,791.915394 Z M1168.73678,487.896592 C1213.18331,446.495887 1282.44771,451.008226 1287.52409,451.233843 L1576.9906,451.121034 L1583.19506,33.6169213 L1539.651,22.9001175 C1511.6745,16.0188014 1426.05288,0 1237.32432,0 C901.26792,0 675.425382,235.20564 675.425382,585.137485 L675.425382,679.106933 L337,679.106933 L337,1130.34078 L675.425382,1130.34078 L675.425382,1920 L1126.65922,1920 L1126.65922,1130.34078 L1483.35958,1130.34078 L1545.29142,679.106933 L1126.65922,679.106933 L1126.65922,609.955347 C1126.65922,555.017626 1140.87309,513.955347 1168.73678,487.896592 L1168.73678,487.896592 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFacebookSolid":{"variant":"Solid","glyphName":"facebook","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1168.73678,487.896592 C1213.40893,446.495887 1282.56052,451.008226 1287.6369,451.233843 L1576.9906,451.121034 L1583.30787,33.6169213 L1539.651,22.9001175 C1511.6745,16.0188014 1426.05288,0 1237.32432,0 C901.26792,0 675.425382,235.20564 675.425382,585.137485 L675.425382,679.106933 L337,679.106933 L337,1130.34078 L675.425382,1130.34078 L675.425382,1920 L1126.65922,1920 L1126.65922,1130.34078 L1483.35958,1130.34078 L1545.40423,679.106933 L1126.65922,679.106933 L1126.65922,609.955347 C1126.65922,555.017626 1140.87309,513.842538 1168.73678,487.896592\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFastForwardLine":{"variant":"Line","glyphName":"fast-forward","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M855.281474,308.989309 L855.281474,831.245559 L0,309.52386 L0,1609.76552 L855.281474,1087.93691 L855.281474,1610.30007 L1919.89309,959.644691 L855.281474,308.989309 Z M962.191659,499.610168 L1714.94627,959.644691 L962.191659,1419.67921 L962.191659,499.610168 Z M106.910184,499.930898 L855.281474,956.437385 L855.281474,962.745086 L106.910184,1419.25157 L106.910184,499.930898 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFastForwardSolid":{"variant":"Solid","glyphName":"fast-forward","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M855.281474 308.989309L855.281474 831.245559 0 309.52386 0 1609.76552 855.281474 1087.93691 855.281474 1610.30007 1919.89309 959.644691z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFeedbackLine":{"variant":"Line","glyphName":"feedback","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M84,0 L84,1423.14253 L521.875,1423.14253 L521.875,1920 L1143.11016,1423.14253 L1835.5,1423.14253 L1835.5,0 L84,0 Z M193.46875,109.464082 L1726.03125,109.464082 L1726.03125,1313.56899 L1104.79609,1313.56899 L631.34375,1692.31471 L631.34375,1313.56899 L193.46875,1313.56899 L193.46875,109.464082 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFeedbackSolid":{"variant":"Solid","glyphName":"feedback","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M84 0L84 1423.14253 521.875 1423.14253 521.875 1920 1143.11016 1423.14253 1835.5 1423.14253 1835.5 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFileLockedLine":{"variant":"Line","glyphName":"file-locked","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M764.340706,56 L990.223059,394.823529 L1919.95482,394.823529 L1919.95482,959.529412 L1807.01365,959.529412 L1807.01365,507.764706 L225.837176,507.764706 L225.837176,394.823529 L854.467765,394.823529 L703.917176,168.941176 L112.896,168.941176 L112.896,1580.70588 C112.896,1611.87765 138.307765,1637.17647 169.366588,1637.17647 L169.366588,1637.17647 L1127.10776,1637.17647 L1127.10776,1750.11765 L169.366588,1750.11765 C75.9642353,1750.11765 -0.0451764706,1674.10824 -0.0451764706,1580.70588 L-0.0451764706,1580.70588 L-0.0451764706,56 L764.340706,56 Z M1807.05882,1411.29412 L1807.05882,1693.64706 C1807.05882,1724.81882 1781.64706,1750.11765 1750.58824,1750.11765 L1411.76471,1750.11765 C1380.70588,1750.11765 1355.29412,1724.81882 1355.29412,1693.64706 L1355.29412,1411.29412 L1807.05882,1411.29412 Z M1581.17647,1072.47059 C1643.52,1072.47059 1694.11765,1123.18118 1694.11765,1185.41176 L1694.11765,1298.35294 L1468.23529,1298.35294 L1468.23529,1185.41176 C1468.23529,1123.18118 1518.83294,1072.47059 1581.17647,1072.47059 Z M1807.05882,1185.41176 C1807.05882,1060.83765 1705.75059,959.529412 1581.17647,959.529412 C1456.60235,959.529412 1355.29412,1060.83765 1355.29412,1185.41176 L1355.29412,1298.35294 L1242.35294,1298.35294 L1242.35294,1693.64706 C1242.35294,1787.04941 1318.36235,1863.05882 1411.76471,1863.05882 L1750.58824,1863.05882 C1843.99059,1863.05882 1920,1787.04941 1920,1693.64706 L1920,1298.35294 L1807.05882,1298.35294 L1807.05882,1185.41176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFileLockedSolid":{"variant":"Solid","glyphName":"file-locked","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M764.611765,56 L990.494118,394.823529 L225.882353,394.823529 L225.882353,507.764706 L1920,507.764706 L1920,1011.82118 C1920,1035.65176 1889.16706,1042.54118 1877.64706,1021.76 C1819.59529,917.515294 1708.34824,846.588235 1581.17647,846.588235 C1394.82353,846.588235 1242.35294,999.058824 1242.35294,1185.41176 L1242.35294,1185.41176 L1174.58824,1185.41176 C1149.62824,1185.41176 1129.41176,1205.62824 1129.41176,1230.58824 L1129.41176,1230.58824 L1129.41176,1693.64706 C1129.41176,1712.84706 1131.67059,1732.04706 1135.05882,1750.11765 L1135.05882,1750.11765 L169.411765,1750.11765 C75.8964706,1750.11765 0,1674.33412 0,1580.70588 L0,1580.70588 L0,56 L764.611765,56 Z M1581.17647,1072.47059 C1643.40706,1072.47059 1694.11765,1123.18118 1694.11765,1185.41176 L1694.11765,1298.35294 L1468.23529,1298.35294 L1468.23529,1185.41176 C1468.23529,1123.18118 1518.94588,1072.47059 1581.17647,1072.47059 Z M1807.05882,1185.41176 C1807.05882,1060.83765 1705.86353,959.529412 1581.17647,959.529412 C1456.48941,959.529412 1355.29412,1060.83765 1355.29412,1185.41176 L1355.29412,1298.35294 L1242.35294,1298.35294 L1242.35294,1693.64706 C1242.35294,1787.04941 1318.36235,1863.05882 1411.76471,1863.05882 L1750.58824,1863.05882 C1843.99059,1863.05882 1920,1787.04941 1920,1693.64706 L1920,1298.35294 L1807.05882,1298.35294 L1807.05882,1185.41176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesCopyrightLine":{"variant":"Line","glyphName":"files-copyright","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M969.118383,733.000074 C1059.70534,732.940603 1124.52027,768.788696 1163.68471,839.072008 L1163.68471,839.072008 L1163.74412,839.072008 L1065.80377,890.215732 C1055.28051,868.431509 1042.48498,853.146691 1027.29742,844.409034 C1011.99013,835.671377 997.879305,831.302999 984.844297,831.302999 C919.550425,831.302999 886.843621,874.511917 886.843621,960.989224 C886.843621,1000.30823 895.154912,1031.72667 911.657759,1055.30582 C928.160606,1078.94535 952.556119,1090.73492 984.844297,1090.73492 C1027.41716,1090.73492 1057.49247,1069.78869 1074.89199,1027.83676 L1074.89199,1027.83676 L1165,1073.6786 C1145.86656,1109.52579 1119.31851,1137.71301 1085.35583,1158.17987 C1051.39405,1178.76747 1013.96353,1189 973.004848,1189 C907.711876,1189 855.093804,1168.88906 815.032695,1128.67259 C775.031004,1088.57596 755,1032.6755 755,961.039684 C755,891.140228 775.210158,835.654256 815.75021,794.659262 C856.169626,753.545327 907.352669,733.000074 969.118383,733.000074 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesCopyrightSolid":{"variant":"Solid","glyphName":"files-copyright","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M969.118383,733.000074 C1059.70534,732.940603 1124.52027,768.788696 1163.68471,839.072008 L1163.68471,839.072008 L1163.74412,839.072008 L1065.80377,890.215732 C1055.28051,868.431509 1042.48498,853.146691 1027.29742,844.409034 C1011.99013,835.671377 997.879305,831.302999 984.844297,831.302999 C919.550425,831.302999 886.843621,874.511917 886.843621,960.989224 C886.843621,1000.30823 895.154912,1031.72667 911.657759,1055.30582 C928.160606,1078.94535 952.556119,1090.73492 984.844297,1090.73492 C1027.41716,1090.73492 1057.49247,1069.78869 1074.89199,1027.83676 L1074.89199,1027.83676 L1165,1073.6786 C1145.86656,1109.52579 1119.31851,1137.71301 1085.35583,1158.17987 C1051.39405,1178.76747 1013.96353,1189 973.004848,1189 C907.711876,1189 855.093804,1168.88906 815.032695,1128.67259 C775.031004,1088.57596 755,1032.6755 755,961.039684 C755,891.140228 775.210158,835.654256 815.75021,794.659262 C856.169626,753.545327 907.352669,733.000074 969.118383,733.000074 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesCreativeCommonsLine":{"variant":"Line","glyphName":"files-creative-commons","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M760.807762,727.000045 C852.90912,726.953694 918.841145,762.779203 958.698313,834.501933 L958.698313,834.501933 L958.651949,834.524671 L859.021276,886.335887 C848.376835,864.217909 835.316225,848.697458 819.861315,839.868982 C804.360042,831.039631 789.974126,826.57948 776.680821,826.57948 C710.307028,826.57948 677.072893,870.374667 677.072893,958.011391 C677.072893,997.83442 685.509365,1029.66416 702.312325,1053.57144 C719.13803,1077.50234 743.912074,1089.44418 776.680821,1089.44418 C820.093135,1089.44418 850.631168,1068.16226 868.36403,1025.69113 L868.36403,1025.69113 L960,1072.15803 C940.524557,1108.47241 913.519799,1136.97977 878.984852,1157.79731 C844.495393,1178.61484 806.4053,1189 764.781932,1189 C698.384519,1189 644.792278,1168.67046 604.075192,1127.89593 C563.358981,1087.23684 543,1030.54744 543,958.011391 C543,887.195559 563.5908,831.016893 604.749655,789.405431 C645.884891,747.816708 697.942751,727.000045 760.807762,727.000045 Z M1190.83198,727.000045 C1282.91996,726.953693 1348.48836,762.781431 1387.41996,834.506873 L1387.41996,834.506873 L1289.10279,886.319173 C1278.5044,864.200359 1265.3951,848.67932 1249.93847,839.850511 C1234.36548,831.020827 1219.53702,826.560507 1205.4286,826.560507 C1139.0238,826.560507 1105.78684,870.35735 1105.78684,957.997388 C1105.78684,997.821922 1114.22338,1029.65286 1131.02821,1053.56105 C1147.83304,1077.49286 1172.63258,1089.43514 1205.40497,1089.43514 C1248.77662,1089.43514 1279.31717,1068.15242 1297.02839,1025.67968 L1297.02839,1025.67968 L1390,1072.14834 C1369.66238,1108.46409 1342.18918,1136.97253 1307.72038,1157.79086 C1273.71615,1178.46925 1234.62182,1189.27372 1194.80659,1188.99473 C1127.49541,1188.99473 1073.71174,1168.66442 1033.50106,1127.88835 C993.128524,1087.22772 973,1030.53618 973,957.997388 C973,887.178878 993.570342,830.998088 1034.78014,789.385052 C1075.9427,747.818369 1127.93723,727.000045 1190.83198,727.000045 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesCreativeCommonsSolid":{"variant":"Solid","glyphName":"files-creative-commons","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M760.807762,727.000045 C852.90912,726.953694 918.841145,762.779203 958.698313,834.501933 L958.698313,834.501933 L958.651949,834.524671 L859.021276,886.335887 C848.376835,864.217909 835.316225,848.697458 819.861315,839.868982 C804.360042,831.039631 789.974126,826.57948 776.680821,826.57948 C710.307028,826.57948 677.072893,870.374667 677.072893,958.011391 C677.072893,997.83442 685.509365,1029.66416 702.312325,1053.57144 C719.13803,1077.50234 743.912074,1089.44418 776.680821,1089.44418 C820.093135,1089.44418 850.631168,1068.16226 868.36403,1025.69113 L868.36403,1025.69113 L960,1072.15803 C940.524557,1108.47241 913.519799,1136.97977 878.984852,1157.79731 C844.495393,1178.61484 806.4053,1189 764.781932,1189 C698.384519,1189 644.792278,1168.67046 604.075192,1127.89593 C563.358981,1087.23684 543,1030.54744 543,958.011391 C543,887.195559 563.5908,831.016893 604.749655,789.405431 C645.884891,747.816708 697.942751,727.000045 760.807762,727.000045 Z M1190.83198,727.000045 C1282.91996,726.953693 1348.48836,762.781431 1387.41996,834.506873 L1387.41996,834.506873 L1289.10279,886.319173 C1278.5044,864.200359 1265.3951,848.67932 1249.93847,839.850511 C1234.36548,831.020827 1219.53702,826.560507 1205.4286,826.560507 C1139.0238,826.560507 1105.78684,870.35735 1105.78684,957.997388 C1105.78684,997.821922 1114.22338,1029.65286 1131.02821,1053.56105 C1147.83304,1077.49286 1172.63258,1089.43514 1205.40497,1089.43514 C1248.77662,1089.43514 1279.31717,1068.15242 1297.02839,1025.67968 L1297.02839,1025.67968 L1390,1072.14834 C1369.66238,1108.46409 1342.18918,1136.97253 1307.72038,1157.79086 C1273.71615,1178.46925 1234.62182,1189.27372 1194.80659,1188.99473 C1127.49541,1188.99473 1073.71174,1168.66442 1033.50106,1127.88835 C993.128524,1087.22772 973,1030.53618 973,957.997388 C973,887.178878 993.570342,830.998088 1034.78014,789.385052 C1075.9427,747.818369 1127.93723,727.000045 1190.83198,727.000045 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesFairUseLine":{"variant":"Line","glyphName":"files-fair-use","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M1113,721 L1113,805.047059 L893.111732,805.047059 L893.111732,910.552941 L1083.50279,910.552941 L1083.50279,988.341176 L893.111732,988.341176 L893.111732,1177 L793,1177 L793,721 L1113,721 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesFairUseSolid":{"variant":"Solid","glyphName":"files-fair-use","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M1113,721 L1113,805.047059 L893.111732,805.047059 L893.111732,910.552941 L1083.50279,910.552941 L1083.50279,988.341176 L893.111732,988.341176 L893.111732,1177 L793,1177 L793,721 L1113,721 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesObtainedPermissionLine":{"variant":"Line","glyphName":"files-obtained-permission","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M792.537449,756.191388 C800.543984,748.139643 811.551091,743.257495 822.908014,744.092479 L822.908014,744.092479 L1096.21054,744.092479 C1107.3003,744.092479 1117.2279,747.984336 1125.94492,756.191388 C1134.59515,764.399275 1139,774.124327 1139,785.814929 L1139,785.814929 L1139,1053.87132 L1063.02558,1053.87132 L1063.02558,1372 L855.974419,1372 L855.974419,1053.87132 L780,1053.87132 L780,785.814929 C780,774.102617 784.242044,764.376731 792.537449,756.191388 Z M960.023036,525 C1022.04593,525 1053,555.836569 1053,617.5557 C1053,678.518009 1022.0007,709 960.022199,709 C898.043699,709 867,678.518009 867,617.577443 L867,617.577443 L867,617.533121 C867,555.880891 897.999302,525 960.023036,525 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesObtainedPermissionSolid":{"variant":"Solid","glyphName":"files-obtained-permission","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M792.537449,756.191388 C800.543984,748.139643 811.551091,743.257495 822.908014,744.092479 L822.908014,744.092479 L1096.21054,744.092479 C1107.3003,744.092479 1117.2279,747.984336 1125.94492,756.191388 C1134.59515,764.399275 1139,774.124327 1139,785.814929 L1139,785.814929 L1139,1053.87132 L1063.02558,1053.87132 L1063.02558,1372 L855.974419,1372 L855.974419,1053.87132 L780,1053.87132 L780,785.814929 C780,774.102617 784.242044,764.376731 792.537449,756.191388 Z M960.023036,525 C1022.04593,525 1053,555.836569 1053,617.5557 C1053,678.518009 1022.0007,709 960.022199,709 C898.043699,709 867,678.518009 867,617.577443 L867,617.577443 L867,617.533121 C867,555.880891 897.999302,525 960.023036,525 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesPublicDomainLine":{"variant":"Line","glyphName":"files-public-domain","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M800.156615,711 C913.347852,711 970,762.572028 970,865.418372 C970,883.075531 967.274014,900.169766 961.823088,916.322648 C956.372163,932.475531 946.916006,948.677683 933.511147,964.886124 C920.106288,981.037959 899.998476,994.365738 873.160493,1004.64199 C846.379039,1014.86268 814.590523,1020.24138 777.851474,1020.24138 L777.851474,1020.24138 L687.199871,1020.24138 L687.199871,1167 L571,1167 L571,711 Z M686,797 L686,935 L785.10066,935 C809.039419,935 826.999797,928.490477 839.011234,915.266663 C851.021619,902.042848 857,885.922879 857,866.283 C857,820.16924 832.056082,797.437889 782.139857,797.437889 L782.139857,797.437889 L686.386923,797.437889 L686,797 Z M1182.20509,711 C1255.76881,711 1313.50609,729.769379 1355.35924,766.975834 C1397.10122,804.18229 1418,861.641434 1418,938.977986 C1418,1016.39945 1397.10122,1073.88585 1355.35924,1111.03674 C1313.50609,1148.2432 1255.79713,1167 1182.20509,1167 L1182.20509,1167 L1003.03356,1167 L1003,1166.72116 L1003,711 Z M1118,806 L1118.18524,806.027378 L1118.18524,1072 L1184.82012,1072 C1225.55121,1072 1255.07811,1059.80843 1273.45524,1035.63801 C1291.80516,1011.52339 1301,979.271233 1301,938.932082 C1301,898.592931 1291.84492,866.313396 1273.495,842.170348 C1255.14509,818.112591 1225.15667,806.083187 1183.4523,806.083187 L1183.4523,806.083187 L1118,806 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilesPublicDomainSolid":{"variant":"Solid","glyphName":"files-public-domain","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z M800.156615,711 C913.347852,711 970,762.572028 970,865.418372 C970,883.075531 967.274014,900.169766 961.823088,916.322648 C956.372163,932.475531 946.916006,948.677683 933.511147,964.886124 C920.106288,981.037959 899.998476,994.365738 873.160493,1004.64199 C846.379039,1014.86268 814.590523,1020.24138 777.851474,1020.24138 L777.851474,1020.24138 L687.199871,1020.24138 L687.199871,1167 L571,1167 L571,711 Z M686,797 L686,935 L785.10066,935 C809.039419,935 826.999797,928.490477 839.011234,915.266663 C851.021619,902.042848 857,885.922879 857,866.283 C857,820.16924 832.056082,797.437889 782.139857,797.437889 L782.139857,797.437889 L686.386923,797.437889 L686,797 Z M1182.20509,711 C1255.76881,711 1313.50609,729.769379 1355.35924,766.975834 C1397.10122,804.18229 1418,861.641434 1418,938.977986 C1418,1016.39945 1397.10122,1073.88585 1355.35924,1111.03674 C1313.50609,1148.2432 1255.79713,1167 1182.20509,1167 L1182.20509,1167 L1003.03356,1167 L1003,1166.72116 L1003,711 Z M1118,806 L1118.18524,806.027378 L1118.18524,1072 L1184.82012,1072 C1225.55121,1072 1255.07811,1059.80843 1273.45524,1035.63801 C1291.80516,1011.52339 1301,979.271233 1301,938.932082 C1301,898.592931 1291.84492,866.313396 1273.495,842.170348 C1255.14509,818.112591 1225.15667,806.083187 1183.4523,806.083187 L1183.4523,806.083187 L1118,806 Z\" stroke=\"#979797\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilmstripLine":{"variant":"Line","glyphName":"filmstrip","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1813.33333,1557.19467 C1255.57333,1684.02133 664.853333,1684.02133 106.666667,1557.19467 L106.666667,468.448 C664.426667,341.621333 1255.14667,341.514667 1813.33333,468.448 L1813.33333,1557.19467 Z M1879.04,374.261333 C1278.72,230.688 640.64,230.794667 40.96,374.261333 L0,384.074667 L0,1641.568 L40.96,1651.38133 C341.013333,1723.168 650.24,1759.43467 960,1759.43467 C1269.86667,1759.43467 1579.2,1723.168 1879.04,1651.38133 L1920,1641.568 L1920,384.074667 L1879.04,374.261333 Z M853.333333,786.986667 L1229.65333,1012.8 L853.333333,1238.61333 L853.333333,786.986667 Z M746.666667,1426.98667 L1437.01333,1012.8 L746.666667,598.613333 L746.666667,1426.98667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilmstripSolid":{"variant":"Solid","glyphName":"filmstrip","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M746.666667,1374.30933 L746.666667,545.936 L1437.01333,960.122667 L746.666667,1374.30933 Z M1879.04,321.616 C1278.93333,178.149333 640.64,178.149333 40.96,321.616 L0,331.429333 L0,1588.92267 L40.96,1598.736 C341.013333,1670.416 650.24,1706.78933 960,1706.78933 C1269.86667,1706.78933 1579.2,1670.416 1879.04,1598.736 L1920,1588.92267 L1920,331.429333 L1879.04,321.616 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilterLine":{"variant":"Line","glyphName":"filter","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 0.0110330244L741.970889 984.818788 741.970889 1658.38493 1244.63548 1909.71722 1244.63548 984.818788 1919.9669 88.275228 1831.81304 21.9667515 1134.30524 947.858157 1134.30524 1731.20289 852.301133 1590.20084 852.301133 947.858157 221.322469 110.341277 1483.61079 110.341277 1483.61079 0.0110330244z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFilterSolid":{"variant":"Solid","glyphName":"filter","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1672.85333 0L1171.84 640 748.053333 640 426.56 213.333333 1063.78667 213.333333 1241.17333 0 0 0 746.666667 991.146667 746.666667 1600 1173.22667 1920 1173.22667 991.146667 1920 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFlagLine":{"variant":"Line","glyphName":"flag","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1848.71529,357.684706 C1834.82353,342.098824 1813.36471,335.548235 1792.92235,340.517647 C1373.12,445.552941 1162.59765,321.430588 959.077647,201.487059 C756.461176,82.3341176 547.52,-40.6588235 168.941176,103.905882 L168.941176,0 L56,0 L56,1920 L168.941176,1920 L168.941176,227.011765 C521.882353,78.0423529 691.068235,174.72 901.703529,298.842353 C1097.54353,414.155294 1317.55294,543.924706 1713.52471,472.997647 C1542.64471,848.527059 1327.60471,855.868235 1060.61176,865.129412 C826.823529,873.148235 561.863529,882.409412 298.371765,1145.90118 L378.221176,1225.86353 C610.315294,993.769412 841.28,985.863529 1064.56471,977.957647 C1355.38824,967.905882 1656.03765,957.515294 1859.44471,415.171765 C1866.78588,395.52 1862.72,373.383529 1848.71529,357.684706\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFlagSolid":{"variant":"Solid","glyphName":"flag","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M168.941176,-0.0112941176 L168.941176,1919.98871 L56,1919.98871 L56,-0.0112941176 L168.941176,-0.0112941176 Z M281.882353,68.4423529 C590.550588,-13.2141176 778.032941,94.8705882 959.077647,201.487059 C1162.48471,321.430588 1372.66824,445.552941 1792.92235,340.517647 C1813.13882,335.548235 1834.59765,341.985882 1848.71529,357.684706 C1862.60706,373.383529 1866.78588,395.52 1859.55765,415.171765 C1656.15059,957.515294 1355.38824,967.905882 1064.56471,977.957647 C841.28,985.863529 610.315294,993.769412 378.221176,1225.86353 L378.221176,1225.86353 L281.882353,1322.20235 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFolderLockedLine":{"variant":"Line","glyphName":"folder-locked","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M764.340706,56 L990.223059,394.823529 L1919.95482,394.823529 L1919.95482,959.529412 L1807.01365,959.529412 L1807.01365,507.764706 L225.837176,507.764706 L225.837176,394.823529 L854.467765,394.823529 L703.917176,168.941176 L112.896,168.941176 L112.896,1580.70588 C112.896,1611.87765 138.307765,1637.17647 169.366588,1637.17647 L169.366588,1637.17647 L1127.10776,1637.17647 L1127.10776,1750.11765 L169.366588,1750.11765 C75.9642353,1750.11765 -0.0451764706,1674.10824 -0.0451764706,1580.70588 L-0.0451764706,1580.70588 L-0.0451764706,56 L764.340706,56 Z M1807.05882,1411.29412 L1807.05882,1693.64706 C1807.05882,1724.81882 1781.64706,1750.11765 1750.58824,1750.11765 L1411.76471,1750.11765 C1380.70588,1750.11765 1355.29412,1724.81882 1355.29412,1693.64706 L1355.29412,1411.29412 L1807.05882,1411.29412 Z M1581.17647,1072.47059 C1643.52,1072.47059 1694.11765,1123.18118 1694.11765,1185.41176 L1694.11765,1298.35294 L1468.23529,1298.35294 L1468.23529,1185.41176 C1468.23529,1123.18118 1518.83294,1072.47059 1581.17647,1072.47059 Z M1807.05882,1185.41176 C1807.05882,1060.83765 1705.75059,959.529412 1581.17647,959.529412 C1456.60235,959.529412 1355.29412,1060.83765 1355.29412,1185.41176 L1355.29412,1298.35294 L1242.35294,1298.35294 L1242.35294,1693.64706 C1242.35294,1787.04941 1318.36235,1863.05882 1411.76471,1863.05882 L1750.58824,1863.05882 C1843.99059,1863.05882 1920,1787.04941 1920,1693.64706 L1920,1298.35294 L1807.05882,1298.35294 L1807.05882,1185.41176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFolderLockedSolid":{"variant":"Solid","glyphName":"folder-locked","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M764.611765,56 L990.494118,394.823529 L225.882353,394.823529 L225.882353,507.764706 L1920,507.764706 L1920,1011.82118 C1920,1035.65176 1889.16706,1042.54118 1877.64706,1021.76 C1819.59529,917.515294 1708.34824,846.588235 1581.17647,846.588235 C1394.82353,846.588235 1242.35294,999.058824 1242.35294,1185.41176 L1242.35294,1185.41176 L1174.58824,1185.41176 C1149.62824,1185.41176 1129.41176,1205.62824 1129.41176,1230.58824 L1129.41176,1230.58824 L1129.41176,1693.64706 C1129.41176,1712.84706 1131.67059,1732.04706 1135.05882,1750.11765 L1135.05882,1750.11765 L169.411765,1750.11765 C75.8964706,1750.11765 0,1674.33412 0,1580.70588 L0,1580.70588 L0,56 L764.611765,56 Z M1581.17647,1072.47059 C1643.40706,1072.47059 1694.11765,1123.18118 1694.11765,1185.41176 L1694.11765,1298.35294 L1468.23529,1298.35294 L1468.23529,1185.41176 C1468.23529,1123.18118 1518.94588,1072.47059 1581.17647,1072.47059 Z M1807.05882,1185.41176 C1807.05882,1060.83765 1705.86353,959.529412 1581.17647,959.529412 C1456.48941,959.529412 1355.29412,1060.83765 1355.29412,1185.41176 L1355.29412,1298.35294 L1242.35294,1298.35294 L1242.35294,1693.64706 C1242.35294,1787.04941 1318.36235,1863.05882 1411.76471,1863.05882 L1750.58824,1863.05882 C1843.99059,1863.05882 1920,1787.04941 1920,1693.64706 L1920,1298.35294 L1807.05882,1298.35294 L1807.05882,1185.41176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFolderLine":{"variant":"Line","glyphName":"folder","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1807.05882,1637.70588 C1807.05882,1668.87765 1781.64706,1694.17647 1750.58824,1694.17647 L169.411765,1694.17647 C138.352941,1694.17647 112.941176,1668.87765 112.941176,1637.70588 L112.941176,225.941176 L703.849412,225.941176 L854.4,451.823529 L225.882353,451.823529 L225.882353,564.764706 L1807.05882,564.764706 L1807.05882,1637.70588 Z M990.268235,451.823529 L764.385882,113 L-5.68434189e-14,113 L-5.68434189e-14,1637.70588 C-5.68434189e-14,1731.10824 76.0094118,1807.11765 169.411765,1807.11765 L1750.58824,1807.11765 C1843.99059,1807.11765 1920,1731.10824 1920,1637.70588 L1920,451.823529 L990.268235,451.823529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFolderSolid":{"variant":"Solid","glyphName":"folder","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M225.882353,564.764706 L225.882353,451.823529 L990.268235,451.823529 L764.385882,113 L0,113 L0,1637.70588 C0,1731.10824 76.0094118,1807.11765 169.411765,1807.11765 L1750.58824,1807.11765 C1843.99059,1807.11765 1920,1731.10824 1920,1637.70588 L1920,564.764706 L225.882353,564.764706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconForwardLine":{"variant":"Line","glyphName":"forward","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1246.2464,64 L1155.7504,154.496 L1633.7024,632.448 L1042.8544,632.448 C467.8784,632.448 0.0384,1100.416 0.0384,1675.392 L0.0384,1784.448 L128.0384,1784.448 L128.0384,1675.392 C128.0384,1170.816 538.4064,760.448 1042.8544,760.448 L1633.7024,760.448 L1155.7504,1238.528 L1246.2464,1329.024 L1878.6944,696.448 L1246.2464,64 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconForwardSolid":{"variant":"Solid","glyphName":"forward","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1270.776,60 L1101.096,229.68 L1441.536,570.12 L1037.616,570.12 C465.456,570.12 -0.024,1035.6 -0.024,1607.76 L-0.024,1770.12 L239.976,1770.12 L239.976,1607.76 C239.976,1167.96 597.936,810.12 1037.616,810.12 L1452.096,810.12 L1101.096,1161.24 L1270.776,1330.92 L1906.176,695.4 L1270.776,60 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFullScreenLine":{"variant":"Line","glyphName":"full-screen","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1158.513 -0.0123680261L1158.513 123.667893 1709.01384 123.667893 123.680261 1708.87779 123.680261 1158.50063 0 1158.50063 0 1920 761.499365 1920 761.499365 1796.31974 211.122205 1796.31974 1796.33211 211.109837 1796.33211 761.610678 1920.01237 761.610678 1920.01237 -0.0123680261z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconFullScreenSolid":{"variant":"Solid","glyphName":"full-screen","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1146.61551 -0.0116195329L1146.61551 232.379039 1523.43696 232.379039 232.390658 1523.30915 232.390658 1146.60389 0 1146.60389 0 1920 773.628502 1920 773.628502 1687.60934 396.690854 1687.60934 1687.73716 396.679234 1687.73716 773.500687 1920.01162 773.500687 1920.01162 -0.0116195329z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGithubLine":{"variant":"Line","glyphName":"github","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1873.25625,674.211853 C1873.25625,551.744383 1837.5276,443.589895 1766.93124,352.331182 C1782.64323,294.648788 1799.43139,180.360165 1746.16127,38.6293575 C1740.56522,23.5630606 1728.29695,11.8328723 1713.01542,6.55966837 C1693.8597,-0.00493241863 1590.87079,-23.7881582 1384.46253,117.512183 C1300.3065,95.3432036 1211.52296,83.9358645 1119.61855,83.3977825 C1028.03699,83.9358645 939.253454,95.3432036 855.312657,117.512183 C648.689157,-23.6805418 545.700256,-0.00493241863 526.43692,6.55966837 C511.15539,11.7252559 498.88712,23.5630606 493.291066,38.7369739 C440.128562,180.360165 456.916721,294.648788 472.736333,352.331182 C402.032354,443.912744 366.19609,551.959616 366.19609,674.211853 C366.19609,1097.03671 588.10112,1231.34199 798.383578,1279.87699 C751.893291,1330.77955 703.143059,1405.03487 692.704267,1499.41446 C620.924124,1525.45763 435.070591,1577.54397 367.595104,1455.39935 C364.581844,1449.80329 294.200715,1317.75796 152.577524,1307.31917 C127.502901,1308.50295 67.9910285,1311.62383 51.5257183,1361.66546 C33.0156964,1417.62599 91.0209394,1459.38115 119.431671,1479.07496 C119.969753,1479.39781 175.176969,1511.03703 213.273177,1611.12029 C214.241725,1615.74779 237.056403,1725.83938 348.224151,1792.66916 C435.716289,1845.4012 550.542995,1856.16284 689.475775,1824.95409 C689.475775,1848.41446 689.152926,1873.16624 689.04531,1888.34015 L688.72246,1919.44129 L796.338867,1919.44129 L796.5541,1889.63155 C798.491195,1728.09932 798.598811,1724.97845 765.775807,1707.97505 C753.292304,1701.51807 738.764089,1700.01144 725.419655,1704.3161 C589.177284,1745.31795 478.440002,1744.3494 405.368462,1701.51807 C334.879716,1659.97814 319.382954,1592.61027 316.477311,1581.84862 C312.60312,1571.1946 308.40608,1561.18627 304.20904,1551.60841 C431.1964,1697.32103 676.346574,1628.76938 767.49767,1585.39997 C786.330541,1576.57542 798.275962,1557.63493 798.275962,1536.86497 C798.275962,1387.49339 946.57137,1292.68334 948.078,1291.71479 C967.448953,1279.55414 977.026813,1256.52423 972.076458,1234.35525 C967.126104,1212.07865 948.723698,1195.29049 926.016636,1192.60008 C702.389744,1165.8036 473.812497,1083.26181 473.812497,674.211853 C473.812497,567.886844 507.388816,475.229118 573.572906,399.036702 C586.486874,383.970405 590.253449,362.985206 583.150766,344.475184 C573.357673,319.077712 546.668804,231.69319 582.827917,109.656186 C618.556563,113.745609 693.672815,133.977494 813.987957,219.963002 C827.332392,229.540862 844.4434,232.338889 860.370629,227.819 C940.8677,204.251007 1030.7274,191.552271 1119.61855,191.014189 C1208.94017,191.552271 1298.69225,204.251007 1379.40456,227.819 C1395.33178,232.338889 1412.33518,229.540862 1425.78723,219.963002 C1546.9633,133.331795 1622.18717,113.530376 1656.5168,109.333336 C1692.99876,231.477958 1666.3099,319.077712 1656.5168,344.475184 C1649.3065,362.985206 1653.07308,384.078022 1666.09466,399.036702 C1732.17114,475.013885 1765.63984,567.563995 1765.63984,674.211853 C1765.63984,1083.36943 1536.52451,1165.37313 1312.46715,1191.73915 C1291.48195,1194.21433 1273.83286,1208.63493 1267.48349,1228.7592 C1261.02651,1248.77585 1266.94541,1270.83721 1282.54979,1285.04258 C1288.89916,1290.74625 1297.50847,1297.52608 1307.62441,1305.27446 C1358.95744,1344.55445 1444.83533,1410.30807 1444.83533,1564.84523 C1444.83533,1650.29266 1443.43632,1919.11844 1443.43632,1919.11844 L1551.05272,1919.65652 C1551.05272,1919.65652 1552.45174,1650.40028 1552.45174,1564.84523 C1552.45174,1423.00681 1495.95312,1334.86897 1441.60684,1278.90844 C1651.99691,1230.48106 1873.25625,1096.39102 1873.25625,674.211853\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGithubSolid":{"variant":"Solid","glyphName":"github","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1821.62933,637.76 C1821.62933,507.733333 1778.00267,401.386667 1705.576,318.08 C1717.20267,287.893333 1755.92267,166.72 1694.376,2.77333333 C1694.376,2.77333333 1599.656,-29.2266667 1383.976,124.906667 C1293.84267,98.4533333 1197.20267,85.2266667 1101.20267,84.8 C1005.20267,85.2266667 908.562667,98.4533333 818.536,124.906667 C602.749333,-29.2266667 507.922667,2.77333333 507.922667,2.77333333 C446.376,166.72 485.202667,287.893333 496.829333,318.08 C424.509333,401.386667 380.562667,507.733333 380.562667,637.76 C380.562667,1094.29333 644.242667,1196.48 895.016,1226.56 C895.016,1226.56 714.749333,1338.24 714.749333,1525.97333 C650.429333,1556.48 378.216,1649.92 277.416,1467.84 C277.416,1467.84 217.789333,1353.49333 104.402667,1345.06667 C104.402667,1345.06667 -5.89066667,1343.57333 96.616,1417.49333 C96.616,1417.49333 170.642667,1454.18667 222.056,1591.78667 C222.056,1591.78667 279.229333,1881.70667 711.122667,1751.46667 C715.496,1753.70667 712.722667,1891.73333 712.722667,1920 L1489.896,1920 C1489.896,1920 1491.176,1642.98667 1491.176,1554.88 C1491.176,1338.24 1346.536,1262.4 1305.896,1225.6 C1557.52267,1196.16 1821.62933,1095.46667 1821.62933,637.76\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGradebookExportLine":{"variant":"Line","glyphName":"gradebook-export","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1016.08141 L409.185882,1425.15435 L489.035294,1345.41788 L216.169412,1072.43906 L1352.58353,1072.43906 L1352.58353,959.610824 L216.169412,959.610824 L489.035294,686.744941 L409.185882,606.895529 L0,1016.08141 Z M1465.59247,305.32 L1781.03718,620.764706 L1465.59247,620.764706 L1465.59247,305.32 Z M1867.776,547.691765 L1538.55247,218.581176 C1507.04188,187.070588 1463.33365,169 1418.83482,169 L675.004235,169 L675.004235,846.647059 L787.945412,846.647059 L787.945412,281.941176 L1352.65129,281.941176 L1352.65129,733.705882 L1804.416,733.705882 L1804.416,1637.23529 L787.945412,1637.23529 L787.945412,1185.47059 L675.004235,1185.47059 L675.004235,1750.17647 L1917.35718,1750.17647 L1917.35718,667.522353 C1917.35718,623.023529 1899.28659,579.315294 1867.776,547.691765 L1867.776,547.691765 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGradebookExportSolid":{"variant":"Solid","glyphName":"gradebook-export","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1352.68518,168.954824 L1352.68518,733.660706 L1917.39106,733.660706 L1917.39106,1750.13129 L675.038118,1750.13129 L675.038118,1072.48424 L216.158118,1072.48424 L489.136941,1345.46306 L409.174588,1425.31247 L-0.0112941176,1016.12659 L409.174588,606.827765 L489.136941,686.677176 L216.158118,959.543059 L675.038118,959.543059 L675.038118,168.954824 L1352.68518,168.954824 Z M1352.68518,959.543059 L787.979294,959.543059 L787.979294,1072.48424 L1352.68518,1072.48424 L1352.68518,959.543059 Z\"/>\n        <path d=\"M1465.64894 620.776L1900.47247 620.776 1465.64894 185.839529z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconGradebookImportLine":{"variant":"Line","glyphName":"gradebook-import","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M807.18584,686.592055 L1080.05012,959.456333 L0,959.456333 L0,1072.39684 L1080.05012,1072.39684 L807.18584,1345.37406 L886.921842,1425.223 L1296.21826,1016.03953 L886.921842,606.856054 L807.18584,686.592055 Z M1870.41912,434.689537 L1541.19752,105.580885 C1509.68712,74.0704819 1465.97914,56 1421.48058,56 L451.773343,56 L451.773343,786.612173 L564.713855,786.612173 L564.713855,168.940512 L1355.29744,168.940512 L1355.29744,620.702561 L1807.05949,620.702561 L1807.05949,1750.10768 L564.713855,1750.10768 L564.713855,1241.87538 L451.773343,1241.87538 L451.773343,1863.04819 L1920,1863.04819 L1920,554.51942 C1920,509.343216 1902.38128,466.764643 1870.41912,434.689537 L1870.41912,434.689537 Z M1468.23795,192.319198 L1783.6808,507.762048 L1468.23795,507.762048 L1468.23795,192.319198 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGradebookImportSolid":{"variant":"Solid","glyphName":"gradebook-import","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1574.51294,138.514824 C1544.13176,108.246588 1507.76471,86.6748235 1468.23529,72.896 L1468.23529,507.832471 L1903.17176,507.832471 C1889.39294,468.303059 1867.93412,431.936 1837.55294,401.667765 L1574.51294,138.514824 Z M1355.29412,620.705882 L1355.29412,56 L451.764706,56 L451.764706,959.529412 L0,959.529412 L0,1072.47059 L451.764706,1072.47059 L451.764706,1863.05882 L1920,1863.05882 L1920,620.705882 L1355.29412,620.705882 Z M887.04,1425.29882 L807.190588,1345.44941 L1080.05647,1072.47059 L564.705882,1072.47059 L564.705882,959.529412 L1080.05647,959.529412 L807.190588,686.663529 L887.04,606.814118 L1296.22588,1016 L887.04,1425.29882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGradebookLine":{"variant":"Line","glyphName":"gradebook","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1801.44118,-3.41060513e-13 L1801.44118,1920 L219.029412,1920 L219.029412,1480.78431 L162.514706,1480.78431 C131.318588,1480.78431 106,1455.48549 106,1424.31373 C106,1393.14196 131.318588,1367.84314 162.514706,1367.84314 L162.514706,1367.84314 L219.029412,1367.84314 L219.029412,1029.01961 L162.514706,1029.01961 C131.318588,1029.01961 106,1003.72078 106,972.54902 C106,941.377255 131.318588,916.078431 162.514706,916.078431 L162.514706,916.078431 L219.029412,916.078431 L219.029412,577.254902 L162.514706,577.254902 C131.318588,577.254902 106,551.956078 106,520.784314 C106,489.612549 131.318588,464.313725 162.514706,464.313725 L162.514706,464.313725 L219.029412,464.313725 L219.029412,-3.41060513e-13 L1801.44118,-3.41060513e-13 Z M1688.41176,112.941176 L332.058824,112.941176 L332.058824,464.313725 L388.573529,464.313725 C419.769647,464.313725 445.088235,489.612549 445.088235,520.784314 C445.088235,551.956078 419.769647,577.254902 388.573529,577.254902 L388.573529,577.254902 L332.058824,577.254902 L332.058824,916.078431 L388.573529,916.078431 C419.769647,916.078431 445.088235,941.377255 445.088235,972.54902 C445.088235,1003.72078 419.769647,1029.01961 388.573529,1029.01961 L388.573529,1029.01961 L332.058824,1029.01961 L332.058824,1367.84314 L388.573529,1367.84314 C419.769647,1367.84314 445.088235,1393.14196 445.088235,1424.31373 C445.088235,1455.48549 419.769647,1480.78431 388.573529,1480.78431 L388.573529,1480.78431 L332.058824,1480.78431 L332.058824,1807.05882 L1688.41176,1807.05882 L1688.41176,112.941176 Z M1179.60784,338.823529 L1179.60784,451.764706 L671.372549,451.764706 L671.372549,1129.41176 L1349.01961,1129.41176 L1349.01961,734.117647 L1461.96078,734.117647 L1461.96078,1242.35294 L558.431373,1242.35294 L558.431373,338.823529 L1179.60784,338.823529 Z M1386.93396,414.640941 L1466.78337,494.490353 L1034.33161,926.942118 L809.465725,701.963294 L889.315137,622.113882 L1034.33161,767.243294 L1386.93396,414.640941 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGradebookSolid":{"variant":"Solid","glyphName":"gradebook","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M219.029412,0 L219.029412,225.882353 L219.029412,338.823529 L219.029412,464.313725 L162.514706,464.313725 C131.318588,464.313725 106,489.612549 106,520.784314 C106,551.956078 131.318588,577.254902 162.514706,577.254902 L219.029412,577.254902 L219.029412,916.078431 L162.514706,916.078431 C131.318588,916.078431 106,941.377255 106,972.54902 C106,1003.72078 131.318588,1029.01961 162.514706,1029.01961 L219.029412,1029.01961 L219.029412,1367.84314 L162.514706,1367.84314 C131.318588,1367.84314 106,1393.14196 106,1424.31373 C106,1455.48549 131.318588,1480.78431 162.514706,1480.78431 L219.029412,1480.78431 L219.029412,1920 L1801.44118,1920 L1801.44118,0 L219.029412,0 Z M1179.60784,338.823529 L1179.60784,451.764706 L671.372549,451.764706 L671.372549,1129.41176 L1349.01961,1129.41176 L1349.01961,734.117647 L1461.96078,734.117647 L1461.96078,1242.35294 L558.431373,1242.35294 L558.431373,338.823529 L1179.60784,338.823529 Z M1386.93396,414.640941 L1466.78337,494.490353 L1034.33161,926.942118 L809.465725,701.963294 L889.315137,622.113882 L1034.33161,767.243294 L1386.93396,414.640941 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGroupDarkNewLine":{"variant":"Line","glyphName":"group-dark-new","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M915.743529 213L915.743529 915.743529 213 915.743529 213 1003.58647 915.743529 1003.58647 915.743529 1706.33 1003.58647 1706.33 1003.58647 1003.58647 1706.33 1003.58647 1706.33 915.743529 1003.58647 915.743529 1003.58647 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGroupDarkNewSolid":{"variant":"Solid","glyphName":"group-dark-new","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M866.331875 213L866.331875 866.331875 213 866.331875 213 1052.99813 866.331875 1052.99813 866.331875 1706.33 1052.99813 1706.33 1052.99813 1052.99813 1706.33 1052.99813 1706.33 866.331875 1052.99813 866.331875 1052.99813 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGroupNewLine":{"variant":"Line","glyphName":"group-new","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M915.743529 213L915.743529 915.743529 213 915.743529 213 1003.58647 915.743529 1003.58647 915.743529 1706.33 1003.58647 1706.33 1003.58647 1003.58647 1706.33 1003.58647 1706.33 915.743529 1003.58647 915.743529 1003.58647 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGroupNewSolid":{"variant":"Solid","glyphName":"group-new","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M866.331875 213L866.331875 866.331875 213 866.331875 213 1052.99813 866.331875 1052.99813 866.331875 1706.33 1052.99813 1706.33 1052.99813 1052.99813 1706.33 1052.99813 1706.33 866.331875 1052.99813 866.331875 1052.99813 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGroupLine":{"variant":"Line","glyphName":"group","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1807.05882,1270.09129 C1738.39059,1318.54306 1618.33412,1386.64659 1463.15294,1428.66071 C1444.29176,1326.11012 1370.42824,1241.29129 1267.08706,1209.55482 C1175.37882,1181.31953 1081.97647,1161.216 987.557647,1147.88894 C1059.50118,1087.12659 1109.19529,1002.08188 1123.53882,904.726588 C1145.44941,903.936 1168.37647,903.484235 1194.57882,903.484235 C1360.60235,904.387765 1525.72235,929.799529 1685.53412,978.928941 C1758.15529,1001.29129 1807.05882,1066.68424 1807.05882,1141.79012 L1807.05882,1270.09129 Z M1355.29412,1608.91482 C1241.11059,1689.66776 1025.05412,1807.01365 734.117647,1807.01365 C604.687059,1807.01365 354.974118,1780.81129 112.941176,1608.91482 L112.941176,1480.16188 C112.941176,1405.16894 161.957647,1339.66306 234.691765,1317.30071 C397.101176,1267.60659 565.044706,1242.42071 734.117647,1242.42071 L742.588235,1242.42071 C909.176471,1243.21129 1074.40941,1268.51012 1233.99529,1317.52659 C1306.50353,1339.776 1355.29412,1405.16894 1355.29412,1480.16188 L1355.29412,1608.91482 Z M451.764706,847.013647 L451.764706,734.072471 C451.764706,578.439529 578.371765,451.719529 734.117647,451.719529 C889.863529,451.719529 1016.47059,578.439529 1016.47059,734.072471 L1016.47059,847.013647 C1016.47059,1002.75953 889.863529,1129.36659 734.117647,1129.36659 C578.371765,1129.36659 451.764706,1002.75953 451.764706,847.013647 L451.764706,847.013647 Z M1185.88235,112.896 C1261.10118,112.896 1332.02824,142.373647 1385.44941,195.794824 C1438.75765,249.216 1468.23529,320.030118 1468.23529,395.248941 L1468.23529,508.190118 C1468.23529,663.936 1341.62824,790.543059 1185.88235,790.543059 C1166.23059,790.543059 1147.48235,787.945412 1129.41176,784.105412 L1129.41176,734.072471 C1129.41176,577.648941 1037.36471,443.361882 905.223529,379.324235 C913.581176,231.258353 1035.67059,112.896 1185.88235,112.896 L1185.88235,112.896 Z M1718.73882,870.957176 C1627.36941,842.947765 1534.19294,822.731294 1438.98353,809.291294 C1525.15765,736.783059 1581.17647,629.488941 1581.17647,508.190118 L1581.17647,395.248941 C1581.17647,289.874824 1540.06588,190.599529 1465.29882,115.945412 C1390.53176,41.1783529 1291.36941,-0.0451764706 1185.88235,-0.0451764706 C985.185882,-0.0451764706 820.743529,150.957176 795.670588,345.103059 C775.454118,341.827765 755.237647,338.778353 734.117647,338.778353 C516.141176,338.778353 338.823529,516.208941 338.823529,734.072471 L338.823529,847.013647 C338.823529,968.312471 394.842353,1075.60659 481.129412,1148.22776 C386.823529,1161.44188 292.969412,1181.31953 201.6,1209.32894 C81.0917647,1246.37365 0,1355.24894 0,1480.16188 L0,1665.83718 L22.5882353,1682.77835 C297.825882,1889.12188 586.390588,1919.95482 734.117647,1919.95482 C1078.36235,1919.95482 1327.73647,1771.32424 1445.64706,1682.77835 L1468.23529,1665.83718 L1468.23529,1545.32894 C1673.44941,1494.73129 1823.88706,1399.296 1897.41176,1343.95482 L1920,1327.01365 L1920,1141.79012 C1920,1016.76424 1839.02118,907.888941 1718.73882,870.957176 L1718.73882,870.957176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconGroupSolid":{"variant":"Solid","glyphName":"group","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M735.385333,336.093725 C953.625073,336.093725 1131.36205,513.717567 1131.36205,732.070443 L1131.36205,732.070443 L1131.36205,845.206648 C1131.36205,967.167477 1074.79395,1074.98628 987.792207,1147.73286 C1081.92153,1161.64861 1175.14576,1182.69195 1266.10727,1212.33363 C1388.52065,1252.15758 1470.77067,1368.00905 1470.77067,1500.49155 L1470.77067,1500.49155 L1470.77067,1700.85577 L1443.95739,1717.48679 C1295.52268,1809.80593 1051.94044,1920.0006 735.385333,1920.0006 C560.589896,1920.0006 295.624904,1884.81524 26.7001444,1717.48679 L26.7001444,1717.48679 L0,1700.85577 L0,1511.46576 C0,1370.83746 89.2644659,1248.42408 221.973234,1206.67682 C307.391069,1179.97668 394.505947,1160.17784 482.299642,1147.16718 C395.750446,1074.4206 339.408615,966.828068 339.408615,845.206648 L339.408615,845.206648 L339.408615,732.070443 C339.408615,513.717567 517.032457,336.093725 735.385333,336.093725 Z M1183.40471,0 C1401.64445,0 1579.38142,177.623842 1579.38142,395.976718 L1579.38142,395.976718 L1579.38142,509.112923 C1579.38142,631.073752 1522.81332,739.005692 1435.81158,811.639136 C1529.9409,825.554889 1623.052,846.711359 1714.12664,876.239909 C1836.54002,916.290125 1918.79004,1032.02846 1918.79004,1164.51096 L1918.79004,1164.51096 L1918.79004,1364.87518 L1892.08989,1381.5062 C1814.47846,1429.81536 1710.28001,1482.53683 1583.90687,1522.24764 L1583.90687,1522.24764 L1583.90687,1500.52549 C1583.90687,1318.82874 1470.31812,1159.75924 1301.1795,1104.77504 C1264.74964,1092.89574 1227.64096,1082.1478 1189.6272,1072.53122 C1225.37824,1002.72619 1244.49826,925.114749 1244.49826,845.240589 L1244.49826,845.240589 L1244.49826,732.104383 C1244.49826,481.620825 1062.4621,274.129025 824.084118,231.929221 C886.761576,95.4869571 1023.65638,0 1183.40471,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHamburgerLine":{"variant":"Line","glyphName":"hamburger","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1468.41176 L1920,1581.35294 L0,1581.35294 L0,1468.41176 L1920,1468.41176 Z M1920,903.705882 L1920,1016.64706 L0,1016.64706 L0,903.705882 L1920,903.705882 Z M1920,339 L1920,451.941176 L0,451.941176 L0,339 L1920,339 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHamburgerSolid":{"variant":"Solid","glyphName":"hamburger","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1411.41176 L1920,1637.29412 L0,1637.29412 L0,1411.41176 L1920,1411.41176 Z M1920,846.705882 L1920,1072.58824 L0,1072.58824 L0,846.705882 L1920,846.705882 Z M1920,282 L1920,507.882353 L0,507.882353 L0,282 L1920,282 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHeartLine":{"variant":"Line","glyphName":"heart","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1692.48,910.647059 L959.717647,1598.00706 L228.536471,912.228235 C73.92,755.352941 73.92,500.105882 228.536471,343.230588 C303.077647,267.672941 402.24,225.997647 507.84,225.997647 L507.952941,225.997647 C613.44,225.997647 712.602353,267.672941 787.030588,343.230588 L787.143529,343.343529 C861.910588,419.127059 903.247059,520.209412 903.247059,627.729412 L1016.18824,627.729412 C1016.18824,520.209412 1057.41176,419.127059 1132.29176,343.230588 C1206.72,267.672941 1305.88235,225.997647 1411.48235,225.997647 L1411.59529,225.997647 C1517.08235,225.997647 1616.35765,267.672941 1690.78588,343.230588 C1845.40235,500.105882 1845.40235,755.352941 1692.48,910.647059 M1771.31294,263.945882 C1675.42588,166.590588 1547.57647,113.056471 1411.59529,113.056471 L1411.48235,113.056471 C1275.38824,113.056471 1147.65176,166.590588 1051.87765,263.832941 C1014.26824,301.894118 983.435294,344.811765 959.717647,391.230588 C936,344.811765 905.054118,301.894118 867.557647,263.945882 C771.783529,166.590588 644.047059,113.056471 507.952941,113.056471 L507.84,113.056471 C371.858824,113.056471 244.009412,166.590588 148.009412,263.945882 C-49.6376471,464.642353 -49.6376471,790.929412 149.703529,992.981176 L959.717647,1752.84941 L1771.31294,991.4 C1968.96,790.929412 1968.96,464.642353 1771.31294,263.945882\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHeartSolid":{"variant":"Solid","glyphName":"heart","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1771.73096,291.036727 C1675.70911,193.659271 1547.94356,140 1411.81846,140 L1411.70549,140 C1275.5804,140 1147.92781,193.659271 1052.1319,290.92376 C1014.51392,328.993601 983.560995,371.921018 959.837949,418.350408 C936.22787,371.921018 905.274943,328.993601 867.769937,291.036727 C771.86105,193.659271 644.208468,140 507.970403,140 L507.857437,140 C371.845305,140 244.079757,193.659271 148.057903,291.036727 C-49.6341478,491.665917 -49.6341478,818.140219 149.752407,1020.12501 L959.837949,1780.27919 L1771.73096,1018.54348 C1969.42301,818.140219 1969.42301,491.665917 1771.73096,291.036727\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHighlighterLine":{"variant":"Line","glyphName":"highlighter","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1809.88836,1806.67411 L1809.88836,1920 L110,1920 L110,1806.67411 L1809.88836,1806.67411 Z M477.538529,1391.22139 L621.009106,1486.86845 L560.719733,1580.02233 L326.815094,1580.02233 L477.538529,1391.22139 Z M616.816048,921.93888 L1006.77044,1182.13513 L974.019256,1233.58508 C958.266957,1260.66997 928.008944,1274.94903 898.770865,1269.62271 C826.015643,1256.70356 752.580466,1287.98151 711.10319,1350.42407 L683.111695,1392.128 L544.287478,1299.42742 L572.165648,1257.61017 C613.756249,1195.28093 614.662857,1115.0462 574.432165,1053.39691 C558.226563,1028.46522 559.926451,994.920754 578.058594,971.008991 L616.816048,921.93888 Z M1295.41148,118.911619 L1537.92889,280.740991 C1554.02116,291.50695 1558.32755,314.058803 1549.03483,330.264405 L1067.62644,1086.6014 L687.418078,832.86473 L1244.18818,129.677578 C1256.65403,113.018672 1279.20588,108.145659 1295.41148,118.911619 Z M312.649358,1693.34822 L622.482343,1693.34822 L745.667586,1502.62074 L805.390331,1413.20662 C821.822585,1388.6149 850.494035,1375.80907 878.032227,1381.02206 C954.527203,1395.30113 1032.15544,1358.92352 1070.68624,1292.62787 L1645.92846,389.080542 C1686.27248,319.385119 1666.55377,230.424295 1600.93808,186.45385 L1358.19403,24.6244777 C1292.57833,-19.0059902 1202.82423,-3.14036549 1154.66073,60.2088074 L488.53114,901.653546 C440.82094,964.436089 437.194512,1050.33711 479.578395,1115.15952 C494.87739,1138.84464 494.197435,1170.12258 477.878506,1194.82763 L419.628999,1282.08856 L229.468154,1520.52624 C203.629851,1552.82411 198.756838,1596.00128 216.662328,1633.17217 C234.567819,1670.22974 271.398734,1693.34822 312.649358,1693.34822 L312.649358,1693.34822 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHighlighterSolid":{"variant":"Solid","glyphName":"highlighter","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M110,1920 L1809.93229,1920 L1809.93229,1806.67118 L110,1806.67118 L110,1920 Z M477.548028,1391.20773 L621.022313,1486.85725 L560.731381,1580.01354 L326.820698,1580.01354 L477.548028,1391.20773 Z M312.654595,1693.34236 L622.495588,1693.34236 L745.684015,1502.60996 L805.408302,1413.19352 C821.840981,1388.60117 850.513173,1375.56835 878.052076,1381.00813 C954.662358,1395.28757 1032.2926,1358.90901 1070.71107,1292.61166 L1645.96816,389.040977 C1686.31322,319.343753 1666.594,230.38063 1600.97662,186.409048 L1358.22628,24.5754933 C1292.49557,-18.9427734 1202.85247,-3.19006745 1154.68772,60.1607427 L488.540923,901.627228 C440.82949,964.411394 437.202968,1050.31464 479.587946,1115.13872 C494.887337,1138.82445 494.207364,1170.1032 477.888014,1194.80888 L419.637001,1282.07207 L229.471242,1520.51591 C203.632271,1552.81462 198.759131,1595.9929 216.665085,1633.16476 C234.571038,1670.22328 271.402905,1693.34236 312.654595,1693.34236 L312.654595,1693.34236 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHomeLine":{"variant":"Line","glyphName":"home","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.160167,0 L28,932.160167 L107.000407,1010.93741 L960.160167,157.777649 L1813.31993,1010.93741 L1892.20875,932.160167 L960.160167,0 Z M1573.85273,1027.34004 L1573.85273,1808.4175 L1238.99367,1808.4175 L1238.99367,1250.50503 L681.19277,1250.50503 L681.19277,1808.4175 L346.445284,1808.4175 L346.445284,1027.34004 L234.751206,1027.34004 L234.751206,1920 L681.19277,1920 L1238.99367,1920 L1685.43523,1920 L1685.43523,1027.34004 L1573.85273,1027.34004 Z M1127.52275,1362.08752 L1127.52275,1808.52909 L792.775266,1808.52909 L792.775266,1362.08752 L1127.52275,1362.08752 Z M960.126693,692.603708 C1021.72023,692.603708 1071.70919,742.592666 1071.70919,804.186203 C1071.70919,865.779741 1021.72023,915.768699 960.126693,915.768699 C898.533155,915.768699 848.544197,865.779741 848.544197,804.186203 C848.544197,742.592666 898.533155,692.603708 960.126693,692.603708 Z M1183.29168,804.186203 C1183.29168,681.110711 1083.20219,581.021212 960.126693,581.021212 C837.0512,581.021212 736.961702,681.110711 736.961702,804.186203 C736.961702,927.261696 837.0512,1027.35119 960.126693,1027.35119 C1083.20219,1027.35119 1183.29168,927.261696 1183.29168,804.186203\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHomeSolid":{"variant":"Solid","glyphName":"home","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.160167,1083.13128 C867.881444,1083.13128 792.786424,1008.03626 792.786424,915.757541 C792.786424,823.478817 867.881444,748.383797 960.160167,748.383797 C1052.43889,748.383797 1127.53391,823.478817 1127.53391,915.757541 C1127.53391,1008.03626 1052.43889,1083.13128 960.160167,1083.13128 L960.160167,1083.13128 Z M960.160167,0 L28,932.048585 L107.000407,1011.04899 L234.873947,883.063869 L234.873947,1920 L792.786424,1920 L792.786424,1362.08752 L1127.53391,1362.08752 L1127.53391,1920 L1685.44639,1920 L1685.44639,883.063869 L1813.31993,1011.04899 L1892.32033,932.048585 L960.160167,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHourGlassLine":{"variant":"Line","glyphName":"hour-glass","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1072.58824,960 C1072.58824,1127.26588 1168.81412,1205.30824 1261.87765,1280.64 C1378.43294,1375.17176 1509.67059,1481.56235 1523.22353,1807.05882 L396.070588,1807.05882 C409.623529,1481.56235 540.861176,1375.17176 657.416471,1280.64 C750.48,1205.30824 846.705882,1127.26588 846.705882,960 C846.705882,792.734118 750.48,714.691765 657.416471,639.36 C540.861176,544.828235 409.623529,438.437647 396.070588,112.941176 L1523.22353,112.941176 C1509.67059,438.437647 1378.43294,544.828235 1261.87765,639.36 C1168.81412,714.691765 1072.58824,792.734118 1072.58824,960 M1333.03059,727.002353 C1468.56,617.110588 1637.29412,480.338824 1637.29412,56.4705882 L1637.29412,0 L282,0 L282,56.4705882 C282,480.338824 450.734118,617.110588 586.263529,727.002353 C675.035294,799.058824 733.764706,846.607059 733.764706,960 C733.764706,1073.39294 675.035294,1120.94118 586.263529,1192.99765 C450.734118,1302.88941 282,1439.66118 282,1863.52941 L282,1920 L1637.29412,1920 L1637.29412,1863.52941 C1637.29412,1439.66118 1468.56,1302.88941 1333.03059,1192.99765 C1244.25882,1120.94118 1185.52941,1073.39294 1185.52941,960 C1185.52941,846.607059 1244.25882,799.058824 1333.03059,727.002353 M933.84,1274.66541 L764.202353,1412.34071 C689.887059,1472.53835 625.849412,1524.37835 591.515294,1637.65835 L1327.77882,1637.65835 C1293.44471,1524.37835 1229.40706,1472.53835 1155.09176,1412.34071 L985.454118,1274.66541 C970.432941,1262.46776 948.861176,1262.46776 933.84,1274.66541\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconHourGlassSolid":{"variant":"Solid","glyphName":"hour-glass","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1190.72471,1368.39529 C1268.65412,1431.64235 1342.40471,1491.38824 1381.82118,1621.15765 L1404.07059,1694.11765 L515.336471,1694.11765 L537.472941,1621.15765 C576.889412,1491.38824 650.64,1431.64235 728.682353,1368.39529 L898.207059,1230.72 C933.783529,1201.80706 985.510588,1201.69412 1021.2,1230.83294 L1190.72471,1368.39529 Z M1333.03059,727.002353 C1468.56,617.110588 1637.29412,480.338824 1637.29412,56.4705882 L1637.29412,0 L282,0 L282,56.4705882 C282,480.338824 450.734118,617.110588 586.263529,727.002353 C675.148235,799.058824 733.764706,846.607059 733.764706,960 C733.764706,1073.39294 675.148235,1120.94118 586.263529,1192.88471 C450.734118,1302.88941 282,1439.66118 282,1863.52941 L282,1920 L1637.29412,1920 L1637.29412,1863.52941 C1637.29412,1439.66118 1468.56,1302.88941 1333.03059,1192.88471 C1244.25882,1120.94118 1185.52941,1073.39294 1185.52941,960 C1185.52941,846.607059 1244.25882,799.058824 1333.03059,727.002353 L1333.03059,727.002353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconImageLine":{"variant":"Line","glyphName":"image","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,113 L1920,1807.11765 L0,1807.11765 L0,113 L1920,113 Z M1807.05882,225.941176 L112.941176,225.941176 L112.941176,1694.28941 L1807.05882,1694.28941 L1807.05882,225.941176 Z M935.943529,1058.76941 C1118.79529,800.36 1268.44235,771.898824 1362.63529,793.922353 C1523.35059,831.305882 1634.71059,1036.18118 1693.44,1402.90118 L1693.44,1402.90118 L1703.94353,1468.29412 L207.924706,1468.29412 L228.028235,1396.57647 C313.411765,1090.50588 400.941176,939.503529 511.397647,906.863529 C613.948235,876.708235 696.734118,950.684706 770.258824,1015.96471 C813.854118,1054.47765 861.063529,1097.05647 892.8,1094.79765 C908.724706,1092.99059 924.988235,1074.24235 935.943529,1058.76941 Z M1337.11059,903.927059 C1254.09882,884.614118 1141.04471,964.689412 1028.21647,1123.93647 C992.978824,1173.74353 951.868235,1201.75294 905.901176,1207.06118 C829.674918,1216.08518 767.719319,1164.23433 707.088995,1110.79476 L703.220649,1107.38213 C700.642786,1105.10638 698.066824,1102.83002 695.491765,1100.55765 C641.28,1052.44471 584.809412,1003.54118 543.472941,1015.17412 C509.025882,1025.33882 441.148235,1084.29412 357.684706,1355.35294 L357.684706,1355.35294 L1570.44706,1355.35294 C1519.96235,1090.16706 1436.04706,926.967059 1337.11059,903.927059 Z M677.647059,338.882353 C802.221176,338.882353 903.529412,440.190588 903.529412,564.764706 C903.529412,689.338824 802.221176,790.647059 677.647059,790.647059 C553.072941,790.647059 451.764706,689.338824 451.764706,564.764706 C451.764706,440.190588 553.072941,338.882353 677.647059,338.882353 Z M677.647059,451.823529 C615.303529,451.823529 564.705882,502.534118 564.705882,564.764706 C564.705882,626.995294 615.303529,677.705882 677.647059,677.705882 C739.990588,677.705882 790.588235,626.995294 790.588235,564.764706 C790.588235,502.534118 739.990588,451.823529 677.647059,451.823529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconImageSolid":{"variant":"Solid","glyphName":"image","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1493.60188,1468.29412 L225.837176,1468.29412 C523.211294,387.898824 755.305412,1443.89882 983.898353,1115.91765 C1268.51012,707.635294 1574.46776,710.232941 1694.07247,1468.29412 L1493.60188,1468.29412 Z M677.601882,338.882353 C802.401882,338.882353 903.484235,440.077647 903.484235,564.764706 C903.484235,689.451765 802.401882,790.647059 677.601882,790.647059 C552.914824,790.647059 451.719529,689.451765 451.719529,564.764706 C451.719529,440.077647 552.914824,338.882353 677.601882,338.882353 L677.601882,338.882353 Z M-0.0451764706,1807.11765 L1919.95482,1807.11765 L1919.95482,113 L-0.0451764706,113 L-0.0451764706,1807.11765 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconImportContentLine":{"variant":"Line","glyphName":"import-content","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M807.18584,686.592055 L1080.05012,959.456333 L0,959.456333 L0,1072.39684 L1080.05012,1072.39684 L807.18584,1345.37406 L886.921842,1425.223 L1296.21826,1016.03953 L886.921842,606.856054 L807.18584,686.592055 Z M1870.41912,434.689537 L1541.19752,105.580885 C1509.68712,74.0704819 1465.97914,56 1421.48058,56 L451.773343,56 L451.773343,786.612173 L564.713855,786.612173 L564.713855,168.940512 L1355.29744,168.940512 L1355.29744,620.702561 L1807.05949,620.702561 L1807.05949,1750.10768 L564.713855,1750.10768 L564.713855,1241.87538 L451.773343,1241.87538 L451.773343,1863.04819 L1920,1863.04819 L1920,554.51942 C1920,509.343216 1902.38128,466.764643 1870.41912,434.689537 L1870.41912,434.689537 Z M1468.23795,192.319198 L1783.6808,507.762048 L1468.23795,507.762048 L1468.23795,192.319198 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconImportContentSolid":{"variant":"Solid","glyphName":"import-content","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1574.51294,138.514824 C1544.13176,108.246588 1507.76471,86.6748235 1468.23529,72.896 L1468.23529,507.832471 L1903.17176,507.832471 C1889.39294,468.303059 1867.93412,431.936 1837.55294,401.667765 L1574.51294,138.514824 Z M1355.29412,620.705882 L1355.29412,56 L451.764706,56 L451.764706,959.529412 L0,959.529412 L0,1072.47059 L451.764706,1072.47059 L451.764706,1863.05882 L1920,1863.05882 L1920,620.705882 L1355.29412,620.705882 Z M887.04,1425.29882 L807.190588,1345.44941 L1080.05647,1072.47059 L564.705882,1072.47059 L564.705882,959.529412 L1080.05647,959.529412 L807.190588,686.663529 L887.04,606.814118 L1296.22588,1016 L887.04,1425.29882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconImportLine":{"variant":"Line","glyphName":"import","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M807.18584,686.592055 L1080.05012,959.456333 L0,959.456333 L0,1072.39684 L1080.05012,1072.39684 L807.18584,1345.37406 L886.921842,1425.223 L1296.21826,1016.03953 L886.921842,606.856054 L807.18584,686.592055 Z M1870.41912,434.689537 L1541.19752,105.580885 C1509.68712,74.0704819 1465.97914,56 1421.48058,56 L451.773343,56 L451.773343,786.612173 L564.713855,786.612173 L564.713855,168.940512 L1355.29744,168.940512 L1355.29744,620.702561 L1807.05949,620.702561 L1807.05949,1750.10768 L564.713855,1750.10768 L564.713855,1241.87538 L451.773343,1241.87538 L451.773343,1863.04819 L1920,1863.04819 L1920,554.51942 C1920,509.343216 1902.38128,466.764643 1870.41912,434.689537 L1870.41912,434.689537 Z M1468.23795,192.319198 L1783.6808,507.762048 L1468.23795,507.762048 L1468.23795,192.319198 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconImportSolid":{"variant":"Solid","glyphName":"import","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1574.51294,138.514824 C1544.13176,108.246588 1507.76471,86.6748235 1468.23529,72.896 L1468.23529,507.832471 L1903.17176,507.832471 C1889.39294,468.303059 1867.93412,431.936 1837.55294,401.667765 L1574.51294,138.514824 Z M1355.29412,620.705882 L1355.29412,56 L451.764706,56 L451.764706,959.529412 L0,959.529412 L0,1072.47059 L451.764706,1072.47059 L451.764706,1863.05882 L1920,1863.05882 L1920,620.705882 L1355.29412,620.705882 Z M887.04,1425.29882 L807.190588,1345.44941 L1080.05647,1072.47059 L564.705882,1072.47059 L564.705882,959.529412 L1080.05647,959.529412 L807.190588,686.663529 L887.04,606.814118 L1296.22588,1016 L887.04,1425.29882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconInboxLine":{"variant":"Line","glyphName":"inbox","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1750.58824,1750.1188 L169.411765,1750.1188 C138.24,1750.1188 112.941176,1724.70702 112.941176,1693.64818 L112.941176,1398.08092 L323.124706,1524.2363 L1596.87529,1524.2363 L1807.05882,1398.08092 L1807.05882,1693.64818 C1807.05882,1724.70702 1781.76,1750.1188 1750.58824,1750.1188 Z M169.411765,846.588776 L338.823529,846.588776 L338.823529,1401.92092 L112.941176,1266.39142 L112.941176,903.059402 C112.941176,872.000558 138.24,846.588776 169.411765,846.588776 Z M451.764706,1411.29504 L451.764706,168.941254 L1468.23529,168.941254 L1468.23529,1411.29504 L451.764706,1411.29504 Z M1750.58824,846.588776 C1781.76,846.588776 1807.05882,872.000558 1807.05882,903.059402 L1807.05882,1266.39142 L1581.17647,1401.92092 L1581.17647,846.588776 L1750.58824,846.588776 Z M1750.58824,733.647522 L1581.17647,733.647522 L1581.17647,56 L338.823529,56 L338.823529,733.647522 L169.411765,733.647522 C76.0094118,733.647522 0,809.656986 0,903.059402 L0,1693.64818 C0,1787.05059 76.0094118,1863.06006 169.411765,1863.06006 L1750.58824,1863.06006 C1843.99059,1863.06006 1920,1787.05059 1920,1693.64818 L1920,903.059402 C1920,809.656986 1843.99059,733.647522 1750.58824,733.647522 Z M621.176471,488.903825 L1185.88235,488.903825 L1185.88235,375.962572 L621.176471,375.962572 L621.176471,488.903825 Z M621.176471,1166.55135 L1185.88235,1166.55135 L1185.88235,1053.61009 L621.176471,1053.61009 L621.176471,1166.55135 Z M621.176471,827.727586 L1298.82353,827.727586 L1298.82353,714.786333 L621.176471,714.786333 L621.176471,827.727586 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconInboxSolid":{"variant":"Solid","glyphName":"inbox","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1750.58824,1750.11765 L169.411765,1750.11765 C138.24,1750.11765 112.941176,1724.70588 112.941176,1693.64706 L112.941176,1398.08 L323.124706,1524.23529 L1596.87529,1524.23529 L1807.05882,1398.08 L1807.05882,1693.64706 C1807.05882,1724.70588 1781.76,1750.11765 1750.58824,1750.11765 Z M451.764706,1411.29412 L451.764706,168.941176 L1468.23529,168.941176 L1468.23529,1411.29412 L451.764706,1411.29412 Z M1750.58824,733.647059 L1581.17647,733.647059 L1581.17647,56 L338.823529,56 L338.823529,733.647059 L169.411765,733.647059 C76.0094118,733.647059 0,809.656471 0,903.058824 L0,1693.64706 C0,1787.04941 76.0094118,1863.05882 169.411765,1863.05882 L1750.58824,1863.05882 C1843.99059,1863.05882 1920,1787.04941 1920,1693.64706 L1920,903.058824 C1920,809.656471 1843.99059,733.647059 1750.58824,733.647059 Z M621.176471,488.903529 L1185.88235,488.903529 L1185.88235,375.962353 L621.176471,375.962353 L621.176471,488.903529 Z M621.176471,1166.55059 L1185.88235,1166.55059 L1185.88235,1053.60941 L621.176471,1053.60941 L621.176471,1166.55059 Z M621.176471,827.727059 L1298.82353,827.727059 L1298.82353,714.785882 L621.176471,714.785882 L621.176471,827.727059 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconIndent2Line":{"variant":"Line","glyphName":"indent-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1482.42 L1920,1602.42 L0,1602.42 L0,1482.42 L1920,1482.42 Z M1920,1122.42 L1920,1242.42 L0,1242.42 L0,1122.42 L1920,1122.42 Z M1920,762.42 L1920,882.42 L840,882.42 L840,762.42 L1920,762.42 Z M462.456,300.048 L744.936,582.528 L462.456,864.888 L377.616,780.048 L515.136,642.408 L-0.024,642.408 L-0.024,522.408 L515.136,522.408 L377.616,384.768 L462.456,300.048 Z M1920,402.42 L1920,522.42 L840,522.42 L840,402.42 L1920,402.42 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconIndent2Solid":{"variant":"Solid","glyphName":"indent-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1518.81271 L1920,1744.69506 L112.941176,1744.69506 L112.941176,1518.81271 L1920,1518.81271 Z M1920,1066.93506 L1920,1292.93035 L112.941176,1292.93035 L112.941176,1066.93506 L1920,1066.93506 Z M282.375529,112.954824 L811.843765,502.376 L282.375529,891.684235 L282.375529,615.317176 L0.0225882353,615.317176 L0.0225882353,389.434824 L282.375529,389.434824 L282.375529,112.954824 Z M1920,615.283294 L1920,841.165647 L903.529412,841.165647 L903.529412,615.283294 L1920,615.283294 Z M1920,163.405647 L1920,389.400941 L903.529412,389.400941 L903.529412,163.405647 L1920,163.405647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconIndentLine":{"variant":"Line","glyphName":"indent","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1482.42 L1920,1602.42 L0,1602.42 L0,1482.42 L1920,1482.42 Z M1920,1122.42 L1920,1242.42 L0,1242.42 L0,1122.42 L1920,1122.42 Z M1920,762.42 L1920,882.42 L840,882.42 L840,762.42 L1920,762.42 Z M462.456,300.048 L744.936,582.528 L462.456,864.888 L377.616,780.048 L515.136,642.408 L-0.024,642.408 L-0.024,522.408 L515.136,522.408 L377.616,384.768 L462.456,300.048 Z M1920,402.42 L1920,522.42 L840,522.42 L840,402.42 L1920,402.42 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconIndentSolid":{"variant":"Solid","glyphName":"indent","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1518.81271 L1920,1744.69506 L112.941176,1744.69506 L112.941176,1518.81271 L1920,1518.81271 Z M1920,1066.93506 L1920,1292.93035 L112.941176,1292.93035 L112.941176,1066.93506 L1920,1066.93506 Z M282.375529,112.954824 L811.843765,502.376 L282.375529,891.684235 L282.375529,615.317176 L0.0225882353,615.317176 L0.0225882353,389.434824 L282.375529,389.434824 L282.375529,112.954824 Z M1920,615.283294 L1920,841.165647 L903.529412,841.165647 L903.529412,615.283294 L1920,615.283294 Z M1920,163.405647 L1920,389.400941 L903.529412,389.400941 L903.529412,163.405647 L1920,163.405647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconInfoBorderlessLine":{"variant":"Line","glyphName":"info-borderless","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M852.516773,606.040293 C722.803522,666.467157 612.481273,770.668743 502.075185,923.020417 C486.329486,944.745157 485.694238,957.946682 501.870228,969.621566 C513.241611,977.830644 519.849558,975.205114 536.412485,957.533847 C538.629333,955.153197 538.629333,955.153197 540.895656,952.694467 C555.214475,937.188539 566.747856,924.032184 591.386288,895.419511 C672.792897,800.881864 712.555491,761.969449 774.35381,726.381908 C827.831878,695.587067 874.830167,740.843988 865.881492,798.761502 C863.370146,815.019556 859.045111,827.019032 847.902681,852.784113 C843.470502,863.032775 841.600946,867.491114 839.522913,872.955196 C819.43807,925.754285 802.520913,969.800564 767.071535,1061.78876 L765.375712,1066.18926 C754.657729,1094.0015 754.657729,1094.0015 743.949175,1121.80967 C697.522872,1242.47014 669.351309,1316.46107 640.283739,1394.71013 L638.57944,1399.29673 C630.778952,1420.27209 627.104858,1430.16815 623.044831,1441.17842 C589.739113,1531.49921 570.691941,1590.18475 556.205026,1652.60455 C553.942513,1662.31783 553.942513,1662.31783 551.648767,1672.18907 C543.487061,1707.49859 539.118805,1730.25118 536.676993,1753.63735 C532.454694,1794.07593 535.849581,1827.18983 548.558053,1855.01914 C562.938882,1886.51231 593.835706,1909.04005 629.089533,1914.15706 C687.817384,1922.68211 744.483473,1922.0763 793.017129,1911.03352 C820.330531,1904.82449 847.354541,1896.69408 873.870245,1886.72796 C950.643207,1857.86226 1024.6048,1812.82307 1096.24146,1753.28559 C1158.92235,1701.0501 1218.22877,1637.41069 1280.4056,1558.32093 C1285.82653,1551.47244 1285.82653,1551.47244 1291.22913,1544.63479 C1310.00909,1520.68772 1319.21024,1505.13352 1322.64517,1488.7048 C1326.38082,1470.86877 1311.30311,1452.7926 1299.25094,1458.84066 C1293.29494,1461.82952 1287.0639,1468.01652 1277.57022,1479.99112 C1270.77988,1488.70507 1267.08817,1493.36169 1263.39337,1497.54637 C1248.64765,1514.24148 1233.07799,1531.32945 1216.20937,1549.3832 C1188.3971,1579.13507 1160.13837,1608.24779 1119.15359,1649.69102 C1098.28006,1670.79826 1072.02814,1689.2517 1043.803,1703.12596 C998.627382,1725.32338 957.874219,1697.3444 962.769258,1647.26896 C965.997681,1614.21084 974.007008,1580.03493 985.98063,1546.99379 C1012.1376,1474.77424 1033.52538,1416.39049 1080.84062,1287.72341 C1101.36108,1231.92086 1110.22039,1207.8133 1121.28749,1177.63839 C1154.09653,1088.21309 1180.28718,1016.22344 1205.20556,946.762798 C1235.98968,860.960459 1253.38103,797.000766 1261.43291,730.952525 C1267.51205,681.136425 1253.6525,633.492383 1222.04418,600.736575 C1186.99723,564.425212 1137.14794,547.698151 1075.06539,548.432136 C1006.37349,549.248617 926.244673,571.69337 852.516773,606.040293 Z M1322.70268,13.816363 C1199.25857,-34.2116816 1051.13333,48.2985863 1026.33046,178.984948 C1008.34569,273.705561 1043.7292,355.483464 1115.95212,389.736414 C1259.11728,457.63325 1430.93359,348.839192 1430.94085,190.267929 C1430.94812,102.056539 1393.2734,41.2768194 1322.70268,13.816363 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconInfoBorderlessSolid":{"variant":"Solid","glyphName":"info-borderless","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1229.92952,594.767261 C1266.57399,632.742052 1279.94501,686.094808 1273.65049,737.675873 C1264.52227,812.553116 1242.91341,882.659228 1217.55726,953.332591 C1190.42812,1028.95581 1162.89637,1104.42362 1135.22526,1179.8448 C1090.96233,1300.52957 1046.35099,1421.08225 1002.57582,1541.94574 C991.697835,1571.96347 983.940014,1604.01708 980.84308,1635.72879 C977.467421,1670.26122 1002.30484,1687.25546 1033.49097,1671.93189 C1058.46774,1659.65439 1082.77868,1642.93988 1102.33582,1623.16377 C1134.28844,1590.85373 1166.1017,1558.38828 1197.14072,1525.18462 C1212.65637,1508.5789 1228.00168,1491.78669 1243.05278,1474.74583 C1255.04566,1461.16286 1267.37145,1440.72626 1283.83166,1432.46614 C1315.00231,1416.82397 1339.05774,1455.31162 1333.41358,1482.25997 C1328.02492,1508.03312 1310.27937,1530.64327 1293.95246,1551.21735 L1292.82888,1552.63303 C1291.33423,1554.51635 1289.85424,1556.38267 1288.39964,1558.23286 C1233.5297,1628.02815 1173.35627,1695.32132 1105.09209,1752.20968 C1037.98926,1807.97909 963.484762,1855.42621 881.663754,1886.18991 C855.014634,1896.20618 827.707414,1904.44298 799.951139,1910.75269 C746.366431,1922.94472 687.153045,1922.03556 632.391501,1914.08626 C592.239746,1908.25833 556.144975,1882.64653 539.127321,1845.37886 C509.582566,1780.68106 530.146211,1700.78403 545.42184,1634.92842 C564.133896,1554.30375 592.221166,1477.54121 620.915497,1400.30998 L623.095838,1394.44335 C623.459375,1393.4654 623.822974,1392.48736 624.186617,1391.50922 L626.36886,1385.63909 C627.096355,1383.68193 627.823883,1381.72429 628.551303,1379.76611 C661.804636,1290.24911 695.98705,1201.08955 730.277857,1111.96884 C761.572379,1030.67311 792.998521,949.431764 823.967866,868.019468 C826.332034,861.803009 828.971786,855.629982 831.636822,849.461178 L832.636907,847.147998 C839.47224,831.341572 846.268156,815.530695 848.813022,799.055631 C854.921726,759.518954 826.406702,724.318257 786.82788,747.109349 C718.408236,786.509885 667.17211,845.101219 616.390988,904.053391 L610.216035,911.223775 C594.435635,929.546222 578.633674,947.829782 562.307875,965.50908 C546.2193,982.938475 527.064761,1004.54844 499.401394,984.578066 C469.879866,963.271155 478.636449,935.942048 495.414091,912.793511 C588.593106,784.213836 700.469863,663.933133 846.273536,596.010552 C907.205721,567.624648 992.386903,538.725887 1072.15619,537.777877 C1131.958,537.070754 1188.71706,552.067961 1229.92952,594.767261 Z M1321.96809,14.8260694 C1398.67141,44.6728411 1440.00774,111.359901 1440,205.243966 C1439.99226,374.432657 1257.24216,490.152033 1104.47038,417.699209 C1025.51404,380.252816 987.11205,291.497329 1006.2511,190.697453 C1032.74538,51.0991052 1190.03094,-36.5063373 1321.96809,14.8260694 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconInfoLine":{"variant":"Line","glyphName":"info","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1490.19336,0 1920,429.80664 1920,960 C1920,1490.19336 1490.19336,1920 960,1920 C429.80664,1920 0,1490.19336 0,960 C0,429.80664 429.80664,0 960,0 Z M960,101.052632 C485.616468,101.052632 101.052632,485.616468 101.052632,960 C101.052632,1434.38353 485.616468,1818.94737 960,1818.94737 C1434.38353,1818.94737 1818.94737,1434.38353 1818.94737,960 C1818.94737,485.616468 1434.38353,101.052632 960,101.052632 Z M917.925981,727.848289 C832.850893,767.480483 760.49379,835.823224 688.0817,935.746185 C677.754561,949.994799 677.337921,958.653289 687.947275,966.310501 C695.405429,971.694593 699.739386,969.972585 710.60252,958.382523 C712.056486,956.821125 712.056486,956.821125 713.5429,955.208517 C722.93419,945.038637 730.498594,936.409772 746.658213,917.643566 C800.050402,855.639118 826.129512,830.117614 866.661203,806.776798 C901.735887,786.579372 932.560677,816.262049 926.691505,854.248434 C925.044387,864.911612 922.207725,872.781713 914.899734,889.680268 C911.992799,896.402063 910.766613,899.326155 909.403692,902.909886 C896.230637,937.539248 885.135174,966.4279 861.884974,1026.76024 L860.772734,1029.6464 C853.743126,1047.88762 853.743126,1047.88762 846.719702,1066.12618 C816.270062,1145.26382 797.793166,1193.79228 778.728606,1245.11352 L777.610807,1248.12174 C772.494698,1261.87886 770.084968,1268.3694 767.422116,1275.59071 C745.577879,1334.82944 733.085403,1373.31955 723.583863,1414.25885 C722.099948,1420.62951 722.099948,1420.62951 720.595547,1427.10376 C715.242526,1450.26223 712.377516,1465.18499 710.776004,1480.52328 C708.006723,1507.04575 710.233328,1528.76418 718.56844,1547.0166 C728.0004,1567.67204 748.264714,1582.44732 771.386657,1585.80341 C809.904519,1591.39474 847.070132,1590.99741 878.901923,1583.75478 C896.815976,1579.68246 914.540226,1574.34996 931.931092,1567.81348 C982.284209,1548.88132 1030.79343,1519.34145 1077.7778,1480.29258 C1118.88834,1446.03286 1157.78567,1404.29365 1198.56562,1352.42101 C1202.12105,1347.92929 1202.12105,1347.92929 1205.66445,1343.44468 C1217.98167,1327.7385 1224.01644,1317.53696 1226.2693,1306.76185 C1228.7194,1295.06373 1218.83038,1283.2081 1210.92571,1287.17485 C1207.01936,1289.13515 1202.9326,1293.19302 1196.70597,1301.04681 C1192.25239,1306.76203 1189.83111,1309.81617 1187.4078,1312.56078 C1177.73651,1323.51061 1167.52483,1334.7181 1156.46121,1346.55902 C1138.21996,1366.07239 1119.6859,1385.16656 1092.80519,1412.34796 C1079.11486,1426.19157 1061.897,1438.29464 1043.38496,1447.39435 C1013.75561,1461.95299 987.026816,1443.6024 990.237327,1410.7594 C992.354755,1389.07756 997.607835,1366.66258 1005.46098,1344.99188 C1022.61656,1297.62521 1036.64418,1259.33303 1067.67684,1174.9441 C1081.13561,1138.34486 1086.94617,1122.53342 1094.20475,1102.74259 C1115.72323,1044.09118 1132.90091,996.875296 1149.24413,951.31811 C1169.43453,895.042892 1180.841,853.09362 1186.12199,809.774531 C1190.10912,777.101623 1181.01905,745.853304 1160.28809,724.369737 C1137.30182,700.554188 1104.60715,689.583403 1063.88904,690.064802 C1018.83606,690.600307 966.281931,705.321158 917.925981,727.848289 Z M1226.30702,339.426117 C1145.34368,307.925942 1048.19271,362.041988 1031.92524,447.75531 C1020.12956,509.87976 1043.33656,563.51547 1090.70544,585.980968 C1184.60323,630.512496 1297.29248,559.157689 1297.29724,455.155484 C1297.30201,397.30024 1272.59227,357.436618 1226.30702,339.426117 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconInfoSolid":{"variant":"Solid","glyphName":"info","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1490.19336,0 1920,429.80664 1920,960 C1920,1490.19336 1490.19336,1920 960,1920 C429.80664,1920 0,1490.19336 0,960 C0,429.80664 429.80664,0 960,0 Z M1183.79736,707.146565 C1155.26566,677.585511 1115.97092,667.20283 1074.56967,667.692376 C1019.34478,668.348691 960.373192,688.355526 918.189371,708.007305 C817.248366,755.03063 739.795227,838.301886 675.286678,927.318584 C663.671387,943.344495 657.609138,962.264645 678.047119,977.015584 C695.47504,989.596919 708.02485,978.340247 718.536108,967.119169 L719.226234,966.379623 C720.028005,965.517471 720.818082,964.658634 721.597759,963.813978 C733.391648,951.042312 744.790658,937.815142 756.189877,924.577188 L759.039915,921.267733 L759.039915,921.267733 L761.891334,917.959372 C796.122126,878.271788 830.947442,839.154234 877.034686,812.614164 C904.435409,796.835717 924.176579,821.20543 919.947477,848.576975 C917.41216,864.990219 908.782433,880.451269 902.746984,896.32117 C881.306669,952.683529 859.550109,1008.92754 837.88467,1065.2092 C814.144881,1126.90815 790.480133,1188.634 767.458594,1250.60731 C766.792295,1252.40096 766.125864,1254.19395 765.459529,1255.98638 L763.461042,1261.36217 C743.150656,1316.00148 723.141957,1370.2345 709.907428,1427.25814 C699.331992,1472.85048 685.095623,1528.16381 705.549683,1572.95459 C717.331137,1598.75529 742.319824,1616.48654 770.117193,1620.52126 C808.029031,1626.02462 849.022914,1626.65404 886.120019,1618.2134 C905.335902,1613.84514 924.2409,1608.14274 942.690292,1601.2084 C999.335605,1579.91045 1050.91564,1547.06244 1097.37145,1508.45286 C1144.63126,1469.0686 1186.28979,1422.48103 1224.27667,1374.16121 C1236.48693,1358.63023 1251.28075,1341.45846 1255.44017,1321.56459 C1259.34767,1302.90805 1242.6939,1276.26275 1221.11423,1287.09194 C1209.7187,1292.81048 1201.18545,1306.95891 1192.88269,1316.36249 C1182.4627,1328.16002 1171.83902,1339.78539 1161.09742,1351.28166 C1139.60887,1374.26881 1117.5843,1396.74489 1095.46326,1419.11338 C1081.9237,1432.80453 1065.09305,1444.37611 1047.80144,1452.87592 C1026.21104,1463.48455 1009.01591,1451.7193 1011.3529,1427.81224 C1013.49693,1405.85798 1018.86773,1383.66702 1026.39864,1362.88551 C1056.70453,1279.21079 1087.5893,1195.75124 1118.23287,1112.20025 C1137.3898,1059.98558 1156.45024,1007.73864 1175.23195,955.384102 C1192.78621,906.456389 1207.74619,857.921388 1214.06572,806.083297 C1218.42347,770.373328 1209.16661,733.436805 1183.79736,707.146565 Z M1247.51637,305.648817 C1156.17526,270.110997 1047.28526,330.760919 1028.94307,427.405929 C1015.69296,497.190458 1042.27895,558.636565 1096.94103,584.560991 C1202.70611,634.720638 1329.22541,554.607224 1329.23077,437.476592 C1329.23613,372.479931 1300.61867,326.311967 1247.51637,305.648817 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconInstructureLine":{"variant":"Line","glyphName":"instructure","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1642.26415 C1098.86792,1642.26415 1213.58491,1744.90566 1231.69811,1883.77358 C1147.16981,1907.92453 1050.56604,1920 960,1920 C869.433962,1920 778.867925,1907.92453 688.301887,1883.77358 C700.377358,1744.90566 821.132075,1642.26415 960,1642.26415 Z M1436.98113,1436.98113 C1539.62264,1340.37736 1696.60377,1328.30189 1799.24528,1418.86792 C1708.67925,1575.84906 1575.84906,1708.67925 1412.83019,1805.28302 C1328.30189,1690.56604 1340.37736,1533.58491 1436.98113,1436.98113 Z M108.679245,1412.83019 C223.396226,1328.30189 380.377358,1340.37736 476.981132,1436.98113 C573.584906,1539.62264 585.660377,1696.60377 495.09434,1799.24528 C338.113208,1708.67925 205.283019,1575.84906 108.679245,1412.83019 Z M960,1394.71698 C1002.26415,1394.71698 1038.49057,1430.9434 1044.5283,1479.24528 C1044.5283,1527.54717 1008.30189,1569.81132 960,1569.81132 L960,1569.81132 L953.962264,1569.81132 C905.660377,1569.81132 869.433962,1527.54717 869.433962,1479.24528 C869.433962,1430.9434 911.698113,1394.71698 960,1394.71698 Z M1255.84906,1267.92453 C1292.07547,1237.73585 1340.37736,1237.73585 1370.56604,1267.92453 C1406.79245,1298.11321 1406.79245,1352.45283 1376.60377,1388.67925 C1376.60377,1394.40468 1371.17448,1394.70083 1370.61283,1394.71615 L1370.56604,1394.71698 C1334.33962,1424.90566 1280,1424.90566 1249.81132,1388.67925 C1219.62264,1352.45283 1219.62264,1298.11321 1255.84906,1267.92453 Z M531.320755,1261.88679 C561.509434,1231.69811 621.886792,1231.69811 652.075472,1261.88679 C688.301887,1292.07547 688.301887,1346.41509 652.075472,1382.64151 C621.886792,1418.86792 567.54717,1412.83019 531.320755,1382.64151 C495.09434,1352.45283 495.09434,1298.11321 531.320755,1261.88679 Z M36.2264151,688.301887 C175.09434,700.377358 277.735849,821.132075 277.735849,960 C277.735849,1098.86792 169.056604,1219.62264 36.2264151,1231.69811 C12.0754717,1141.13208 0,1050.56604 0,960 C0,869.433962 12.0754717,772.830189 36.2264151,688.301887 Z M1883.77358,688.301887 C1907.92453,772.830189 1920,869.433962 1920,960 C1920,1050.56604 1907.92453,1141.13208 1883.77358,1231.69811 C1750.9434,1219.62264 1642.26415,1098.86792 1642.26415,960 C1642.26415,821.132075 1744.90566,700.377358 1883.77358,688.301887 Z M440.754717,875.471698 C487.426415,875.471698 525.283019,913.328302 525.283019,960 C525.283019,1006.6717 487.426415,1044.5283 440.754717,1044.5283 C394.083019,1044.5283 356.226415,1006.6717 356.226415,960 C356.226415,913.328302 394.083019,875.471698 440.754717,875.471698 Z M1479.24528,869.433962 C1527.54717,869.433962 1563.77358,911.698113 1563.77358,953.962264 C1563.77358,1002.26415 1527.54717,1038.49057 1479.24528,1038.49057 C1430.9434,1038.49057 1394.71698,1002.26415 1394.71698,953.962264 C1394.71698,905.660377 1430.9434,869.433962 1479.24528,869.433962 Z M1267.92453,531.320755 C1298.11321,501.132075 1352.45283,501.132075 1382.64151,531.320755 C1418.86792,561.509434 1418.86792,615.849057 1388.67925,652.075472 C1352.45283,682.264151 1304.15094,682.264151 1273.96226,652.075472 C1237.73585,621.886792 1237.73585,567.54717 1267.92453,531.320755 Z M531.320755,525.283019 C561.509434,495.09434 615.849057,495.09434 652.075472,525.283019 C682.264151,555.471698 688.301887,609.811321 652.075472,646.037736 C621.886792,682.264151 567.54717,676.226415 531.320755,646.037736 C495.09434,615.849057 495.09434,561.509434 531.320755,525.283019 Z M1418.86792,114.716981 C1575.84906,205.283019 1708.67925,338.113208 1805.28302,501.132075 C1690.56604,585.660377 1533.58491,573.584906 1436.98113,476.981132 C1340.37736,380.377358 1328.30189,223.396226 1418.86792,114.716981 Z M501.132075,114.716981 C585.660377,223.396226 579.622642,380.377358 476.981132,476.981132 C380.377358,573.584906 223.396226,585.660377 114.716981,501.132075 C205.283019,338.113208 338.113208,205.283019 501.132075,114.716981 Z M960,356.226415 C1002.26415,356.226415 1044.5283,392.45283 1044.5283,434.716981 C1044.5283,483.018868 1008.30189,525.283019 960,525.283019 C911.698113,525.283019 875.471698,489.056604 875.471698,440.754717 C875.471698,392.45283 911.698113,356.226415 960,356.226415 Z M960,0 C1056.60377,0 1147.16981,12.0754717 1237.73585,36.2264151 C1219.62264,169.056604 1098.86792,277.735849 960,277.735849 C821.132075,277.735849 700.377358,175.09434 682.264151,36.2264151 C772.830189,12.0754717 863.396226,0 960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconInstructureSolid":{"variant":"Solid","glyphName":"instructure","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1642.26415 C1098.86792,1642.26415 1213.58491,1744.90566 1231.69811,1883.77358 C1147.16981,1907.92453 1050.56604,1920 960,1920 C869.433962,1920 778.867925,1907.92453 688.301887,1883.77358 C700.377358,1744.90566 821.132075,1642.26415 960,1642.26415 Z M1436.98113,1436.98113 C1539.62264,1340.37736 1696.60377,1328.30189 1799.24528,1418.86792 C1708.67925,1575.84906 1575.84906,1708.67925 1412.83019,1805.28302 C1328.30189,1690.56604 1340.37736,1533.58491 1436.98113,1436.98113 Z M108.679245,1412.83019 C223.396226,1328.30189 380.377358,1340.37736 476.981132,1436.98113 C573.584906,1539.62264 585.660377,1696.60377 495.09434,1799.24528 C338.113208,1708.67925 205.283019,1575.84906 108.679245,1412.83019 Z M960,1394.71698 C1002.26415,1394.71698 1038.49057,1430.9434 1044.5283,1479.24528 C1044.5283,1527.54717 1008.30189,1569.81132 960,1569.81132 L960,1569.81132 L953.962264,1569.81132 C905.660377,1569.81132 869.433962,1527.54717 869.433962,1479.24528 C869.433962,1430.9434 911.698113,1394.71698 960,1394.71698 Z M1255.84906,1267.92453 C1292.07547,1237.73585 1340.37736,1237.73585 1370.56604,1267.92453 C1406.79245,1298.11321 1406.79245,1352.45283 1376.60377,1388.67925 C1376.60377,1394.40468 1371.17448,1394.70083 1370.61283,1394.71615 L1370.56604,1394.71698 C1334.33962,1424.90566 1280,1424.90566 1249.81132,1388.67925 C1219.62264,1352.45283 1219.62264,1298.11321 1255.84906,1267.92453 Z M531.320755,1261.88679 C561.509434,1231.69811 621.886792,1231.69811 652.075472,1261.88679 C688.301887,1292.07547 688.301887,1346.41509 652.075472,1382.64151 C621.886792,1418.86792 567.54717,1412.83019 531.320755,1382.64151 C495.09434,1352.45283 495.09434,1298.11321 531.320755,1261.88679 Z M36.2264151,688.301887 C175.09434,700.377358 277.735849,821.132075 277.735849,960 C277.735849,1098.86792 169.056604,1219.62264 36.2264151,1231.69811 C12.0754717,1141.13208 0,1050.56604 0,960 C0,869.433962 12.0754717,772.830189 36.2264151,688.301887 Z M1883.77358,688.301887 C1907.92453,772.830189 1920,869.433962 1920,960 C1920,1050.56604 1907.92453,1141.13208 1883.77358,1231.69811 C1750.9434,1219.62264 1642.26415,1098.86792 1642.26415,960 C1642.26415,821.132075 1744.90566,700.377358 1883.77358,688.301887 Z M440.754717,875.471698 C487.426415,875.471698 525.283019,913.328302 525.283019,960 C525.283019,1006.6717 487.426415,1044.5283 440.754717,1044.5283 C394.083019,1044.5283 356.226415,1006.6717 356.226415,960 C356.226415,913.328302 394.083019,875.471698 440.754717,875.471698 Z M1479.24528,869.433962 C1527.54717,869.433962 1563.77358,911.698113 1563.77358,953.962264 C1563.77358,1002.26415 1527.54717,1038.49057 1479.24528,1038.49057 C1430.9434,1038.49057 1394.71698,1002.26415 1394.71698,953.962264 C1394.71698,905.660377 1430.9434,869.433962 1479.24528,869.433962 Z M1267.92453,531.320755 C1298.11321,501.132075 1352.45283,501.132075 1382.64151,531.320755 C1418.86792,561.509434 1418.86792,615.849057 1388.67925,652.075472 C1352.45283,682.264151 1304.15094,682.264151 1273.96226,652.075472 C1237.73585,621.886792 1237.73585,567.54717 1267.92453,531.320755 Z M531.320755,525.283019 C561.509434,495.09434 615.849057,495.09434 652.075472,525.283019 C682.264151,555.471698 688.301887,609.811321 652.075472,646.037736 C621.886792,682.264151 567.54717,676.226415 531.320755,646.037736 C495.09434,615.849057 495.09434,561.509434 531.320755,525.283019 Z M1418.86792,114.716981 C1575.84906,205.283019 1708.67925,338.113208 1805.28302,501.132075 C1690.56604,585.660377 1533.58491,573.584906 1436.98113,476.981132 C1340.37736,380.377358 1328.30189,223.396226 1418.86792,114.716981 Z M501.132075,114.716981 C585.660377,223.396226 579.622642,380.377358 476.981132,476.981132 C380.377358,573.584906 223.396226,585.660377 114.716981,501.132075 C205.283019,338.113208 338.113208,205.283019 501.132075,114.716981 Z M960,356.226415 C1002.26415,356.226415 1044.5283,392.45283 1044.5283,434.716981 C1044.5283,483.018868 1008.30189,525.283019 960,525.283019 C911.698113,525.283019 875.471698,489.056604 875.471698,440.754717 C875.471698,392.45283 911.698113,356.226415 960,356.226415 Z M960,0 C1056.60377,0 1147.16981,12.0754717 1237.73585,36.2264151 C1219.62264,169.056604 1098.86792,277.735849 960,277.735849 C821.132075,277.735849 700.377358,175.09434 682.264151,36.2264151 C772.830189,12.0754717 863.396226,0 960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconIntegrationsLine":{"variant":"Line","glyphName":"integrations","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.23529,734.117647 C1581.23529,952.094118 1403.91765,1129.41176 1185.94118,1129.41176 L960.058824,1129.41176 C742.082353,1129.41176 564.764706,952.094118 564.764706,734.117647 L564.764706,564.705882 L1581.23529,564.705882 L1581.23529,734.117647 Z M1807.11765,451.764706 L1694.17647,451.764706 L1468.29412,451.764706 L1468.29412,0 L1355.35294,0 L1355.35294,451.764706 L790.647059,451.764706 L790.647059,0 L677.705882,0 L677.705882,451.764706 L451.823529,451.764706 L338.882353,451.764706 L338.882353,564.705882 L451.823529,564.705882 L451.823529,734.117647 C451.823529,1014.32471 679.851765,1242.35294 960.058824,1242.35294 L1016.52941,1242.35294 L1016.52941,1637.64706 C1016.52941,1731.04941 940.52,1807.05882 847.117647,1807.05882 C753.715294,1807.05882 677.705882,1731.04941 677.705882,1637.64706 C677.705882,1482.01412 550.985882,1355.29412 395.352941,1355.29412 C239.72,1355.29412 113,1482.01412 113,1637.64706 L113,1920 L225.941176,1920 L225.941176,1637.64706 C225.941176,1544.24471 301.950588,1468.23529 395.352941,1468.23529 C488.755294,1468.23529 564.764706,1544.24471 564.764706,1637.64706 C564.764706,1793.28 691.484706,1920 847.117647,1920 C1002.86353,1920 1129.47059,1793.28 1129.47059,1637.64706 L1129.47059,1242.35294 L1185.94118,1242.35294 C1466.14824,1242.35294 1694.17647,1014.32471 1694.17647,734.117647 L1694.17647,564.705882 L1807.11765,564.705882 L1807.11765,451.764706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconIntegrationsSolid":{"variant":"Solid","glyphName":"integrations","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.17647,451.764706 L1468.29412,451.764706 L1468.29412,0 L1355.35294,0 L1355.35294,451.764706 L790.647059,451.764706 L790.647059,0 L677.705882,0 L677.705882,451.764706 L451.823529,451.764706 L338.882353,451.764706 L338.882353,564.705882 L451.823529,564.705882 L451.823529,734.117647 C451.823529,1014.32471 679.851765,1242.35294 960.058824,1242.35294 L1016.52941,1242.35294 L1016.52941,1637.64706 C1016.52941,1731.04941 940.52,1807.05882 847.117647,1807.05882 C753.715294,1807.05882 677.705882,1731.04941 677.705882,1637.64706 C677.705882,1482.01412 550.985882,1355.29412 395.352941,1355.29412 C239.72,1355.29412 113,1482.01412 113,1637.64706 L113,1920 L225.941176,1920 L225.941176,1637.64706 C225.941176,1544.24471 301.950588,1468.23529 395.352941,1468.23529 C488.755294,1468.23529 564.764706,1544.24471 564.764706,1637.64706 C564.764706,1793.28 691.484706,1920 847.117647,1920 C1002.75059,1920 1129.47059,1793.28 1129.47059,1637.64706 L1129.47059,1242.35294 L1185.94118,1242.35294 C1466.14824,1242.35294 1694.17647,1014.32471 1694.17647,734.117647 L1694.17647,564.705882 L1807.11765,564.705882 L1807.11765,451.764706 L1694.17647,451.764706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconInvitationLine":{"variant":"Line","glyphName":"invitation","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M338.789647,-0.0112941176 L338.789647,527.649882 L-0.0338823529,821.296941 L-0.0338823529,1919.98871 L1919.96612,1919.98871 L1919.96612,821.296941 L1581.25553,527.649882 L1581.25553,-0.0112941176 L338.789647,-0.0112941176 Z M451.730824,1203.94165 L451.730824,112.929882 L1468.20141,112.929882 L1468.20141,1203.94165 L1278.912,1355.28282 L641.020235,1355.28282 L451.730824,1203.94165 Z M1581.25553,677.071059 L1807.13788,872.798118 L1807.13788,932.882824 L1581.25553,1113.58871 L1581.25553,677.071059 Z M112.907294,932.882824 L112.907294,872.798118 L338.789647,677.071059 L338.789647,1113.58871 L112.907294,932.882824 Z M1807.13788,1077.56047 L1807.13788,1700.88282 L1569.05788,1399.32988 L1480.39906,1469.35341 L1747.05318,1807.04753 L172.879059,1807.04753 L439.646118,1469.35341 L350.987294,1399.32988 L112.907294,1700.88282 L112.907294,1077.56047 L601.377882,1468.33694 L1318.66729,1468.33694 L1807.13788,1077.56047 Z M1016.47059,282.352941 L1016.47059,564.705882 L1298.82353,564.705882 L1298.82353,677.647059 L1016.47059,677.647059 L1016.47059,960 L903.529412,960 L903.529412,677.647059 L621.176471,677.647059 L621.176471,564.705882 L903.529412,564.705882 L903.529412,282.352941 L1016.47059,282.352941 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconInvitationSolid":{"variant":"Solid","glyphName":"invitation","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1387.688,1315.136 L1774.99467,1813.376 L144.274667,1813.376 L531.688,1315.136 L620.968,1386.70933 L1298.408,1386.70933 L1387.688,1315.136 Z M53,932.234667 L448.413333,1248.71467 L53,1756.98133 L53,932.234667 Z M1866.33333,932.288 L1866.33333,1756.928 L1470.92,1248.66133 L1866.33333,932.288 Z M1546.408,-0.0106666667 L1546.408,498.336 L1866.30133,775.669333 L1866.30133,795.616 L1439.63467,1137.056 L1439.63467,106.656 L479.634667,106.656 L479.634667,1137.056 L52.968,795.616 L52.968,775.669333 L372.968,498.336 L372.968,-0.0106666667 L1546.408,-0.0106666667 Z M1013,266.666667 L1013,533.333333 L1279.66667,533.333333 L1279.66667,640 L1013,640 L1013,906.666667 L906.333333,906.666667 L906.333333,640 L639.666667,640 L639.666667,533.333333 L906.333333,533.333333 L906.333333,266.666667 L1013,266.666667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconItalicLine":{"variant":"Line","glyphName":"italic","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M738.076923 0L738.076923 147.692308 1086.63077 147.692308 680.476923 1772.30769 295 1772.30769 295 1920 1181.30154 1920 1181.30154 1772.30769 832.747692 1772.30769 1238.75385 147.692308 1624.23077 147.692308 1624.23077 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconItalicSolid":{"variant":"Solid","glyphName":"italic","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M754.428571 0L754.428571 274.422857 990.314286 274.422857 647.457143 1645.85143 343 1645.85143 343 1920 1165.99429 1920 1165.99429 1645.85143 930.108571 1645.85143 1272.96571 274.422857 1577.28571 274.422857 1577.28571 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconKeyboardShortcutsLine":{"variant":"Line","glyphName":"keyboard-shortcuts","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1807.05882,1637.70588 C1807.05882,1668.76471 1781.76,1694.17647 1750.58824,1694.17647 L169.411765,1694.17647 C138.24,1694.17647 112.941176,1668.76471 112.941176,1637.70588 L112.941176,734.176471 C112.941176,703.117647 138.24,677.705882 169.411765,677.705882 L1750.58824,677.705882 C1781.76,677.705882 1807.05882,703.117647 1807.05882,734.176471 L1807.05882,1637.70588 Z M1750.58824,564.764706 L1021.32706,564.764706 C1036.23529,477.8 1087.28471,451.258824 1154.71059,417.602353 C1244.04706,372.990588 1355.29412,317.310588 1355.29412,113 L1242.35294,113 C1242.35294,247.512941 1184.41412,276.425882 1104.11294,316.632941 C1023.81176,356.727059 926.569412,406.872941 907.595294,564.764706 L169.411765,564.764706 C76.0094118,564.764706 0,640.774118 0,734.176471 L0,1637.70588 C0,1731.10824 76.0094118,1807.11765 169.411765,1807.11765 L1750.58824,1807.11765 C1843.99059,1807.11765 1920,1731.10824 1920,1637.70588 L1920,734.176471 C1920,640.774118 1843.99059,564.764706 1750.58824,564.764706 L1750.58824,564.764706 Z M1185.88235,1242.41176 L734.117647,1242.41176 C702.945882,1242.41176 677.647059,1267.71059 677.647059,1298.88235 L677.647059,1411.82353 C677.647059,1442.99529 702.945882,1468.29412 734.117647,1468.29412 L1185.88235,1468.29412 C1217.05412,1468.29412 1242.35294,1442.99529 1242.35294,1411.82353 L1242.35294,1298.88235 C1242.35294,1267.71059 1217.05412,1242.41176 1185.88235,1242.41176 M1524.70588,1242.41176 L1411.76471,1242.41176 C1380.59294,1242.41176 1355.29412,1267.71059 1355.29412,1298.88235 L1355.29412,1411.82353 C1355.29412,1442.99529 1380.59294,1468.29412 1411.76471,1468.29412 L1524.70588,1468.29412 C1555.87765,1468.29412 1581.17647,1442.99529 1581.17647,1411.82353 L1581.17647,1298.88235 C1581.17647,1267.71059 1555.87765,1242.41176 1524.70588,1242.41176 M508.235294,1242.41176 L395.294118,1242.41176 C364.122353,1242.41176 338.823529,1267.71059 338.823529,1298.88235 L338.823529,1411.82353 C338.823529,1442.99529 364.122353,1468.29412 395.294118,1468.29412 L508.235294,1468.29412 C539.407059,1468.29412 564.705882,1442.99529 564.705882,1411.82353 L564.705882,1298.88235 C564.705882,1267.71059 539.407059,1242.41176 508.235294,1242.41176 M508.235294,903.588235 L395.294118,903.588235 C364.122353,903.588235 338.823529,928.887059 338.823529,960.058824 L338.823529,1073 C338.823529,1104.17176 364.122353,1129.47059 395.294118,1129.47059 L508.235294,1129.47059 C539.407059,1129.47059 564.705882,1104.17176 564.705882,1073 L564.705882,960.058824 C564.705882,928.887059 539.407059,903.588235 508.235294,903.588235 M734.117647,1129.47059 L847.058824,1129.47059 C878.230588,1129.47059 903.529412,1104.17176 903.529412,1073 L903.529412,960.058824 C903.529412,928.887059 878.230588,903.588235 847.058824,903.588235 L734.117647,903.588235 C702.945882,903.588235 677.647059,928.887059 677.647059,960.058824 L677.647059,1073 C677.647059,1104.17176 702.945882,1129.47059 734.117647,1129.47059 M1185.88235,903.588235 L1072.94118,903.588235 C1041.76941,903.588235 1016.47059,928.887059 1016.47059,960.058824 L1016.47059,1073 C1016.47059,1104.17176 1041.76941,1129.47059 1072.94118,1129.47059 L1185.88235,1129.47059 C1217.05412,1129.47059 1242.35294,1104.17176 1242.35294,1073 L1242.35294,960.058824 C1242.35294,928.887059 1217.05412,903.588235 1185.88235,903.588235 M1524.70588,903.588235 L1411.76471,903.588235 C1380.59294,903.588235 1355.29412,928.887059 1355.29412,960.058824 L1355.29412,1073 C1355.29412,1104.17176 1380.59294,1129.47059 1411.76471,1129.47059 L1524.70588,1129.47059 C1555.87765,1129.47059 1581.17647,1104.17176 1581.17647,1073 L1581.17647,960.058824 C1581.17647,928.887059 1555.87765,903.588235 1524.70588,903.588235\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconKeyboardShortcutsSolid":{"variant":"Solid","glyphName":"keyboard-shortcuts","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1524.70588,1242.41176 C1555.87765,1242.41176 1581.17647,1267.71059 1581.17647,1298.88235 L1581.17647,1411.82353 C1581.17647,1442.99529 1555.87765,1468.29412 1524.70588,1468.29412 L1411.76471,1468.29412 C1380.59294,1468.29412 1355.29412,1442.99529 1355.29412,1411.82353 L1355.29412,1298.88235 C1355.29412,1267.71059 1380.59294,1242.41176 1411.76471,1242.41176 L1524.70588,1242.41176 Z M1185.88235,1242.41176 C1217.05412,1242.41176 1242.35294,1267.71059 1242.35294,1298.88235 L1242.35294,1411.82353 C1242.35294,1442.99529 1217.05412,1468.29412 1185.88235,1468.29412 L734.117647,1468.29412 C702.945882,1468.29412 677.647059,1442.99529 677.647059,1411.82353 L677.647059,1298.88235 C677.647059,1267.71059 702.945882,1242.41176 734.117647,1242.41176 L1185.88235,1242.41176 Z M508.235294,1242.41176 C539.407059,1242.41176 564.705882,1267.71059 564.705882,1298.88235 L564.705882,1411.82353 C564.705882,1442.99529 539.407059,1468.29412 508.235294,1468.29412 L395.294118,1468.29412 C364.122353,1468.29412 338.823529,1442.99529 338.823529,1411.82353 L338.823529,1298.88235 C338.823529,1267.71059 364.122353,1242.41176 395.294118,1242.41176 L508.235294,1242.41176 Z M1524.70588,903.588235 C1555.87765,903.588235 1581.17647,928.887059 1581.17647,960.058824 L1581.17647,1073 C1581.17647,1104.17176 1555.87765,1129.47059 1524.70588,1129.47059 L1411.76471,1129.47059 C1380.59294,1129.47059 1355.29412,1104.17176 1355.29412,1073 L1355.29412,960.058824 C1355.29412,928.887059 1380.59294,903.588235 1411.76471,903.588235 L1524.70588,903.588235 Z M1185.88235,903.588235 C1217.05412,903.588235 1242.35294,928.887059 1242.35294,960.058824 L1242.35294,1073 C1242.35294,1104.17176 1217.05412,1129.47059 1185.88235,1129.47059 L1072.94118,1129.47059 C1041.76941,1129.47059 1016.47059,1104.17176 1016.47059,1073 L1016.47059,960.058824 C1016.47059,928.887059 1041.76941,903.588235 1072.94118,903.588235 L1185.88235,903.588235 Z M508.235294,903.588235 C539.407059,903.588235 564.705882,928.887059 564.705882,960.058824 L564.705882,1073 C564.705882,1104.17176 539.407059,1129.47059 508.235294,1129.47059 L395.294118,1129.47059 C364.122353,1129.47059 338.823529,1104.17176 338.823529,1073 L338.823529,960.058824 C338.823529,928.887059 364.122353,903.588235 395.294118,903.588235 L508.235294,903.588235 Z M847.058824,903.588235 C878.230588,903.588235 903.529412,928.887059 903.529412,960.058824 L903.529412,1073 C903.529412,1104.17176 878.230588,1129.47059 847.058824,1129.47059 L734.117647,1129.47059 C702.945882,1129.47059 677.647059,1104.17176 677.647059,1073 L677.647059,960.058824 C677.647059,928.887059 702.945882,903.588235 734.117647,903.588235 L847.058824,903.588235 Z M1750.58824,564.764706 L1021.32706,564.764706 C1036.23529,477.8 1087.28471,451.258824 1154.71059,417.602353 C1244.04706,372.990588 1355.29412,317.310588 1355.29412,113 L1242.35294,113 C1242.35294,247.512941 1184.41412,276.425882 1104.11294,316.632941 C1023.81176,356.727059 926.569412,406.872941 907.595294,564.764706 L169.411765,564.764706 C76.0094118,564.764706 0,640.774118 0,734.176471 L0,1637.70588 C0,1731.10824 76.0094118,1807.11765 169.411765,1807.11765 L1750.58824,1807.11765 C1843.99059,1807.11765 1920,1731.10824 1920,1637.70588 L1920,734.176471 C1920,640.774118 1843.99059,564.764706 1750.58824,564.764706 L1750.58824,564.764706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLaunchLine":{"variant":"Line","glyphName":"launch","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M112.941176 451.764706L451.764706 451.764706 451.764706 112.941176 112.941176 112.941176 112.941176 451.764706zM508.235294 0L56.4705882 0C25.2988235 0 0 25.2988235 0 56.4705882L0 508.235294C0 539.407059 25.2988235 564.705882 56.4705882 564.705882L508.235294 564.705882C539.407059 564.705882 564.705882 539.407059 564.705882 508.235294L564.705882 56.4705882C564.705882 25.2988235 539.407059 0 508.235294 0L508.235294 0zM790.588235 451.764706L1129.41176 451.764706 1129.41176 112.941176 790.588235 112.941176 790.588235 451.764706zM1185.88235 0L734.117647 0C702.945882 0 677.647059 25.2988235 677.647059 56.4705882L677.647059 508.235294C677.647059 539.407059 702.945882 564.705882 734.117647 564.705882L1185.88235 564.705882C1217.05412 564.705882 1242.35294 539.407059 1242.35294 508.235294L1242.35294 56.4705882C1242.35294 25.2988235 1217.05412 0 1185.88235 0L1185.88235 0zM1468.23529 451.764706L1807.05882 451.764706 1807.05882 112.941176 1468.23529 112.941176 1468.23529 451.764706zM1863.52941 0L1411.76471 0C1380.59294 0 1355.29412 25.2988235 1355.29412 56.4705882L1355.29412 508.235294C1355.29412 539.407059 1380.59294 564.705882 1411.76471 564.705882L1863.52941 564.705882C1894.70118 564.705882 1920 539.407059 1920 508.235294L1920 56.4705882C1920 25.2988235 1894.70118 0 1863.52941 0L1863.52941 0zM112.941176 1129.41176L451.764706 1129.41176 451.764706 790.588235 112.941176 790.588235 112.941176 1129.41176zM508.235294 677.647059L56.4705882 677.647059C25.2988235 677.647059 0 702.945882 0 734.117647L0 1185.88235C0 1217.05412 25.2988235 1242.35294 56.4705882 1242.35294L508.235294 1242.35294C539.407059 1242.35294 564.705882 1217.05412 564.705882 1185.88235L564.705882 734.117647C564.705882 702.945882 539.407059 677.647059 508.235294 677.647059L508.235294 677.647059zM790.588235 1129.41176L1129.41176 1129.41176 1129.41176 790.588235 790.588235 790.588235 790.588235 1129.41176zM1185.88235 677.647059L734.117647 677.647059C702.945882 677.647059 677.647059 702.945882 677.647059 734.117647L677.647059 1185.88235C677.647059 1217.05412 702.945882 1242.35294 734.117647 1242.35294L1185.88235 1242.35294C1217.05412 1242.35294 1242.35294 1217.05412 1242.35294 1185.88235L1242.35294 734.117647C1242.35294 702.945882 1217.05412 677.647059 1185.88235 677.647059L1185.88235 677.647059zM1468.23529 1129.41176L1807.05882 1129.41176 1807.05882 790.588235 1468.23529 790.588235 1468.23529 1129.41176zM1863.52941 677.647059L1411.76471 677.647059C1380.59294 677.647059 1355.29412 702.945882 1355.29412 734.117647L1355.29412 1185.88235C1355.29412 1217.05412 1380.59294 1242.35294 1411.76471 1242.35294L1863.52941 1242.35294C1894.70118 1242.35294 1920 1217.05412 1920 1185.88235L1920 734.117647C1920 702.945882 1894.70118 677.647059 1863.52941 677.647059L1863.52941 677.647059zM112.941176 1807.05882L451.764706 1807.05882 451.764706 1468.23529 112.941176 1468.23529 112.941176 1807.05882zM508.235294 1355.29412L56.4705882 1355.29412C25.2988235 1355.29412 0 1380.59294 0 1411.76471L0 1863.52941C0 1894.70118 25.2988235 1920 56.4705882 1920L508.235294 1920C539.407059 1920 564.705882 1894.70118 564.705882 1863.52941L564.705882 1411.76471C564.705882 1380.59294 539.407059 1355.29412 508.235294 1355.29412L508.235294 1355.29412zM790.588235 1807.05882L1129.41176 1807.05882 1129.41176 1468.23529 790.588235 1468.23529 790.588235 1807.05882zM1185.88235 1355.29412L734.117647 1355.29412C702.945882 1355.29412 677.647059 1380.59294 677.647059 1411.76471L677.647059 1863.52941C677.647059 1894.70118 702.945882 1920 734.117647 1920L1185.88235 1920C1217.05412 1920 1242.35294 1894.70118 1242.35294 1863.52941L1242.35294 1411.76471C1242.35294 1380.59294 1217.05412 1355.29412 1185.88235 1355.29412L1185.88235 1355.29412zM1468.23529 1807.05882L1807.05882 1807.05882 1807.05882 1468.23529 1468.23529 1468.23529 1468.23529 1807.05882zM1863.52941 1355.29412L1411.76471 1355.29412C1380.59294 1355.29412 1355.29412 1380.59294 1355.29412 1411.76471L1355.29412 1863.52941C1355.29412 1894.70118 1380.59294 1920 1411.76471 1920L1863.52941 1920C1894.70118 1920 1920 1894.70118 1920 1863.52941L1920 1411.76471C1920 1380.59294 1894.70118 1355.29412 1863.52941 1355.29412L1863.52941 1355.29412z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLaunchSolid":{"variant":"Solid","glyphName":"launch","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M508.235294 0L56.4705882 0C25.2988235 0 0 25.2988235 0 56.4705882L0 508.235294C0 539.407059 25.2988235 564.705882 56.4705882 564.705882L508.235294 564.705882C539.407059 564.705882 564.705882 539.407059 564.705882 508.235294L564.705882 56.4705882C564.705882 25.2988235 539.407059 0 508.235294 0L508.235294 0zM1185.88235 0L734.117647 0C702.945882 0 677.647059 25.2988235 677.647059 56.4705882L677.647059 508.235294C677.647059 539.407059 702.945882 564.705882 734.117647 564.705882L1185.88235 564.705882C1217.05412 564.705882 1242.35294 539.407059 1242.35294 508.235294L1242.35294 56.4705882C1242.35294 25.2988235 1217.05412 0 1185.88235 0L1185.88235 0zM1863.52941 0L1411.76471 0C1380.59294 0 1355.29412 25.2988235 1355.29412 56.4705882L1355.29412 508.235294C1355.29412 539.407059 1380.59294 564.705882 1411.76471 564.705882L1863.52941 564.705882C1894.70118 564.705882 1920 539.407059 1920 508.235294L1920 56.4705882C1920 25.2988235 1894.70118 0 1863.52941 0L1863.52941 0zM508.235294 677.647059L56.4705882 677.647059C25.2988235 677.647059 0 702.945882 0 734.117647L0 1185.88235C0 1217.05412 25.2988235 1242.35294 56.4705882 1242.35294L508.235294 1242.35294C539.407059 1242.35294 564.705882 1217.05412 564.705882 1185.88235L564.705882 734.117647C564.705882 702.945882 539.407059 677.647059 508.235294 677.647059L508.235294 677.647059zM1185.88235 677.647059L734.117647 677.647059C702.945882 677.647059 677.647059 702.945882 677.647059 734.117647L677.647059 1185.88235C677.647059 1217.05412 702.945882 1242.35294 734.117647 1242.35294L1185.88235 1242.35294C1217.05412 1242.35294 1242.35294 1217.05412 1242.35294 1185.88235L1242.35294 734.117647C1242.35294 702.945882 1217.05412 677.647059 1185.88235 677.647059L1185.88235 677.647059zM1863.52941 677.647059L1411.76471 677.647059C1380.59294 677.647059 1355.29412 702.945882 1355.29412 734.117647L1355.29412 1185.88235C1355.29412 1217.05412 1380.59294 1242.35294 1411.76471 1242.35294L1863.52941 1242.35294C1894.70118 1242.35294 1920 1217.05412 1920 1185.88235L1920 734.117647C1920 702.945882 1894.70118 677.647059 1863.52941 677.647059L1863.52941 677.647059zM508.235294 1355.29412L56.4705882 1355.29412C25.2988235 1355.29412 0 1380.59294 0 1411.76471L0 1863.52941C0 1894.70118 25.2988235 1920 56.4705882 1920L508.235294 1920C539.407059 1920 564.705882 1894.70118 564.705882 1863.52941L564.705882 1411.76471C564.705882 1380.59294 539.407059 1355.29412 508.235294 1355.29412L508.235294 1355.29412zM1185.88235 1355.29412L734.117647 1355.29412C702.945882 1355.29412 677.647059 1380.59294 677.647059 1411.76471L677.647059 1863.52941C677.647059 1894.70118 702.945882 1920 734.117647 1920L1185.88235 1920C1217.05412 1920 1242.35294 1894.70118 1242.35294 1863.52941L1242.35294 1411.76471C1242.35294 1380.59294 1217.05412 1355.29412 1185.88235 1355.29412L1185.88235 1355.29412zM1863.52941 1355.29412L1411.76471 1355.29412C1380.59294 1355.29412 1355.29412 1380.59294 1355.29412 1411.76471L1355.29412 1863.52941C1355.29412 1894.70118 1380.59294 1920 1411.76471 1920L1863.52941 1920C1894.70118 1920 1920 1894.70118 1920 1863.52941L1920 1411.76471C1920 1380.59294 1894.70118 1355.29412 1863.52941 1355.29412L1863.52941 1355.29412z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLifePreserverLine":{"variant":"Line","glyphName":"life-preserver","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1758.17665,1230.50493 L1423.65493,1089.94485 C1447.13806,1006.06039 1447.25096,916.756756 1425.80002,828.582115 L1763.70873,695.134707 C1821.51336,869.338895 1821.51336,1053.13955 1763.82163,1226.66634 L1758.17665,1230.50493 Z M1314.02935,1669.91044 L1214.00024,1427.17616 C1304.54578,1378.1777 1377.70476,1305.47031 1426.92902,1215.15058 L1668.76011,1315.63128 C1591.53674,1469.85223 1468.4761,1592.91287 1314.02935,1669.91044 L1314.02935,1669.91044 Z M693.306975,1763.73007 L689.355487,1758.08508 L830.028473,1423.67627 C914.364525,1447.2723 1003.44236,1447.2723 1091.27831,1425.70846 L1224.72571,1763.61717 C1050.40863,1821.4218 866.720865,1821.5347 693.306975,1763.73007 L693.306975,1763.73007 Z M604.229137,1668.66855 C450.12109,1591.55807 326.947552,1468.27163 250.062878,1314.05069 L492.684265,1214.02158 C541.79562,1304.56712 614.390107,1377.6132 704.709842,1426.83746 L604.229137,1668.66855 Z M161.775337,689.376824 L496.297054,829.936911 C472.701024,914.047164 472.701024,1003.3508 494.151961,1091.29964 L156.356153,1224.74705 C98.5515233,1050.54286 98.5515233,866.742203 156.243254,693.215413 L161.775337,689.376824 Z M605.809732,249.858416 L706.064638,492.592703 C615.406204,541.591159 542.247219,614.411444 493.022964,704.731179 L251.191875,604.250474 C328.302348,450.142427 451.588786,326.968889 605.809732,249.858416 L605.809732,249.858416 Z M1226.64501,156.151691 L1230.4836,161.796675 L1089.92351,496.205492 C1046.79584,484.238127 1002.42627,478.367344 957.492199,478.367344 C914.703224,478.367344 871.462652,483.673629 828.786577,494.173298 L695.11337,156.264591 C869.317558,98.5728606 1053.11822,98.2341616 1226.64501,156.151691 L1226.64501,156.151691 Z M1152.69572,1332.56623 C1125.4869,1313.93779 1091.617,1305.69611 1057.86,1314.84099 C993.055594,1332.90493 924.864195,1332.79203 860.511384,1314.95389 C827.318881,1305.58321 793.56188,1313.71199 766.240161,1332.34043 C689.016788,1292.37395 627.373569,1230.39203 587.407086,1152.94286 C606.148431,1125.50824 614.390107,1091.63834 605.019435,1057.88134 C587.068387,992.964032 586.955488,924.772632 605.019435,860.306922 C614.277207,826.88862 606.148431,793.244519 587.632886,766.148598 C627.486469,689.376824 688.790988,628.072304 765.675662,588.105822 C784.868606,601.540882 807.787239,609.21806 831.609069,609.21806 C841.657139,609.21806 851.931009,607.863264 862.091979,605.040772 C926.896389,586.976825 995.200688,587.089725 1059.4406,604.927872 C1092.6331,614.185645 1126.3901,606.169769 1153.71182,587.541323 C1230.8223,627.507806 1292.46551,689.489724 1332.5449,767.164696 C1313.80355,794.486415 1305.44898,828.243416 1314.93255,862.000417 C1332.8836,927.030626 1332.8836,995.334925 1314.93255,1059.34904 C1305.56188,1092.88024 1313.69065,1126.52434 1332.432,1153.73316 C1292.23971,1231.06943 1230.2578,1292.59975 1152.69572,1332.56623 L1152.69572,1332.56623 Z M1315.60995,251.100312 C1469.83089,328.323685 1592.89153,451.610123 1670.002,605.83107 L1427.15482,705.973075 C1378.15636,615.201742 1305.44898,542.155657 1215.12924,493.044301 L1315.60995,251.100312 Z M1870.85051,659.458412 C1860.35084,628.298104 1837.43221,602.556979 1807.6267,588.896119 C1800.17532,585.509129 1792.04655,585.28333 1784.14357,583.589835 C1693.37224,385.112218 1537.23199,228.520379 1338.98018,137.297447 C1337.17378,129.055771 1337.06088,120.588296 1333.33519,112.685319 C1319.67433,82.6540074 1293.93321,59.5095755 1262.2084,49.0099063 C1065.53718,-16.4719012 857.237293,-16.2461019 659.662874,49.122806 C628.389666,59.5095755 602.648542,82.4282081 589.100581,112.23372 C585.600692,119.572199 585.374892,127.700975 583.681397,135.716851 C384.977981,226.488185 228.499041,382.741325 137.501909,580.993143 C129.034434,582.799537 120.566959,583.138236 112.551082,586.751026 C82.6326701,600.411886 59.4882381,626.15301 48.9885689,657.764917 C-16.3803389,854.549039 -16.3803389,1062.96183 49.1014686,1260.19755 C59.3753384,1291.47075 82.4068707,1317.21188 112.099483,1330.87274 C119.550862,1334.25973 127.792537,1334.25973 135.695514,1336.06612 C226.466847,1534.65664 382.607088,1691.36138 580.971805,1782.58431 C582.7782,1790.82599 583.116899,1799.40636 586.729688,1807.30934 C600.277649,1837.22775 626.244572,1860.37218 657.74358,1870.87185 C756.079191,1903.61276 857.350193,1919.87031 958.621195,1919.87031 C1060.0051,1919.87031 1161.5019,1903.49986 1260.17621,1870.75895 C1291.44942,1860.48508 1317.19054,1837.56645 1330.8514,1807.76094 C1334.23839,1800.30956 1334.46419,1792.18078 1336.27059,1784.16491 C1534.8611,1693.39357 1691.56584,1537.02753 1782.67587,1338.54992 C1791.03045,1336.74352 1799.49792,1336.74352 1807.5138,1333.13073 C1837.31931,1319.46987 1860.46374,1293.72875 1870.96341,1262.11684 C1936.33232,1065.33272 1936.33232,856.919932 1870.85051,659.458412 L1870.85051,659.458412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLifePreserverSolid":{"variant":"Solid","glyphName":"life-preserver","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1758.20065,1230.50493 L1423.67894,1089.94485 C1447.16207,1006.06039 1447.27497,916.756756 1425.82403,828.582115 L1763.73274,695.134707 C1821.53737,869.338895 1821.53737,1053.13955 1763.84564,1226.66634 L1758.20065,1230.50493 Z M1314.05336,1669.91044 L1214.02425,1427.17616 C1304.56979,1378.1777 1377.72877,1305.47031 1426.95303,1215.15058 L1668.78412,1315.63128 C1591.56074,1469.85223 1468.50011,1592.91287 1314.05336,1669.91044 L1314.05336,1669.91044 Z M693.330984,1763.73007 L689.379495,1758.08508 L830.052482,1423.67627 C914.388534,1447.2723 1003.46637,1447.2723 1091.30231,1425.70846 L1224.74972,1763.61717 C1050.43263,1821.4218 866.744874,1821.5347 693.330984,1763.73007 L693.330984,1763.73007 Z M604.253146,1668.66855 C450.145099,1591.55807 326.971561,1468.27163 250.086887,1314.05069 L492.708273,1214.02158 C541.819629,1304.56712 614.414116,1377.6132 704.73385,1426.83746 L604.253146,1668.66855 Z M161.799346,689.376824 L496.321063,829.936911 C472.725032,914.047164 472.725032,1003.3508 494.175969,1091.29964 L156.380162,1224.74705 C98.5755319,1050.54286 98.5755319,866.742203 156.267262,693.215413 L161.799346,689.376824 Z M605.833741,249.858416 L706.088646,492.592703 C615.430213,541.591159 542.271228,614.411444 493.046972,704.731179 L251.215883,604.250474 C328.326357,450.142427 451.612794,326.968889 605.833741,249.858416 L605.833741,249.858416 Z M1226.66902,156.151691 L1230.5076,161.796675 L1089.94752,496.205492 C1046.81984,484.238127 1002.45028,478.367344 957.516207,478.367344 C914.727233,478.367344 871.48666,483.673629 828.810586,494.173298 L695.137378,156.264591 C869.341566,98.5728606 1053.14223,98.2341616 1226.66902,156.151691 L1226.66902,156.151691 Z M1152.71973,1332.56623 C1125.51091,1313.93779 1091.64101,1305.69611 1057.88401,1314.84099 C993.079603,1332.90493 924.888203,1332.79203 860.535392,1314.95389 C827.34289,1305.58321 793.585889,1313.71199 766.264169,1332.34043 C689.040796,1292.37395 627.397578,1230.39203 587.431095,1152.94286 C606.17244,1125.50824 614.414116,1091.63834 605.043443,1057.88134 C587.092396,992.964032 586.979496,924.772632 605.043443,860.306922 C614.301216,826.88862 606.17244,793.244519 587.656894,766.148598 C627.510477,689.376824 688.814997,628.072304 765.699671,588.105822 C784.892615,601.540882 807.811247,609.21806 831.633077,609.21806 C841.681148,609.21806 851.955018,607.863264 862.115988,605.040772 C926.920397,586.976825 995.224696,587.089725 1059.46461,604.927872 C1092.65711,614.185645 1126.41411,606.169769 1153.73583,587.541323 C1230.8463,627.507806 1292.48952,689.489724 1332.5689,767.164696 C1313.82756,794.486415 1305.47298,828.243416 1314.95656,862.000417 C1332.9076,927.030626 1332.9076,995.334925 1314.95656,1059.34904 C1305.58588,1092.88024 1313.71466,1126.52434 1332.45601,1153.73316 C1292.26372,1231.06943 1230.28181,1292.59975 1152.71973,1332.56623 L1152.71973,1332.56623 Z M1315.63395,251.100312 C1469.8549,328.323685 1592.91554,451.610123 1670.02601,605.83107 L1427.17883,705.973075 C1378.18037,615.201742 1305.47298,542.155657 1215.15325,493.044301 L1315.63395,251.100312 Z M1870.87452,659.458412 C1860.37485,628.298104 1837.45622,602.556979 1807.65071,588.896119 C1800.19933,585.509129 1792.07055,585.28333 1784.16758,583.589835 C1693.39624,385.112218 1537.256,228.520379 1339.00419,137.297447 C1337.19779,129.055771 1337.08489,120.588296 1333.3592,112.685319 C1319.69834,82.6540074 1293.95722,59.5095755 1262.23241,49.0099063 C1065.56119,-16.4719012 857.261302,-16.2461019 659.686883,49.122806 C628.413675,59.5095755 602.67255,82.4282081 589.12459,112.23372 C585.6247,119.572199 585.398901,127.700975 583.705406,135.716851 C385.00199,226.488185 228.52305,382.741325 137.525917,580.993143 C129.058442,582.799537 120.590967,583.138236 112.575091,586.751026 C82.6566787,600.411886 59.5122467,626.15301 49.0125776,657.764917 C-16.3563303,854.549039 -16.3563303,1062.96183 49.1254772,1260.19755 C59.399347,1291.47075 82.4308794,1317.21188 112.123492,1330.87274 C119.57487,1334.25973 127.816546,1334.25973 135.719523,1336.06612 C226.490856,1534.65664 382.631097,1691.36138 580.995814,1782.58431 C582.802209,1790.82599 583.140908,1799.40636 586.753697,1807.30934 C600.301657,1837.22775 626.268581,1860.37218 657.767588,1870.87185 C756.103199,1903.61276 857.374202,1919.87031 958.645204,1919.87031 C1060.02911,1919.87031 1161.52591,1903.49986 1260.20022,1870.75895 C1291.47343,1860.48508 1317.21455,1837.56645 1330.87541,1807.76094 C1334.2624,1800.30956 1334.4882,1792.18078 1336.29459,1784.16491 C1534.88511,1693.39357 1691.58985,1537.02753 1782.69988,1338.54992 C1791.05446,1336.74352 1799.52193,1336.74352 1807.53781,1333.13073 C1837.34332,1319.46987 1860.48775,1293.72875 1870.98742,1262.11684 C1936.35633,1065.33272 1936.35633,856.919932 1870.87452,659.458412 L1870.87452,659.458412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLikeLine":{"variant":"Line","glyphName":"like","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1637.17647,1129.41176 L1524.23529,1129.41176 L1524.23529,1242.35294 C1586.46588,1242.35294 1637.17647,1292.95059 1637.17647,1355.29412 C1637.17647,1417.63765 1586.46588,1468.23529 1524.23529,1468.23529 L1411.29412,1468.23529 L1411.29412,1581.17647 C1473.52471,1581.17647 1524.23529,1631.77412 1524.23529,1694.11765 C1524.23529,1756.46118 1473.52471,1807.05882 1411.29412,1807.05882 L451.294118,1807.05882 C295.661176,1807.05882 168.941176,1680.45176 168.941176,1524.70588 L168.941176,903.529412 L275.557647,903.529412 C415.717647,903.529412 549.891765,845.929412 643.858824,745.750588 C778.484706,602.089412 937.28,379.256471 957.383529,112.941176 L993.750588,112.941176 C1044.23529,112.941176 1091.78353,135.303529 1124.08471,174.381176 C1156.72471,213.910588 1169.93882,265.524706 1160.22588,315.896471 C1137.52471,434.484706 1100.02824,551.943529 1048.97882,664.997647 C1025.14824,717.515294 1029.66588,777.6 1060.72471,825.938824 C1092.12235,874.503529 1145.43059,903.529412 1203.36941,903.529412 L1637.17647,903.529412 C1699.40706,903.529412 1750.11765,954.127059 1750.11765,1016.47059 C1750.11765,1078.81412 1699.40706,1129.41176 1637.17647,1129.41176 M1863.05882,1016.47059 C1863.05882,891.896471 1761.75059,790.588235 1637.17647,790.588235 L1203.36941,790.588235 C1183.71765,790.588235 1166.32471,781.214118 1155.70824,764.724706 C1145.31765,748.574118 1143.84941,729.148235 1151.86824,711.529412 C1206.53176,590.456471 1246.73882,464.414118 1271.24706,337.016471 C1287.17176,253.44 1265.37412,167.943529 1211.16235,102.437647 C1157.28941,37.3835294 1078.00471,2.84217094e-14 993.750588,2.84217094e-14 L846.588235,2.84217094e-14 L846.588235,56.4705882 C846.588235,310.927059 691.52,529.694118 561.524706,668.498824 C488.790588,745.976471 384.545882,790.588235 275.557647,790.588235 L56,790.588235 L56,1524.70588 C56,1742.68235 233.317647,1920 451.294118,1920 L1411.29412,1920 C1535.86824,1920 1637.17647,1818.69176 1637.17647,1694.11765 C1637.17647,1647.69882 1623.05882,1604.44235 1599.00235,1568.52706 C1686.87059,1537.58118 1750.11765,1453.66588 1750.11765,1355.29412 C1750.11765,1308.87529 1736,1265.61882 1711.94353,1229.70353 C1799.81176,1198.75765 1863.05882,1114.84235 1863.05882,1016.47059\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLikeSolid":{"variant":"Solid","glyphName":"like","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1863.05882,1016.47059 C1863.05882,891.896471 1761.75059,790.588235 1637.17647,790.588235 L1203.36941,790.588235 C1183.71765,790.588235 1166.32471,781.214118 1155.70824,764.724706 C1145.31765,748.574118 1143.84941,729.148235 1151.86824,711.529412 C1206.64471,590.456471 1246.73882,464.414118 1271.24706,337.016471 C1287.17176,253.44 1265.37412,167.943529 1211.16235,102.437647 C1157.28941,37.3835294 1078.00471,0 993.750588,0 L846.588235,0 L846.588235,56.4705882 C846.588235,310.927059 691.52,529.694118 561.524706,668.498824 C488.790588,745.976471 384.545882,790.588235 275.557647,790.588235 L56,790.588235 L56,1524.70588 C56,1742.68235 233.317647,1920 451.294118,1920 L1411.29412,1920 C1535.86824,1920 1637.17647,1818.69176 1637.17647,1694.11765 C1637.17647,1647.69882 1623.05882,1604.44235 1599.00235,1568.52706 C1686.87059,1537.58118 1750.11765,1453.66588 1750.11765,1355.29412 C1750.11765,1308.87529 1736,1265.61882 1711.94353,1229.70353 C1799.81176,1198.75765 1863.05882,1114.84235 1863.05882,1016.47059\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLineReaderLine":{"variant":"Line","glyphName":"line-reader","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path fill-rule=\"nonzero\" d=\"M320.001 212.118L1600 214.549 1600.2 107.883 320.203 105.451z\"/>\n        <path d=\"M266.667,533.334 C237.211,533.334 213.333,557.212 213.333,586.667 L213.333,906.667 C213.333,936.122 237.211,960 266.667,960 L1653.33,960 C1682.79,960 1706.67,936.122 1706.67,906.667 L1706.67,586.667 C1706.67,557.212 1682.79,533.334 1653.33,533.334 L266.667,533.334 Z M320,640 L320,853.334 L1600,853.334 L1600,640 L320,640 Z\"/>\n        <path d=\"M53.3333,320 C23.8781,320 0,343.878 0,373.334 L0,1333.33 C0,1362.79 23.8782,1386.67 53.3334,1386.67 L1866.67,1386.67 C1896.12,1386.67 1920,1362.79 1920,1333.33 L1920,373.334 C1920,343.878 1896.12,320 1866.67,320 L53.3333,320 Z M106.667,426.667 L106.667,1280 L1813.33,1280 L1813.33,426.667 L106.667,426.667 Z\"/>\n        <path fill-rule=\"nonzero\" d=\"M1600 1601.22L320.001 1598.78 320.203 1492.12 1600.2 1494.55zM319.981 1812.12L1386.65 1814.55 1386.89 1707.88 320.224 1705.45z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconLineReaderSolid":{"variant":"Solid","glyphName":"line-reader","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M320.224,1705.45 L1386.89,1707.88 L1386.65,1814.55 L319.981,1812.12 L320.224,1705.45 Z M320.203,1492.12 L1600.2,1494.55 L1600,1601.22 L320.001,1598.78 L320.203,1492.12 Z M1866.67,320 C1896.12,320 1920,343.878 1920,373.334 L1920,1333.33 C1920,1362.79 1896.12,1386.67 1866.67,1386.67 L53.3334,1386.67 C23.8782,1386.67 0,1362.79 0,1333.33 L0,373.334 C0,343.878 23.8781,320 53.3333,320 L1866.67,320 Z M1653.33,586.667 L266.667,586.667 C237.50556,586.667 213.811118,610.069828 213.333,639.118041 L213.333,640 L213.333,853.334 C213.333,882.49445 236.735828,906.188882 265.785012,906.659855 L266.667,906.667 L1653.33,906.667 C1682.4954,906.667 1706.19184,883.264172 1706.67,854.215959 L1706.67,853.334 L1706.67,640 C1706.67,610.83955 1683.26521,587.145118 1654.21211,586.674145 L1653.33,586.667 Z M320.203,105.451 L1600.2,107.883 L1600,214.549 L320.001,212.118 L320.203,105.451 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconLinkLine":{"variant":"Line","glyphName":"link","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1866.00282,351.563294 L1565.12753,50.5750588 C1495.66871,-17.0767059 1384.19576,-16.8508235 1316.20518,51.1397647 L906.228706,461.116235 C837.899294,529.558588 837.899294,640.805647 906.341647,709.248 L937.965176,740.871529 L1017.70165,660.909176 L986.078118,629.398588 C961.795765,605.003294 961.795765,565.360941 986.078118,540.965647 L1396.05459,130.989176 C1420.56282,106.593882 1460.88282,106.819765 1485.72988,130.989176 L1785.58871,430.960941 C1810.32282,456.146824 1810.43576,496.579765 1786.15341,520.975059 L1376.17694,930.951529 C1351.66871,955.233882 1312.02635,955.233882 1287.63106,930.951529 L1176.83576,820.043294 L1336.30871,660.683294 L1256.45929,580.833882 L820.845176,1016.33506 L711.066353,906.556235 C678.200471,872.899765 634.266353,854.264471 587.395765,853.925647 C543.800471,855.619765 495.122824,872.222118 461.240471,906.104471 L51.3769412,1316.08094 C-17.0654118,1384.52329 -17.0654118,1495.77035 51.3769412,1564.21271 L352.929882,1865.76565 C387.038118,1899.87388 431.988706,1917.04094 476.939294,1917.04094 C521.889882,1917.04094 566.840471,1899.87388 601.061647,1865.76565 L1011.03812,1455.78918 C1044.80753,1421.90682 1063.44282,1377.18212 1063.104,1329.74682 C1062.87812,1282.76329 1044.12988,1238.82918 1011.03812,1206.528 L980.544,1176.03388 L900.694588,1255.88329 L931.640471,1286.82918 C943.499294,1298.46212 950.049882,1313.93506 950.162824,1330.42447 C950.275765,1347.36565 943.499294,1363.51624 931.188706,1375.93976 L521.212235,1785.91624 C497.720471,1809.408 456.271059,1809.408 432.779294,1785.91624 L131.226353,1484.36329 C119.480471,1472.61741 113.042824,1456.91859 113.042824,1440.09035 C113.042824,1423.37506 119.480471,1407.67624 131.226353,1395.93035 L541.202824,985.953882 C553.400471,973.643294 569.438118,966.866824 586.266353,966.866824 L586.718118,966.866824 C603.207529,966.979765 618.680471,973.530353 630.652235,985.953882 L740.995765,1096.18447 L578.812235,1258.48094 L658.661647,1338.33035 L1096.98635,899.892706 L1207.78165,1010.80094 C1242.11576,1045.02212 1286.95341,1062.07624 1331.904,1062.07624 C1376.85459,1062.07624 1421.80518,1045.02212 1456.02635,1010.80094 L1866.00282,600.824471 C1933.88047,532.833882 1933.99341,421.360941 1866.00282,351.563294\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLinkSolid":{"variant":"Solid","glyphName":"link","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1311.32612,891.546353 L1249.66024,829.880471 L1356.95435,722.473412 L1197.25553,562.774588 L1089.73553,670.407529 L1028.18259,610.096941 L1412.52141,225.193412 L1694.64847,506.642824 L1311.32612,891.546353 Z M891.862588,1309.42871 L508.540235,1694.33224 L225.396706,1412.88282 L609.735529,1027.97929 L670.949647,1089.19341 L560.944941,1199.08518 L720.643765,1358.784 L830.761412,1248.77929 L891.862588,1309.42871 Z M1854.34729,347.508706 L1571.31671,64.4781176 C1482.77082,-21.8089412 1340.12612,-21.4701176 1253.38729,65.4945882 L868.483765,450.398118 C780.954353,538.040471 780.954353,680.459294 868.483765,768.101647 L930.149647,829.880471 L830.648471,929.381647 L770.337882,869.184 C728.210824,826.040471 671.966118,802.096941 611.768471,801.758118 L610.413176,801.758118 C550.215529,801.758118 493.519059,825.362824 450.601412,868.167529 L65.6978824,1253.184 C-21.9444706,1340.82635 -21.9444706,1483.24518 65.6978824,1570.88753 L348.841412,1854.03106 C392.662588,1897.85224 450.149647,1919.76282 507.749647,1919.76282 C565.236706,1919.76282 622.836706,1897.85224 666.657882,1854.03106 L1051.56141,1469.12753 C1094.81788,1425.87106 1118.42259,1368.60988 1118.08376,1307.96047 C1117.632,1247.76282 1093.68847,1191.51812 1051.56141,1150.29459 L990.347294,1089.19341 L1089.96141,989.579294 L1151.62729,1051.35812 C1195.44847,1095.06635 1252.93553,1116.97694 1310.53553,1116.97694 C1368.02259,1116.97694 1425.62259,1095.06635 1469.33082,1051.24518 L1854.34729,666.341647 C1941.19906,579.489882 1941.65082,436.845176 1854.34729,347.508706 L1854.34729,347.508706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLinkedinLine":{"variant":"Line","glyphName":"linkedin","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1168,601.321321 L1168,676.276276 C1240.31231,631.351351 1323.7958,605.165165 1450.64264,605.165165 C1863.4955,605.165165 1916.34835,913.753754 1916.34835,1182.58258 L1916.34835,1182.58258 L1916.34835,1915.7958 L1438.99099,1920 L1438.99099,1218.73874 C1438.99099,1101.02102 1396.82883,1078.67868 1318.87087,1078.67868 C1244.75676,1078.67868 1198.75075,1102.1021 1198.75075,1218.73874 L1198.75075,1218.73874 L1198.75075,1920 L715.147147,1915.7958 L715.147147,601.321321 L1168,601.321321 Z M480.48048,600.528529 L480.48048,1919.44745 L0,1919.44745 L0,600.528529 L480.48048,600.528529 Z M360.36036,720.648649 L120.12012,720.648649 L120.12012,1799.32733 L360.36036,1799.32733 L360.36036,720.648649 Z M1047.87988,721.441441 L835.267267,721.441441 L835.267267,1796.75676 L1078.63063,1798.91892 L1078.63063,1218.73874 C1078.63063,992.312312 1229.14114,958.558559 1318.87087,958.558559 C1428.42042,958.558559 1559.11111,1003.72372 1559.11111,1218.73874 L1559.11111,1218.73874 L1559.11111,1798.91892 L1796.22823,1796.75676 L1796.22823,1182.58258 C1796.22823,849.249249 1702.65465,725.285285 1450.64264,725.285285 C1299.17117,725.285285 1233.58559,770.21021 1169.32132,824.264264 L1169.32132,824.264264 L1152.62462,838.438438 L1047.87988,838.438438 L1047.87988,721.441441 Z M240.24024,-2.5243549e-29 C372.732733,-2.5243549e-29 480.48048,107.747748 480.48048,240.24024 C480.48048,372.732733 372.732733,480.48048 240.24024,480.48048 C107.747748,480.48048 0,372.732733 0,240.24024 C0,107.747748 107.747748,-2.5243549e-29 240.24024,-2.5243549e-29 Z M240.24024,120.12012 C174.054054,120.12012 120.12012,174.054054 120.12012,240.24024 C120.12012,306.426426 174.054054,360.36036 240.24024,360.36036 C306.426426,360.36036 360.36036,306.426426 360.36036,240.24024 C360.36036,174.054054 306.426426,120.12012 240.24024,120.12012 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLinkedinSolid":{"variant":"Solid","glyphName":"linkedin","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M478.233792,600.750939 L478.233792,1920 L0.0360450563,1920 L0.0360450563,600.750939 L478.233792,600.750939 Z M1199.08686,598.31189 L1199.08686,676.049061 C1268.89412,630.992741 1349.39474,604.8 1471.46733,604.8 C1869.04431,604.8 1919.98798,913.465832 1919.98798,1182.36195 L1919.98798,1182.36195 L1919.98798,1919.96395 L1439.38723,1919.96395 L1439.38723,1219.12791 C1439.38723,1101.26058 1397.21452,1078.91264 1319.23705,1078.91264 C1245.10438,1078.91264 1199.08686,1102.46208 1199.08686,1219.12791 L1199.08686,1219.12791 L1199.08686,1919.96395 L718.486108,1919.96395 L718.486108,598.31189 L1199.08686,598.31189 Z M239.098874,0 C371.02378,0 478.197747,107.294118 478.197747,239.098874 C478.197747,370.90363 371.02378,478.197747 239.098874,478.197747 C107.294118,478.197747 0,370.90363 0,239.098874 C0,107.294118 107.294118,0 239.098874,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLockLine":{"variant":"Line","glyphName":"lock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.29412,1694.11765 C1581.29412,1756.34824 1530.69647,1807.05882 1468.35294,1807.05882 L451.882353,1807.05882 C389.651765,1807.05882 338.941176,1756.34824 338.941176,1694.11765 L338.941176,1016.47059 L451.882353,1016.47059 L1468.35294,1016.47059 L1581.29412,1016.47059 L1581.29412,1694.11765 Z M1468.35294,903.529412 L1468.35294,508.235294 C1468.35294,228.028235 1240.32471,0 960.117647,0 C679.910588,0 451.882353,228.028235 451.882353,508.235294 L451.882353,903.529412 L226,903.529412 L226,1694.11765 C226,1818.69176 327.308235,1920 451.882353,1920 L1468.35294,1920 C1592.92706,1920 1694.23529,1818.69176 1694.23529,1694.11765 L1694.23529,903.529412 L1468.35294,903.529412 Z M1016.58824,1242.35294 L1016.58824,1581.17647 L903.647059,1581.17647 L903.647059,1242.35294 L1016.58824,1242.35294 Z M960.117647,112.941176 C1178.09412,112.941176 1355.41176,290.258824 1355.41176,508.235294 L1355.41176,903.529412 L564.823529,903.529412 L564.823529,508.235294 C564.823529,290.258824 742.141176,112.941176 960.117647,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLockSolid":{"variant":"Solid","glyphName":"lock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1016.58824,1242.35294 L1016.58824,1581.17647 L903.647059,1581.17647 L903.647059,1242.35294 L1016.58824,1242.35294 Z M960.117647,112.941176 C1178.09412,112.941176 1355.41176,290.258824 1355.41176,508.235294 L1355.41176,903.529412 L564.823529,903.529412 L564.823529,508.235294 C564.823529,290.258824 742.141176,112.941176 960.117647,112.941176 Z M1468.35294,903.529412 L1468.35294,508.235294 C1468.35294,228.028235 1240.32471,-5.68434189e-14 960.117647,-5.68434189e-14 C679.910588,-5.68434189e-14 451.882353,228.028235 451.882353,508.235294 L451.882353,903.529412 L226,903.529412 L226,1694.11765 C226,1818.69176 327.308235,1920 451.882353,1920 L1468.35294,1920 C1592.92706,1920 1694.23529,1818.69176 1694.23529,1694.11765 L1694.23529,903.529412 L1468.35294,903.529412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLtiLine":{"variant":"Line","glyphName":"lti","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.23529,734.117647 C1581.23529,952.094118 1403.91765,1129.41176 1185.94118,1129.41176 L960.058824,1129.41176 C742.082353,1129.41176 564.764706,952.094118 564.764706,734.117647 L564.764706,564.705882 L1581.23529,564.705882 L1581.23529,734.117647 Z M1807.11765,451.764706 L1694.17647,451.764706 L1468.29412,451.764706 L1468.29412,0 L1355.35294,0 L1355.35294,451.764706 L790.647059,451.764706 L790.647059,0 L677.705882,0 L677.705882,451.764706 L451.823529,451.764706 L338.882353,451.764706 L338.882353,564.705882 L451.823529,564.705882 L451.823529,734.117647 C451.823529,1014.32471 679.851765,1242.35294 960.058824,1242.35294 L1016.52941,1242.35294 L1016.52941,1637.64706 C1016.52941,1731.04941 940.52,1807.05882 847.117647,1807.05882 C753.715294,1807.05882 677.705882,1731.04941 677.705882,1637.64706 C677.705882,1482.01412 550.985882,1355.29412 395.352941,1355.29412 C239.72,1355.29412 113,1482.01412 113,1637.64706 L113,1920 L225.941176,1920 L225.941176,1637.64706 C225.941176,1544.24471 301.950588,1468.23529 395.352941,1468.23529 C488.755294,1468.23529 564.764706,1544.24471 564.764706,1637.64706 C564.764706,1793.28 691.484706,1920 847.117647,1920 C1002.86353,1920 1129.47059,1793.28 1129.47059,1637.64706 L1129.47059,1242.35294 L1185.94118,1242.35294 C1466.14824,1242.35294 1694.17647,1014.32471 1694.17647,734.117647 L1694.17647,564.705882 L1807.11765,564.705882 L1807.11765,451.764706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconLtiSolid":{"variant":"Solid","glyphName":"lti","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.17647,451.764706 L1468.29412,451.764706 L1468.29412,0 L1355.35294,0 L1355.35294,451.764706 L790.647059,451.764706 L790.647059,0 L677.705882,0 L677.705882,451.764706 L451.823529,451.764706 L338.882353,451.764706 L338.882353,564.705882 L451.823529,564.705882 L451.823529,734.117647 C451.823529,1014.32471 679.851765,1242.35294 960.058824,1242.35294 L1016.52941,1242.35294 L1016.52941,1637.64706 C1016.52941,1731.04941 940.52,1807.05882 847.117647,1807.05882 C753.715294,1807.05882 677.705882,1731.04941 677.705882,1637.64706 C677.705882,1482.01412 550.985882,1355.29412 395.352941,1355.29412 C239.72,1355.29412 113,1482.01412 113,1637.64706 L113,1920 L225.941176,1920 L225.941176,1637.64706 C225.941176,1544.24471 301.950588,1468.23529 395.352941,1468.23529 C488.755294,1468.23529 564.764706,1544.24471 564.764706,1637.64706 C564.764706,1793.28 691.484706,1920 847.117647,1920 C1002.75059,1920 1129.47059,1793.28 1129.47059,1637.64706 L1129.47059,1242.35294 L1185.94118,1242.35294 C1466.14824,1242.35294 1694.17647,1014.32471 1694.17647,734.117647 L1694.17647,564.705882 L1807.11765,564.705882 L1807.11765,451.764706 L1694.17647,451.764706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMarkAsReadLine":{"variant":"Line","glyphName":"mark-as-read","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,-5.68434189e-14 C430.644706,-5.68434189e-14 -5.68434189e-14,430.644706 -5.68434189e-14,960 C-5.68434189e-14,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,-5.68434189e-14 960,-5.68434189e-14\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMarkAsReadSolid":{"variant":"Solid","glyphName":"mark-as-read","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMarkerLine":{"variant":"Line","glyphName":"marker","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1290,1083.396 C1175.88,1196.556 1036.32,1353.276 957.96,1550.196 C881.04,1351.116 742.8,1195.356 630,1083.276 C488.64,943.236 420,803.796 420,656.796 C420,360.876 660.84,120.036 963.12,120.036 C1259.16,120.036 1500,360.876 1500,656.796 C1500,803.796 1431.36,943.236 1290,1083.396 M956.88,0.036 C594.72,0.036 300,294.636 300,656.796 C300,837.396 380.28,1004.796 545.4,1168.476 C785.16,1406.316 896.88,1626.036 896.88,1860.036 L896.88,1920.036 L1016.88,1920.036 L1016.88,1860.036 C1016.88,1627.116 1127.28,1413.876 1374.6,1168.596 C1539.72,1004.796 1620,837.396 1620,656.796 C1620,294.636 1325.28,0.036 956.88,0.036\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMarkerSolid":{"variant":"Solid","glyphName":"marker","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M956.952,0 C594.552,0 299.952,294.6 299.952,656.88 C299.952,837.48 380.232,1004.76 545.352,1168.44 C785.112,1406.4 896.952,1626.12 896.952,1860 L896.952,1920 L1016.952,1920 L1016.952,1860 C1016.952,1627.2 1127.232,1413.84 1374.552,1168.56 C1539.672,1004.76 1619.952,837.48 1619.952,656.88 C1619.952,294.6 1325.352,0 956.952,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMasqueradeLine":{"variant":"Line","glyphName":"masquerade","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1411.76471,-5.68434189e-14 C1213.89176,-5.68434189e-14 1043.91529,114.861176 960,280.207059 C876.084706,114.861176 706.108235,-5.68434189e-14 508.235294,-5.68434189e-14 L0,-5.68434189e-14 L0,508.235294 C0,788.442353 228.028235,1016.47059 508.235294,1016.47059 L903.529412,1016.47059 L1016.47059,1016.47059 L1411.76471,1016.47059 C1572.25412,1016.47059 1713.88235,940.235294 1807.05882,823.792941 L1807.05882,1694.11765 C1807.05882,1756.46118 1756.46118,1807.05882 1694.11765,1807.05882 C1631.77412,1807.05882 1581.17647,1756.46118 1581.17647,1694.11765 L1581.17647,1129.41176 L1468.23529,1129.41176 L1468.23529,1694.11765 C1468.23529,1818.69176 1569.54353,1920 1694.11765,1920 C1818.69176,1920 1920,1818.69176 1920,1694.11765 L1920,508.235294 L1920,451.764706 L1920,-5.68434189e-14 L1411.76471,-5.68434189e-14 Z M903.529412,903.529412 L508.235294,903.529412 C290.258824,903.529412 112.941176,726.211765 112.941176,508.235294 L112.941176,112.941176 L508.235294,112.941176 C726.211765,112.941176 903.529412,290.258824 903.529412,508.235294 L903.529412,903.529412 Z M1807.05882,508.235294 C1807.05882,726.211765 1629.74118,903.529412 1411.76471,903.529412 L1016.47059,903.529412 L1016.47059,508.235294 C1016.47059,290.258824 1193.78824,112.941176 1411.76471,112.941176 L1807.05882,112.941176 L1807.05882,451.764706 L1807.05882,508.235294 Z M508.235294,564.705882 C434.597647,564.705882 371.802353,517.496471 348.536471,451.764706 L508.235294,451.764706 C581.872941,451.764706 644.668235,498.974118 667.934118,564.705882 L508.235294,564.705882 Z M508.235294,338.823529 L225.882353,338.823529 L225.882353,395.294118 C225.882353,551.04 352.489412,677.647059 508.235294,677.647059 L790.588235,677.647059 L790.588235,621.176471 C790.588235,465.430588 663.981176,338.823529 508.235294,338.823529 L508.235294,338.823529 Z M1129.41176,621.176471 L1129.41176,677.647059 L1411.76471,677.647059 C1567.51059,677.647059 1694.11765,551.04 1694.11765,395.294118 L1694.11765,338.823529 L1411.76471,338.823529 C1256.01882,338.823529 1129.41176,465.430588 1129.41176,621.176471 M1411.76471,564.705882 L1252.06588,564.705882 C1275.33176,498.974118 1338.12706,451.764706 1411.76471,451.764706 L1571.46353,451.764706 C1548.19765,517.496471 1485.40235,564.705882 1411.76471,564.705882\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMasqueradeSolid":{"variant":"Solid","glyphName":"masquerade","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,863.966118 L1920,1694.08376 C1920,1818.31906 1818.35294,1919.96612 1694.11765,1919.96612 C1569.88235,1919.96612 1468.23529,1818.31906 1468.23529,1694.08376 L1468.23529,1694.08376 L1468.23529,1125.98965 C1655.71765,1110.17788 1818.35294,1009.66024 1920,863.966118 L1920,863.966118 Z M508.235294,-2.5243549e-29 C706.108235,-2.5243549e-29 876.084706,114.861176 960,280.207059 C1043.91529,114.861176 1213.89176,-2.5243549e-29 1411.76471,-2.5243549e-29 L1411.76471,-2.5243549e-29 L1920,-2.5243549e-29 L1920,508.235294 C1920,788.442353 1691.97176,1016.47059 1411.76471,1016.47059 L1411.76471,1016.47059 L508.235294,1016.47059 C228.028235,1016.47059 5.04870979e-29,788.442353 5.04870979e-29,508.235294 L5.04870979e-29,508.235294 L5.04870979e-29,-2.5243549e-29 Z M1694.11765,338.823529 L1411.76471,338.823529 C1256.01882,338.823529 1129.41176,465.543529 1129.41176,621.176471 L1129.41176,621.176471 L1129.41176,677.647059 L1411.76471,677.647059 C1567.51059,677.647059 1694.11765,550.927059 1694.11765,395.294118 L1694.11765,395.294118 L1694.11765,338.823529 Z M508.235294,338.823529 L225.882353,338.823529 L225.882353,395.294118 C225.882353,550.927059 352.489412,677.647059 508.235294,677.647059 L508.235294,677.647059 L790.588235,677.647059 L790.588235,621.176471 C790.588235,465.543529 663.981176,338.823529 508.235294,338.823529 L508.235294,338.823529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMasteryPathsLine":{"variant":"Line","glyphName":"mastery-paths","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1892.10042,374.225941 L1517.87448,0 L1143.76011,374.225941 L1222.64435,453.110181 L1462.08647,213.668061 L1462.08647,692.663877 C1462.08647,884.128312 1345.48954,954.198047 1210.37099,1035.31381 C1118.76709,1090.20921 1020.02232,1150.2371 959.994421,1252.21757 C900.078103,1150.2371 801.333333,1090.20921 709.729428,1035.31381 C574.610879,954.198047 457.902371,884.128312 457.902371,692.663877 L457.902371,213.668061 L697.456067,453.110181 L776.340307,374.225941 L402.114365,0 L28,374.225941 L106.88424,453.110181 L346.32636,213.668061 L346.32636,692.663877 C346.32636,947.391911 509.004184,1044.90934 652.490934,1130.93445 C787.609484,1212.05021 904.206416,1282.11994 904.206416,1473.69596 L904.206416,1920 L1015.78243,1920 L1015.78243,1473.69596 C1015.78243,1282.11994 1132.49093,1212.05021 1267.60948,1130.93445 C1411.09623,1044.90934 1573.66248,947.391911 1573.66248,692.663877 L1573.66248,213.668061 L1813.21618,453.110181 L1892.10042,374.225941 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMasteryPathsSolid":{"variant":"Solid","glyphName":"mastery-paths","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1496.09903,0 L1098.78743,397.3116 L1250.33817,548.862342 L1388.92029,410.280228 L1388.92029,741.033828 C1388.92029,887.868706 1314.85977,939.100145 1172.95512,1024.30725 C1101.89561,1066.85721 1022.26181,1114.7661 960.205314,1186.03997 C898.148822,1114.7661 818.515016,1066.85721 747.45551,1024.30725 C605.550854,939.100145 531.490343,887.868706 531.490343,741.033828 L531.490343,410.280228 L670.072457,548.862342 L821.6232,397.3116 L424.3116,0 L27,397.3116 L178.550742,548.862342 L317.132857,410.280228 L317.132857,741.033828 C317.132857,1016.05448 494.513676,1122.59015 637.061404,1208.01161 C778.96606,1293.21871 853.026571,1344.45015 853.026571,1491.28503 L853.026571,1920 L1067.38406,1920 L1067.38406,1491.28503 C1067.38406,1344.45015 1141.44457,1293.21871 1283.34922,1208.01161 C1425.89695,1122.59015 1603.27777,1016.05448 1603.27777,741.033828 L1603.27777,410.280228 L1741.85989,548.862342 L1893.41063,397.3116 L1496.09903,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMaterialsRequiredLightLine":{"variant":"Line","glyphName":"materials-required-light","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M740.133333,1272.3869 L735.866667,1267.69357 C700.56,1232.81357 663.226667,1206.57357 625.253333,1187.48023 C921.253333,849.773566 1574.69333,181.720233 1777.36,173.506899 C1783.97333,173.826899 1791.01333,173.826899 1799.86667,182.680233 C1803.17333,185.986899 1803.28,194.413566 1803.17333,199.000233 C1795.28,399.213566 1126.26667,1055.1069 792.08,1349.29357 C777.893333,1324.01357 760.933333,1298.52023 740.133333,1272.3869 L740.133333,1272.3869 Z M721.253333,1550.1469 C667.493333,1669.93357 419.386667,1726.1469 257.893333,1746.73357 C284.133333,1679.7469 311.653333,1578.20023 311.653333,1447.53357 C311.653333,1375.85357 362.533333,1300.5469 430.053333,1272.28023 C449.786667,1264.0669 470.373333,1260.01357 491.28,1260.01357 C546,1260.01357 603.6,1287.7469 658.64,1341.29357 C724.666667,1425.24023 745.786667,1495.4269 721.253333,1550.1469 L721.253333,1550.1469 Z M277.626667,180.546899 L380.346667,283.266899 L242.426667,421.293566 L138.96,317.826899 L277.626667,180.546899 Z M1909.73333,203.266899 C1911.54667,154.413566 1892.02667,124.013566 1869.52,101.506899 C1852.77333,84.6535659 1821.30667,64.6002326 1773.09333,66.9468992 C1548.66667,76.1202326 1036.98667,586.733566 733.2,911.960233 L317.84,496.706899 L455.76,358.680233 L778,680.920233 L853.413333,605.506899 L315.6,67.5868992 C294.906667,46.8935659 261.413333,46.7868992 240.293333,67.3735659 L25.8933333,279.640233 C15.76,289.666899 10,303.213566 10,317.506899 C10,331.693566 15.6533333,345.346899 25.68,355.266899 L660.666667,990.253566 C590.906667,1066.20023 538.746667,1124.8669 512.72,1154.6269 C470.8,1151.1069 428.986667,1157.1869 388.986667,1173.8269 C280.613333,1219.05357 204.986667,1331.5869 204.986667,1447.53357 C204.986667,1655.7469 124.56,1777.6669 124.026667,1778.6269 L62.5866667,1868.01357 L170.853333,1862.04023 C226.213333,1859.05357 714.533333,1825.6669 818.533333,1593.88023 C838.053333,1550.36023 842.32,1503.96023 832.826667,1455.00023 C889.36,1404.97357 1036.88,1272.81357 1205.84,1108.8669 L1714.64,1617.56023 L1714.64,1755.48023 L1576.72,1755.48023 L1138.96,1317.8269 L1063.54667,1393.24023 L1532.56,1862.1469 L1821.30667,1862.1469 L1821.30667,1573.40023 L1281.89333,1034.09357 C1577.36,741.293566 1902.69333,380.013566 1909.73333,203.266899 L1909.73333,203.266899 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMaterialsRequiredLightSolid":{"variant":"Solid","glyphName":"materials-required-light","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1886.76222 L1436.68082,1758.65352 L1072.15334,1394.12605 C1181.62805,1293.96834 1309.73675,1174.01201 1435.5162,1047.06794 L1791.8913,1403.44304 L1920,1886.76222 Z M396.671115,188.739657 L580.681791,372.750333 L407.152736,547.444013 L221.977435,362.268712 L396.671115,188.739657 Z M546.907679,877.032754 C648.230013,764.064175 771.680214,632.461603 902.118161,504.352905 L444.420721,46.6554646 C418.798981,21.033725 375.707873,19.8691005 348.921509,46.6554646 L78.7286182,314.519107 C65.9177484,326.165352 58.9300012,343.63472 58.9300012,362.268712 C58.9300012,379.73808 65.9177484,397.207448 78.7286182,408.853693 L546.907679,877.032754 Z M718.922722,1545.99308 C660.342108,1676.89688 389.217518,1738.27259 213.009827,1760.74985 C241.543128,1687.61143 271.706903,1576.73917 271.706903,1433.9562 C271.706903,1355.69344 327.14303,1273.47094 400.863763,1242.84132 C422.525779,1233.75725 444.88657,1229.21521 467.829674,1229.21521 C527.574912,1229.21521 590.464637,1259.49545 650.675725,1318.07606 C722.765983,1409.61555 745.709086,1486.36431 718.922722,1545.99308 L718.922722,1545.99308 Z M1913.94395,184.896396 C1916.15674,129.110881 1893.56302,94.4050704 1868.29067,69.0162556 C1848.9579,49.6834884 1814.95087,26.7403852 1758.00073,29.3025591 C1437.26313,42.3463539 625.053985,960.303408 491.005702,1114.26677 C445.35242,1110.65644 399.699139,1117.17833 355.909256,1135.34648 C237.816329,1184.72656 155.24445,1307.47798 155.24445,1433.9562 C155.24445,1661.29091 67.5482227,1794.52396 66.849448,1795.68858 L0,1893.16766 L117.976465,1886.64576 C178.420478,1883.38481 711.585588,1846.93206 825.252942,1593.74269 C846.449108,1546.34247 851.107606,1495.79777 840.742448,1442.45796 C1003.09111,1301.07255 1901.48247,504.003518 1913.94395,184.896396 L1913.94395,184.896396 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMaterialsRequiredLine":{"variant":"Line","glyphName":"materials-required","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M740.133333,1272.3869 L735.866667,1267.69357 C700.56,1232.81357 663.226667,1206.57357 625.253333,1187.48023 C921.253333,849.773566 1574.69333,181.720233 1777.36,173.506899 C1783.97333,173.826899 1791.01333,173.826899 1799.86667,182.680233 C1803.17333,185.986899 1803.28,194.413566 1803.17333,199.000233 C1795.28,399.213566 1126.26667,1055.1069 792.08,1349.29357 C777.893333,1324.01357 760.933333,1298.52023 740.133333,1272.3869 L740.133333,1272.3869 Z M721.253333,1550.1469 C667.493333,1669.93357 419.386667,1726.1469 257.893333,1746.73357 C284.133333,1679.7469 311.653333,1578.20023 311.653333,1447.53357 C311.653333,1375.85357 362.533333,1300.5469 430.053333,1272.28023 C449.786667,1264.0669 470.373333,1260.01357 491.28,1260.01357 C546,1260.01357 603.6,1287.7469 658.64,1341.29357 C724.666667,1425.24023 745.786667,1495.4269 721.253333,1550.1469 L721.253333,1550.1469 Z M277.626667,180.546899 L380.346667,283.266899 L242.426667,421.293566 L138.96,317.826899 L277.626667,180.546899 Z M1909.73333,203.266899 C1911.54667,154.413566 1892.02667,124.013566 1869.52,101.506899 C1852.77333,84.6535659 1821.30667,64.6002326 1773.09333,66.9468992 C1548.66667,76.1202326 1036.98667,586.733566 733.2,911.960233 L317.84,496.706899 L455.76,358.680233 L778,680.920233 L853.413333,605.506899 L315.6,67.5868992 C294.906667,46.8935659 261.413333,46.7868992 240.293333,67.3735659 L25.8933333,279.640233 C15.76,289.666899 10,303.213566 10,317.506899 C10,331.693566 15.6533333,345.346899 25.68,355.266899 L660.666667,990.253566 C590.906667,1066.20023 538.746667,1124.8669 512.72,1154.6269 C470.8,1151.1069 428.986667,1157.1869 388.986667,1173.8269 C280.613333,1219.05357 204.986667,1331.5869 204.986667,1447.53357 C204.986667,1655.7469 124.56,1777.6669 124.026667,1778.6269 L62.5866667,1868.01357 L170.853333,1862.04023 C226.213333,1859.05357 714.533333,1825.6669 818.533333,1593.88023 C838.053333,1550.36023 842.32,1503.96023 832.826667,1455.00023 C889.36,1404.97357 1036.88,1272.81357 1205.84,1108.8669 L1714.64,1617.56023 L1714.64,1755.48023 L1576.72,1755.48023 L1138.96,1317.8269 L1063.54667,1393.24023 L1532.56,1862.1469 L1821.30667,1862.1469 L1821.30667,1573.40023 L1281.89333,1034.09357 C1577.36,741.293566 1902.69333,380.013566 1909.73333,203.266899 L1909.73333,203.266899 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMaterialsRequiredSolid":{"variant":"Solid","glyphName":"materials-required","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1886.76222 L1436.68082,1758.65352 L1072.15334,1394.12605 C1181.62805,1293.96834 1309.73675,1174.01201 1435.5162,1047.06794 L1791.8913,1403.44304 L1920,1886.76222 Z M396.671115,188.739657 L580.681791,372.750333 L407.152736,547.444013 L221.977435,362.268712 L396.671115,188.739657 Z M546.907679,877.032754 C648.230013,764.064175 771.680214,632.461603 902.118161,504.352905 L444.420721,46.6554646 C418.798981,21.033725 375.707873,19.8691005 348.921509,46.6554646 L78.7286182,314.519107 C65.9177484,326.165352 58.9300012,343.63472 58.9300012,362.268712 C58.9300012,379.73808 65.9177484,397.207448 78.7286182,408.853693 L546.907679,877.032754 Z M718.922722,1545.99308 C660.342108,1676.89688 389.217518,1738.27259 213.009827,1760.74985 C241.543128,1687.61143 271.706903,1576.73917 271.706903,1433.9562 C271.706903,1355.69344 327.14303,1273.47094 400.863763,1242.84132 C422.525779,1233.75725 444.88657,1229.21521 467.829674,1229.21521 C527.574912,1229.21521 590.464637,1259.49545 650.675725,1318.07606 C722.765983,1409.61555 745.709086,1486.36431 718.922722,1545.99308 L718.922722,1545.99308 Z M1913.94395,184.896396 C1916.15674,129.110881 1893.56302,94.4050704 1868.29067,69.0162556 C1848.9579,49.6834884 1814.95087,26.7403852 1758.00073,29.3025591 C1437.26313,42.3463539 625.053985,960.303408 491.005702,1114.26677 C445.35242,1110.65644 399.699139,1117.17833 355.909256,1135.34648 C237.816329,1184.72656 155.24445,1307.47798 155.24445,1433.9562 C155.24445,1661.29091 67.5482227,1794.52396 66.849448,1795.68858 L0,1893.16766 L117.976465,1886.64576 C178.420478,1883.38481 711.585588,1846.93206 825.252942,1593.74269 C846.449108,1546.34247 851.107606,1495.79777 840.742448,1442.45796 C1003.09111,1301.07255 1901.48247,504.003518 1913.94395,184.896396 L1913.94395,184.896396 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMatureLightLine":{"variant":"Line","glyphName":"mature-light","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M997.35716,948.306842 C997.35716,948.193981 997.244298,948.081119 997.244298,947.968258 L997.35716,948.306842 Z M136.901011,505.212556 L449.753115,1749.28498 L661.029861,1696.1272 L448.285916,850.23019 L628.300024,804.859864 L1001.42017,1610.46532 L1231.43193,1552.56736 L1178.95133,666.378791 L1359.19116,621.008465 L1571.9351,1467.01834 L1783.09899,1413.86057 L1470.13402,169.78815 L1008.30473,286.035504 L1034.60146,962.978838 C1036.06866,998.191629 1013.38349,1028.88996 979.41218,1037.35457 C945.553727,1045.70632 911.130966,1029.45427 895.894663,997.51446 L598.84317,389.078063 L136.901011,505.212556 Z M367.81566,1886.18599 L0,423.2751 L660.126969,257.255819 L914.516812,778.45027 L891.831648,198.906419 L1552.18434,33 L1920,1495.79802 L1489.88479,1603.91935 L1303.6633,863.209264 L1349.59793,1639.245 L938.443452,1742.73901 L611.59652,1037.24171 L797.818011,1778.06466 L367.81566,1886.18599 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMatureLightSolid":{"variant":"Solid","glyphName":"mature-light","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1117.93694,1672.03012 L1286.67106,1629.56424 L1231.44282,696.444235 L1315.80988,675.324235 L1539.77224,1565.97835 L1877.46635,1481.04659 L1518.99106,55.9548235 L928.195765,204.585412 L957.899294,965.470118 C958.689882,985.234824 933.278118,991.672471 924.581647,973.827765 L590.727529,289.517176 L0.0451764706,438.034824 L358.407529,1863.01365 L695.988706,1778.08188 L471.913412,887.540706 L556.280471,866.307765 L949.202824,1714.496 L1117.93694,1672.03012 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMatureLine":{"variant":"Line","glyphName":"mature","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M997.35716,948.306842 C997.35716,948.193981 997.244298,948.081119 997.244298,947.968258 L997.35716,948.306842 Z M136.901011,505.212556 L449.753115,1749.28498 L661.029861,1696.1272 L448.285916,850.23019 L628.300024,804.859864 L1001.42017,1610.46532 L1231.43193,1552.56736 L1178.95133,666.378791 L1359.19116,621.008465 L1571.9351,1467.01834 L1783.09899,1413.86057 L1470.13402,169.78815 L1008.30473,286.035504 L1034.60146,962.978838 C1036.06866,998.191629 1013.38349,1028.88996 979.41218,1037.35457 C945.553727,1045.70632 911.130966,1029.45427 895.894663,997.51446 L598.84317,389.078063 L136.901011,505.212556 Z M367.81566,1886.18599 L0,423.2751 L660.126969,257.255819 L914.516812,778.45027 L891.831648,198.906419 L1552.18434,33 L1920,1495.79802 L1489.88479,1603.91935 L1303.6633,863.209264 L1349.59793,1639.245 L938.443452,1742.73901 L611.59652,1037.24171 L797.818011,1778.06466 L367.81566,1886.18599 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMatureSolid":{"variant":"Solid","glyphName":"mature","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1117.93694,1672.03012 L1286.67106,1629.56424 L1231.44282,696.444235 L1315.80988,675.324235 L1539.77224,1565.97835 L1877.46635,1481.04659 L1518.99106,55.9548235 L928.195765,204.585412 L957.899294,965.470118 C958.689882,985.234824 933.278118,991.672471 924.581647,973.827765 L590.727529,289.517176 L0.0451764706,438.034824 L358.407529,1863.01365 L695.988706,1778.08188 L471.913412,887.540706 L556.280471,866.307765 L949.202824,1714.496 L1117.93694,1672.03012 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMediaLine":{"variant":"Line","glyphName":"media","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1813.33333,1557.19467 C1255.57333,1684.02133 664.853333,1684.02133 106.666667,1557.19467 L106.666667,468.448 C664.426667,341.621333 1255.14667,341.514667 1813.33333,468.448 L1813.33333,1557.19467 Z M1879.04,374.261333 C1278.72,230.688 640.64,230.794667 40.96,374.261333 L0,384.074667 L0,1641.568 L40.96,1651.38133 C341.013333,1723.168 650.24,1759.43467 960,1759.43467 C1269.86667,1759.43467 1579.2,1723.168 1879.04,1651.38133 L1920,1641.568 L1920,384.074667 L1879.04,374.261333 Z M853.333333,786.986667 L1229.65333,1012.8 L853.333333,1238.61333 L853.333333,786.986667 Z M746.666667,1426.98667 L1437.01333,1012.8 L746.666667,598.613333 L746.666667,1426.98667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMediaSolid":{"variant":"Solid","glyphName":"media","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M746.666667,1374.30933 L746.666667,545.936 L1437.01333,960.122667 L746.666667,1374.30933 Z M1879.04,321.616 C1278.93333,178.149333 640.64,178.149333 40.96,321.616 L0,331.429333 L0,1588.92267 L40.96,1598.736 C341.013333,1670.416 650.24,1706.78933 960,1706.78933 C1269.86667,1706.78933 1579.2,1670.416 1879.04,1598.736 L1920,1588.92267 L1920,331.429333 L1879.04,321.616 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMessageLine":{"variant":"Line","glyphName":"message","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1694.23529 L1920,1694.23529 L1920,226 L0,226 L0,1694.23529 Z M112.941176,376.663529 L112.941176,338.941176 L1807.05882,338.941176 L1807.05882,376.663529 L960,1111.23294 L112.941176,376.663529 Z M1807.05882,526.197647 L1807.05882,1476.71059 L1455.92471,1037.82118 L1367.60471,1108.29647 L1745.95765,1581.29412 L174.042353,1581.29412 L552.395294,1108.29647 L464.075294,1037.82118 L112.941176,1476.71059 L112.941176,526.197647 L960,1260.76706 L1807.05882,526.197647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMessageSolid":{"variant":"Solid","glyphName":"message","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,428.265749 L1920,1617.80519 L1455.83907,1037.66049 L1367.6372,1108.24457 L1836.31551,1694.14893 L83.6844891,1694.14893 L552.362802,1108.24457 L464.160932,1037.66049 L0,1617.80519 L0,428.265749 L959.943533,1260.70619 L1920,428.265749 Z M1919.93224,226 L1919.93224,278.627493 L959.988707,1111.06794 L0.0451738133,278.627493 L0.0451738133,226 L1919.93224,226 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMicOffLine":{"variant":"Line","glyphName":"mic-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M621.452,435.678 C621.452,248.82 773.456,96.8164 960.314,96.8164 C1119.63,96.8164 1253.62,207.32 1289.65,355.712 L724.351,1162.76 C660.918,1101.14 621.452,1014.98 621.452,919.766 L621.452,435.678 Z M668.286,1242.8 C580.118,1163.01 524.636,1047.74 524.636,919.767 L524.636,435.679 C524.636,195.475 720.111,0 960.315,0 C1137.27,0 1289.96,106.09 1358.09,257.997 L1538.8,0 L1631.18,64.6686 L333.381,1917.48 L241,1852.81 L546.287,1416.97 C414.414,1301.53 331,1132.02 331,943.411 L331,709.984 L427.818,709.984 L427.818,943.411 C427.818,1099.22 495.137,1239.65 602.21,1337.13 L668.286,1242.8 Z M960.314,1258.63 C950.927,1258.63 941.627,1258.24 932.431,1257.49 L870.36,1346.11 C899.396,1352.23 929.487,1355.45 960.315,1355.45 C1200.52,1355.45 1395.99,1159.97 1395.99,919.767 L1395.99,595.685 L1299.18,733.908 L1299.18,919.766 C1299.18,1106.62 1147.17,1258.63 960.314,1258.63 Z M797.318,1450.38 L739.603,1532.78 C793.897,1553.18 851.733,1566.28 911.908,1570.88 L911.908,1823.18 L669.861,1823.18 L669.861,1920 L1250.77,1920 L1250.77,1823.18 L1008.726,1823.18 L1008.726,1570.88 C1333.19,1546.08 1589.63,1274.12 1589.63,943.411 L1589.63,709.984 L1492.81,709.984 L1492.81,943.411 C1492.81,1236.96 1253.87,1475.91 960.315,1475.91 C903.491,1475.91 848.713,1466.95 797.318,1450.38 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMicOffSolid":{"variant":"Solid","glyphName":"mic-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M666.286,1242.8 C578.118,1163.01 522.636,1047.74 522.636,919.767 L522.636,435.679 C522.636,195.475 718.111,0 958.315,0 C1135.27,0 1287.96,106.09 1356.09,257.997 L1536.8,0 L1629.18,64.6686 L331.381,1917.48 L239,1852.81 L544.289,1416.97 C412.414,1301.53 329,1132.02 329,943.408 L329,709.98 L425.818,709.98 L425.818,943.408 C425.818,1099.22 493.138,1239.65 600.211,1337.13 L666.286,1242.8 Z M795.32,1450.38 L737.604,1532.78 C791.898,1553.18 849.733,1566.28 909.908,1570.88 L909.908,1823.18 L667.861,1823.18 L667.861,1920 L1248.77,1920 L1248.77,1823.18 L1006.726,1823.18 L1006.726,1570.88 C1331.19,1546.08 1587.63,1274.12 1587.63,943.408 L1587.63,709.98 L1490.81,709.98 L1490.81,943.408 C1490.81,1236.96 1251.87,1475.9 958.315,1475.9 C901.491,1475.9 846.714,1466.95 795.32,1450.38 Z M1393.99,595.685 L868.36,1346.11 C897.396,1352.23 927.487,1355.45 958.315,1355.45 C1198.52,1355.45 1393.99,1159.97 1393.99,919.767 L1393.99,595.685 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMicLine":{"variant":"Line","glyphName":"mic","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.314561,96.8176248 C773.456546,96.8176248 621.452875,248.821296 621.452875,435.679312 L621.452875,919.767436 C621.452875,1106.62545 773.456546,1258.62912 960.314561,1258.62912 C1147.17258,1258.62912 1299.17625,1106.62545 1299.17625,919.767436 L1299.17625,435.679312 C1299.17625,248.821296 1147.17258,96.8176248 960.314561,96.8176248 M427.817625,709.983006 L427.817625,943.4103 C427.817625,1236.96134 666.763523,1475.90724 960.314561,1475.90724 C1253.8656,1475.90724 1492.8115,1236.96134 1492.8115,943.4103 L1492.8115,709.983006 L1589.62912,709.983006 L1589.62912,943.4103 C1589.62912,1274.11677 1333.19106,1546.07818 1008.72823,1570.88121 L1008.723,1823.182 L1250.76744,1823.18238 L1250.76744,1920 L669.861687,1920 L669.861687,1823.18238 L911.905,1823.182 L911.900895,1570.88121 C587.438064,1546.07818 331,1274.11677 331,943.4103 L331,709.983006 L427.817625,709.983006 Z M960.314561,0 C1200.51909,0 1395.99387,195.474785 1395.99387,435.679312 L1395.99387,919.767436 C1395.99387,1159.97196 1200.51909,1355.44675 960.314561,1355.44675 C720.110034,1355.44675 524.63525,1159.97196 524.63525,919.767436 L524.63525,435.679312 C524.63525,195.474785 720.110034,0 960.314561,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMicSolid":{"variant":"Solid","glyphName":"mic","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M425.817625,709.983006 L425.817625,943.4103 C425.817625,1236.96134 664.763523,1475.90724 958.314561,1475.90724 C1251.8656,1475.90724 1490.8115,1236.96134 1490.8115,943.4103 L1490.8115,709.983006 L1587.62912,709.983006 L1587.62912,943.4103 C1587.62912,1274.11677 1331.19106,1546.07818 1006.72823,1570.88121 L1006.723,1823.182 L1248.76744,1823.18238 L1248.76744,1920 L667.861687,1920 L667.861687,1823.18238 L909.905,1823.182 L909.900895,1570.88121 C585.438064,1546.07818 329,1274.11677 329,943.4103 L329,709.983006 L425.817625,709.983006 Z M958.314561,0 C1198.51909,0 1393.99387,195.474785 1393.99387,435.679312 L1393.99387,919.767436 C1393.99387,1159.97196 1198.51909,1355.44675 958.314561,1355.44675 C718.110034,1355.44675 522.63525,1159.97196 522.63525,919.767436 L522.63525,435.679312 C522.63525,195.474785 718.110034,0 958.314561,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMiniArrowDownLine":{"variant":"Line","glyphName":"mini-arrow-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"matrix(-1 0 0 1 1920 0)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMiniArrowDownSolid":{"variant":"Solid","glyphName":"mini-arrow-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"matrix(-1 0 0 1 1920 0)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMiniArrowEndLine":{"variant":"Line","glyphName":"mini-arrow-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"matrix(0 1 1 0 -.278 .278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMiniArrowEndSolid":{"variant":"Solid","glyphName":"mini-arrow-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"matrix(0 1 1 0 -.278 .278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMiniArrowLeftLine":{"variant":"Line","glyphName":"mini-arrow-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"rotate(90 960 960.278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMiniArrowLeftSolid":{"variant":"Solid","glyphName":"mini-arrow-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"rotate(90 960 960.278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMiniArrowRightLine":{"variant":"Line","glyphName":"mini-arrow-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"matrix(0 1 1 0 -.278 .278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMiniArrowRightSolid":{"variant":"Solid","glyphName":"mini-arrow-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"matrix(0 1 1 0 -.278 .278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMiniArrowStartLine":{"variant":"Line","glyphName":"mini-arrow-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"rotate(90 960 960.278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMiniArrowStartSolid":{"variant":"Solid","glyphName":"mini-arrow-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"rotate(90 960 960.278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMiniArrowUpLine":{"variant":"Line","glyphName":"mini-arrow-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"rotate(-180 960 960.278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMiniArrowUpSolid":{"variant":"Solid","glyphName":"mini-arrow-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M925.966182,1226.25955 C944.762449,1253.5558 975.234883,1253.55919 994.033486,1226.25955 L1345.1073,716.424242 C1363.90357,689.127987 1352.28747,667 1319.14817,667 L600.851498,667 C567.718398,667 556.093763,689.124596 574.892365,716.424242 L925.966182,1226.25955 Z\" transform=\"rotate(-180 960 960.278)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMinimizeLine":{"variant":"Line","glyphName":"minimize","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z\"/>\n        <path d=\"M451.764706 1016.47059L1468.23529 1016.47059 1468.23529 903.529412 451.764706 903.529412z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconMinimizeSolid":{"variant":"Solid","glyphName":"minimize","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.46824,0 1920,430.644706 1920,960 C1920,1489.35529 1489.46824,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M1468.23529,903.529412 L451.764706,903.529412 L451.764706,1016.47059 L1468.23529,1016.47059 L1468.23529,903.529412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconModuleLine":{"variant":"Line","glyphName":"module","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1242.35294,65 L1242.35294,334.138824 L1609.97647,548.275294 C1661.92941,578.543529 1694.11765,634.562353 1694.11765,694.647059 L1694.11765,694.647059 L1694.11765,1081.47059 L1920,1081.47059 L1920,1646.17647 L1362.97412,1646.17647 L1045.27059,1831.28706 C1018.95529,1846.64706 989.477647,1854.32706 960,1854.32706 C930.522353,1854.32706 901.044706,1846.64706 874.729412,1831.28706 L874.729412,1831.28706 L557.025882,1646.17647 L-2.27373675e-13,1646.17647 L-2.27373675e-13,1081.47059 L225.882353,1081.47059 L225.882353,694.647059 C225.882353,634.562353 258.183529,578.430588 310.023529,548.275294 L310.023529,548.275294 L677.647059,334.138824 L677.647059,65 L1242.35294,65 Z M1242.35294,464.811765 L1242.35294,629.705882 L677.647059,629.705882 L677.647059,464.811765 L366.832941,645.856471 C349.552941,655.908235 338.823529,674.656471 338.823529,694.647059 L338.823529,694.647059 L338.823529,1081.47059 L564.705882,1081.47059 L564.705882,1520.02118 L931.651765,1733.70588 C949.044706,1743.98353 970.955294,1743.98353 988.348235,1733.70588 L988.348235,1733.70588 L1355.29412,1520.02118 L1355.29412,1081.47059 L1581.17647,1081.47059 L1581.17647,694.647059 C1581.17647,674.656471 1570.33412,655.908235 1553.05412,645.856471 L1553.05412,645.856471 L1242.35294,464.811765 Z M1807.05882,1194.41176 L1468.23529,1194.41176 L1468.23529,1533.23529 L1807.05882,1533.23529 L1807.05882,1194.41176 Z M451.764706,1194.41176 L112.941176,1194.41176 L112.941176,1533.23529 L451.764706,1533.23529 L451.764706,1194.41176 Z M1129.41176,177.941176 L790.588235,177.941176 L790.588235,516.764706 L1129.41176,516.764706 L1129.41176,177.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconModuleSolid":{"variant":"Solid","glyphName":"module","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.17647,1072.47059 L1355.29412,1072.47059 L1355.29412,1511.02118 L988.461176,1724.70588 C970.955294,1734.98353 949.044706,1734.98353 931.538824,1724.70588 L564.705882,1511.02118 L564.705882,1072.47059 L338.823529,1072.47059 L338.823529,685.647059 C338.823529,665.543529 349.665882,646.908235 366.832941,636.856471 L677.647059,455.811765 L677.647059,620.705882 L1242.35294,620.705882 L1242.35294,455.811765 L1553.16706,636.856471 C1570.33412,646.908235 1581.17647,665.543529 1581.17647,685.647059 L1581.17647,1072.47059 Z M1694.11765,1072.47059 L1694.11765,685.647059 C1694.11765,625.562353 1661.92941,569.430588 1609.97647,539.162353 L1242.35294,325.138824 L1242.35294,56 L677.647059,56 L677.647059,325.138824 L310.023529,539.162353 C258.070588,569.430588 225.882353,625.562353 225.882353,685.647059 L225.882353,1072.47059 L-5.68434189e-14,1072.47059 L-5.68434189e-14,1637.17647 L557.025882,1637.17647 L874.729412,1822.28706 C901.157647,1837.64706 930.409412,1845.32706 960,1845.32706 C989.590588,1845.32706 1018.95529,1837.64706 1045.27059,1822.28706 L1362.97412,1637.17647 L1920,1637.17647 L1920,1072.47059 L1694.11765,1072.47059 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoreLine":{"variant":"Line","glyphName":"more","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1468.23529 C1053.44753,1468.23529 1129.41176,1544.19953 1129.41176,1637.64706 C1129.41176,1731.09459 1053.44753,1807.05882 960,1807.05882 C866.552471,1807.05882 790.588235,1731.09459 790.588235,1637.64706 C790.588235,1544.19953 866.552471,1468.23529 960,1468.23529 Z M960,790.588235 C1053.44753,790.588235 1129.41176,866.552471 1129.41176,960 C1129.41176,1053.44753 1053.44753,1129.41176 960,1129.41176 C866.552471,1129.41176 790.588235,1053.44753 790.588235,960 C790.588235,866.552471 866.552471,790.588235 960,790.588235 Z M960,112.941176 C1053.44753,112.941176 1129.41176,188.905412 1129.41176,282.352941 C1129.41176,375.800471 1053.44753,451.764706 960,451.764706 C866.552471,451.764706 790.588235,375.800471 790.588235,282.352941 C790.588235,188.905412 866.552471,112.941176 960,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoreSolid":{"variant":"Solid","glyphName":"more","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1468.23529 C1053.44753,1468.23529 1129.41176,1544.19953 1129.41176,1637.64706 C1129.41176,1731.09459 1053.44753,1807.05882 960,1807.05882 C866.552471,1807.05882 790.588235,1731.09459 790.588235,1637.64706 C790.588235,1544.19953 866.552471,1468.23529 960,1468.23529 Z M960,790.588235 C1053.44753,790.588235 1129.41176,866.552471 1129.41176,960 C1129.41176,1053.44753 1053.44753,1129.41176 960,1129.41176 C866.552471,1129.41176 790.588235,1053.44753 790.588235,960 C790.588235,866.552471 866.552471,790.588235 960,790.588235 Z M960,112.941176 C1053.44753,112.941176 1129.41176,188.905412 1129.41176,282.352941 C1129.41176,375.800471 1053.44753,451.764706 960,451.764706 C866.552471,451.764706 790.588235,375.800471 790.588235,282.352941 C790.588235,188.905412 866.552471,112.941176 960,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveDownBottomLine":{"variant":"Line","glyphName":"move-down-bottom","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M106.666667,141 L106.666667,1421 L457.92,1421 L282.346667,1245.32 L357.653333,1169.90667 L662.08,1474.22667 L357.653333,1778.65333 L282.346667,1703.24 L457.92,1527.66667 L0,1527.66667 L0,141 L106.666667,141 Z M1066.66667,1420.904 L1066.66667,1527.57067 L853.333333,1527.57067 L853.333333,1420.904 L1066.66667,1420.904 Z M1493.33333,1420.904 L1493.33333,1527.57067 L1280,1527.57067 L1280,1420.904 L1493.33333,1420.904 Z M1920,1420.904 L1920,1527.57067 L1706.66667,1527.57067 L1706.66667,1420.904 L1920,1420.904 Z M1920,994.237333 L1920,1101.01067 L533.333333,1101.01067 L533.333333,994.237333 L1920,994.237333 Z M1920,567.570667 L1920,674.237333 L533.333333,674.237333 L533.333333,567.570667 L1920,567.570667 Z M1920,141.010667 L1920,247.677333 L533.333333,247.677333 L533.333333,141.010667 L1920,141.010667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveDownBottomSolid":{"variant":"Solid","glyphName":"move-down-bottom","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M677.647059,283.848471 L1920,283.848471 L1920,57.9661176 L677.647059,57.9661176 L677.647059,283.848471 Z M0,57.9661176 L0,1639.25553 L348.649412,1639.25553 L348.649412,1861.41082 L790.588235,1526.31435 L348.649412,1190.992 L348.649412,1413.26024 L225.882353,1413.26024 L225.882353,57.9661176 L0,57.9661176 Z M677.647059,735.726118 L1920,735.726118 L1920,509.843765 L677.647059,509.843765 L677.647059,735.726118 Z M677.647059,1187.37788 L1920,1187.37788 L1920,961.495529 L677.647059,961.495529 L677.647059,1187.37788 Z M1694.11765,1639.25553 L1920,1639.25553 L1920,1413.26024 L1694.11765,1413.26024 L1694.11765,1639.25553 Z M1355.29412,1639.25553 L1581.28941,1639.25553 L1581.28941,1413.26024 L1355.29412,1413.26024 L1355.29412,1639.25553 Z M1016.47059,1639.25553 L1242.35294,1639.25553 L1242.35294,1413.26024 L1016.47059,1413.26024 L1016.47059,1639.25553 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveDownLine":{"variant":"Line","glyphName":"move-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1547 L1920,1653.66667 L533.333333,1653.66667 L533.333333,1547 L1920,1547 Z M1920,1120.22667 L1920,1227 L533.333333,1227 L533.333333,1120.22667 L1920,1120.22667 Z M106.666667,267.042667 L106.666667,693.709333 L457.92,693.709333 L282.346667,518.136 L357.653333,442.616 L662.08,747.042667 L357.653333,1051.36267 L282.346667,975.949333 L457.92,800.269333 L0,800.269333 L0,267.042667 L106.666667,267.042667 Z M1066.66667,693.666667 L1066.66667,800.333333 L853.333333,800.333333 L853.333333,693.666667 L1066.66667,693.666667 Z M1493.33333,693.666667 L1493.33333,800.333333 L1280,800.333333 L1280,693.666667 L1493.33333,693.666667 Z M1920,693.666667 L1920,800.333333 L1706.66667,800.333333 L1706.66667,693.666667 L1920,693.666667 Z M1920,267 L1920,373.666667 L533.333333,373.666667 L533.333333,267 L1920,267 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveDownSolid":{"variant":"Solid","glyphName":"move-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1524.40706 L1920,1750.28941 L677.647059,1750.28941 L677.647059,1524.40706 L1920,1524.40706 Z M1920,1072.52941 L1920,1298.52471 L677.647059,1298.52471 L677.647059,1072.52941 L1920,1072.52941 Z M225.882353,169.067765 L225.882353,620.945412 L348.649412,620.945412 L348.649412,398.564235 L790.588235,733.773647 L348.649412,1069.096 L348.649412,846.714824 L0,846.714824 L0,169.067765 L225.882353,169.067765 Z M1242.35294,620.877647 L1242.35294,846.76 L1016.47059,846.76 L1016.47059,620.877647 L1242.35294,620.877647 Z M1581.17647,620.877647 L1581.17647,846.76 L1355.29412,846.76 L1355.29412,620.877647 L1581.17647,620.877647 Z M1920,620.877647 L1920,846.76 L1694.11765,846.76 L1694.11765,620.877647 L1920,620.877647 Z M1920,169 L1920,394.995294 L677.647059,394.995294 L677.647059,169 L1920,169 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveEndLine":{"variant":"Line","glyphName":"move-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M114.06302,276 L114.06302,1644.75624 L1.13686838e-13,1644.75624 L1.13686838e-13,276 L114.06302,276 Z M853.168576,349.764555 L933.811131,430.40711 L460.791787,903.426453 L1920,903.426453 L1920,1017.37541 L460.791787,1017.37541 L933.811131,1490.39475 L853.168576,1571.03731 L242.475168,960.3439 L853.168576,349.764555 Z\" transform=\"matrix(-1 0 0 1 1920 0)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveEndSolid":{"variant":"Solid","glyphName":"move-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M235.096763,255 L235.096763,1665.58058 L0,1665.58058 L0,255 L235.096763,255 Z M1013.93707,289.406411 L1180.26803,455.619823 L793.181214,842.706643 L1920,842.706643 L1920,1077.80341 L793.181214,1077.80341 L1180.26803,1464.89023 L1013.93707,1631.10364 L343.088461,960.255025 L1013.93707,289.406411 Z\" transform=\"matrix(-1 0 0 1 1920 0)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveLeftLine":{"variant":"Line","glyphName":"move-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M114.06302,276 L114.06302,1644.75624 L1.13686838e-13,1644.75624 L1.13686838e-13,276 L114.06302,276 Z M853.168576,349.764555 L933.811131,430.40711 L460.791787,903.426453 L1920,903.426453 L1920,1017.37541 L460.791787,1017.37541 L933.811131,1490.39475 L853.168576,1571.03731 L242.475168,960.3439 L853.168576,349.764555 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMoveLeftSolid":{"variant":"Solid","glyphName":"move-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M235.096763,255 L235.096763,1665.58058 L0,1665.58058 L0,255 L235.096763,255 Z M1013.93707,289.406411 L1180.26803,455.619823 L793.181214,842.706643 L1920,842.706643 L1920,1077.80341 L793.181214,1077.80341 L1180.26803,1464.89023 L1013.93707,1631.10364 L343.088461,960.255025 L1013.93707,289.406411 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMoveRightLine":{"variant":"Line","glyphName":"move-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M114.06302,276 L114.06302,1644.75624 L1.13686838e-13,1644.75624 L1.13686838e-13,276 L114.06302,276 Z M853.168576,349.764555 L933.811131,430.40711 L460.791787,903.426453 L1920,903.426453 L1920,1017.37541 L460.791787,1017.37541 L933.811131,1490.39475 L853.168576,1571.03731 L242.475168,960.3439 L853.168576,349.764555 Z\" transform=\"matrix(-1 0 0 1 1920 0)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMoveRightSolid":{"variant":"Solid","glyphName":"move-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M235.096763,255 L235.096763,1665.58058 L0,1665.58058 L0,255 L235.096763,255 Z M1013.93707,289.406411 L1180.26803,455.619823 L793.181214,842.706643 L1920,842.706643 L1920,1077.80341 L793.181214,1077.80341 L1180.26803,1464.89023 L1013.93707,1631.10364 L343.088461,960.255025 L1013.93707,289.406411 Z\" transform=\"matrix(-1 0 0 1 1920 0)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconMoveStartLine":{"variant":"Line","glyphName":"move-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M114.06302,276 L114.06302,1644.75624 L1.13686838e-13,1644.75624 L1.13686838e-13,276 L114.06302,276 Z M853.168576,349.764555 L933.811131,430.40711 L460.791787,903.426453 L1920,903.426453 L1920,1017.37541 L460.791787,1017.37541 L933.811131,1490.39475 L853.168576,1571.03731 L242.475168,960.3439 L853.168576,349.764555 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveStartSolid":{"variant":"Solid","glyphName":"move-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M235.096763,255 L235.096763,1665.58058 L0,1665.58058 L0,255 L235.096763,255 Z M1013.93707,289.406411 L1180.26803,455.619823 L793.181214,842.706643 L1920,842.706643 L1920,1077.80341 L793.181214,1077.80341 L1180.26803,1464.89023 L1013.93707,1631.10364 L343.088461,960.255025 L1013.93707,289.406411 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveUpTopLine":{"variant":"Line","glyphName":"move-up-top","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1672.03136 L1920,1778.70039 L533.302518,1778.70039 L533.302518,1672.03136 L1920,1672.03136 Z M357.661281,141 L662.094713,445.326763 L357.661281,749.760195 L282.352941,674.238516 L457.930176,498.661281 L106.562368,498.661281 L106.562368,1778.68973 L0,1778.68973 L0,392.098913 L457.930176,392.098913 L282.352941,216.30834 L357.661281,141 Z M1920,1245.24854 L1920,1352.02424 L533.302518,1352.02424 L533.302518,1245.24854 L1920,1245.24854 Z M1920,818.67906 L1920,925.348097 L533.302518,925.348097 L533.302518,818.67906 L1920,818.67906 Z M1066.6477,392.002911 L1066.6477,498.671948 L853.309629,498.671948 L853.309629,392.002911 L1066.6477,392.002911 Z M1493.32385,392.002911 L1493.32385,498.671948 L1279.98578,498.671948 L1279.98578,392.002911 L1493.32385,392.002911 Z M1920,392.002911 L1920,498.671948 L1706.66193,498.671948 L1706.66193,392.002911 L1920,392.002911 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveUpTopSolid":{"variant":"Solid","glyphName":"move-up-top","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M338.823529,57.9661176 L338.823529,280.121412 L0,280.121412 L0,1861.41082 L225.882353,1861.41082 L225.882353,506.116706 L338.823529,506.116706 L338.823529,728.384941 L745.637647,393.175529 L338.823529,57.9661176 Z M1694.23059,506.116706 L1920.11294,506.116706 L1920.11294,280.121412 L1694.23059,280.121412 L1694.23059,506.116706 Z M1355.29412,506.116706 L1581.28941,506.116706 L1581.28941,280.121412 L1355.29412,280.121412 L1355.29412,506.116706 Z M1016.47059,506.116706 L1242.35294,506.116706 L1242.35294,280.121412 L1016.47059,280.121412 L1016.47059,506.116706 Z M677.76,957.881412 L1920.11294,957.881412 L1920.11294,731.999059 L677.76,731.999059 L677.76,957.881412 Z M677.76,1409.64612 L1920.11294,1409.64612 L1920.11294,1183.65082 L677.76,1183.65082 L677.76,1409.64612 Z M677.76,1861.41082 L1920.11294,1861.41082 L1920.11294,1635.52847 L677.76,1635.52847 L677.76,1861.41082 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveUpLine":{"variant":"Line","glyphName":"move-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1546.99289 L1920,1653.65896 L533.341037,1653.65896 L533.341037,1546.99289 L1920,1546.99289 Z M357.651346,442.668357 L662.076322,746.986667 L357.651346,1051.30498 L282.345098,975.998728 L457.917456,800.319704 L106.666074,800.319704 L106.666074,1653.6483 L0,1653.6483 L0,693.65363 L457.917456,693.65363 L282.345098,518.081272 L357.651346,442.668357 Z M1920,1120.22193 L1920,1226.99467 L533.341037,1226.99467 L533.341037,1120.22193 L1920,1120.22193 Z M1066.67141,693.664296 L1066.67141,800.33037 L853.339259,800.33037 L853.339259,693.664296 L1066.67141,693.664296 Z M1493.3357,693.664296 L1493.3357,800.33037 L1280.00356,800.33037 L1280.00356,693.664296 L1493.3357,693.664296 Z M1920,693.664296 L1920,800.33037 L1706.66785,800.33037 L1706.66785,693.664296 L1920,693.664296 Z M1920,267 L1920,373.666074 L533.341037,373.666074 L533.341037,267 L1920,267 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMoveUpSolid":{"variant":"Solid","glyphName":"move-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M338.81755,398.616654 L745.624489,733.82015 L338.81755,1069.02365 L338.81755,846.759334 L225.878367,846.759334 L225.878367,1750.2728 L0,1750.2728 L0,620.880967 L338.81755,620.880967 L338.81755,398.616654 Z M1920,1524.38314 L1920,1750.26151 L677.668982,1750.26151 L677.668982,1524.38314 L1920,1524.38314 Z M1920,1072.51347 L1920,1298.50477 L677.668982,1298.50477 L677.668982,1072.51347 L1920,1072.51347 Z M1242.3649,620.869673 L1242.3649,846.74804 L1016.48653,846.74804 L1016.48653,620.869673 L1242.3649,620.869673 Z M1581.18245,620.869673 L1581.18245,846.74804 L1355.30408,846.74804 L1355.30408,620.869673 L1581.18245,620.869673 Z M1920,620.869673 L1920,846.74804 L1694.12163,846.74804 L1694.12163,620.869673 L1920,620.869673 Z M1920,169 L1920,394.991306 L677.668982,394.991306 L677.668982,169 L1920,169 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMsExcelLine":{"variant":"Line","glyphName":"ms-excel","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M790.588235,959.588235 L1016.47059,959.588235 L1016.47059,733.705882 L790.588235,733.705882 L790.588235,959.588235 Z M1129.41176,1298.41176 L1355.29412,1298.41176 L1355.29412,1072.52941 L1129.41176,1072.52941 L1129.41176,1298.41176 Z M790.588235,1298.41176 L1016.47059,1298.41176 L1016.47059,1072.52941 L790.588235,1072.52941 L790.588235,1298.41176 Z M451.764706,1298.41176 L677.647059,1298.41176 L677.647059,1072.52941 L451.764706,1072.52941 L451.764706,1298.41176 Z M451.764706,959.588235 L677.647059,959.588235 L677.647059,733.705882 L451.764706,733.705882 L451.764706,959.588235 Z M1355.29412,281.941176 L1355.29412,733.705882 L1807.05882,733.705882 L1807.05882,1637.23529 L112.941176,1637.23529 L112.941176,281.941176 L1355.29412,281.941176 Z M1468.23529,305.32 L1783.68,620.764706 L1468.23529,620.764706 L1468.23529,305.32 Z M1870.41882,547.804706 L1541.19529,218.581176 C1509.68471,187.070588 1465.97647,169 1421.47765,169 L5.68434189e-14,169 L5.68434189e-14,1750.17647 L1920,1750.17647 L1920,667.522353 C1920,622.345882 1902.38118,579.767059 1870.41882,547.804706 L1870.41882,547.804706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMsExcelSolid":{"variant":"Solid","glyphName":"ms-excel","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1129.41176,620.764706 L1129.41176,959.588235 L1468.23529,959.588235 L1468.23529,1411.35294 L338.823529,1411.35294 L338.823529,620.764706 L1129.41176,620.764706 Z M1468.23529,185.873412 C1507.76471,199.652235 1903.17176,620.809882 1903.17176,620.809882 L1468.23529,620.809882 L1468.23529,185.873412 Z M451.764706,959.588235 L677.647059,959.588235 L677.647059,733.705882 L451.764706,733.705882 L451.764706,959.588235 Z M451.764706,1298.41176 L677.647059,1298.41176 L677.647059,1072.52941 L451.764706,1072.52941 L451.764706,1298.41176 Z M790.588235,1298.41176 L1016.47059,1298.41176 L1016.47059,1072.52941 L790.588235,1072.52941 L790.588235,1298.41176 Z M790.588235,959.588235 L1016.47059,959.588235 L1016.47059,733.705882 L790.588235,733.705882 L790.588235,959.588235 Z M1129.41176,1298.41176 L1355.29412,1298.41176 L1355.29412,1072.52941 L1129.41176,1072.52941 L1129.41176,1298.41176 Z M1355.29412,733.705882 L1355.29412,169 L0,169 L0,1750.17647 L1920,1750.17647 L1920,733.705882 L1355.29412,733.705882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMsPptLine":{"variant":"Line","glyphName":"ms-ppt","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1420.81129,1342.11624 C1450.74071,1297.39153 1468.24659,1243.63153 1468.24659,1185.91859 C1468.24659,1049.59859 1371.11718,935.528 1242.36424,909.325647 L1242.36424,1169.99388 L1420.81129,1342.11624 Z M903.540706,1185.91859 C903.540706,1341.66447 1030.14776,1468.27153 1185.89365,1468.27153 C1243.04188,1468.27153 1296.12424,1450.99153 1340.62306,1421.62682 L1129.42306,1217.99388 L1129.42306,909.325647 C1000.67012,935.528 903.540706,1049.59859 903.540706,1185.91859 Z M1185.89365,790.624471 C1403.87012,790.624471 1581.18776,967.942118 1581.18776,1185.91859 C1581.18776,1403.89506 1403.87012,1581.21271 1185.89365,1581.21271 C967.917176,1581.21271 790.599529,1403.89506 790.599529,1185.91859 C790.599529,967.942118 967.917176,790.624471 1185.89365,790.624471 Z M1355.29412,225.941176 L1355.29412,677.705882 L1807.05882,677.705882 L1807.05882,1694.17647 L112.941176,1694.17647 L112.941176,225.941176 L1355.29412,225.941176 Z M677.647059,677.705882 L338.823529,677.705882 L338.823529,790.647059 L677.647059,790.647059 L677.647059,677.705882 Z M1016.47059,451.823529 L1016.47059,564.764706 L338.823529,564.764706 L338.823529,451.823529 L1016.47059,451.823529 Z M1468.23529,249.32 L1783.68,564.764706 L1468.23529,564.764706 L1468.23529,249.32 Z M1870.41882,491.804706 L1541.19529,162.581176 C1509.68471,131.070588 1465.97647,113 1421.47765,113 L0,113 L0,1807.11765 L1920,1807.11765 L1920,611.522353 C1920,566.345882 1902.38118,523.767059 1870.41882,491.804706 L1870.41882,491.804706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMsPptSolid":{"variant":"Solid","glyphName":"ms-ppt","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M677.647059,733.705882 L677.647059,846.647059 L338.823529,846.647059 L338.823529,733.705882 L677.647059,733.705882 Z M1016.47059,507.823529 L1016.47059,620.764706 L338.823529,620.764706 L338.823529,507.823529 L1016.47059,507.823529 Z M1355.29412,733.705882 L1355.29412,169 L-2.5243549e-29,169 L-2.5243549e-29,1750.17647 L1920,1750.17647 L1920,733.705882 L1355.29412,733.705882 Z M1185.88235,1637.23529 C967.905882,1637.23529 790.588235,1459.91765 790.588235,1241.94118 C790.588235,1023.96471 967.905882,846.647059 1185.88235,846.647059 C1403.85882,846.647059 1581.17647,1023.96471 1581.17647,1241.94118 C1581.17647,1459.91765 1403.85882,1637.23529 1185.88235,1637.23529 L1185.88235,1637.23529 Z M1129.41176,965.325647 L1129.41176,1273.99388 L1340.61176,1477.62682 C1296.11294,1506.99153 1243.03059,1524.27153 1185.88235,1524.27153 C1030.13647,1524.27153 903.529412,1397.66447 903.529412,1241.91859 C903.529412,1105.59859 1000.65882,991.528 1129.41176,965.325647 L1129.41176,965.325647 Z M1242.35294,965.325647 C1371.10588,991.528 1468.23529,1105.59859 1468.23529,1241.91859 C1468.23529,1299.63153 1450.72941,1353.39153 1420.8,1398.11624 L1420.8,1398.11624 L1242.35294,1225.99388 Z M1468.23529,185.873412 C1468.23529,185.873412 1889.39294,581.280471 1903.17176,620.809882 L1903.17176,620.809882 L1468.23529,620.809882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMsWordLine":{"variant":"Line","glyphName":"ms-word","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1251.65412,0 C1296.15294,0 1339.86118,18.0705882 1371.37176,49.5811765 L1371.37176,49.5811765 L1700.59529,378.804706 C1732.55765,410.767059 1750.17647,453.345882 1750.17647,498.522353 L1750.17647,498.522353 L1750.17647,1920 L169,1920 L169,0 Z M1185.47059,112.941176 L281.941176,112.941176 L281.941176,1807.05882 L1637.23529,1807.05882 L1637.23529,564.705882 L1185.47059,564.705882 L1185.47059,112.941176 Z M1298.41176,136.32 L1298.41176,451.764706 L1613.85647,451.764706 L1298.41176,136.32 Z\"/>\n        <path d=\"M959.588235 338.823529L959.588235 790.588235 507.823529 790.588235 507.823529 338.823529 959.588235 338.823529zM846.647059 451.764706L620.764706 451.764706 620.764706 677.647059 846.647059 677.647059 846.647059 451.764706zM507.823529 1016.47059L1411.35294 1016.47059 1411.35294 903.529412 507.823529 903.529412zM507.823529 1468.23529L1298.41176 1468.23529 1298.41176 1355.29412 507.823529 1355.29412zM507.823529 1242.35294L1185.47059 1242.35294 1185.47059 1129.41176 507.823529 1129.41176z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconMsWordSolid":{"variant":"Solid","glyphName":"ms-word","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1185.47059,-0.0112941176 L1185.47059,564.694588 L1750.17647,564.694588 L1750.17647,1919.98871 L169,1919.98871 L169,-0.0112941176 L1185.47059,-0.0112941176 Z M1298.41176,1355.28282 L507.823529,1355.28282 L507.823529,1468.33694 L1298.41176,1468.33694 L1298.41176,1355.28282 Z M1185.47059,1129.40047 L507.823529,1129.40047 L507.823529,1242.34165 L1185.47059,1242.34165 L1185.47059,1129.40047 Z M1411.35294,903.518118 L507.823529,903.518118 L507.823529,1016.45929 L1411.35294,1016.45929 L1411.35294,903.518118 Z M959.701176,338.812235 L507.823529,338.812235 L507.823529,790.689882 L959.701176,790.689882 L959.701176,338.812235 Z\"/>\n        <path d=\"M620.764706 677.647059L846.647059 677.647059 846.647059 451.764706 620.764706 451.764706zM1298.40047 451.809882L1733.33694 451.809882 1298.40047 16.8734118z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconMutedLine":{"variant":"Line","glyphName":"muted","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1505.84533,72.0933333 L1318.32533,295.56 C1274.16533,262.92 1224.992,234.546667 1171.12533,211.613333 C1103.28533,183.986667 1032.352,167.773333 960.032,162.226667 L960.032,53 L853.365333,53 L853.365333,162.333333 C495.925333,189.746667 213.365333,488.733333 213.365333,853 L213.365333,1226.33333 C213.365333,1282.76 190.645333,1337.90667 151.072,1377.37333 C111.605333,1416.94667 56.4586667,1439.66667 0.032,1439.66667 L0.032,1546.33333 L269.365333,1546.33333 L119.178667,1725.42667 L200.885333,1793.90667 L1587.552,140.573333 L1505.84533,72.0933333 Z M1479.46667,462.6 C1558.29333,577.586667 1600,712.626667 1600,853 L1600,853 L1600,1226.33333 C1600,1343.98667 1695.68,1439.66667 1813.33333,1439.66667 C1842.77333,1439.66667 1866.66667,1463.56 1866.66667,1493 C1866.66667,1522.44 1842.77333,1546.33333 1813.33333,1546.33333 L1813.33333,1546.33333 L1226.66667,1546.33333 C1226.66667,1722.76 1083.09333,1866.33333 906.666667,1866.33333 C730.24,1866.33333 586.666667,1722.76 586.666667,1546.33333 L586.666667,1546.33333 L586.666667,1493 C586.666667,1463.56 610.56,1439.66667 640,1439.66667 L640,1439.66667 L1575.04,1439.66667 C1524.26667,1383.02667 1493.33333,1308.25333 1493.33333,1226.33333 L1493.33333,1226.33333 L1493.33333,853 C1493.33333,734.28 1458.13333,620.04 1391.57333,522.973333 L1391.57333,522.973333 Z M1120,1546.33333 L693.333333,1546.33333 C693.333333,1663.98667 789.013333,1759.66667 906.666667,1759.66667 C1024.32,1759.66667 1120,1663.98667 1120,1546.33333 L1120,1546.33333 Z M906.698667,266.333333 C983.818667,266.333333 1059.12533,281.16 1129.952,310.066667 C1173.68533,328.733333 1213.792,351.88 1249.52533,377.693333 L358.858667,1439.66667 L238.858667,1439.66667 C290.592,1381.64 320.032,1304.84 320.032,1226.33333 L320.032,853 C320.032,529.586667 583.285333,266.333333 906.698667,266.333333 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconMutedSolid":{"variant":"Solid","glyphName":"muted","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1555.2,417.882353 L1566.49412,433.694118 C1650.07059,555.670588 1694.11765,697.976471 1694.11765,847.058824 L1694.11765,847.058824 L1694.11765,1242.35294 C1694.11765,1366.58824 1795.76471,1468.23529 1920,1468.23529 L1920,1468.23529 L1920,1581.17647 L1298.82353,1581.17647 C1298.82353,1767.52941 1146.35294,1920 960,1920 C773.647059,1920 621.176471,1767.52941 621.176471,1581.17647 L621.176471,1581.17647 L621.176471,1532.61176 L1555.2,417.882353 Z M1016.49318,-0.0338823529 L1016.49318,115.730824 C1093.18024,121.490824 1168.17318,138.657882 1240.00376,168.022588 C1297.03906,192.192 1349.10494,222.234353 1395.86259,256.907294 L1395.86259,256.907294 L1594.41318,20.1825882 L1680.92612,92.8037647 L212.690824,1843.392 L126.177882,1770.77082 L285.199059,1581.14259 L0.0225882353,1581.14259 L0.0225882353,1468.20141 C59.7684706,1468.20141 118.159059,1444.14494 159.947294,1402.24376 C201.848471,1360.45553 225.904941,1302.17788 225.904941,1242.31906 L225.904941,1242.31906 L225.904941,847.024941 C225.904941,461.330824 525.086118,144.869647 903.552,115.843765 L903.552,115.843765 L903.552,-0.0338823529 L1016.49318,-0.0338823529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNextUnreadLine":{"variant":"Line","glyphName":"next-unread","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,373.397333 L0,1760.064 L1706.66667,1760.064 L1706.66667,956.864 L1600,956.864 L1600,1559.424 L1294.4,1192.59733 L1212.37333,1260.864 L1539.41333,1653.39733 L167.253333,1653.39733 L494.293333,1260.864 L412.266667,1192.59733 L106.666667,1559.424 L106.666667,661.824 L853.333333,1352.704 L1343.89333,898.944 L1271.57333,820.544 L853.333333,1207.31733 L106.666667,516.437333 L106.666667,480.064 L1123.2,480.064 L1123.2,373.397333 L0,373.397333 Z M1383.95733,243.872 C1447.104,186.165333 1529.45067,156.512 1614.25067,160.352 C1699.584,164.192 1778.41067,200.992 1836.11733,264.032 C1893.824,327.072 1923.47733,408.885333 1919.63733,494.325333 C1915.904,579.658667 1879.104,658.485333 1815.95733,716.192 C1756.544,770.592 1680.384,800.032 1600.384,800.032 C1595.47733,800.032 1590.67733,799.925333 1585.77067,799.712 C1500.33067,795.872 1421.61067,759.072 1363.904,696.032 C1306.19733,632.992 1276.544,551.178667 1280.27733,465.738667 C1284.11733,380.405333 1320.91733,301.578667 1383.95733,243.872 Z M1599.744,266.698667 C1546.41067,266.698667 1495.63733,286.325333 1456.064,322.592 C1413.93067,361.098667 1389.39733,413.578667 1386.83733,470.538667 C1384.27733,527.498667 1404.11733,581.898667 1442.51733,624.032 C1481.024,666.058667 1533.61067,690.592 1590.57067,693.152 C1647.424,696.032 1701.93067,675.872 1743.95733,637.472 C1786.09067,598.965333 1810.624,546.378667 1813.07733,489.525333 C1815.63733,432.565333 1795.904,378.058667 1757.39733,336.032 C1718.99733,294.005333 1666.41067,269.472 1609.45067,266.912 C1606.25067,266.698667 1603.05067,266.698667 1599.744,266.698667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNextUnreadSolid":{"variant":"Solid","glyphName":"next-unread","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,524.663558 L878.039001,1337.09375 L1470.49316,779.857699 C1519.09634,804.87243 1572.41721,820.342067 1628.70036,822.865483 C1634.51519,823.08491 1640.11059,823.194624 1645.92541,823.194624 C1684.21551,823.194624 1720.53075,816.063231 1755.41972,805.640427 L1755.41972,805.640427 L1755.41972,1663.27267 L1330.60815,1171.42601 L1247.66457,1243.06908 L1690.46919,1755.76135 L64.9505296,1755.76135 L507.755154,1243.06908 L424.811572,1171.42601 L0,1663.27267 L0,524.663558 Z M1278.97686,329.559627 C1270.19977,359.182335 1263.50723,389.792466 1262.19066,422.158018 C1257.58269,524.630644 1293.12994,622.71472 1362.46902,698.417196 C1367.84499,704.341737 1374.3181,708.730287 1380.02321,714.215973 L1380.02321,714.215973 L877.424604,1187.08216 L0.043885493,375.090826 L0.043885493,329.559627 Z M1645.55239,165 C1649.6118,165 1653.78092,165.109714 1657.95004,165.219427 C1809.24528,172.021679 1926.41954,300.057605 1919.72701,451.462555 C1913.14418,598.588671 1791.80079,713.568662 1645.99124,713.568662 C1641.93183,713.568662 1637.653,713.458949 1633.48388,713.239521 C1482.18864,706.546983 1365.01437,578.401344 1371.81663,426.996393 C1378.28974,279.870278 1499.74284,165 1645.55239,165 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNoLine":{"variant":"Line","glyphName":"no","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1599.04,1523.62667 L396.373333,320.96 C546.88,188.053333 743.786667,106.666667 960,106.666667 C1430.50667,106.666667 1813.33333,489.493333 1813.33333,960 C1813.33333,1176.10667 1731.94667,1373.12 1599.04,1523.62667 M106.666667,960 C106.666667,743.786667 187.946667,546.88 320.96,396.373333 L1523.62667,1599.04 C1373.12,1731.94667 1176.10667,1813.33333 960,1813.33333 C489.493333,1813.33333 106.666667,1430.50667 106.666667,960 M960,0 C429.76,0 0,429.76 0,960 C0,1490.24 429.76,1920 960,1920 C1490.13333,1920 1920,1490.24 1920,960 C1920,429.76 1490.13333,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNoSolid":{"variant":"Solid","glyphName":"no","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M213.333333,960 C213.333333,792.64 269.333333,638.293333 362.773333,513.6 L1406.4,1557.22667 C1281.70667,1650.66667 1127.36,1706.66667 960,1706.66667 C548.373333,1706.66667 213.333333,1371.62667 213.333333,960 M1706.66667,960 C1706.66667,1127.36 1650.66667,1281.70667 1557.22667,1406.4 L513.6,362.773333 C638.293333,269.333333 792.64,213.333333 960,213.333333 C1371.62667,213.333333 1706.66667,548.373333 1706.66667,960 M960,0 C429.76,0 0,429.76 0,960 C0,1490.24 429.76,1920 960,1920 C1490.24,1920 1920,1490.24 1920,960 C1920,429.76 1490.24,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNotGradedLine":{"variant":"Line","glyphName":"not-graded","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1386.66667,1333 L1493.33333,1333 L1493.33333,1013 L1386.66667,1013 L1386.66667,1333 Z M1386.66667,1546.33333 L1493.33333,1546.33333 L1493.33333,1439.66667 L1386.66667,1439.66667 L1386.66667,1546.33333 Z M1066.66667,373 L1066.66667,799.666667 L320,799.666667 L320,373 L1066.66667,373 Z M960,479.666667 L426.666667,479.666667 L426.666667,693 L960,693 L960,479.666667 Z M320,1119.66667 L853.333333,1119.66667 L853.333333,1013 L320,1013 L320,1119.66667 Z M320,1333 L640,1333 L640,1226.33333 L320,1226.33333 L320,1333 Z M1.51461294e-28,52.9893333 L1.51461294e-28,1866.32267 L1066.66667,1866.32267 L1066.66667,1759.656 L106.666667,1759.656 L106.666667,159.656 L1280,159.656 L1280,692.989333 L1386.66667,692.989333 L1386.66667,52.9893333 L1.51461294e-28,52.9893333 Z M1440,1653 C1645.86667,1653 1813.33333,1485.53333 1813.33333,1279.66667 C1813.33333,1073.8 1645.86667,906.333333 1440,906.333333 C1234.13333,906.333333 1066.66667,1073.8 1066.66667,1279.66667 C1066.66667,1485.53333 1234.13333,1653 1440,1653 Z M1440,799.666667 C1704.64,799.666667 1920,1015.02667 1920,1279.66667 C1920,1544.30667 1704.64,1759.66667 1440,1759.66667 C1175.36,1759.66667 960,1544.30667 960,1279.66667 C960,1015.02667 1175.36,799.666667 1440,799.666667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNotGradedSolid":{"variant":"Solid","glyphName":"not-graded","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1468.23529,1355.29412 L1581.17647,1355.29412 L1581.17647,1016.47059 L1468.23529,1016.47059 L1468.23529,1355.29412 Z M1468.23529,1581.17647 L1581.17647,1581.17647 L1581.17647,1468.23529 L1468.23529,1468.23529 L1468.23529,1581.17647 Z M1524.70588,903.529412 C1742.68235,903.529412 1920,1080.84706 1920,1298.82353 C1920,1516.8 1742.68235,1694.11765 1524.70588,1694.11765 C1306.72941,1694.11765 1129.41176,1516.8 1129.41176,1298.82353 C1129.41176,1080.84706 1306.72941,903.529412 1524.70588,903.529412 Z M677.647059,1242.35294 L677.647059,1355.29412 L338.823529,1355.29412 L338.823529,1242.35294 L677.647059,1242.35294 Z M903.529412,1016.47059 L903.529412,1129.41176 L338.823529,1129.41176 L338.823529,1016.47059 L903.529412,1016.47059 Z M1129.41176,338.823529 L1129.41176,790.588235 L338.823529,790.588235 L338.823529,338.823529 L1129.41176,338.823529 Z M1016.47059,1298.82353 C1016.47059,1037.92941 1214.79529,824.809412 1468.23529,796.348235 L1468.23529,0 L0,0 L0,1920 L1468.23529,1920 L1468.23529,1801.29882 C1214.79529,1772.83765 1016.47059,1559.71765 1016.47059,1298.82353 L1016.47059,1298.82353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNoteDarkLine":{"variant":"Line","glyphName":"note-dark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1783.68,1468.23529 L1468.23529,1783.68 L1468.23529,1468.23529 L1783.68,1468.23529 Z M1242.35294,1129.41176 L1242.35294,1242.35294 L338.823529,1242.35294 L338.823529,1129.41176 L1242.35294,1129.41176 Z M1581.28941,790.588235 L1581.28941,903.529412 L338.823529,903.529412 L338.823529,790.588235 L1581.28941,790.588235 Z M621.176471,0 C714.578824,0 790.588235,76.0094118 790.588235,169.411765 C790.588235,195.501176 784.150588,219.896471 773.647059,242.032941 L773.647059,242.032941 L999.981176,468.254118 L920.018824,548.216471 L693.797647,321.882353 C671.661176,332.385882 647.265882,338.823529 621.176471,338.823529 C527.774118,338.823529 451.764706,262.814118 451.764706,169.411765 C451.764706,76.0094118 527.774118,0 621.176471,0 Z M1016.47059,225.882353 L1016.47059,338.823529 L1807.05882,338.823529 L1807.05882,1355.29412 L1355.29412,1355.29412 L1355.29412,1807.05882 L112.941176,1807.05882 L112.941176,338.823529 L338.823529,338.823529 L338.823529,225.882353 L5.68434189e-14,225.882353 L5.68434189e-14,1920 L1421.47765,1920 C1466.65412,1920 1509.23294,1902.38118 1541.19529,1870.41882 L1870.41882,1541.30824 C1902.38118,1509.23294 1920,1466.65412 1920,1421.47765 L1920,225.882353 L1016.47059,225.882353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconNoteDarkSolid":{"variant":"Solid","glyphName":"note-dark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1129.41176,1242.35294 L1129.41176,1355.29412 L338.823529,1355.29412 L338.823529,1242.35294 L1129.41176,1242.35294 Z M1581.17647,903.529412 L1581.17647,1016.47059 L338.823529,1016.47059 L338.823529,903.529412 L1581.17647,903.529412 Z M621.176471,0 C714.578824,0 790.588235,76.0094118 790.588235,169.411765 C790.588235,195.501176 784.150588,219.896471 773.647059,242.032941 L999.981176,468.254118 L920.018824,548.216471 L693.797647,321.882353 C671.661176,332.385882 647.152941,338.823529 621.176471,338.823529 C527.774118,338.823529 451.764706,262.814118 451.764706,169.411765 C451.764706,76.0094118 527.774118,0 621.176471,0 Z M344.470588,225.882353 C370.447059,354.635294 484.517647,451.764706 621.176471,451.764706 C634.729412,451.764706 648.282353,450.635294 660.705882,448.376471 L660.705882,448.376471 L920.470588,708.141176 L1159.90588,468.705882 L917.082353,225.882353 L1920,225.882353 L1920,1355.29412 L1355.29412,1355.29412 L1355.29412,1920 L5.68434189e-14,1920 L5.68434189e-14,225.882353 Z M1912.65882,1468.24659 L1468.23529,1912.55718 L1468.23529,1468.24659 L1912.65882,1468.24659 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconNoteLightLine":{"variant":"Line","glyphName":"note-light","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1783.68,1468.23529 L1468.23529,1783.68 L1468.23529,1468.23529 L1783.68,1468.23529 Z M1242.35294,1129.41176 L1242.35294,1242.35294 L338.823529,1242.35294 L338.823529,1129.41176 L1242.35294,1129.41176 Z M1581.28941,790.588235 L1581.28941,903.529412 L338.823529,903.529412 L338.823529,790.588235 L1581.28941,790.588235 Z M621.176471,0 C714.578824,0 790.588235,76.0094118 790.588235,169.411765 C790.588235,195.501176 784.150588,219.896471 773.647059,242.032941 L773.647059,242.032941 L999.981176,468.254118 L920.018824,548.216471 L693.797647,321.882353 C671.661176,332.385882 647.265882,338.823529 621.176471,338.823529 C527.774118,338.823529 451.764706,262.814118 451.764706,169.411765 C451.764706,76.0094118 527.774118,0 621.176471,0 Z M1016.47059,225.882353 L1016.47059,338.823529 L1807.05882,338.823529 L1807.05882,1355.29412 L1355.29412,1355.29412 L1355.29412,1807.05882 L112.941176,1807.05882 L112.941176,338.823529 L338.823529,338.823529 L338.823529,225.882353 L5.68434189e-14,225.882353 L5.68434189e-14,1920 L1421.47765,1920 C1466.65412,1920 1509.23294,1902.38118 1541.19529,1870.41882 L1870.41882,1541.30824 C1902.38118,1509.23294 1920,1466.65412 1920,1421.47765 L1920,225.882353 L1016.47059,225.882353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconNoteLightSolid":{"variant":"Solid","glyphName":"note-light","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1129.41176,1242.35294 L1129.41176,1355.29412 L338.823529,1355.29412 L338.823529,1242.35294 L1129.41176,1242.35294 Z M1581.17647,903.529412 L1581.17647,1016.47059 L338.823529,1016.47059 L338.823529,903.529412 L1581.17647,903.529412 Z M621.176471,0 C714.578824,0 790.588235,76.0094118 790.588235,169.411765 C790.588235,195.501176 784.150588,219.896471 773.647059,242.032941 L999.981176,468.254118 L920.018824,548.216471 L693.797647,321.882353 C671.661176,332.385882 647.152941,338.823529 621.176471,338.823529 C527.774118,338.823529 451.764706,262.814118 451.764706,169.411765 C451.764706,76.0094118 527.774118,0 621.176471,0 Z M344.470588,225.882353 C370.447059,354.635294 484.517647,451.764706 621.176471,451.764706 C634.729412,451.764706 648.282353,450.635294 660.705882,448.376471 L660.705882,448.376471 L920.470588,708.141176 L1159.90588,468.705882 L917.082353,225.882353 L1920,225.882353 L1920,1355.29412 L1355.29412,1355.29412 L1355.29412,1920 L5.68434189e-14,1920 L5.68434189e-14,225.882353 Z M1912.65882,1468.24659 L1468.23529,1912.55718 L1468.23529,1468.24659 L1912.65882,1468.24659 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconNoteLine":{"variant":"Line","glyphName":"note","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1783.68,1468.23529 L1468.23529,1783.68 L1468.23529,1468.23529 L1783.68,1468.23529 Z M1242.35294,1129.41176 L1242.35294,1242.35294 L338.823529,1242.35294 L338.823529,1129.41176 L1242.35294,1129.41176 Z M1581.28941,790.588235 L1581.28941,903.529412 L338.823529,903.529412 L338.823529,790.588235 L1581.28941,790.588235 Z M621.176471,0 C714.578824,0 790.588235,76.0094118 790.588235,169.411765 C790.588235,195.501176 784.150588,219.896471 773.647059,242.032941 L773.647059,242.032941 L999.981176,468.254118 L920.018824,548.216471 L693.797647,321.882353 C671.661176,332.385882 647.265882,338.823529 621.176471,338.823529 C527.774118,338.823529 451.764706,262.814118 451.764706,169.411765 C451.764706,76.0094118 527.774118,0 621.176471,0 Z M1016.47059,225.882353 L1016.47059,338.823529 L1807.05882,338.823529 L1807.05882,1355.29412 L1355.29412,1355.29412 L1355.29412,1807.05882 L112.941176,1807.05882 L112.941176,338.823529 L338.823529,338.823529 L338.823529,225.882353 L5.68434189e-14,225.882353 L5.68434189e-14,1920 L1421.47765,1920 C1466.65412,1920 1509.23294,1902.38118 1541.19529,1870.41882 L1870.41882,1541.30824 C1902.38118,1509.23294 1920,1466.65412 1920,1421.47765 L1920,225.882353 L1016.47059,225.882353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNoteSolid":{"variant":"Solid","glyphName":"note","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1129.41176,1242.35294 L1129.41176,1355.29412 L338.823529,1355.29412 L338.823529,1242.35294 L1129.41176,1242.35294 Z M1581.17647,903.529412 L1581.17647,1016.47059 L338.823529,1016.47059 L338.823529,903.529412 L1581.17647,903.529412 Z M621.176471,0 C714.578824,0 790.588235,76.0094118 790.588235,169.411765 C790.588235,195.501176 784.150588,219.896471 773.647059,242.032941 L999.981176,468.254118 L920.018824,548.216471 L693.797647,321.882353 C671.661176,332.385882 647.152941,338.823529 621.176471,338.823529 C527.774118,338.823529 451.764706,262.814118 451.764706,169.411765 C451.764706,76.0094118 527.774118,0 621.176471,0 Z M344.470588,225.882353 C370.447059,354.635294 484.517647,451.764706 621.176471,451.764706 C634.729412,451.764706 648.282353,450.635294 660.705882,448.376471 L660.705882,448.376471 L920.470588,708.141176 L1159.90588,468.705882 L917.082353,225.882353 L1920,225.882353 L1920,1355.29412 L1355.29412,1355.29412 L1355.29412,1920 L5.68434189e-14,1920 L5.68434189e-14,225.882353 Z M1912.65882,1468.24659 L1468.23529,1912.55718 L1468.23529,1468.24659 L1912.65882,1468.24659 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNotepadLine":{"variant":"Line","glyphName":"notepad","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M106.667,267 L320,267 L320,480.333 L1173.33,480.333 L1173.33,267 L1386.67,267 L1386.67,427 L1493.33,427 L1493.33,160.333 L1164.23,160.333 C1142.26,98.19 1083,53.667 1013.33,53.667 L480,53.667 C410.335,53.667 351.069,98.19 329.104,160.333 L0,160.333 L0,1867 L1493.33,1867 L1493.33,1547 L1386.67,1547 L1386.67,1760.33 L106.667,1760.33 L106.667,267 Z M426.667,373.667 L426.667,213.667 C426.667,184.211 450.545,160.333 480,160.333 L1013.33,160.333 C1042.79,160.333 1066.67,184.211 1066.67,213.667 L1066.67,373.667 L426.667,373.667 Z\"/>\n        <path d=\"M1677.57,528.309 L1903.45,754.192 C1925.47,776.215 1925.47,811.905 1903.45,834.041 L1225.8,1511.69 C1215.18,1522.19 1200.84,1528.18 1185.82,1528.18 L959.937,1528.18 C928.766,1528.18 903.467,1502.88 903.467,1471.71 L903.467,1245.82 C903.467,1230.8 909.453,1216.46 919.956,1205.96 L1597.6,528.309 C1619.74,506.173 1655.43,506.173 1677.57,528.309 Z M1522.16,763.453 L1668.19,909.486 L1783.62,794.06 L1637.58,648.027 L1522.16,763.453 Z M1016.41,1415.24 L1162.44,1415.24 L1588.34,989.34 L1442.31,843.302 L1016.41,1269.2 L1016.41,1415.24 Z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconNotepadSolid":{"variant":"Solid","glyphName":"notepad","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1164.23,160.333 L1468.24,160.333 L1468.24,498.153 L840.282,1126.11 C808.659,1157.73 790.588,1200.65 790.588,1245.82 L790.588,1641.12 L1185.88,1641.12 C1231.06,1641.12 1273.98,1623.05 1305.6,1591.42 L1468.24,1428.79 L1468.24,1867 L0,1867 L0,160.333 L329.104,160.333 C351.069,98.19 410.335,53.667 480,53.667 L1013.33,53.667 C1083,53.667 1142.26,98.19 1164.23,160.333 Z M426.667,213.667 C426.667,184.211 450.545,160.333 480,160.333 L1013.33,160.333 C1042.79,160.333 1066.67,184.211 1066.67,213.667 L1066.67,373.667 L426.667,373.667 L426.667,213.667 Z\"/>\n        <path d=\"M1677.57,528.308 L1903.45,754.19 C1925.47,776.214 1925.47,811.903 1903.45,834.04 L1225.8,1511.69 C1215.18,1522.19 1200.84,1528.18 1185.82,1528.18 L903.467,1528.18 L903.467,1245.82 C903.467,1230.8 909.453,1216.46 919.956,1205.95 L1597.6,528.308 C1619.74,506.171 1655.43,506.171 1677.57,528.308 Z M1548.02,737.588 L1694.05,883.621 L1783.61,794.059 L1637.58,648.026 L1548.02,737.588 Z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconNumberedListLine":{"variant":"Line","glyphName":"numbered-list","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M169.411765,1355.29412 C262.814118,1355.29412 338.823529,1431.30353 338.823529,1524.70588 C338.823529,1568.30118 321.882353,1607.60471 294.663529,1637.64706 C321.882353,1667.68941 338.823529,1706.99294 338.823529,1750.58824 C338.823529,1843.99059 262.814118,1920 169.411765,1920 L169.411765,1920 L0,1920 L0,1807.05882 L169.411765,1807.05882 C200.470588,1807.05882 225.882353,1781.64706 225.882353,1750.58824 C225.882353,1719.52941 200.470588,1694.11765 169.411765,1694.11765 L169.411765,1694.11765 L0,1694.11765 L0,1581.17647 L169.411765,1581.17647 C200.470588,1581.17647 225.882353,1555.76471 225.882353,1524.70588 C225.882353,1493.64706 200.470588,1468.23529 169.411765,1468.23529 L169.411765,1468.23529 L0,1468.23529 L0,1355.29412 Z M1920,1468.23529 L1920,1581.17647 L564.705882,1581.17647 L564.705882,1468.23529 L1920,1468.23529 Z M188.058353,677.669647 C249.837176,677.669647 306.872471,716.069647 333.413647,775.363765 C362.213647,839.401412 348.773647,911.909647 297.498353,969.396706 C281.212235,987.659294 263.3904,1007.27774 245.311228,1026.97851 L242.209659,1030.35635 C240.140584,1032.60847 238.069102,1034.86071 235.997121,1037.11117 L232.889014,1040.4853 L232.889014,1040.4853 L229.781591,1043.85534 C201.304376,1074.72424 173.093647,1104.89788 150.110118,1129.43435 L338.834824,1129.43435 L338.834824,1242.37553 L56.4818824,1242.37553 C25.1971765,1242.37553 0.0112941176,1217.07671 0.0112941176,1185.90494 L0.0112941176,1146.37553 C0.0112941176,1131.91906 5.54541176,1117.91435 15.5971765,1107.41082 C15.7101176,1107.29788 133.056,983.853176 213.244235,894.177882 C234.590118,870.234353 240.688941,844.370824 230.411294,821.556706 C222.279529,803.260235 204.773647,790.610824 188.058353,790.610824 C147.512471,790.610824 105.159529,839.062588 93.6395294,856.116706 L0.0112941176,792.982588 C7.80423529,781.236706 80.4254118,677.669647 188.058353,677.669647 Z M1920,903.529412 L1920,1016.47059 L564.705882,1016.47059 L564.705882,903.529412 L1920,903.529412 Z M169.411765,2.5243549e-29 C200.583529,2.5243549e-29 225.882353,25.2988235 225.882353,56.4705882 L225.882353,56.4705882 L225.882353,564.705882 L112.941176,564.705882 L112.941176,112.941176 L0,112.941176 L0,2.5243549e-29 Z M1920,338.823529 L1920,451.764706 L564.705882,451.764706 L564.705882,338.823529 L1920,338.823529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconNumberedListSolid":{"variant":"Solid","glyphName":"numbered-list","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M169.411765,1355.29412 C262.814118,1355.29412 338.823529,1431.30353 338.823529,1524.70588 C338.823529,1568.30118 321.882353,1607.60471 294.776471,1637.64706 C321.882353,1667.68941 338.823529,1706.99294 338.823529,1750.58824 C338.823529,1843.99059 262.814118,1920 169.411765,1920 L169.411765,1920 L0,1920 L0,1807.05882 L169.411765,1807.05882 C200.470588,1807.05882 225.882353,1781.64706 225.882353,1750.58824 C225.882353,1719.52941 200.470588,1694.11765 169.411765,1694.11765 L169.411765,1694.11765 L0,1694.11765 L0,1581.17647 L169.411765,1581.17647 C200.470588,1581.17647 225.882353,1555.76471 225.882353,1524.70588 C225.882353,1493.64706 200.470588,1468.23529 169.411765,1468.23529 L169.411765,1468.23529 L0,1468.23529 L0,1355.29412 Z M1920,1355.29412 L1920,1581.17647 L564.705882,1581.17647 L564.705882,1355.29412 L1920,1355.29412 Z M188.058353,677.669647 C249.837176,677.669647 306.872471,716.069647 333.413647,775.363765 C362.213647,839.401412 348.773647,911.909647 297.498353,969.396706 C281.212235,987.659294 263.3904,1007.27774 245.311228,1026.97851 L242.209659,1030.35635 C240.140584,1032.60847 238.069102,1034.86071 235.997121,1037.11117 L232.889014,1040.4853 L232.889014,1040.4853 L229.781591,1043.85534 C201.304376,1074.72424 173.093647,1104.89788 150.110118,1129.43435 L338.834824,1129.43435 L338.834824,1242.37553 L56.4818824,1242.37553 C25.1971765,1242.37553 0.0112941176,1217.07671 0.0112941176,1185.90494 L0.0112941176,1146.37553 C0.0112941176,1131.91906 5.54541176,1117.91435 15.5971765,1107.41082 C15.7101176,1107.29788 133.056,983.853176 213.244235,894.177882 C234.590118,870.234353 240.688941,844.370824 230.411294,821.556706 C222.279529,803.260235 204.773647,790.610824 188.058353,790.610824 C147.512471,790.610824 105.159529,839.062588 93.6395294,856.116706 L0.0112941176,792.982588 C7.80423529,781.236706 80.4254118,677.669647 188.058353,677.669647 Z M1920,790.588235 L1920,1016.47059 L564.705882,1016.47059 L564.705882,790.588235 L1920,790.588235 Z M169.411765,2.5243549e-29 C200.583529,2.5243549e-29 225.882353,25.2988235 225.882353,56.4705882 L225.882353,56.4705882 L225.882353,564.705882 L112.941176,564.705882 L112.941176,112.941176 L0,112.941176 L0,2.5243549e-29 Z M1920,225.882353 L1920,451.764706 L564.705882,451.764706 L564.705882,225.882353 L1920,225.882353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOffLine":{"variant":"Line","glyphName":"off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1591.46153,544.364218 C1720.75732,645.257322 1830.44677,780.911915 1908.2362,936.596757 L1908.2362,936.596757 L1920,960.23033 L1908.34218,983.863904 C1720.54536,1361.57716 1357.2454,1596.21722 960.031794,1596.21722 C848.646656,1596.21722 739.805041,1577.67069 636.156453,1541.21352 L636.156453,1541.21352 L671.341863,1441.27423 C763.544594,1473.70416 860.728393,1490.23706 960.031794,1490.23706 C1308.49453,1490.23706 1628.44861,1287.81498 1801.19625,960.44229 C1731.46131,828.602983 1636.71506,714.03844 1526.28374,627.982557 L1526.28374,627.982557 Z M959.968206,430.36137 C1059.37759,430.36137 1156.45541,446.894274 1250.4598,479.960081 C1278.01464,488.650453 1305.78144,499.672389 1333.44226,511.966086 L1143.73779,701.670556 C1091.59555,664.683484 1028.53736,642.321672 959.968206,642.321672 C784.677037,642.321672 642.027754,784.970955 642.027754,960.262124 C642.027754,1028.83128 664.389565,1091.88947 701.376638,1144.03171 L488.674475,1356.62789 C457.940232,1338.08136 426.464127,1317.30925 393.82224,1292.61588 C283.284943,1206.55999 188.538688,1091.88947 118.697769,960.156144 C291.551395,632.677478 611.61145,430.36137 959.968206,430.36137 Z M1141.93612,853.222172 C1160.58863,884.804257 1171.92851,921.049468 1171.92851,960.262124 C1171.92851,1077.15823 1076.86431,1172.22243 959.968206,1172.22243 C920.86153,1172.22243 884.510339,1160.88255 853.034234,1142.23004 L1141.93612,853.222172 Z M959.968206,748.301823 C999.180862,748.301823 1035.42607,759.747679 1067.00816,778.294205 L778.000287,1067.30208 C759.453761,1035.71999 748.007904,999.47478 748.007904,960.262124 C748.007904,843.471998 843.0721,748.301823 959.968206,748.301823 Z M959.968206,1278.20258 C1135.36536,1278.20258 1277.90866,1135.65927 1277.90866,960.262124 C1277.90866,891.798947 1255.54685,828.634777 1218.66575,776.598523 L1792.33631,202.927967 L1717.40834,128 L1412.50345,432.904894 C1369.47551,411.496903 1326.12963,392.632437 1283.84355,379.384918 C1180.30094,342.927746 1071.35334,324.381219 959.968206,324.381219 C562.754601,324.381219 199.348664,559.021273 11.7637967,936.734531 L1.13686838e-13,960.368104 L11.7637967,984.001678 C89.5532274,1139.68652 199.242684,1275.34111 329.280329,1376.65814 C357.683009,1398.17211 384.919908,1416.82461 411.520926,1433.88742 L127.706082,1717.70226 L202.634048,1792.63023 L776.304605,1218.95967 C828.340859,1255.84076 891.399048,1278.20258 959.968206,1278.20258\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOffSolid":{"variant":"Solid","glyphName":"off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M642.077028,960.294599 C642.077028,785.018909 784.713713,642.382223 959.989403,642.382223 C1028.44653,642.382223 1090.43945,666.01371 1142.25916,703.103487 L702.798291,1142.56436 C665.708514,1090.74464 642.077028,1028.75173 642.077028,960.294599 L642.077028,960.294599 Z M1717.25668,128 L1792.284,203.027321 L1218.55813,776.647217 L776.342021,1218.86333 L202.722125,1792.5892 L127.694804,1717.56188 L411.484585,1433.87807 C384.673974,1416.60483 357.33351,1397.95397 329.357221,1376.75981 C199.225089,1275.34576 89.6512899,1139.59718 11.8687287,984.032056 L11.8687287,984.032056 L0,960.40057 L11.7627579,936.663112 C199.43703,559.089181 562.810875,324.469848 959.989403,324.469848 C1071.36471,324.469848 1180.30268,343.014737 1283.83614,379.468689 C1326.11849,392.715038 1369.35457,411.471868 1412.48468,432.877968 L1412.48468,432.877968 L1717.25668,128 Z M1595.83535,549.159718 C1723.0003,648.666291 1831.09051,783.355168 1908.44918,937.012816 L1908.44918,937.012816 L1920,960.32639 L1908.44918,983.533993 C1720.77491,1361.95569 1357.40107,1596.15114 960.010597,1596.15114 C848.741266,1596.15114 739.59135,1578.13611 635.739974,1541.04633 L635.739974,1541.04633 L612.4264,1532.56867 L878.625029,1266.26407 C904.693844,1273.36411 931.610425,1278.23877 960.010597,1278.23877 C1135.28629,1278.23877 1277.92297,1135.60208 1277.92297,960.32639 C1277.92297,931.926218 1273.04832,905.009637 1266.05424,878.940822 L1266.05424,878.940822 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOpenFolderLine":{"variant":"Line","glyphName":"open-folder","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M494.165333,640.333333 L215.765333,1531.10667 L317.632,1562.89333 L572.458667,747 L1783.76533,747 L1600.40533,1664.12 C1595.392,1688.97333 1573.41867,1707 1548.13867,1707 L159.978667,1707 C130.645333,1707 106.645333,1683.10667 106.645333,1653.66667 L106.645333,213.666667 L561.152,213.666667 L732.778667,427 L1493.312,427 L1493.312,533.666667 L1599.97867,533.666667 L1599.97867,320.333333 L783.872,320.333333 L612.138667,107 L-0.0213333333,107 L-0.0213333333,1653.66667 C-0.0213333333,1741.88 71.7653333,1813.66667 159.978667,1813.66667 L1548.13867,1813.66667 C1624.08533,1813.66667 1690.112,1759.58667 1705.04533,1685.02667 L1914.00533,640.333333 L494.165333,640.333333 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOpenFolderSolid":{"variant":"Solid","glyphName":"open-folder","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M572.501333,747 L317.568,1562.89333 L215.701333,1531.10667 L494.208,640.333333 L1600.02133,640.333333 L1600.02133,320.333333 L783.808,320.333333 L612.181333,107 L0.0213333333,107 L0.0213333333,1653.66667 C0.0213333333,1741.88 71.808,1813.66667 160.021333,1813.66667 L1548.07467,1813.66667 C1624.02133,1813.66667 1690.048,1759.58667 1704.98133,1685.02667 L1892.608,747 L572.501333,747 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOutcomesLine":{"variant":"Line","glyphName":"outcomes","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,5.68434189e-14 C1130.65412,5.68434189e-14 1299.04941,46.08 1447.11529,133.157647 L1389.85412,230.512941 C1259.06824,153.6 1110.43765,112.941176 960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,809.449412 1766.4,660.818824 1689.48706,530.032941 L1786.72941,472.884706 C1873.92,620.950588 1920,789.345882 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,5.68434189e-14 960,5.68434189e-14 Z M960,338.823529 L960,451.764706 C679.792941,451.764706 451.764706,679.792941 451.764706,960 C451.764706,1240.20706 679.792941,1468.23529 960,1468.23529 C1240.20706,1468.23529 1468.23529,1240.20706 1468.23529,960 L1581.17647,960 C1581.17647,1302.55059 1302.43765,1581.17647 960,1581.17647 C617.562353,1581.17647 338.823529,1302.55059 338.823529,960 C338.823529,617.449412 617.562353,338.823529 960,338.823529 Z M960,677.647059 L960,790.588235 C866.597647,790.588235 790.588235,866.597647 790.588235,960 C790.588235,1053.40235 866.597647,1129.41176 960,1129.41176 C1053.40235,1129.41176 1129.41176,1053.40235 1129.41176,960 L1242.35294,960 C1242.35294,1115.63294 1115.74588,1242.35294 960,1242.35294 C804.254118,1242.35294 677.647059,1115.63294 677.647059,960 C677.647059,804.367059 804.254118,677.647059 960,677.647059 Z M1823.41271,16.4668235 L1903.37506,96.3162353 L1322.145,677.647 L1581.17647,677.647059 L1581.17647,790.588235 L1129.41176,790.588235 L1129.41176,338.823529 L1242.35294,338.823529 L1242.352,597.729 L1823.41271,16.4668235 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOutcomesSolid":{"variant":"Solid","glyphName":"outcomes","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M940.253053,101.052632 C1098.40042,101.052632 1254.42568,143.696842 1391.55411,224.336842 L1391.55411,224.336842 L1309.39832,363.688421 C1197.22989,297.6 1069.49937,262.736842 940.253053,262.736842 C539.074105,262.736842 212.674105,589.136842 212.674105,990.315789 C212.674105,1391.49474 539.074105,1717.89474 940.253053,1717.89474 C1341.432,1717.89474 1667.832,1391.49474 1667.832,990.315789 C1667.832,861.069474 1632.86779,733.338947 1566.77937,621.069474 L1566.77937,621.069474 L1706.13095,539.014737 C1786.872,676.143158 1829.51621,832.269474 1829.51621,990.315789 C1829.51621,1480.62316 1430.56042,1879.57895 940.253053,1879.57895 C449.844632,1879.57895 50.9898947,1480.62316 50.9898947,990.315789 C50.9898947,499.907368 449.844632,101.052632 940.253053,101.052632 Z M940.263158,404.190316 L940.263158,565.874526 C706.225263,565.874526 515.842105,756.257684 515.842105,990.295579 C515.842105,1224.33347 706.225263,1414.71663 940.263158,1414.71663 C1174.2,1414.71663 1364.68421,1224.33347 1364.68421,990.295579 L1364.68421,990.295579 L1526.36842,990.295579 C1526.36842,1313.46189 1263.42947,1576.40084 940.263158,1576.40084 C617.096842,1576.40084 354.157895,1313.46189 354.157895,990.295579 C354.157895,667.129263 617.096842,404.190316 940.263158,404.190316 L940.263158,404.190316 Z M940.242947,707.328 L940.242947,869.012211 C873.346105,869.012211 818.979789,923.479579 818.979789,990.275368 C818.979789,1057.17221 873.346105,1111.53853 940.242947,1111.53853 C1007.13979,1111.53853 1061.50611,1057.17221 1061.50611,990.275368 L1061.50611,990.275368 L1223.19032,990.275368 C1223.19032,1146.30063 1096.26821,1273.22274 940.242947,1273.22274 C784.217684,1273.22274 657.295579,1146.30063 657.295579,990.275368 C657.295579,834.250105 784.217684,707.328 940.242947,707.328 L940.242947,707.328 Z M1677.06821,110.278737 L1820.05768,253.268211 L1393.71663,679.508211 L1580.25979,866.051368 L1064.48716,866.051368 L1064.48716,350.278737 L1250.82821,536.619789 L1677.06821,110.278737 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOutdentLine":{"variant":"Line","glyphName":"outdent","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1919.88508,1468.30298 L1919.88508,1583.22143 L81.3048032,1583.22143 L81.3048032,1468.30298 L1919.88508,1468.30298 Z M1919.88508,1123.54763 L1919.88508,1238.46608 L81.3048032,1238.46608 L81.3048032,1123.54763 L1919.88508,1123.54763 Z M1920,778.792279 L1920,893.710729 L885.733952,893.710729 L885.733952,778.792279 L1920,778.792279 Z M270.518031,336 L351.765375,417.132426 L220.068831,548.943887 L713.413736,548.943887 L713.413736,663.862337 L220.068831,663.862337 L351.765375,795.673799 L270.518031,876.921143 L1.13686838e-13,606.518031 L270.518031,336 Z M1920,434.03693 L1920,548.955379 L885.733952,548.955379 L885.733952,434.03693 L1920,434.03693 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOutdentSolid":{"variant":"Solid","glyphName":"outdent","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1518.81271 L1920,1744.69506 L112.941176,1744.69506 L112.941176,1518.81271 L1920,1518.81271 Z M1920,1066.93506 L1920,1292.93035 L112.941176,1292.93035 L112.941176,1066.93506 L1920,1066.93506 Z M515.655529,112.954824 L515.655529,389.434824 L790.554353,389.434824 L790.554353,615.317176 L515.655529,615.317176 L515.655529,891.684235 L-0.0338823529,502.376 L515.655529,112.954824 Z M1920,615.283294 L1920,841.165647 L903.529412,841.165647 L903.529412,615.283294 L1920,615.283294 Z M1920,163.405647 L1920,389.400941 L903.529412,389.400941 L903.529412,163.405647 L1920,163.405647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOutdent2Line":{"variant":"Line","glyphName":"outdent2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1919.88508,1468.30298 L1919.88508,1583.22143 L81.3048032,1583.22143 L81.3048032,1468.30298 L1919.88508,1468.30298 Z M1919.88508,1123.54763 L1919.88508,1238.46608 L81.3048032,1238.46608 L81.3048032,1123.54763 L1919.88508,1123.54763 Z M1920,778.792279 L1920,893.710729 L885.733952,893.710729 L885.733952,778.792279 L1920,778.792279 Z M270.518031,336 L351.765375,417.132426 L220.068831,548.943887 L713.413736,548.943887 L713.413736,663.862337 L220.068831,663.862337 L351.765375,795.673799 L270.518031,876.921143 L1.13686838e-13,606.518031 L270.518031,336 Z M1920,434.03693 L1920,548.955379 L885.733952,548.955379 L885.733952,434.03693 L1920,434.03693 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOutdent2Solid":{"variant":"Solid","glyphName":"outdent2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1518.81271 L1920,1744.69506 L112.941176,1744.69506 L112.941176,1518.81271 L1920,1518.81271 Z M1920,1066.93506 L1920,1292.93035 L112.941176,1292.93035 L112.941176,1066.93506 L1920,1066.93506 Z M515.655529,112.954824 L515.655529,389.434824 L790.554353,389.434824 L790.554353,615.317176 L515.655529,615.317176 L515.655529,891.684235 L-0.0338823529,502.376 L515.655529,112.954824 Z M1920,615.283294 L1920,841.165647 L903.529412,841.165647 L903.529412,615.283294 L1920,615.283294 Z M1920,163.405647 L1920,389.400941 L903.529412,389.400941 L903.529412,163.405647 L1920,163.405647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconOvalHalfLine":{"variant":"Line","glyphName":"oval-half","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M962,0 C1492.19336,0 1922,429.80664 1922,960 C1922,1490.19336 1492.19336,1920 962,1920 C431.80664,1920 2,1490.19336 2,960 C2,429.80664 431.80664,0 962,0 Z M962,106.666667 C508.630838,106.666667 137.83964,460.224958 110.306565,906.661382 L1813.69343,906.661382 C1786.16036,460.224958 1415.36916,106.666667 962,106.666667 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconOvalHalfSolid":{"variant":"Solid","glyphName":"oval-half","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1490.19336,0 1920,429.80664 1920,960 C1920,1490.19336 1490.19336,1920 960,1920 C429.80664,1920 0,1490.19336 0,960 C0,429.80664 429.80664,0 960,0 Z M960,106.666667 C506.630838,106.666667 135.83964,460.224958 108.306565,906.661382 L1811.69343,906.661382 C1784.16036,460.224958 1413.36916,106.666667 960,106.666667 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconPageDownLine":{"variant":"Line","glyphName":"page-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1751.02022,1806.92713 L1751.02022,1920 L168,1920 L168,1806.92713 L1751.02022,1806.92713 Z M1751.02022,1580.78138 L1751.02022,1693.85425 L168,1693.85425 L168,1580.78138 L1751.02022,1580.78138 Z M1013.78509,0 L1013.78509,1168.382 L1369.51235,812.541666 L1449.56794,892.59726 L957.248654,1384.80348 L464.929365,892.59726 L544.984959,812.541666 L900.712218,1168.382 L900.712218,0 L1013.78509,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPageDownSolid":{"variant":"Solid","glyphName":"page-down","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M961.740749,682.84963 L1493.46468,1214.46062 L1333.65385,1374.1585 L1074.7942,1115.18591 L1074.7942,1920 L848.800236,1920 L848.800236,1115.18591 L589.940583,1374.1585 L430.129758,1214.46062 L961.740749,682.84963 Z M1750.16717,338.708596 L1750.16717,564.702561 L169,564.702561 L169,338.708596 L1750.16717,338.708596 Z M1750.16717,0 L1750.16717,225.881024 L169,225.881024 L169,0 L1750.16717,0 Z\" transform=\"matrix(1 0 0 -1 0 1920)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPageUpLine":{"variant":"Line","glyphName":"page-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M168,113.074 L1751.02,113.074 L1751.02,0.001 L168,0.001 L168,113.074 Z M168,339.218 L1751.02,339.218 L1751.02,226.146 L168,226.146 L168,339.218 Z M464.929,1027.403 L544.985,1107.458 L900.712,751.618 L900.712,1920 L1013.785,1920 L1013.785,751.618 L1369.512,1107.458 L1449.568,1027.403 L957.249,535.197 L464.929,1027.403 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPageUpSolid":{"variant":"Solid","glyphName":"page-up","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M169,225.88 L1750.167,225.88 L1750.167,0 L169,0 L169,225.88 Z M169,564.703 L1750.167,564.703 L1750.167,338.708 L169,338.708 L169,564.703 Z M430.13,1214.461 L589.941,1374.158 L848.801,1115.186 L848.801,1920 L1074.794,1920 L1074.794,1115.186 L1333.654,1374.158 L1493.465,1214.461 L961.74,682.85 L430.13,1214.461 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPaintLine":{"variant":"Line","glyphName":"paint","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M517.257332,1127.34303 C589.989778,1127.34303 666.128124,1163.92899 738.530966,1234.79369 C825.985689,1345.21077 853.452625,1438.92795 820.162699,1513.08868 C747.430253,1675.36333 407.499457,1747.98591 201.49744,1772.26668 C236.105779,1689.64614 276.646976,1555.38776 276.646976,1377.62175 C276.646976,1280.49867 343.11696,1182.16704 434.526922,1143.93306 C461.224784,1132.83642 489.021323,1127.34303 517.257332,1127.34303 Z M746.661179,960.234197 C800.716108,989.129413 853.123022,1025.6055 901.794432,1073.72758 L915.637767,1089.32879 C943.654042,1124.70621 966.286797,1159.31455 986.06299,1193.48341 C956.508567,1219.74181 926.185071,1246.21993 895.312235,1273.02766 C876.414983,1237.54038 852.24408,1201.06429 822.469921,1163.70926 L818.185079,1158.87508 C769.843273,1111.19248 718.754772,1075.48546 666.457727,1051.86389 C692.825985,1021.21079 719.523847,990.667562 746.661179,960.234197 Z M1793.15143,157.100998 C1800.95204,164.901608 1811.27961,178.854811 1810.07106,209.288176 C1804.02833,364.970767 1525.73334,703.693018 1069.56247,1118.55361 C1049.56655,1086.2525 1027.593,1053.73165 1001.77408,1021.10093 L979.25119,995.831346 C930.030442,947.159936 877.843264,906.948342 823.238996,874.757093 C1173.82696,488.901581 1551.44239,140.401101 1733.49324,132.929113 C1764.47595,132.820227 1777.98968,141.93925 1793.15143,157.100998 Z M1919.82894,213.573018 C1921.91642,159.95756 1904.99679,113.593372 1863.68652,72.283101 C1829.40778,38.0043653 1781.72518,21.084733 1729.09853,23.1722201 C1424.54515,35.587275 816.866667,706.549579 549.558449,1019.34304 C495.94299,1013.95952 442.876871,1021.43053 392.117974,1042.74487 C259.507608,1098.00835 166.779233,1235.7825 166.779233,1377.62175 C166.779233,1646.13851 62.8443488,1803.35925 61.8555391,1804.8974 L0,1896.74684 L110.307214,1890.59424 C179.523891,1886.85874 791.597086,1845.21886 920.471948,1558.13445 C944.862587,1503.53018 949.696767,1444.97068 936.402771,1382.8954 C1310.72217,1061.09278 1908.51256,503.184388 1919.82894,213.573018\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPaintSolid":{"variant":"Solid","glyphName":"paint","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M392.260066,1042.49958 C530.00695,984.830426 685.109502,1027.23098 818.133008,1158.71664 L818.133008,1158.71664 L822.526848,1163.54987 C939.183299,1309.97459 972.027253,1442.66855 920.399633,1557.78716 C791.550276,1844.92461 179.708056,1886.55624 110.39523,1890.291 L110.39523,1890.291 L-1.13686838e-13,1896.44238 L61.953144,1804.61112 C62.941758,1803.07328 166.96592,1645.88365 166.96592,1377.42003 C166.96592,1235.60884 259.566098,1097.86196 392.260066,1042.49958 Z M1728.70142,23.0518039 C1783.62442,21.9533439 1828.66128,38.3203979 1863.812,72.4825039 C1904.45502,113.125524 1921.92054,160.359304 1919.83346,213.085384 C1908.84886,474.518864 1423.32954,953.447423 1053.14852,1280.7885 C1028.87256,1215.97936 989.437844,1144.57946 927.814238,1067.68726 L927.814238,1067.68726 L919.026558,1057.80112 C838.948824,977.613543 749.863719,922.690543 656.604465,896.327503 C955.275738,558.001824 1460.67718,33.9265579 1728.70142,23.0518039 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPaperclipLine":{"variant":"Line","glyphName":"paperclip","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1752.768,221.108706 C1532.64565,0.986352941 1174.28329,0.986352941 954.160941,221.108706 L115.572706,1059.69694 C-38.4790588,1213.86165 -38.4790588,1464.59106 115.572706,1618.64282 C265.106824,1768.064 525.549176,1767.95106 674.631529,1618.64282 L1433.37035,860.016941 C1521.35153,771.922824 1521.35153,628.600471 1433.37035,540.506353 C1345.05035,452.299294 1201.728,452.525176 1113.85976,540.506353 L475.064471,1179.41459 L554.913882,1259.264 L1193.70918,620.355765 C1237.64329,576.534588 1309.248,576.421647 1353.52094,620.355765 C1397.45506,664.402824 1397.45506,736.233412 1353.52094,780.167529 L594.782118,1538.79341 C484.551529,1648.91106 305.426824,1648.79812 195.422118,1538.79341 C85.3044706,1428.67576 85.4174118,1249.55106 195.422118,1139.54635 L1034.01035,300.958118 C1209.97271,124.995765 1496.39153,124.769882 1672.91859,300.958118 C1848.99388,477.146353 1848.99388,763.791059 1672.91859,939.866353 L874.311529,1738.58635 L954.160941,1818.43576 L1752.768,1019.71576 C1972.77741,799.593412 1972.77741,441.231059 1752.768,221.108706\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPaperclipSolid":{"variant":"Solid","glyphName":"paperclip","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1748.31786,252.722184 C1519.30156,23.7058912 1146.78975,23.8126587 917.88022,252.722184 L125.131513,1045.47089 C44.5220486,1126.18712 0,1233.3817 0,1347.40939 C0,1461.54385 44.5220486,1568.73842 125.131513,1649.34789 C286.563977,1810.78035 567.789579,1810.78035 729.115276,1649.34789 L1446.48613,932.083804 C1550.37091,828.092256 1550.37091,658.865764 1446.27259,554.553914 C1342.17428,450.562367 1172.62748,450.669134 1068.84947,554.660682 L464.865707,1158.64444 L615.941723,1309.61369 L1219.71195,705.736698 C1240.63838,685.023803 1274.59045,684.810268 1295.30334,705.523163 C1316.12301,726.449594 1316.12301,760.401659 1295.41011,781.221322 L578.146027,1498.37864 C497.429795,1579.09487 356.816994,1579.09487 276.100762,1498.37864 C235.742646,1458.02052 213.535005,1404.42324 213.535005,1347.40939 C213.535005,1290.39554 235.742646,1236.79826 276.100762,1196.44014 L1068.84947,403.691433 C1214.48034,258.274095 1451.5042,258.06056 1597.34861,403.691433 C1742.97948,549.322307 1742.97948,786.559698 1597.34861,932.190571 L842.395596,1687.25035 L993.364845,1838.2196 L1748.31786,1083.15982 C1977.22738,854.250294 1977.22738,481.738478 1748.31786,252.722184\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPartialLine":{"variant":"Line","glyphName":"partial","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 Z\"/>\n        <path d=\"M451.764706 1016.47059L1468.23529 1016.47059 1468.23529 903.529412 451.764706 903.529412z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconPartialSolid":{"variant":"Solid","glyphName":"partial","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.46824,0 1920,430.644706 1920,960 C1920,1489.35529 1489.46824,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 Z M1468.23529,903.529412 L451.764706,903.529412 L451.764706,1016.47059 L1468.23529,1016.47059 L1468.23529,903.529412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPauseLine":{"variant":"Line","glyphName":"pause","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M206,1920 L754.571429,1920 L754.571429,0 L206,0 L206,1920 Z M1714.57143,0 L1714.57143,1920 L1166,1920 L1166,0 L1714.57143,0 Z M617.428571,137.142857 L617.428571,1782.85714 L343.142857,1782.85714 L343.142857,137.142857 L617.428571,137.142857 Z M1303.14286,1782.85714 L1577.42857,1782.85714 L1577.42857,137.142857 L1303.14286,137.142857 L1303.14286,1782.85714 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPauseSolid":{"variant":"Solid","glyphName":"pause","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M754.571429,0 L754.571429,1920 L206,1920 L206,0 L754.571429,0 Z M1714.57143,0 L1714.57143,1920 L1166,1920 L1166,0 L1714.57143,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPdfLine":{"variant":"Line","glyphName":"pdf","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1251.65412,1.13686838e-13 C1296.15294,1.13686838e-13 1339.86118,18.0705882 1371.37176,49.5811765 L1371.37176,49.5811765 L1700.59529,378.804706 C1732.55765,410.767059 1750.17647,453.345882 1750.17647,498.522353 L1750.17647,498.522353 L1750.17647,1920 L169,1920 L169,1.13686838e-13 Z M1185.47059,112.941176 L281.941176,112.941176 L281.941176,1807.05882 L1637.23529,1807.05882 L1637.23529,564.705882 L1185.47059,564.705882 L1185.47059,112.941176 Z M1298.41176,136.32 L1298.41176,451.764706 L1613.85647,451.764706 L1298.41176,136.32 Z\"/>\n        <path d=\"M900.497412,677.669647 C927.264471,677.669647 950.869176,690.319059 968.488,715.504941 C1010.38918,774.573176 1007.45271,837.481412 991.979765,922.187294 C986.671529,951.326118 992.092706,980.803765 1008.24329,1005.312 C1031.05741,1040.09788 1063.92329,1087.98494 1096.22447,1128.53082 C1119.94212,1158.46024 1156.42212,1174.38494 1193.35388,1169.41553 C1217.07153,1166.14024 1245.64565,1163.42965 1275.01035,1163.42965 C1406.02212,1163.42965 1396.19624,1210.18729 1408.05506,1253.10494 C1414.60565,1279.08141 1411.33035,1301.78259 1397.89035,1318.61082 C1381.17506,1341.312 1346.728,1353.05788 1296.35624,1353.05788 C1240.56329,1353.05788 1222.15388,1343.57082 1173.58918,1328.09788 C1146.14447,1319.28847 1117.68329,1317.48141 1089.89976,1324.82259 C1034.44565,1339.27906 942.963294,1361.30259 866.615059,1371.80612 C825.843294,1377.45318 788.798588,1398.46024 764.177412,1432.68141 C708.723294,1509.48141 657.335059,1581.19906 575.904471,1581.19906 C554.897412,1581.19906 535.584471,1573.632 519.659765,1558.49788 C496.168,1535.00612 486.116235,1508.91671 491.085647,1478.64847 C504.864471,1385.69788 619.160941,1333.85788 687.151529,1296.02259 C703.189176,1287.10024 715.838588,1273.43435 723.744471,1256.49318 L723.744471,1256.49318 L831.603294,1023.26965 C839.283294,1006.89318 841.655059,988.709647 838.831529,970.752 C826.295059,891.693176 807.772706,758.761412 857.579765,698.676706 C868.535059,685.236706 883.669176,677.669647 900.497412,677.669647 Z M921.052706,1017.62259 C877.796235,1144.22965 801.335059,1281.90494 791.057412,1297.94259 C883.330353,1254.57318 1066.97271,1232.66259 1066.97271,1232.66259 C974.586824,1143.66494 921.052706,1017.62259 921.052706,1017.62259 Z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconPdfSolid":{"variant":"Solid","glyphName":"pdf","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1185.45929,0.0338823529 L1185.45929,564.739765 L1750.16518,564.739765 L1750.16518,1920.03388 L168.988706,1920.03388 L168.988706,0.0338823529 L1185.45929,0.0338823529 Z M900.508706,677.680941 C883.680471,677.680941 868.546353,685.248 857.591059,698.688 C807.784,758.659765 826.193412,891.704471 838.842824,970.763294 C841.666353,988.720941 839.294588,1006.90447 831.614588,1023.28094 L831.614588,1023.28094 L723.755765,1256.50447 C715.849882,1273.44565 703.200471,1287.11153 687.162824,1296.03388 C619.059294,1333.86918 504.875765,1385.70918 491.096941,1478.65976 C486.127529,1508.928 496.179294,1535.01741 519.671059,1558.50918 C535.595765,1573.64329 554.908706,1581.21035 575.915765,1581.21035 C657.346353,1581.21035 708.734588,1509.49271 764.188706,1432.69271 C788.809882,1398.47153 825.854588,1377.46447 866.626353,1371.81741 C942.974588,1361.31388 1034.45694,1339.29035 1089.79812,1324.83388 C1117.69459,1317.49271 1146.15576,1319.29976 1173.60047,1327.99624 C1222.16518,1343.58212 1240.57459,1353.06918 1296.36753,1353.06918 C1346.73929,1353.06918 1381.18635,1341.32329 1397.90165,1318.62212 C1411.34165,1301.79388 1414.61694,1279.09271 1408.06635,1253.00329 C1396.20753,1210.19859 1406.03341,1163.328 1275.02165,1163.328 C1245.65694,1163.328 1217.08282,1166.15153 1193.25224,1169.42682 C1156.43341,1174.39624 1119.95341,1158.47153 1096.23576,1128.54212 C1063.93459,1087.99624 1031.06871,1040.10918 1008.25459,1005.32329 C992.104,980.815059 986.682824,951.337412 991.991059,922.198588 C1007.464,837.492706 1010.40047,774.584471 968.499294,715.516235 C950.880471,690.330353 927.275765,677.680941 900.508706,677.680941 Z M1298.41176,16.8734118 L1733.34824,451.809882 L1298.41176,451.809882 L1298.41176,16.8734118 Z\"/>\n        <path d=\"M791.057412,1297.94259 C883.330353,1254.57318 1066.97271,1232.66259 1066.97271,1232.66259 C974.586824,1143.66494 921.052706,1017.62259 921.052706,1017.62259 C877.796235,1144.22965 801.335059,1281.90494 791.057412,1297.94259\"/>\n    </g>\n</svg>\n","deprecated":false},"IconPeerGradedLine":{"variant":"Line","glyphName":"peer-graded","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M716.582453,133 C929.35232,133 1102.43454,306.192467 1102.43454,518.85209 L1102.43454,518.85209 L1102.43454,629.095544 C1102.43454,745.843362 1049.2972,849.361966 967.055581,920.138264 C1026.69729,927.414332 1086.339,936.454295 1145.209,948.911805 C1312.00735,983.969224 1433.16491,1143.05053 1433.16491,1327.1571 L1433.16491,1327.1571 L1433.16491,1539.04502 L1410.67524,1555.47129 C1289.73817,1644.21727 1043.45429,1787.86449 715.700505,1787.86449 C698.392283,1787.86449 680.863574,1787.42352 663.114378,1786.65181 C374.386771,1773.09187 155.333027,1653.47772 22.3794212,1555.47129 L22.3794212,1555.47129 L0,1538.93477 L0,1327.04685 C0,1142.94028 121.2678,983.85898 288.286633,948.801562 C346.825907,936.454295 406.136886,926.973358 465.668351,919.807533 C383.647221,848.920992 330.730363,745.622876 330.730363,629.095544 L330.730363,629.095544 L330.730363,518.85209 C330.730363,306.192467 503.812586,133 716.582453,133 Z M1122.49885,1056.7299 C972.567754,1025.09003 818.337161,1010.97887 667.083142,1014.94763 C547.909968,1017.92421 428.075333,1032.03537 310.996785,1056.61966 C194.68994,1081.09371 110.243454,1194.86495 110.243454,1327.04685 L110.243454,1327.04685 L110.243454,1482.82085 C232.393202,1568.25953 422.783647,1664.94304 668.29582,1676.5186 C971.685806,1691.07074 1200.33073,1567.9288 1322.92145,1482.71061 L1322.92145,1482.71061 L1322.92145,1327.1571 C1322.92145,1194.86495 1238.58521,1081.20395 1122.49885,1056.7299 Z M625.080386,518.85209 C586.384933,518.85209 569.738172,534.17593 542.177308,559.531925 C518.474966,581.470372 488.268259,609.141479 440.973817,621.92972 L440.973817,621.92972 L440.973817,629.095544 C440.973817,781.121268 564.556729,904.70418 716.582453,904.70418 C868.608176,904.70418 992.191089,781.121268 992.191089,629.095544 L992.191089,629.095544 L992.191089,583.895728 C962.86633,607.157097 923.95039,629.095544 864.308682,629.095544 C782.618282,629.095544 738.741387,588.74644 706.660542,559.311438 C679.430409,534.065687 663.004134,518.85209 625.080386,518.85209 Z M1842.05788,307.658705 L1920,385.600827 L1488.28663,817.314194 L1252.91686,581.944419 L1330.85898,504.002297 L1488.28663,661.429949 L1842.05788,307.658705 Z M716.582453,243.243454 C571.28158,243.243454 453.100597,356.683969 442.958199,499.449242 C450.675241,493.496096 458.502526,486.771245 467.432246,478.502986 C499.513091,449.067983 543.389986,408.608636 625.080386,408.608636 C705.999081,408.608636 749.655489,448.847497 781.405604,478.172255 C808.966468,503.52825 825.613229,518.85209 864.308682,518.85209 C901.9017,518.85209 918.107487,503.748737 945.227377,478.723473 C956.251723,468.581075 968.047772,457.777216 981.71796,447.745062 C950.078089,330.335783 843.803399,243.243454 716.582453,243.243454 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPeerGradedSolid":{"variant":"Solid","glyphName":"peer-graded","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M716.582453,133 C929.35232,133 1102.43454,306.082223 1102.43454,518.85209 L1102.43454,518.85209 L1102.43454,629.095544 C1102.43454,745.843362 1049.2972,849.361966 966.945338,920.248507 C1026.69729,927.414332 1086.22876,936.454295 1145.209,948.801562 C1312.00735,983.969224 1433.16491,1143.05053 1433.16491,1327.1571 L1433.16491,1327.1571 L1433.16491,1538.93477 L1410.67524,1555.47129 C1289.73817,1644.21727 1043.45429,1787.86449 715.700505,1787.86449 C698.502526,1787.86449 680.863574,1787.42352 663.224621,1786.65181 C374.386771,1773.09187 155.333027,1653.47772 22.3794212,1555.36105 L22.3794212,1555.36105 L0,1538.82453 L0,1327.04685 C0,1142.94028 121.2678,983.85898 288.17639,948.691318 C346.825907,936.454295 406.136886,926.973358 465.668351,919.69729 C383.647221,848.920992 330.730363,745.622876 330.730363,629.095544 L330.730363,629.095544 L330.730363,518.85209 C330.730363,306.082223 503.812586,133 716.582453,133 Z M625.080386,463.730363 C527.404685,463.730363 508.222324,535.719339 440.973817,562.949472 L440.973817,562.949472 L440.973817,629.095544 C440.973817,781.011024 564.556729,904.70418 716.582453,904.70418 C868.608176,904.70418 992.191089,781.011024 992.191089,629.095544 L992.191089,629.095544 L992.191089,518.85209 C992.191089,516.316491 991.529628,513.891135 991.419384,511.245292 C988.462655,513.924208 985.534501,516.62902 982.606391,519.333368 L980.654011,521.135908 C951.684524,547.863989 922.099403,573.973817 864.308682,573.973817 C744.143316,573.973817 744.143316,463.730363 625.080386,463.730363 Z M1842.05788,307.614607 L1488.28663,661.385852 L1330.85898,503.958199 L1252.91686,581.900322 L1488.28663,817.270096 L1920,385.556729 L1842.05788,307.614607 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPeerReviewLine":{"variant":"Line","glyphName":"peer-review","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1281.53605,1465.48716 C1162.78038,1548.03944 941.288229,1667.32908 647.389295,1653.23219 C409.557563,1642.01875 225.123166,1548.35982 106.794671,1465.59395 L106.794671,1314.69308 C106.794671,1186.64627 188.599389,1076.43417 301.267767,1052.72575 C414.683707,1028.91054 530.769514,1015.24082 646.214554,1012.35737 C792.736842,1008.51276 942.142587,1022.18248 1087.38334,1052.83255 C1199.83813,1076.54096 1281.53605,1186.64627 1281.53605,1314.79988 L1281.53605,1465.48716 Z M427.178684,638.576019 L427.178684,631.634365 C472.993597,619.246184 502.255337,592.440721 525.216191,571.188582 C551.914859,546.625807 568.040855,531.781348 605.525784,531.781348 C642.263151,531.781348 658.175557,546.519013 684.55384,570.974992 C715.63109,599.489169 758.135369,638.576019 837.27022,638.576019 C895.046137,638.576019 932.744656,617.32388 961.152038,594.790204 L961.152038,638.576019 C961.152038,785.84587 841.435212,905.562696 694.165361,905.562696 C546.89551,905.562696 427.178684,785.84587 427.178684,638.576019 L427.178684,638.576019 Z M694.165361,264.794671 C817.406411,264.794671 920.356474,349.162461 951.006544,462.898785 C937.764005,472.6171 926.336975,483.082978 915.657508,492.908088 C889.386019,517.150478 873.687203,531.781348 837.27022,531.781348 C799.78529,531.781348 783.659295,516.936889 756.960627,492.374115 C726.203762,463.966732 683.913072,424.986677 605.525784,424.986677 C526.390933,424.986677 483.886654,464.180321 452.809405,492.694499 C444.159036,500.704099 436.576615,507.218574 429.100988,512.985486 C438.926097,374.686387 553.409985,264.794671 694.165361,264.794671 L694.165361,264.794671 Z M1109.38304,948.387359 C1052.35469,936.319562 994.57877,927.562398 936.802853,920.51395 C1016.47168,851.951771 1067.94671,751.671576 1067.94671,638.576019 L1067.94671,531.781348 C1067.94671,325.774428 900.279076,158 694.165361,158 C488.051646,158 320.384013,325.774428 320.384013,531.781348 L320.384013,638.576019 C320.384013,751.457986 371.645455,851.524593 451.10069,920.193566 C393.431568,927.13522 335.976035,936.319562 279.268064,948.280565 C117.474138,982.24127 0,1136.34598 0,1314.69308 L0,1519.95244 L21.6793182,1535.97164 C150.473691,1630.9121 362.674702,1746.78432 642.369945,1759.92006 C659.563887,1760.66763 676.54424,1761.0948 693.311003,1761.0948 C1010.81156,1761.0948 1249.39085,1621.94135 1366.54461,1535.97164 L1388.33072,1520.05923 L1388.33072,1314.79988 C1388.33072,1136.45277 1270.96338,982.348065 1109.38304,948.387359 L1109.38304,948.387359 Z M1509.20093,692.016072 L1388.30936,692.016072 L1388.30936,571.2313 L1614.0733,345.467365 L1734.85807,466.252138 L1509.20093,692.016072 Z M1898.68109,350.166331 L1730.1591,181.751135 C1702.71287,154.19811 1654.86886,153.877726 1626.88866,181.64434 L1302.55324,505.872961 C1288.99032,519.649474 1281.51469,537.911362 1281.51469,557.241198 L1281.51469,798.810743 L1523.08424,798.810743 C1542.30728,798.810743 1560.35558,791.441911 1574.77286,777.451809 L1898.78789,453.436778 C1927.08848,425.029395 1927.08848,378.680508 1898.68109,350.166331 L1898.68109,350.166331 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPeerReviewSolid":{"variant":"Solid","glyphName":"peer-review","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1507.33867,693 L1386.69867,693 L1386.69867,572.36 L1612.08533,346.866667 L1732.832,467.506667 L1507.33867,693 Z M604.8,479.666667 C661.248,479.666667 690.03648,505.277333 718.397262,531.400213 L721.869725,534.599787 C750.24096,560.722667 779.296,586.333333 836.266667,586.333333 C890.833067,586.333333 919.563947,562.193269 946.973178,536.951966 L948.861673,535.209721 C949.490671,534.628577 950.119268,534.047131 950.747763,533.465663 L952.633237,531.721472 L952.633237,531.721472 L954.51988,529.978827 C956.093067,528.527733 957.669333,527.08 959.253333,525.64 C959.36,528.2 960,530.546667 960,533 L960,639.666667 C960,786.653333 840.32,906.333333 693.333333,906.333333 C546.346667,906.333333 426.666667,786.653333 426.666667,639.666667 L426.666667,575.666667 C450.741333,565.9184 468.449237,550.241451 485.993007,534.357582 L488.837484,531.780909 C517.761621,505.584672 547.150933,479.666667 604.8,479.666667 Z M1624.88533,183.24 C1653.36533,154.866667 1699.65867,154.76 1728.032,183.24 L1728.032,183.24 L1896.352,351.56 C1924.832,380.04 1924.832,426.333333 1896.352,454.813333 L1896.352,454.813333 L1572.832,778.333333 C1558.752,792.2 1540.61867,799.666667 1521.312,799.666667 L1521.312,799.666667 L1280.032,799.666667 L1280.032,558.386667 C1280.032,539.08 1287.49867,520.84 1301.04533,507.08 L1301.04533,507.08 Z M1108.05333,949 C1050.98667,937.053333 993.386667,928.306667 935.573333,921.373333 C1015.14667,852.786667 1066.66667,752.626667 1066.66667,639.666667 L1066.66667,533 C1066.66667,327.133333 899.2,159.666667 693.333333,159.666667 C487.466667,159.666667 320,327.133333 320,533 L320,639.666667 C320,752.413333 371.2,852.36 450.56,920.84 C392.96,927.88 335.573333,937.053333 278.826667,948.893333 C117.333333,982.92 0,1136.84 0,1314.97333 L0,1519.88 L21.6533333,1535.88 C150.293333,1630.81333 362.24,1746.54667 641.6,1759.66667 C658.773333,1760.41333 675.733333,1760.84 692.586667,1760.84 C1009.6,1760.84 1248,1621.85333 1364.90667,1535.98667 L1386.66667,1519.98667 L1386.66667,1315.08 C1386.66667,1136.94667 1269.44,983.026667 1108.05333,949\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPermissionsLine":{"variant":"Line","glyphName":"permissions","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1707,1760 C1707,1789.44 1683.10667,1813.33333 1653.66667,1813.33333 L1333.66667,1813.33333 C1304.22667,1813.33333 1280.33333,1789.44 1280.33333,1760 L1280.33333,1493.33333 L1707,1493.33333 L1707,1760 Z M213.666667,1484.05333 L213.666667,1337.6 C213.666667,1250.98667 270.093333,1175.46667 354.146667,1149.65333 C536.973333,1093.65333 727.266667,1067.41333 916.493333,1066.66667 C1063.37333,1067.41333 1209.29333,1086.08 1352.76,1121.06667 C1308.70667,1160.10667 1280.33333,1216.53333 1280.33333,1280 L1280.33333,1386.66667 L1173.66667,1386.66667 L1173.66667,1674.98667 C1086.2,1695.25333 996.706667,1706.66667 907,1706.66667 C762.573333,1706.66667 483.533333,1677.33333 213.666667,1484.05333 L213.666667,1484.05333 Z M1387,1280 C1387,1221.22667 1434.89333,1173.33333 1493.66667,1173.33333 C1552.44,1173.33333 1600.33333,1221.22667 1600.33333,1280 L1600.33333,1386.66667 L1387,1386.66667 L1387,1280 Z M899.533333,106.666667 L914.466667,106.666667 C1088.54667,106.666667 1236.81333,229.226667 1272.12,396.906667 C1241.93333,414.4 1210.68,426.666667 1156.6,426.666667 C1087.05333,426.666667 1055.48,406.72 1015.37333,381.44 C969.72,352.64 918.093333,320 818.466667,320 C718.093333,320 666.146667,352.746667 620.28,381.653333 C593.506667,398.613333 570.466667,413.12 537.293333,420.8 C562.573333,243.52 715.426667,106.666667 899.533333,106.666667 L899.533333,106.666667 Z M1707,1386.66667 L1707,1280 C1707,1218.34667 1680.33333,1163.2 1638.41333,1124.26667 L1638.52,1124.16 C1600.65333,1080.42667 1515.42667,1054.4 1491.64,1047.89333 C1391.26667,1017.06667 1288.76,994.88 1185.18667,980.266667 C1306.89333,894.72 1387,753.813333 1387,594.133333 L1280.33333,594.133333 C1280.33333,795.84 1116.17333,960 914.466667,960 L899.533333,960 C697.826667,960 533.666667,795.84 533.666667,594.133333 L533.666667,529.813333 C599.906667,520.64 640.546667,495.04 677.24,471.893333 C717.346667,446.613333 749.026667,426.666667 818.466667,426.666667 C887.16,426.666667 918.626667,446.506667 958.413333,471.68 C1004.28,500.586667 1056.22667,533.333333 1156.6,533.333333 C1256.97333,533.333333 1309.13333,500.266667 1359.05333,468.586667 L1387.32,450.56 L1383.48,417.28 C1355.42667,179.413333 1153.72,0 914.466667,0 L899.533333,0 C638.946667,0 427,211.946667 427,480 L427,594.133333 C427,753.92 507.106667,894.826667 628.92,980.373333 C525.56,994.88 423.266667,1016.96 322.786667,1047.68 C193.72,1087.36 107,1203.84 107,1337.6 L107,1537.81333 L128.333333,1553.70667 C429.453333,1779.62667 745.4,1813.33333 907,1813.33333 C997.453333,1813.33333 1087.48,1801.81333 1175.90667,1782.82667 C1187.21333,1860.16 1253.24,1920 1333.66667,1920 L1653.66667,1920 C1741.88,1920 1813.66667,1848.21333 1813.66667,1760 L1813.66667,1386.66667 L1707,1386.66667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPermissionsSolid":{"variant":"Solid","glyphName":"permissions","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1600,1066.66667 C1717.65333,1066.66667 1813.33333,1162.34667 1813.33333,1280 L1813.33333,1280 L1813.33333,1386.66667 L1920,1386.66667 L1920,1760 C1920,1848.21333 1848.21333,1920 1760,1920 L1760,1920 L1440,1920 C1351.78667,1920 1280,1848.21333 1280,1760 L1280,1760 L1280,1386.66667 L1386.66667,1386.66667 L1386.66667,1280 C1386.66667,1162.34667 1482.34667,1066.66667 1600,1066.66667 Z M800,0 C890.666667,0 979.2,25.6 1054.93333,73.6 C1084.8,91.7333333 1113.6,114.133333 1139.2,139.733333 C1188.26667,188.8 1224,246.613333 1247.25333,309.546667 C1258.56,339.946667 1268.05333,370.986667 1273.06667,403.626667 L1273.06667,403.626667 L1275.30667,418.24 L1278.93333,438.4 L1278.4,438.72 L1278.4,438.933333 L1225.70667,471.36 C1181.01333,500.266667 1130.24,532.906667 1032.64,533.226667 C1032.21333,533.226667 1031.89333,533.333333 1031.46667,533.333333 C1006.93333,533.333333 985.386667,531.2 966.186667,527.68 C965.546667,527.573333 965.12,527.36 964.48,527.253333 C908.16,516.48 871.466667,493.013333 838.186667,471.573333 C828.586667,465.28 819.413333,459.413333 810.026667,453.973333 C782.08,437.973333 752.106667,426.666667 701.866667,426.666667 L701.866667,426.666667 L701.546667,426.666667 C643.733333,426.773333 612.8,442.56 580.16,462.933333 C575.68,465.813333 571.306667,468.373333 566.72,471.36 C563.626667,473.386667 560,475.52 556.8,477.546667 C550.506667,481.6 544.106667,485.653333 537.173333,489.706667 C532.693333,492.373333 527.68,494.72 522.88,497.28 C515.946667,500.906667 508.906667,504.426667 501.12,507.733333 C494.506667,510.72 487.36,513.28 480,515.84 C473.066667,518.186667 465.493333,520.106667 457.813333,522.133333 C448.853333,524.48 440,526.72 429.973333,528.32 C428.8,528.533333 427.84,528.853333 426.666667,529.066667 L426.666667,529.066667 L426.666667,586.666667 C426.666667,603.733333 427.733333,620.8 430.933333,636.8 C454.4,819.2 611.2,960 800,960 C995.2,960 1156.26667,808.533333 1171.2,617.6 C1219.2,602.666667 1253.33333,580.266667 1280,563.2 L1280,563.2 L1280,586.666667 C1280,752.213333 1195.62667,898.453333 1067.62667,984.746667 L1067.62667,984.746667 L1072.53333,984.746667 C1172.69333,1001.49333 1271.14667,1027.52 1366.61333,1062.50667 C1313.28,1119.68 1280,1195.73333 1280,1280 L1280,1280 L1173.33333,1280 L1173.33333,1760 C1173.33333,1761.38667 1173.76,1762.66667 1173.76,1764.16 C1030.82667,1801.70667 901.333333,1813.33333 800,1813.33333 C454.506667,1813.33333 187.946667,1693.01333 25.1733333,1592 L25.1733333,1592 L0,1576.32 L0,1379.94667 C0,1239.89333 85.8666667,1116.90667 218.666667,1066.66667 C319.04,1028.58667 423.253333,1001.70667 528.853333,984.32 L528.853333,984.32 L533.653333,984.32 C419.52,907.413333 339.2,783.786667 323.2,640 C321.066667,622.933333 320,604.8 320,586.666667 L320,586.666667 L320,480 C320,423.466667 329.6,370.133333 347.733333,320 C413.866667,133.333333 592,0 800,0 Z M1600,1173.33333 C1541.22667,1173.33333 1493.33333,1221.22667 1493.33333,1280 L1493.33333,1280 L1493.33333,1386.66667 L1706.66667,1386.66667 L1706.66667,1280 C1706.66667,1221.22667 1658.77333,1173.33333 1600,1173.33333 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPinLine":{"variant":"Line","glyphName":"pin","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M692.080941,851.621647 L1035.08329,1194.624 C1088.39153,1247.93224 1117.75624,1318.85929 1117.75624,1394.19106 C1117.75624,1469.63576 1088.39153,1540.56282 1035.08329,1593.87106 L1018.59388,1610.36047 L276.231529,868.111059 L292.720941,851.621647 C399.450353,744.779294 585.464471,744.779294 692.080941,851.621647 Z M1032.25976,464.233412 L1422.69741,854.671059 L1136.50447,1140.864 C1129.16329,1132.28047 1123.06447,1122.79341 1114.93271,1114.77459 L771.930353,771.772235 C767.178458,766.953412 761.910968,762.967471 756.621444,759.015316 L754.637804,757.533281 C751.663686,755.307922 748.702118,753.061647 745.840941,750.652235 L1032.25976,464.233412 Z M1135.03624,159.744 L1727.18682,751.781647 L1643.27153,835.696941 C1621.248,857.720471 1585.44565,857.720471 1563.42212,835.696941 L1542.97976,815.254588 C1542.75388,815.028706 1542.75388,814.802824 1542.528,814.576941 C1542.30212,814.464 1542.07624,814.464 1541.96329,814.238118 L1072.80565,345.080471 C1072.57976,344.854588 1072.46682,344.515765 1072.24094,344.289882 C1072.01506,344.064 1071.67624,343.951059 1071.45035,343.838118 L1051.12094,323.508706 C1029.09741,301.485176 1029.09741,265.569882 1051.12094,243.546353 L1135.03624,159.744 Z M1135.03624,0.0451764706 L971.271529,163.696941 C911.977412,222.991059 908.928,314.473412 956.250353,380.544 L658.876235,677.918118 C654.810353,681.871059 652.438588,686.727529 649.840941,691.471059 C505.276235,631.386353 326.942118,657.814588 212.871529,771.772235 L116.532706,868.111059 L527.638588,1279.21694 L16.5797647,1790.27576 C-5.55670588,1812.29929 -5.55670588,1848.10165 16.5797647,1870.12518 C27.5350588,1881.19341 41.9915294,1886.72753 56.448,1886.72753 C70.9044706,1886.72753 85.3609412,1881.19341 96.4291765,1870.12518 L607.488,1359.06635 L1018.59388,1770.05929 L1114.93271,1673.72047 C1189.58682,1599.17929 1230.69741,1499.904 1230.69741,1394.19106 C1230.69741,1339.07576 1218.95153,1285.88047 1197.60565,1236.864 C1200.20329,1234.944 1203.25271,1233.81459 1205.62447,1231.44282 L1506.38682,930.680471 C1535.75153,951.574588 1568.84329,965.127529 1603.29035,965.127529 C1646.65976,965.127529 1690.14212,948.525176 1723.12094,915.546353 L1886.88565,751.781647 L1135.03624,0.0451764706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPinSolid":{"variant":"Solid","glyphName":"pin","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1154.97643,0 L988.342187,166.519325 C927.894178,226.967335 924.906253,319.937752 972.942884,387.166051 L670.358078,689.750857 C666.335872,693.773063 663.807628,698.71463 661.279385,703.541277 C514.066648,642.518667 332.6077,669.295067 216.653249,785.249517 L118.626345,883.391342 L536.935761,1301.58584 L16.8070748,1821.71453 C-5.60235826,1844.12396 -5.60235826,1880.43873 16.8070748,1902.96308 C28.0692514,1914.11034 42.7790331,1919.74143 57.4888147,1919.74143 C72.1985964,1919.74143 86.9083781,1914.11034 98.0556345,1902.96308 L618.184321,1382.8344 L1036.37882,1801.14381 L1134.52064,1703.00199 C1210.48287,1627.15468 1252.31382,1526.13985 1252.31382,1418.68949 C1252.31382,1362.49353 1240.2472,1308.48105 1218.52729,1258.49077 C1221.28537,1256.65205 1224.38821,1255.50285 1226.80154,1252.97461 L1530.76539,949.010759 C1559.95511,970.15607 1594.661,982.107768 1631.43545,982.107768 C1677.51844,982.107768 1720.72843,964.180221 1753.36575,931.542893 L1920,764.908647 L1154.97643,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPinterestLine":{"variant":"Line","glyphName":"pinterest","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1368.61867,1166.432 C1277.84533,1263.072 1162.00533,1308.832 1034.00533,1299.232 C938.432,1291.97867 813.952,1225.52533 812.672,1224.88533 L748.885333,1190.64533 L735.125333,1261.68533 C697.472,1455.28533 652.778667,1596.512 553.472,1701.472 C541.845333,1486.85867 592.405333,1301.25867 641.472,1120.992 C662.058667,1045.472 683.285333,967.285333 699.498667,888.778667 L703.658667,868.405333 L692.885333,850.592 C642.005333,766.325333 656.938667,616.992 724.138667,537.205333 C749.418667,507.018667 777.578667,492.085333 809.365333,492.085333 C823.978667,492.085333 839.338667,495.285333 855.552,501.578667 C924.138667,528.352 917.738667,594.378667 865.365333,766.752 C830.485333,881.525333 794.432,1000.13867 846.378667,1086.96533 C873.472,1132.192 920.512,1161.73867 986.325333,1174.752 C1132.88533,1203.44533 1262.37867,1135.17867 1341.632,986.592 C1440.61867,801.205333 1443.60533,499.765333 1290.32533,346.485333 C1122.00533,178.378667 846.592,147.445333 620.245333,271.178667 C418.538667,381.472 321.685333,579.765333 367.338667,788.618667 C387.498667,880.565333 350.698667,925.152 326.058667,943.925333 C267.498667,897.952 263.872,773.685333 267.712,666.912 C279.552,345.312 562.965333,141.152 823.872,112.458667 C1144.29867,77.0453333 1492.992,215.712 1539.49867,549.045333 C1571.60533,779.338667 1504.61867,1021.68533 1368.61867,1166.432 M1645.09867,534.325333 C1595.712,180.618667 1245.312,-41.1413333 812.138667,6.432 C506.965333,40.032 175.125333,281.632 161.152,663.072 C155.178667,825.098667 167.765333,998.325333 306.112,1054.53867 L325.632,1062.432 L345.152,1054.96533 C405.738667,1031.81867 510.058667,941.578667 471.552,765.792 C435.818667,602.592 510.592,452.725333 671.445333,364.725333 C822.805333,281.952 1057.472,264.672 1214.912,422.005333 C1321.57867,528.672 1336.832,768.992 1247.552,936.352 C1207.65867,1011.12533 1133.73867,1095.072 1007.01867,1070.112 C954.432,1059.65867 941.952,1038.96533 937.898667,1032.13867 C910.272,985.952 940.565333,886.005333 967.445333,797.792 C1011.81867,651.658667 1067.17867,469.578667 894.378667,402.165333 C800.298667,365.578667 708.672,389.792 642.432,468.512 C551.125333,576.992 529.578667,762.912 590.912,886.325333 C576.192,954.912 557.845333,1022.112 538.538667,1093.04533 C479.125333,1311.17867 417.685333,1536.77867 457.685333,1816.56533 L470.165333,1903.49867 L541.525333,1852.40533 C706.645333,1734.32533 777.152,1570.69867 825.898667,1349.152 C878.698667,1372.08533 956.032,1400.24533 1025.89867,1405.57867 C1188.032,1417.73867 1332.77867,1360.352 1446.37867,1239.49867 C1603.60533,1072.032 1681.57867,795.338667 1645.09867,534.325333\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPinterestSolid":{"variant":"Solid","glyphName":"pinterest","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M796.862588,1332.48 C745.587294,1596.87529 679.290824,1787.52 494.067294,1920 C436.806118,1520.52706 578.095529,1220.55529 643.601412,901.835294 C531.789647,716.724706 657.041412,344.018824 892.636706,435.727059 C1182.55671,548.781176 662.462588,1097.11059 1025.68141,1169.05412 C1404.93788,1244.04706 1540.69318,596.894118 1305.66259,361.750588 C965.935529,22.2494118 289.079059,310.136471 394.453176,791.491765 C436.919059,985.524706 292.467294,1040.75294 292.467294,1040.75294 C175.460235,993.317647 164.279059,829.101176 170.264941,668.837647 C183.704941,300.310588 506.490824,42.24 830.293176,6.43764706 C1239.81788,-38.7388235 1624.15671,154.503529 1677.12612,533.985882 C1736.98494,962.145882 1500.14729,1454.00471 1062.16141,1420.57412 C943.573176,1411.53882 796.862588,1332.48 796.862588,1332.48\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPlayLine":{"variant":"Line","glyphName":"play","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M175,0.024329667 L175,1920 L1745.84495,960.072989 L175,0.024329667 Z M296.648335,216.923311 L1512.52344,960.072989 L296.648335,1703.10102 L296.648335,216.923311 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPlaySolid":{"variant":"Solid","glyphName":"play","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M175 0.024329667L175 1920 1745.84495 960.072989z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPlusLine":{"variant":"Line","glyphName":"plus","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M915.743529 213L915.743529 915.743529 213 915.743529 213 1003.58647 915.743529 1003.58647 915.743529 1706.33 1003.58647 1706.33 1003.58647 1003.58647 1706.33 1003.58647 1706.33 915.743529 1003.58647 915.743529 1003.58647 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPlusSolid":{"variant":"Solid","glyphName":"plus","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M866.331875 213L866.331875 866.331875 213 866.331875 213 1052.99813 866.331875 1052.99813 866.331875 1706.33 1052.99813 1706.33 1052.99813 1052.99813 1706.33 1052.99813 1706.33 866.331875 1052.99813 866.331875 1052.99813 213z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPostToSisLine":{"variant":"Line","glyphName":"post-to-sis","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M922.314667,1188.96 C943.114667,1168.16 976.928,1168.16 997.728,1188.96 L997.728,1188.96 L1264.39467,1455.62667 L1188.98133,1531.04 L1013.30133,1355.46667 L1013.30133,1920.05333 L906.741333,1920.05333 L906.741333,1355.46667 L731.061333,1531.04 L655.648,1455.62667 Z M508.928,220.405333 C597.461333,197.045333 713.941333,233.098667 784.768,306.058667 L784.768,306.058667 L708.394667,380.405333 C664.661333,335.498667 587.434667,310.005333 535.914667,323.658667 C510.528,330.272 495.594667,344.992 489.088,369.632 C471.808,435.125333 603.008,482.485333 604.394667,483.018667 C690.474667,511.178667 826.048,594.272 786.794667,726.325333 C768.341333,788.405333 723.114667,831.285333 659.434667,846.858667 C641.728,851.232 623.061333,853.365333 604.074667,853.365333 C527.488,853.365333 444.821333,819.125333 388.394667,761.098667 L388.394667,761.098667 L464.768,686.752 C507.968,731.232 582.421333,756.298667 633.834667,743.285333 C660.821333,736.672 676.928,721.632 684.501333,696.032 C703.914667,631.072 572.288,584.778667 571.008,584.245333 C485.781333,556.085333 351.274667,473.525333 385.941333,342.432 C402.261333,280.245333 446.101333,236.938667 508.928,220.405333 Z M1255.54133,220.405333 C1344.07467,197.045333 1460.55467,233.098667 1531.38133,306.058667 L1531.38133,306.058667 L1455.008,380.405333 C1411.27467,335.498667 1334.048,310.005333 1282.528,323.658667 C1257.14133,330.272 1242.208,344.992 1235.70133,369.632 C1218.42133,435.125333 1349.62133,482.485333 1351.008,483.018667 C1437.088,511.178667 1572.66133,594.272 1533.408,726.325333 C1514.95467,788.405333 1469.728,831.285333 1406.048,846.858667 C1388.34133,851.232 1369.67467,853.365333 1350.688,853.365333 C1274.10133,853.365333 1191.43467,819.125333 1135.008,761.098667 L1135.008,761.098667 L1211.38133,686.752 C1254.58133,731.232 1329.03467,756.298667 1380.448,743.285333 C1407.43467,736.672 1423.54133,721.632 1431.11467,696.032 C1450.528,631.072 1318.90133,584.778667 1317.62133,584.245333 C1232.39467,556.085333 1097.888,473.525333 1132.55467,342.432 C1148.87467,280.245333 1192.71467,236.938667 1255.54133,220.405333 Z M1013.33333,213.333333 L1013.33333,853.333333 L906.666667,853.333333 L906.666667,213.333333 L1013.33333,213.333333 Z M1653.30133,906.666667 C1653.30133,936 1629.30133,960 1599.968,960 L319.968,960 C290.634667,960 266.634667,936 266.634667,906.666667 L266.634667,160 C266.634667,130.666667 290.634667,106.666667 319.968,106.666667 L1599.968,106.666667 C1629.30133,106.666667 1653.30133,130.666667 1653.30133,160 L1653.30133,906.666667 Z M1599.968,-2.84217094e-14 L319.968,-2.84217094e-14 C231.754667,-2.84217094e-14 159.968,71.7866667 159.968,160 L159.968,906.666667 C159.968,994.88 231.754667,1066.66667 319.968,1066.66667 L1599.968,1066.66667 C1688.18133,1066.66667 1759.968,994.88 1759.968,906.666667 L1759.968,160 C1759.968,71.7866667 1688.18133,-2.84217094e-14 1599.968,-2.84217094e-14 L1599.968,-2.84217094e-14 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPostToSisSolid":{"variant":"Solid","glyphName":"post-to-sis","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M922.293333,1188.96 C943.093333,1168.16 976.906667,1168.16 997.706667,1188.96 L997.706667,1188.96 L1264.37333,1455.62667 L1188.96,1531.04 L1013.38667,1355.46667 L1013.38667,1920.05333 L906.72,1920.05333 L906.72,1355.46667 L731.04,1531.04 L655.626667,1455.62667 Z M1600,-0.0426666667 C1688.21333,-0.0426666667 1760,71.744 1760,159.957333 L1760,159.957333 L1760,906.624 C1760,994.944 1688.21333,1066.624 1600,1066.624 L1600,1066.624 L320,1066.624 C231.786667,1066.624 160,994.944 160,906.624 L160,906.624 L160,159.957333 C160,71.744 231.786667,-0.0426666667 320,-0.0426666667 L320,-0.0426666667 Z M1531.41333,306.090667 C1460.58667,233.024 1344.42667,196.970667 1255.57333,220.544 C1192.74667,236.970667 1149.01333,280.277333 1132.58667,342.357333 C1097.92,473.557333 1232.42667,556.010667 1317.65333,584.277333 C1318.82667,584.704 1450.56,630.890667 1431.14667,695.957333 C1423.57333,721.664 1407.46667,736.810667 1380.48,743.317333 C1328.96,756.330667 1254.72,731.157333 1211.41333,686.784 L1211.41333,686.784 L1135.04,761.130667 C1191.46667,819.157333 1274.13333,853.397333 1350.72,853.397333 C1369.81333,853.397333 1388.37333,851.370667 1406.08,846.997333 C1469.76,831.210667 1514.98667,788.437333 1533.44,726.357333 C1572.69333,594.304 1437.12,511.104 1350.93333,482.944 C1349.54667,482.517333 1218.24,435.797333 1235.73333,369.664 C1242.34667,345.024 1257.17333,330.304 1282.56,323.690667 C1333.86667,310.464 1411.41333,335.530667 1455.04,380.437333 L1455.04,380.437333 Z M784.746667,306.090667 C713.92,233.024 597.653333,196.970667 508.906667,220.544 C446.08,236.970667 402.346667,280.277333 385.92,342.357333 C351.253333,473.557333 485.76,556.010667 570.986667,584.277333 C572.16,584.704 703.893333,630.890667 684.48,695.957333 C676.906667,721.664 660.8,736.810667 633.813333,743.317333 C582.506667,756.330667 508.053333,731.157333 464.746667,686.784 L464.746667,686.784 L388.373333,761.130667 C444.8,819.157333 527.466667,853.397333 604.053333,853.397333 C623.146667,853.397333 641.706667,851.370667 659.413333,846.997333 C723.093333,831.210667 768.32,788.437333 786.773333,726.357333 C826.026667,594.304 690.453333,511.104 604.266667,482.944 C602.88,482.517333 471.573333,435.797333 489.066667,369.664 C495.68,345.024 510.506667,330.304 535.893333,323.690667 C587.413333,310.464 664.64,335.530667 708.373333,380.437333 L708.373333,380.437333 Z M1013.33333,213.290667 L906.666667,213.290667 L906.666667,853.290667 L1013.33333,853.290667 L1013.33333,213.290667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPrerequisiteLine":{"variant":"Line","glyphName":"prerequisite","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1652.32217,1040.53436 L258.811557,1040 C203.494929,1040 160,1082.749 160,1136.07837 L160,1664.34912 C160,1717.62506 203.048827,1760 258.421218,1760 L1661.57878,1760 C1716.95117,1760 1760,1717.62506 1760,1664.34912 L1760,1136.07837 C1760,1082.80243 1707.69456,1040.53436 1652.37793,1040.53436 L1652.32217,1040.53436 Z M808.96,1358.48 L885.12,1358.48 C885.12,1348.02661 886.146656,1337.48005 888.2,1326.84 C890.253344,1316.19995 893.706642,1306.49338 898.56,1297.72 C903.413358,1288.94662 909.853293,1281.85336 917.88,1276.44 C925.906707,1271.02664 935.706609,1268.32 947.28,1268.32 C964.453419,1268.32 978.546612,1273.63995 989.56,1284.28 C1000.57339,1294.92005 1006.08,1309.7599 1006.08,1328.8 C1006.08,1340.74673 1003.37336,1351.38662 997.96,1360.72 C992.54664,1370.05338 985.826707,1378.4533 977.8,1385.92 C969.773293,1393.3867 960.906715,1400.19997 951.2,1406.36 C941.493285,1412.52003 932.34671,1418.58664 923.76,1424.56 C906.959916,1436.13339 891.000076,1447.51994 875.88,1458.72 C860.759924,1469.92006 847.600056,1482.1466 836.4,1495.4 C825.199944,1508.6534 816.333366,1523.67992 809.8,1540.48 C803.266634,1557.28008 800,1577.06655 800,1599.84 L1087.84,1599.84 L1087.84,1531.52 L902.48,1531.52 C912.186715,1518.07993 923.386603,1506.32005 936.08,1496.24 C948.773397,1486.15995 961.839933,1476.73338 975.28,1467.96 C988.720067,1459.18662 1002.0666,1450.32004 1015.32,1441.36 C1028.5734,1432.39996 1040.42661,1422.41339 1050.88,1411.4 C1061.33339,1400.38661 1069.7333,1387.78674 1076.08,1373.6 C1082.4267,1359.41326 1085.6,1342.42677 1085.6,1322.64 C1085.6,1303.5999 1081.96004,1286.42674 1074.68,1271.12 C1067.39996,1255.81326 1057.60006,1242.93339 1045.28,1232.48 C1032.95994,1222.02661 1018.68008,1214.00003 1002.44,1208.4 C986.199919,1202.79997 969.12009,1200 951.2,1200 C927.679882,1200 906.866757,1204.01329 888.76,1212.04 C870.653243,1220.06671 855.626726,1231.26659 843.68,1245.64 C831.733274,1260.01341 822.773363,1276.81324 816.8,1296.04 C810.826637,1315.26676 808.21333,1336.07989 808.96,1358.48 L808.96,1358.48 Z M1104,160 L1104,232 L1032,232 L1032,160 L1104,160 Z M528,232 L672,232 L672,160 L528,160 L528,232 L528,232 Z M816,232 L888,232 L888,160 L816,160 L816,232 L816,232 Z M1392,160 L1248,160 L1248,232 L1392,232 L1392,160 L1392,160 Z M1680,480 L1680,560 L1760,560 L1760,480 L1680,480 Z M1616,231.345455 C1616,231.345455 1662.0728,232.163636 1662.0728,268.163636 L1662.0728,304 L1759.99777,304 L1759.99777,231.345455 C1759.99777,231.345455 1761.78018,160 1664.66541,160 L1616.05401,160 L1616.05401,231.345455 L1616,231.345455 Z M672,880 L672,808 L528,808 L528,880 L672,880 L672,880 Z M1392,808 L1248,808 L1248,880 L1392,880 L1392,808 L1392,808 Z M160,559.622564 L240.284209,559.622564 L240.284209,480 L160,480 L160,559.622564 Z M304,808 L268.940943,808 C233.22734,808 234.168249,774.243795 234.168249,774.243795 L234.168249,736 L160.000138,736 L160.000138,809.588527 C160.000138,809.588527 159.427411,880 232.204614,880 L304,880 L304,808 L304,808 Z M1662.05563,736 L1662.05563,774.233251 C1662.05563,774.233251 1656.27843,809.965261 1616,809.965261 L1616,880 L1656.60239,880 C1761.77984,880 1759.99809,809.60794 1759.99809,809.60794 L1759.99809,736 L1662.10962,736 L1662.05563,736 Z M1032,808 L1032,880 L1104,880 L1104,808 L1032,808 Z M816,808 L816,880 L888,880 L888,808 L816,808 Z M257.943757,304 L257.943757,268.122727 C257.943757,234.495455 304,231.304545 304,231.304545 L304,160 L255.298088,160 C201.68279,160 160,188.390909 160,229.136364 L160,304 L257.889764,304 L257.943757,304 Z M1032.21263,720.498047 L1032.21263,317.109375 L962.157726,317.109375 C959.661726,337.605375 954.62172,330.941921 946.98972,341.789921 C939.30972,352.637921 929.94972,361.949921 918.90972,368.669921 C907.77372,375.245921 895.14972,380.189921 881.27772,382.781921 C867.35772,385.373921 853.34172,386.765921 837.98172,386.381921 L891.128904,448.541927 L962.157722,448.541927 L962.157726,720.498047 L1032.21263,720.498047 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPrerequisiteSolid":{"variant":"Solid","glyphName":"prerequisite","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1652.32217,1040.53436 L258.811557,1040 C203.494929,1040 160,1082.749 160,1136.07837 L160,1664.34912 C160,1717.62506 203.048827,1760 258.421218,1760 L1661.57878,1760 C1716.95117,1760 1760,1717.62506 1760,1664.34912 L1760,1136.07837 C1760,1082.80243 1707.69456,1040.53436 1652.37793,1040.53436 L1652.32217,1040.53436 Z M808.96,1358.48 L885.12,1358.48 C885.12,1348.02661 886.146656,1337.48005 888.2,1326.84 C890.253344,1316.19995 893.706642,1306.49338 898.56,1297.72 C903.413358,1288.94662 909.853293,1281.85336 917.88,1276.44 C925.906707,1271.02664 935.706609,1268.32 947.28,1268.32 C964.453419,1268.32 978.546612,1273.63995 989.56,1284.28 C1000.57339,1294.92005 1006.08,1309.7599 1006.08,1328.8 C1006.08,1340.74673 1003.37336,1351.38662 997.96,1360.72 C992.54664,1370.05338 985.826707,1378.4533 977.8,1385.92 C969.773293,1393.3867 960.906715,1400.19997 951.2,1406.36 C941.493285,1412.52003 932.34671,1418.58664 923.76,1424.56 C906.959916,1436.13339 891.000076,1447.51994 875.88,1458.72 C860.759924,1469.92006 847.600056,1482.1466 836.4,1495.4 C825.199944,1508.6534 816.333366,1523.67992 809.8,1540.48 C803.266634,1557.28008 800,1577.06655 800,1599.84 L1087.84,1599.84 L1087.84,1531.52 L902.48,1531.52 C912.186715,1518.07993 923.386603,1506.32005 936.08,1496.24 C948.773397,1486.15995 961.839933,1476.73338 975.28,1467.96 C988.720067,1459.18662 1002.0666,1450.32004 1015.32,1441.36 C1028.5734,1432.39996 1040.42661,1422.41339 1050.88,1411.4 C1061.33339,1400.38661 1069.7333,1387.78674 1076.08,1373.6 C1082.4267,1359.41326 1085.6,1342.42677 1085.6,1322.64 C1085.6,1303.5999 1081.96004,1286.42674 1074.68,1271.12 C1067.39996,1255.81326 1057.60006,1242.93339 1045.28,1232.48 C1032.95994,1222.02661 1018.68008,1214.00003 1002.44,1208.4 C986.199919,1202.79997 969.12009,1200 951.2,1200 C927.679882,1200 906.866757,1204.01329 888.76,1212.04 C870.653243,1220.06671 855.626726,1231.26659 843.68,1245.64 C831.733274,1260.01341 822.773363,1276.81324 816.8,1296.04 C810.826637,1315.26676 808.21333,1336.07989 808.96,1358.48 L808.96,1358.48 Z M1104,160 L1104,232 L1032,232 L1032,160 L1104,160 Z M528,232 L672,232 L672,160 L528,160 L528,232 L528,232 Z M816,232 L888,232 L888,160 L816,160 L816,232 L816,232 Z M1392,160 L1248,160 L1248,232 L1392,232 L1392,160 L1392,160 Z M1680,480 L1680,560 L1760,560 L1760,480 L1680,480 Z M1616,231.345455 C1616,231.345455 1662.0728,232.163636 1662.0728,268.163636 L1662.0728,304 L1759.99777,304 L1759.99777,231.345455 C1759.99777,231.345455 1761.78018,160 1664.66541,160 L1616.05401,160 L1616.05401,231.345455 L1616,231.345455 Z M672,880 L672,808 L528,808 L528,880 L672,880 L672,880 Z M1392,808 L1248,808 L1248,880 L1392,880 L1392,808 L1392,808 Z M160,559.622564 L240.284209,559.622564 L240.284209,480 L160,480 L160,559.622564 Z M304,808 L268.940943,808 C233.22734,808 234.168249,774.243795 234.168249,774.243795 L234.168249,736 L160.000138,736 L160.000138,809.588527 C160.000138,809.588527 159.427411,880 232.204614,880 L304,880 L304,808 L304,808 Z M1662.05563,736 L1662.05563,774.233251 C1662.05563,774.233251 1656.27843,809.965261 1616,809.965261 L1616,880 L1656.60239,880 C1761.77984,880 1759.99809,809.60794 1759.99809,809.60794 L1759.99809,736 L1662.10962,736 L1662.05563,736 Z M1032,808 L1032,880 L1104,880 L1104,808 L1032,808 Z M816,808 L816,880 L888,880 L888,808 L816,808 Z M257.943757,304 L257.943757,268.122727 C257.943757,234.495455 304,231.304545 304,231.304545 L304,160 L255.298088,160 C201.68279,160 160,188.390909 160,229.136364 L160,304 L257.889764,304 L257.943757,304 Z M1032.21263,720.498047 L1032.21263,317.109375 L962.157726,317.109375 C959.661726,337.605375 954.62172,330.941921 946.98972,341.789921 C939.30972,352.637921 929.94972,361.949921 918.90972,368.669921 C907.77372,375.245921 895.14972,380.189921 881.27772,382.781921 C867.35772,385.373921 853.34172,386.765921 837.98172,386.381921 L891.128904,448.541927 L962.157722,448.541927 L962.157726,720.498047 L1032.21263,720.498047 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPrinterLine":{"variant":"Line","glyphName":"printer","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1440,1080 C1440,1124.16 1404.16,1160 1360,1160 C1315.84,1160 1280,1124.16 1280,1080 C1280,1035.84 1315.84,1000 1360,1000 C1404.16,1000 1440,1035.84 1440,1080 L1440,1080 Z M560,520 L400,520 L400,40 L1520,40 L1520,520 L1360,520 L1360,200 L560,200 L560,520 Z M1600,1400 L1520,1400 L1520,1240 L400,1240 L400,1400 L320,1400 L320,840 C320,795.84 355.92,760 400,760 L400,920 L1520,920 L1520,760 C1564.08,760 1600,795.84 1600,840 L1600,1400 Z M560,1720 L1360,1720 L1360,1400 L560,1400 L560,1720 Z M1520,600 L1360,600 L1360,760 L560,760 L560,600 L400,600 C267.68,600 160,707.68 160,840 L160,1560 L400,1560 L400,1880 L1520,1880 L1520,1560 L1760,1560 L1760,840 C1760,707.68 1652.32,600 1520,600 L1520,600 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPrinterSolid":{"variant":"Solid","glyphName":"printer","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1440,1120 C1440,1075.84 1404.16,1040 1360,1040 C1315.84,1040 1280,1075.84 1280,1120 C1280,1164.24 1315.84,1200 1360,1200 C1404.16,1200 1440,1164.24 1440,1120 L1440,1120 Z M560,1760 L1360,1760 L1360,1440 L560,1440 L560,1760 Z M1760,880 L1760,1600 L1520,1600 L1520,1920 L400,1920 L400,1600 L160,1600 L160,880 C160,747.68 267.68,640 400,640 L560,640 L560,800 L1360,800 L1360,640 L1520,640 C1652.32,640 1760,747.68 1760,880 L1760,880 Z M560,480 L400,480 L400,0 L1520,0 L1520,480 L1360,480 L1360,160 L560,160 L560,480 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconProgressLine":{"variant":"Line","glyphName":"progress","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M320.0064,960.031999 C320.0064,1312.89788 607.057882,1600.0064 960.032001,1600.0064 C1133.79895,1600.0064 1294.12537,1530.24919 1411.97008,1411.93392 L1411.97008,1411.93392 L1200.0416,1200.0224 L1680.0608,1200.0224 L1680.0608,1680.0032 L1525.0146,1524.8894 C1377.64871,1672.88348 1177.24069,1760 960.032001,1760 C518.814353,1760 160,1401.13435 160,960.031999 L160,960.031999 Z M959.967999,160 C1401.18565,160 1760,518.865645 1760,959.968001 L1760,959.968001 L1599.9936,959.968001 C1599.9936,607.102116 1312.94212,319.9936 959.967999,319.9936 C786.201048,319.9936 625.874635,389.75081 508.029921,508.066077 L508.029921,508.066077 L719.958398,719.977601 L239.939198,719.977601 L239.939198,239.9968 L394.985399,395.030599 C542.351294,247.116515 742.75931,160 959.967999,160 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconProgressSolid":{"variant":"Solid","glyphName":"progress","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M320.0064,962.031999 C320.0064,1314.89788 607.057882,1602.0064 960.032001,1602.0064 C1133.79895,1602.0064 1294.12537,1532.24919 1411.97008,1413.93392 L1411.97008,1413.93392 L1200.0416,1202.0224 L1680.0608,1202.0224 L1680.0608,1682.0032 L1525.0146,1526.8894 C1377.64871,1674.88348 1177.24069,1762 960.032001,1762 C518.814353,1762 160,1403.13435 160,962.031999 L160,962.031999 Z M959.967999,162 C1401.18565,162 1760,520.865645 1760,961.968001 L1760,961.968001 L1599.9936,961.968001 C1599.9936,609.102116 1312.94212,321.9936 959.967999,321.9936 C786.201048,321.9936 625.874635,391.75081 508.029921,510.066077 L508.029921,510.066077 L719.958398,721.977601 L239.939198,721.977601 L239.939198,241.9968 L394.985399,397.030599 C542.351294,249.116515 742.75931,162 959.967999,162 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconProtractorLine":{"variant":"Line","glyphName":"protractor","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M1312 806.001C1312 850.183 1276.18 886.001 1232 886.001 1187.82 886.001 1152 850.183 1152 806.001 1152 761.818 1187.82 726.001 1232 726.001 1276.18 726.001 1312 761.818 1312 806.001zM688 886.001C732.183 886.001 768 850.183 768 806.001 768 761.818 732.183 726.001 688 726.001 643.817 726.001 608 761.818 608 806.001 608 850.183 643.817 886.001 688 886.001zM1525.33 955.334C1525.33 999.516 1489.52 1035.334 1445.33 1035.334 1401.15 1035.334 1365.33 999.516 1365.33 955.334 1365.33 911.151 1401.15 875.334 1445.33 875.334 1489.52 875.334 1525.33 911.151 1525.33 955.334zM1573.33 1259.33C1617.52 1259.33 1653.33 1223.52 1653.33 1179.33 1653.33 1135.15 1617.52 1099.33 1573.33 1099.33 1529.15 1099.33 1493.33 1135.15 1493.33 1179.33 1493.33 1223.52 1529.15 1259.33 1573.33 1259.33zM554.666 955.334C554.666 999.516 518.849 1035.334 474.666 1035.334 430.484 1035.334 394.666 999.516 394.666 955.334 394.666 911.151 430.484 875.334 474.666 875.334 518.849 875.334 554.666 911.151 554.666 955.334zM346.667 1259.33C390.849 1259.33 426.667 1223.52 426.667 1179.33 426.667 1135.15 390.849 1099.33 346.667 1099.33 302.484 1099.33 266.667 1135.15 266.667 1179.33 266.667 1223.52 302.484 1259.33 346.667 1259.33zM1040 747.334C1040 791.516 1004.18 827.334 960 827.334 915.817 827.334 880 791.516 880 747.334 880 703.151 915.817 667.334 960 667.334 1004.18 667.334 1040 703.151 1040 747.334z\" fill-rule=\"nonzero\"/>\n        <path d=\"M0,1440.67 C0,910.474 429.807,480.667 960,480.667 C1490.19,480.667 1920,910.474 1920,1440.67 L0,1440.67 Z M658.209,1334 L1261.79,1334 C1217.86,1209.71 1099.33,1120.67 960,1120.67 C820.67,1120.67 702.138,1209.71 658.209,1334 Z M1373.22,1334 C1325.86,1149.98 1158.81,1014 960,1014 C761.19,1014 594.14,1149.98 546.775,1334 L113.269,1334 C165.759,913.06 524.841,587.334 960,587.334 C1395.16,587.334 1754.24,913.06 1806.73,1334 L1373.22,1334 Z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconProtractorSolid":{"variant":"Solid","glyphName":"protractor","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,480.667 C429.807,480.667 0,910.474 0,1440.67 L1920,1440.67 C1920,910.474 1490.19,480.667 960,480.667 Z M1261.79,1334 C1217.86,1209.71 1099.33,1120.67 960,1120.67 C827.452,1120.67 713.726,1201.26 665.147,1316.11 C662.662,1321.98 660.347,1327.95 658.209,1334 L1261.79,1334 Z M1232,886.001 C1276.18,886.001 1312,850.183 1312,806.001 C1312,761.818 1276.18,726.001 1232,726.001 C1187.82,726.001 1152,761.818 1152,806.001 C1152,850.183 1187.82,886.001 1232,886.001 Z M768,806.001 C768,850.183 732.182,886.001 688,886.001 C643.817,886.001 608,850.183 608,806.001 C608,761.818 643.817,726.001 688,726.001 C732.182,726.001 768,761.818 768,806.001 Z M1445.33,1035.334 C1489.52,1035.334 1525.33,999.516 1525.33,955.334 C1525.33,911.151 1489.52,875.334 1445.33,875.334 C1401.15,875.334 1365.33,911.151 1365.33,955.334 C1365.33,999.516 1401.15,1035.334 1445.33,1035.334 Z M1653.33,1179.33 C1653.33,1223.52 1617.52,1259.33 1573.33,1259.33 C1529.15,1259.33 1493.33,1223.52 1493.33,1179.33 C1493.33,1135.15 1529.15,1099.33 1573.33,1099.33 C1617.52,1099.33 1653.33,1135.15 1653.33,1179.33 Z M474.666,1035.334 C518.849,1035.334 554.666,999.516 554.666,955.334 C554.666,911.151 518.849,875.334 474.666,875.334 C430.484,875.334 394.666,911.151 394.666,955.334 C394.666,999.516 430.484,1035.334 474.666,1035.334 Z M426.667,1179.33 C426.667,1223.52 390.849,1259.33 346.667,1259.33 C302.484,1259.33 266.667,1223.52 266.667,1179.33 C266.667,1135.15 302.484,1099.33 346.667,1099.33 C390.849,1099.33 426.667,1135.15 426.667,1179.33 Z M960,827.334 C1004.18,827.334 1040,791.516 1040,747.334 C1040,703.151 1004.18,667.334 960,667.334 C915.817,667.334 880,703.151 880,747.334 C880,791.516 915.817,827.334 960,827.334 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPublishLine":{"variant":"Line","glyphName":"publish","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 M854.343529,1157.97459 L583.058824,886.689882 L503.209412,966.539294 L854.343529,1317.67341 L1454.4,717.616941 L1374.55059,637.767529 L854.343529,1157.97459 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconPublishSolid":{"variant":"Solid","glyphName":"publish","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M860.16,1373.22667 L490.773333,1003.84 L641.6,853.013333 L860.16,1071.57333 L1313.81333,617.92 L1464.64,768.746667 L860.16,1373.22667 Z M960,0 C429.76,0 0,429.76 0,960 C0,1490.24 429.76,1920 960,1920 C1490.13333,1920 1920,1490.24 1920,960 C1920,429.76 1490.13333,0 960,0 L960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuestionLine":{"variant":"Line","glyphName":"question","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 M960.056471,1355.18118 L1016.52706,1355.29412 L960.056471,1355.29412 L960.056471,1355.18118 L960.056471,1355.18118 Z M752.64,409.648941 C836.329412,344.933647 944.301176,323.248941 1049.33647,350.354824 C1164.19765,380.058353 1257.6,473.460706 1287.30353,588.321882 C1310.68235,678.787765 1298.03294,771.625412 1251.84,849.780706 C1206.32471,926.806588 1130.65412,983.728941 1044.25412,1005.86541 C1030.47529,1009.36659 1016.47059,1020.66071 1016.47059,1037.71482 L1016.47059,1037.71482 L1016.47059,1129.42306 L903.529412,1129.42306 L903.529412,1037.71482 C903.529412,971.644235 949.835294,913.592471 1016.24471,896.425412 C1073.84471,881.743059 1124.21647,843.794824 1154.59765,792.406588 C1185.43059,740.114824 1193.78824,677.658353 1177.97647,616.557176 C1158.32471,540.886588 1096.77176,479.333647 1021.10118,459.681882 C950.174118,441.498353 877.552941,455.728941 821.76,498.985412 C766.08,542.128941 734.117647,607.296 734.117647,677.658353 L734.117647,677.658353 L621.176471,677.658353 C621.176471,572.058353 669.063529,474.364235 752.64,409.648941 Z M960.056471,1242.35294 C897.712941,1242.35294 847.115294,1293.06353 847.115294,1355.29412 C847.115294,1417.52471 897.712941,1468.23529 960.056471,1468.23529 C1022.28706,1468.23529 1072.99765,1417.52471 1072.99765,1355.29412 C1072.99765,1293.06353 1022.28706,1242.35294 960.056471,1242.35294 L960.056471,1242.35294 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuestionSolid":{"variant":"Solid","glyphName":"question","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1242.34165 C1022.23059,1242.34165 1072.94118,1293.05224 1072.94118,1355.28282 C1072.94118,1417.51341 1022.23059,1468.224 960,1468.224 C897.769412,1468.224 847.058824,1417.51341 847.058824,1355.28282 C847.058824,1293.05224 897.769412,1242.34165 960,1242.34165 Z M1049.33647,350.332235 C1164.19765,380.035765 1257.6,473.438118 1287.30353,588.299294 C1310.68235,678.765176 1298.03294,771.602824 1251.84,849.758118 C1206.32471,926.896941 1130.65412,983.706353 1044.25412,1005.84282 C1030.47529,1009.45694 1016.47059,1020.63812 1016.47059,1037.80518 L1016.47059,1129.40047 L903.529412,1129.40047 L903.529412,1037.80518 C903.529412,971.621647 949.835294,913.569882 1016.24471,896.515765 C1073.84471,881.720471 1124.21647,843.772235 1154.59765,792.384 C1185.43059,740.092235 1193.78824,677.748706 1177.97647,616.534588 C1158.32471,540.864 1096.77176,479.311059 1021.10118,459.659294 C950.174118,441.475765 877.665882,455.706353 821.76,498.962824 C766.08,542.106353 734.117647,607.273412 734.117647,677.635765 L621.176471,677.635765 C621.176471,572.035765 669.063529,474.341647 752.64,409.626353 C836.329412,344.798118 944.414118,323.339294 1049.33647,350.332235 Z M960,-0.0112941176 C430.644706,-0.0112941176 0,430.633412 0,959.988706 C0,1489.344 430.644706,1919.98871 960,1919.98871 C1489.46824,1919.98871 1920,1489.344 1920,959.988706 C1920,430.633412 1489.46824,-0.0112941176 960,-0.0112941176\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizInstructionsLine":{"variant":"Line","glyphName":"quiz-instructions","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,332 L1920,1589 L0,1589 L0,332 L1920,332 Z M1805,446 L115,446 L115,1478 L1805,1478 L1805,446 Z M1231,1129 L1231,1242 L409,1242 L409,1129 L1231,1129 Z M1506,903 L1506,1016 L409,1016 L409,903 L1506,903 Z M1231,677 L1231,790 L409,790 L409,677 L1231,677 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizInstructionsSolid":{"variant":"Solid","glyphName":"quiz-instructions","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,332 L1920,1589 L0,1589 L0,332 L1920,332 Z M1231,1129 L409,1129 L409,1242 L1231,1242 L1231,1129 Z M1506,903 L409,903 L409,1016 L1506,1016 L1506,903 Z M1231,677 L409,677 L409,790 L1231,790 L1231,677 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsAvgLine":{"variant":"Line","glyphName":"quiz-stats-avg","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 M1242.35294,1129.41176 L1242.35294,960 L1242.35294,621.176471 L1129.41176,621.176471 L1129.41176,960 C1129.41176,1053.40235 1053.40235,1129.41176 960,1129.41176 C866.597647,1129.41176 790.588235,1053.40235 790.588235,960 L790.588235,903.529412 L790.588235,621.176471 L677.647059,621.176471 L677.647059,903.529412 L677.647059,960 L677.647059,1468.23529 L790.588235,1468.23529 L790.588235,1184.41412 C837.910588,1220.32941 896.188235,1242.35294 960,1242.35294 C1027.53882,1242.35294 1088.75294,1217.61882 1137.31765,1177.97647 C1158.32471,1247.54824 1222.36235,1298.82353 1298.82353,1298.82353 L1298.82353,1185.88235 C1267.76471,1185.88235 1242.35294,1160.58353 1242.35294,1129.41176\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsAvgSolid":{"variant":"Solid","glyphName":"quiz-stats-avg","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1298.82353,1298.82353 C1222.36235,1298.82353 1158.32471,1247.54824 1137.31765,1177.97647 C1088.75294,1217.61882 1027.53882,1242.35294 960,1242.35294 C896.188235,1242.35294 837.910588,1220.32941 790.588235,1184.41412 L790.588235,1468.23529 L677.647059,1468.23529 L677.647059,960 L677.647059,903.529412 L677.647059,621.176471 L790.588235,621.176471 L790.588235,903.529412 L790.588235,960 C790.588235,1053.40235 866.597647,1129.41176 960,1129.41176 C1053.40235,1129.41176 1129.41176,1053.40235 1129.41176,960 L1129.41176,621.176471 L1242.35294,621.176471 L1242.35294,960 L1242.35294,1129.41176 C1242.35294,1160.58353 1267.76471,1185.88235 1298.82353,1185.88235 L1298.82353,1298.82353 Z M960,2.5243549e-29 C430.644706,2.5243549e-29 2.5243549e-29,430.644706 2.5243549e-29,960 C2.5243549e-29,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,2.5243549e-29 960,2.5243549e-29 L960,2.5243549e-29 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsCronbachsAlphaLine":{"variant":"Line","glyphName":"quiz-stats-cronbachs-alpha","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 M975.224471,1125.22165 C905.991529,1164.07341 780.062118,1220.43106 716.815059,1158.08753 C656.843294,1099.01929 660.118588,949.259294 723.930353,831.009882 C776.222118,734.332235 860.928,684.751059 924.739765,684.751059 C934.226824,684.751059 943.149176,685.880471 951.506824,688.026353 C1012.94682,704.176941 1046.94212,782.106353 1044.68329,901.824 C1043.44094,968.233412 1046.82918,1025.72047 1054.73506,1074.51106 C1030.90447,1091.79106 1004.47624,1108.73224 975.224471,1125.22165 M1216.35388,1169.38165 C1211.04565,1166.89694 1195.12094,1156.61929 1181.11624,1117.99341 C1388.36329,935.254588 1388.13741,735.687529 1388.02447,725.635765 L1275.08329,726.991059 C1275.08329,733.767529 1273.27624,852.920471 1158.64094,981.447529 C1157.51153,958.520471 1157.05976,932.769882 1157.62447,903.856941 C1162.14212,653.692235 1035.08329,593.268706 980.193882,578.812235 C854.829176,545.833412 704.617412,629.071059 624.655059,777.249882 C546.838588,921.249882 530.462118,1133.12753 637.643294,1238.61459 C670.622118,1271.02871 720.090353,1299.37694 792.824471,1299.37694 C854.264471,1299.37694 932.193882,1279.04753 1030.56565,1223.70635 C1051.008,1212.18635 1070.32094,1200.44047 1088.50447,1188.46871 C1108.49506,1228.67576 1135.37506,1256.34635 1169.14447,1271.93224 C1234.76329,1301.97459 1313.82212,1279.61224 1392.768,1209.70165 L1317.77506,1125.22165 C1277.11624,1161.47576 1237.69976,1178.75576 1216.35388,1169.38165\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsCronbachsAlphaSolid":{"variant":"Solid","glyphName":"quiz-stats-cronbachs-alpha","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M951.619765,688.015059 C943.262118,685.869176 934.226824,684.852706 924.739765,684.852706 C860.928,684.852706 776.222118,734.208 723.930353,830.885647 C660.005647,949.248 656.843294,1099.008 716.928,1158.07624 C780.175059,1220.30682 905.991529,1164.288 975.224471,1125.32329 C1004.58918,1108.94682 1030.79153,1091.89271 1054.62212,1074.61271 C1046.82918,1025.70918 1043.55388,968.222118 1044.68329,901.925647 C1046.94212,782.095059 1012.94682,704.278588 951.619765,688.015059 M1169.12188,1271.90965 C1135.23953,1256.32376 1108.47247,1228.65318 1088.48188,1188.55906 C1070.29835,1200.41788 1051.09835,1212.27671 1030.54306,1223.68376 C932.171294,1278.912 854.354824,1299.24175 792.801882,1299.24175 C720.180706,1299.35435 670.599529,1271.00612 637.733647,1238.592 C530.552471,1133.10494 546.816,921.227294 624.632471,777.227294 C704.707765,629.161412 854.241882,545.697882 980.284235,578.789647 C1035.06071,593.246118 1162.11953,653.669647 1157.60188,903.834353 C1157.15012,932.747294 1157.48894,958.610824 1158.61835,981.537882 C1273.25365,852.897882 1275.06071,733.744941 1275.06071,726.968471 L1388.00188,725.613176 C1388.11482,735.664941 1388.34071,935.344941 1180.98071,1118.08376 C1195.09835,1156.59671 1211.02306,1166.87435 1216.33129,1169.35906 C1237.33835,1178.95906 1276.98071,1161.45318 1317.75247,1125.19906 L1392.74541,1209.67906 C1313.68659,1279.92847 1234.40188,1302.06494 1169.12188,1271.90965 M959.954824,-0.0338823529 C430.599529,-0.0338823529 -0.0451764706,430.723765 -0.0451764706,959.966118 C-0.0451764706,1489.32141 430.599529,1919.96612 959.954824,1919.96612 C1489.42306,1919.96612 1919.95482,1489.32141 1919.95482,959.966118 C1919.95482,430.723765 1489.42306,-0.0338823529 959.954824,-0.0338823529\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsDeviationLine":{"variant":"Line","glyphName":"quiz-stats-deviation","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 M1129.41176,1047.90212 C1129.41176,1155.08329 1042.22118,1242.38682 934.927059,1242.38682 L872.131765,1242.38682 C764.837647,1242.38682 677.647059,1155.08329 677.647059,1047.90212 L677.647059,872.052706 C677.647059,764.871529 764.837647,677.680941 872.131765,677.680941 L934.927059,677.680941 C1042.22118,677.680941 1129.41176,764.871529 1129.41176,872.052706 L1129.41176,1047.90212 Z M960,567.224471 C951.642353,566.546824 943.510588,564.739765 934.927059,564.739765 L872.131765,564.739765 C702.607059,564.739765 564.705882,702.528 564.705882,872.052706 L564.705882,1047.90212 C564.705882,1217.42682 702.607059,1355.328 872.131765,1355.328 L934.927059,1355.328 C1104.45176,1355.328 1242.35294,1217.42682 1242.35294,1047.90212 L1242.35294,872.052706 C1242.35294,797.963294 1214.90824,730.763294 1171.08706,677.680941 L1411.76471,677.680941 L1411.76471,564.739765 L960,564.739765 L960,567.224471 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsDeviationSolid":{"variant":"Solid","glyphName":"quiz-stats-deviation","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M677.647059,872.097882 L677.647059,1047.94729 C677.647059,1155.12847 764.837647,1242.31906 872.131765,1242.31906 L934.927059,1242.31906 C1042.22118,1242.31906 1129.41176,1155.12847 1129.41176,1047.94729 L1129.41176,872.097882 C1129.41176,764.916706 1042.22118,677.613176 934.927059,677.613176 L872.131765,677.613176 C764.837647,677.613176 677.647059,764.916706 677.647059,872.097882 M1411.76471,677.647059 L1171.08706,677.647059 C1214.90824,730.842353 1242.35294,797.929412 1242.35294,872.131765 L1242.35294,1047.86824 C1242.35294,1217.39294 1104.45176,1355.29412 934.927059,1355.29412 L872.131765,1355.29412 C702.607059,1355.29412 564.705882,1217.39294 564.705882,1047.86824 L564.705882,872.131765 C564.705882,702.607059 702.607059,564.705882 872.131765,564.705882 L1411.76471,564.705882 L1411.76471,677.647059 Z M960,0 C430.644706,0 -2.5243549e-29,430.644706 -2.5243549e-29,960 C-2.5243549e-29,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 L960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsHighLine":{"variant":"Line","glyphName":"quiz-stats-high","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 M790.588235,677.647059 L1162.50353,677.647059 L581.195294,1258.84235 L661.157647,1338.80471 L1242.35294,757.496471 L1242.35294,1129.41176 L1355.29412,1129.41176 L1355.29412,564.705882 L790.588235,564.705882 L790.588235,677.647059 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsHighSolid":{"variant":"Solid","glyphName":"quiz-stats-high","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1355.29412,1129.41176 L1242.35294,1129.41176 L1242.35294,757.496471 L661.157647,1338.80471 L581.195294,1258.84235 L1162.50353,677.647059 L790.588235,677.647059 L790.588235,564.705882 L1355.29412,564.705882 L1355.29412,1129.41176 Z M960,0 C430.644706,0 2.5243549e-29,430.644706 2.5243549e-29,960 C2.5243549e-29,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 L960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsLowLine":{"variant":"Line","glyphName":"quiz-stats-low","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 M1242.35294,1162.50353 L661.157647,581.308235 L581.195294,661.157647 L1162.50353,1242.35294 L790.588235,1242.35294 L790.588235,1355.29412 L1355.29412,1355.29412 L1355.29412,790.588235 L1242.35294,790.588235 L1242.35294,1162.50353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsLowSolid":{"variant":"Solid","glyphName":"quiz-stats-low","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1355.29412,1355.29412 L790.588235,1355.29412 L790.588235,1242.35294 L1162.50353,1242.35294 L581.195294,661.157647 L661.157647,581.195294 L1242.35294,1162.50353 L1242.35294,790.588235 L1355.29412,790.588235 L1355.29412,1355.29412 Z M960,0 C430.644706,0 2.5243549e-29,430.644706 2.5243549e-29,960 C2.5243549e-29,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 L960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsTimeLine":{"variant":"Line","glyphName":"quiz-stats-time","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,112.941176 C492.875294,112.941176 112.941176,492.875294 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 M960,1920 C430.644706,1920 0,1489.35529 0,960 C0,430.644706 430.644706,0 960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 M1377.90494,1344.04518 L903.552,988.280471 L903.552,395.339294 L1016.49318,395.339294 L1016.49318,931.809882 L1445.66965,1253.57929 L1377.90494,1344.04518 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizStatsTimeSolid":{"variant":"Solid","glyphName":"quiz-stats-time","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1377.88235,1344 L903.529412,988.235294 L903.529412,395.294118 L1016.47059,395.294118 L1016.47059,931.764706 L1445.64706,1253.53412 L1377.88235,1344 Z M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.24235 430.644706,1920 960,1920 C1489.24235,1920 1920,1489.24235 1920,960 C1920,430.644706 1489.24235,0 960,0 L960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizTitleLine":{"variant":"Line","glyphName":"quiz-title","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1751,0 L1751,1920 L169,1920 L169,0 L1751,0 Z M1636,112 L290,112 L290,121 L289,121 L289,1799 L290,1799 L290,1819 L1636,1819 L1636,112 Z M1402,347 L1402,668 L514,668 L514,347 L1402,347 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizTitleSolid":{"variant":"Solid","glyphName":"quiz-title","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1751,0 L1751,1920 L169,1920 L169,0 L1751,0 Z M1402,347 L514,347 L514,667 L1402,667 L1402,347 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconQuizLine":{"variant":"Line","glyphName":"quiz","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M746.255375,1466.76417 L826.739372,1547.47616 L577.99138,1796.11015 L497.507383,1715.51216 L746.255375,1466.76417 Z M580.35118,1300.92837 L660.949178,1381.52637 L329.323189,1713.15236 L248.725192,1632.55436 L580.35118,1300.92837 Z M414.503986,1135.20658 L495.101983,1215.80457 L80.5979973,1630.30856 L0,1549.71056 L414.503986,1135.20658 Z M1119.32036,264.600006 C1475.79835,-91.8779816 1844.58834,86.3040124 1848.35034,88.1280123 L1848.35034,88.1280123 L1865.45034,96.564012 L1873.88634,113.664011 C1875.71034,117.312011 2053.89233,486.101999 1697.30034,842.693987 L1697.30034,842.693987 L1550.69635,989.297982 L1548.07435,1655.17196 L1325.43235,1877.81395 L993.806366,1546.30196 L415.712386,968.207982 L84.0863971,636.467994 L306.72839,413.826001 L972.602367,411.318001 Z M1436.24035,1103.75398 L1074.40436,1465.70397 L1325.43235,1716.61796 L1434.30235,1607.74796 L1436.24035,1103.75398 Z M1779.26634,182.406009 C1710.18234,156.41401 1457.90035,87.1020124 1199.91836,345.198004 L1199.91836,345.198004 L576.90838,968.207982 L993.806366,1385.10597 L1616.70235,762.095989 C1873.65834,505.139998 1804.68834,250.920007 1779.26634,182.406009 Z M858.146371,525.773997 L354.152388,527.597997 L245.282392,636.467994 L496.310383,887.609985 L858.146371,525.773997 Z\"/>\n        <path d=\"M1534.98715,372.558003 C1483.91515,371.190003 1403.31715,385.326002 1321.69316,466.949999 L1281.22316,507.305998 L1454.61715,680.585992 L1494.97315,640.343994 C1577.16715,558.035996 1591.87315,479.033999 1589.82115,427.164001 L1587.65515,374.610003 L1534.98715,372.558003 Z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconQuizSolid":{"variant":"Solid","glyphName":"quiz","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1647.6075,931.312961 L1644.94274,1638.92722 L1408.38494,1875.60614 L1408.26382,1875.60614 L1055.78906,1523.13139 L1647.6075,931.312961 Z M792.789603,1438.70703 L878.425222,1524.46377 L614.129721,1788.63815 L528.494102,1703.00253 L792.789603,1438.70703 Z M616.624903,1262.66345 L702.260521,1348.29907 L349.906895,1700.53157 L264.271276,1614.89595 L616.624903,1262.66345 Z M440.532877,1086.41396 L526.04737,1172.17071 L85.6356184,1612.46133 L0,1526.94684 L440.532877,1086.41396 Z M1033.44144,317.280141 L441.744131,908.977447 L89.2693787,556.744946 L325.948301,320.066024 L1033.44144,317.280141 Z M1630.9891,276.109636 L1686.94901,278.168767 L1689.25039,334.249801 C1691.55177,389.240708 1675.9266,473.180571 1588.35298,560.63307 L1545.59573,603.511442 L1361.48521,419.279793 L1404.24245,376.401421 C1490.84707,289.917925 1576.48269,274.292756 1630.9891,276.109636 Z M1890.43959,74.0725619 C1817.15875,46.4559834 1549.22949,-27.3093513 1274.88059,247.039554 L570.173333,951.746806 L791.590462,1173.28506 L1013.00759,1394.70219 L1717.71484,689.873812 C1990.73137,416.857286 1917.57166,146.868894 1890.43959,74.0725619\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRecordLine":{"variant":"Line","glyphName":"record","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.36,0 1920,430.645 1920,960 C1920,1489.36 1489.36,1920 960,1920 C430.645,1920 0,1489.36 0,960 C0,430.645 430.645,0 960,0 Z M960,112.941 C492.875,112.941 112.941,492.875 112.941,960 C112.941,1427.12 492.875,1807.06 960,1807.06 C1427.12,1807.06 1807.06,1427.12 1807.06,960 C1807.06,492.875 1427.12,112.941 960,112.941 Z M960,320 C1313.46,320 1600,606.538 1600,960 C1600,1313.46 1313.46,1600 960,1600 C606.538,1600 320,1313.46 320,960 C320,606.538 606.538,320 960,320 Z M960,426.667 C665.448,426.667 426.667,665.448 426.667,960 C426.667,1254.55 665.448,1493.33 960,1493.33 C1254.55,1493.33 1493.33,1254.55 1493.33,960 C1493.33,665.448 1254.55,426.667 960,426.667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRecordSolid":{"variant":"Solid","glyphName":"record","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.36,0 1920,430.645 1920,960 C1920,1489.36 1489.36,1920 960,1920 C430.645,1920 0,1489.36 0,960 C0,430.645 430.645,0 960,0 Z M960,112.941 C492.875,112.941 112.941,492.875 112.941,960 C112.941,1427.12 492.875,1807.06 960,1807.06 C1427.12,1807.06 1807.06,1427.12 1807.06,960 C1807.06,492.875 1427.12,112.941 960,112.941 Z M960,426.667 C1254.55,426.667 1493.33,665.448 1493.33,960 C1493.33,1254.55 1254.55,1493.33 960,1493.33 C665.448,1493.33 426.667,1254.55 426.667,960 C426.667,665.448 665.448,426.667 960,426.667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRefreshLine":{"variant":"Line","glyphName":"refresh","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 L960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,692.894118 239.548235,444.084706 451.764706,284.272941 L451.764706,677.647059 L564.705882,677.647059 L564.705882,112.941176 L0,112.941176 L0,225.882353 L342.889412,225.882353 C127.058824,407.378824 0,674.710588 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRefreshSolid":{"variant":"Solid","glyphName":"refresh","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 L960,213.333333 C1371.62667,213.333333 1706.66667,548.266667 1706.66667,960 C1706.66667,1371.73333 1371.62667,1706.66667 960,1706.66667 C548.373333,1706.66667 213.333333,1371.73333 213.333333,960 C213.333333,762.986667 291.733333,577.493333 426.666667,439.253333 L426.666667,693.333333 L640,693.333333 L640,106.666667 L53.3333333,106.666667 L53.3333333,320 L244.373333,320 C88.64,494.08 0,720.96 0,960 C0,1489.28 430.613333,1920 960,1920 C1489.38667,1920 1920,1489.28 1920,960 C1920,430.72 1489.38667,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRemoveBookmarkLine":{"variant":"Line","glyphName":"remove-bookmark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1415.37671,2.27373675e-13 L505.585796,2.27373675e-13 C411.536161,2.27373675e-13 335,76.5361606 335,170.585796 L335,1920 L960.481253,1544.71125 L1585.96251,1920 L1585.96251,170.585796 C1585.96251,76.5361606 1509.42635,2.27373675e-13 1415.37671,2.27373675e-13 L1415.37671,2.27373675e-13 Z M1472.23864,1719.16366 L960.481253,1412.10922 L448.723864,1719.16366 L448.723864,170.585796 C448.723864,139.19801 474.19801,113.723864 505.585796,113.723864 L1415.37671,113.723864 C1446.7645,113.723864 1472.23864,139.19801 1472.23864,170.585796 L1472.23864,1719.16366 Z M1241.95919,538.16407 L1161.44269,457.761298 L960.492626,658.82509 L759.428834,457.761298 L679.026062,538.16407 L880.089854,739.227862 L679.026062,940.17793 L759.428834,1020.5807 L960.492626,819.630634 L1161.44269,1020.5807 L1241.95919,940.17793 L1040.8954,739.227862 L1241.95919,538.16407 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRemoveBookmarkSolid":{"variant":"Solid","glyphName":"remove-bookmark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1261.96322,920.139786 L1141.3022,1040.80081 L960.481253,859.866138 L779.546585,1040.80081 L658.885565,920.139786 L839.820233,739.205118 L658.885565,558.27045 L779.546585,437.723153 L960.481253,618.657821 L1141.3022,437.723153 L1261.96322,558.27045 L1081.02855,739.205118 L1261.96322,920.139786 Z M1415.37671,0 L505.585796,0 C411.422437,0 335,76.5361606 335,170.585796 L335,1920 L960.481253,1544.71125 L1585.96251,1920 L1585.96251,170.585796 C1585.96251,76.5361606 1509.42635,0 1415.37671,0 L1415.37671,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRemoveFromCollectionLine":{"variant":"Line","glyphName":"remove-from-collection","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1920 L1242.35294,1920 L1242.35294,677.647059 L0,677.647059 L0,1920 Z M1129.41176,790.588235 L1129.41176,1807.05882 L112.941176,1807.05882 L112.941176,790.588235 L1129.41176,790.588235 Z M1581.17647,338.823529 L1581.17647,1581.17647 L1355.29412,1581.17647 L1355.29412,1468.23529 L1468.23529,1468.23529 L1468.23529,451.764706 L451.764706,451.764706 L451.764706,564.705882 L338.823529,564.705882 L338.823529,338.823529 L1581.17647,338.823529 Z M1920.03388,-0.0112941176 L1920.03388,1242.34165 L1694.15153,1242.34165 L1694.15153,1129.40047 L1807.09271,1129.40047 L1807.09271,112.929882 L790.622118,112.929882 L790.622118,225.871059 L677.680941,225.871059 L677.680941,-0.0112941176 L1920.03388,-0.0112941176 Z M338.823529,1355.29412 L903.529412,1355.29412 L903.529412,1242.35294 L338.823529,1242.35294 L338.823529,1355.29412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRemoveFromCollectionSolid":{"variant":"Solid","glyphName":"remove-from-collection","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,1920 L1242.35294,1920 L1242.35294,677.647059 L0,677.647059 L0,1920 Z M1581.17647,338.823529 L1581.17647,1581.17647 L1355.29412,1581.17647 L1355.29412,564.705882 L338.823529,564.705882 L338.823529,338.823529 L1581.17647,338.823529 Z M903.529412,1242.35294 L903.529412,1355.29412 L338.823529,1355.29412 L338.823529,1242.35294 L903.529412,1242.35294 Z M1920.03388,-0.0112941176 L1920.03388,1242.34165 L1694.15153,1242.34165 L1694.15153,225.871059 L677.680941,225.871059 L677.680941,-0.0112941176 L1920.03388,-0.0112941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRemoveLinkLine":{"variant":"Line","glyphName":"remove-link","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1406.94167,1536.21945 L1406.94167,1920 L1279.01482,1920 L1279.01482,1536.21945 L1406.94167,1536.21945 Z M461.216844,901.702271 C496.268801,866.522388 539.252223,841.832505 591.958085,847.589214 C640.698215,847.845067 686.240174,867.289949 720.396643,902.213979 L720.396643,902.213979 L628.801018,991.634847 C618.822724,981.144845 609.100283,975.516064 590.93467,975.516064 C576.351009,975.516064 562.406983,981.400699 551.789054,992.146555 L551.789054,992.146555 L144.597889,1399.20979 C123.617886,1420.31772 123.617886,1454.60212 144.725816,1475.71005 L144.725816,1475.71005 L444.074646,1775.05888 C464.415015,1795.27132 500.234533,1795.27132 520.574903,1775.05888 L520.574903,1775.05888 L927.63814,1368.12357 C938.383996,1357.37771 944.268631,1343.17783 944.140704,1328.46624 C944.140704,1314.26636 938.383996,1300.96197 928.149848,1290.85575 L928.149848,1290.85575 L1017.44279,1199.38805 C1052.36682,1233.41659 1071.8117,1278.95855 1072.0701,1327.69868 C1072.32341,1376.95052 1053.26231,1423.38797 1018.08242,1458.56785 L1018.08242,1458.56785 L611.019186,1865.50316 C576.73479,1899.91548 531.064904,1918.72073 482.324774,1918.72073 C433.584644,1918.72073 387.786832,1899.91548 353.502436,1865.50316 L353.502436,1865.50316 L54.1536063,1566.15433 C-16.7178688,1495.28286 -16.7178688,1379.63698 54.1536063,1308.76551 L54.1536063,1308.76551 Z M1644.04129,1554.96073 L1899.895,1810.81443 L1809.45071,1901.25872 L1553.59701,1645.40502 L1644.04129,1554.96073 Z M1918.64907,1280.36575 L1918.64907,1408.2926 L1534.86852,1408.2926 L1534.86852,1280.36575 L1918.64907,1280.36575 Z M1309.87078,53.0739244 C1380.35847,-17.541697 1496.00434,-17.6696239 1568.02716,52.562217 L1568.02716,52.562217 L1866.73636,351.271412 C1937.35198,423.67801 1937.09612,539.451809 1866.73636,609.811577 L1866.73636,609.811577 L1459.67312,1016.74689 C1425.51665,1051.15921 1379.71884,1069.96446 1330.97871,1069.96446 C1282.23858,1069.96446 1236.56869,1051.15921 1202.2843,1016.74689 L1202.2843,1016.74689 L1292.72858,926.302605 C1313.06895,946.515047 1349.01639,946.515047 1369.22884,926.302605 L1369.22884,926.302605 L1776.29207,519.367294 C1797.4,498.259363 1797.14415,463.207407 1775.78037,441.076061 L1775.78037,441.076061 L1477.96666,143.518208 C1456.47495,122.538204 1421.42299,122.538204 1400.31506,143.518208 L1400.31506,143.518208 L993.379749,550.453518 C983.273528,560.55974 977.644746,574.119986 977.644746,588.57572 C977.644746,603.287308 983.273528,616.847554 993.379749,626.953775 L993.379749,626.953775 L902.935466,717.398058 C831.936064,646.526583 831.936064,530.88071 902.935466,460.009235 L902.935466,460.009235 Z M372.525159,512.804646 L372.525159,640.731497 L10.748026,640.731497 L10.748026,512.804646 L372.525159,512.804646 Z M639.380569,12.0989542 L639.380569,373.876087 L511.453718,373.876087 L511.453718,12.0989542 L639.380569,12.0989542 Z M108.919091,19.8385286 L364.772792,275.692229 L274.328508,366.136512 L18.4748078,110.282812 L108.919091,19.8385286 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRemoveLinkSolid":{"variant":"Solid","glyphName":"remove-link","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M614.741843,795.026192 C676.673613,795.386261 734.524608,819.990937 777.852843,864.399377 L777.852843,864.399377 L605.980177,1032.07124 C607.420451,1033.3915 610.060953,1035.07181 613.301569,1035.07181 L613.301569,1035.07181 L243.631311,1408.46278 L511.522225,1676.23367 L886.833555,1300.92234 L1055.58563,1142.13216 C1099.87404,1185.34037 1124.47872,1243.31139 1124.84274,1305.12314 C1125.19886,1367.535 1100.95425,1426.22616 1056.54581,1470.6346 L1056.54581,1470.6346 L674.753248,1852.54718 C631.184968,1895.99544 573.21395,1920 511.522225,1920 C449.710478,1920 391.73946,1895.99544 348.291202,1852.54718 L348.291202,1852.54718 L67.4378245,1571.6938 C-22.459261,1481.67669 -22.459261,1335.24886 67.3178016,1245.23176 L67.3178016,1245.23176 L449.230386,863.319172 C493.278758,819.2708 551.489821,795.026192 613.421592,795.026192 L613.421592,795.026192 Z M1379.0471,1501.14439 L1379.0471,1861.21283 L1259.02429,1861.21283 L1259.02429,1501.14439 L1379.0471,1501.14439 Z M1601.44937,1518.70373 L1841.49499,1758.74935 L1756.63887,1843.60548 L1516.59324,1603.55986 L1601.44937,1518.70373 Z M1859.13835,1261.09877 L1859.13835,1381.12158 L1499.06991,1381.12158 L1499.06991,1261.09877 L1859.13835,1261.09877 Z M1245.49772,67.1838618 C1334.67467,-21.9930868 1481.22252,-22.473178 1572.07979,66.2236793 L1572.07979,66.2236793 L1852.81315,346.957034 C1942.35016,438.894508 1941.99009,585.202314 1852.81315,674.499286 L1852.81315,674.499286 L1470.90056,1056.17182 C1427.57233,1099.62008 1369.48129,1123.74467 1307.66954,1123.74467 C1245.97781,1123.74467 1188.00679,1099.62008 1144.55854,1056.17182 L1144.55854,1056.17182 L1314.27079,886.45957 C1311.1502,883.338977 1304.18888,883.338977 1301.18831,886.45957 L1301.18831,886.45957 L1683.10089,504.667008 L1403.2077,236.896117 L1033.65746,618.448633 C1037.13812,614.607903 1037.0181,609.326899 1033.41741,605.606192 L1033.41741,605.606192 L863.70516,775.318447 C773.688051,685.301339 773.688051,538.993532 863.70516,448.976424 L863.70516,448.976424 Z M408.542653,540.961906 L408.542653,660.984717 L68.998121,660.984717 L68.998121,540.961906 L408.542653,540.961906 Z M658.910237,71.0726009 L658.910237,410.49711 L538.767403,410.49711 L538.767403,71.0726009 L658.910237,71.0726009 Z M161.091624,78.4299992 L401.257269,318.475621 L316.401141,403.331749 L76.3555193,163.286127 L161.091624,78.4299992 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRepliedLine":{"variant":"Line","glyphName":"replied","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M835.9424,632.5632 L244.9664,632.5632 L723.0464,154.4832 L632.5504,63.9872 L-0.0256,696.5632 L632.5504,1329.1392 L723.0464,1238.6432 L244.9664,760.5632 L835.9424,760.5632 C1340.3904,760.5632 1750.7584,1170.9312 1750.7584,1675.3792 L1750.7584,1784.5632 L1878.7584,1784.5632 L1878.7584,1675.3792 C1878.7584,1100.4032 1410.9184,632.5632 835.9424,632.5632\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRepliedSolid":{"variant":"Solid","glyphName":"replied","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M874.738114,645.125705 L462.691378,645.125705 L810.918614,296.898469 L640.008058,126 L0,765.995971 L640.008058,1406.00403 L810.918614,1235.09347 L462.691378,886.866237 L874.738114,886.866237 C1317.72764,886.866237 1678.16277,1247.30137 1678.16277,1690.29089 L1678.16277,1793.39323 L1919.9033,1793.39323 L1919.9033,1690.29089 C1919.9033,1113.98147 1451.16841,645.125705 874.738114,645.125705\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconReply2Line":{"variant":"Line","glyphName":"reply-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M835.9424,632.5632 L244.9664,632.5632 L723.0464,154.4832 L632.5504,63.9872 L-0.0256,696.5632 L632.5504,1329.1392 L723.0464,1238.6432 L244.9664,760.5632 L835.9424,760.5632 C1340.3904,760.5632 1750.7584,1170.9312 1750.7584,1675.3792 L1750.7584,1784.5632 L1878.7584,1784.5632 L1878.7584,1675.3792 C1878.7584,1100.4032 1410.9184,632.5632 835.9424,632.5632\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconReply2Solid":{"variant":"Solid","glyphName":"reply-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M874.738114,645.125705 L462.691378,645.125705 L810.918614,296.898469 L640.008058,126 L0,765.995971 L640.008058,1406.00403 L810.918614,1235.09347 L462.691378,886.866237 L874.738114,886.866237 C1317.72764,886.866237 1678.16277,1247.30137 1678.16277,1690.29089 L1678.16277,1793.39323 L1919.9033,1793.39323 L1919.9033,1690.29089 C1919.9033,1113.98147 1451.16841,645.125705 874.738114,645.125705\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconReplyAll2Line":{"variant":"Line","glyphName":"reply-all-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1030.97491,188 L1112.22371,269.248803 L682.995595,698.47692 L983.742578,698.47692 C1499.96552,698.47692 1920,1118.5114 1920,1634.73434 L1920,1634.73434 L1920,1732.76154 L1805.07949,1732.76154 L1805.07949,1634.73434 C1805.07949,1181.8326 1436.64432,813.397433 983.742578,813.397433 L983.742578,813.397433 L682.995595,813.397433 L1112.22371,1242.62555 L1030.97491,1323.87435 L463.037732,755.937177 L1030.97491,188 Z M567.937177,188.011492 L649.18598,269.260295 L162.497606,755.948669 L649.18598,1242.63704 L567.937177,1323.88585 L0,755.948669 L567.937177,188.011492 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconReplyAll2Solid":{"variant":"Solid","glyphName":"reply-all-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1044.768,224 L1195.59467,374.826667 L888.714667,681.706667 L988.128,681.706667 C1496.928,681.706667 1910.79467,1095.57333 1910.79467,1604.37333 L1910.79467,1604.37333 L1910.79467,1695.04 L1697.46133,1695.04 L1697.46133,1604.37333 C1697.46133,1213.22667 1379.27467,895.04 988.128,895.04 L988.128,895.04 L887.968,895.04 L1195.59467,1202.77333 L1044.768,1353.6 L479.968,788.8 L1044.768,224 Z M564.8,224 L715.626667,374.826667 L301.653333,788.8 L715.626667,1202.77333 L564.8,1353.6 L0,788.8 L564.8,224 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconReplyLine":{"variant":"Line","glyphName":"reply","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M835.9424,632.5632 L244.9664,632.5632 L723.0464,154.4832 L632.5504,63.9872 L-0.0256,696.5632 L632.5504,1329.1392 L723.0464,1238.6432 L244.9664,760.5632 L835.9424,760.5632 C1340.3904,760.5632 1750.7584,1170.9312 1750.7584,1675.3792 L1750.7584,1784.5632 L1878.7584,1784.5632 L1878.7584,1675.3792 C1878.7584,1100.4032 1410.9184,632.5632 835.9424,632.5632\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconReplySolid":{"variant":"Solid","glyphName":"reply","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M874.738114,645.125705 L462.691378,645.125705 L810.918614,296.898469 L640.008058,126 L0,765.995971 L640.008058,1406.00403 L810.918614,1235.09347 L462.691378,886.866237 L874.738114,886.866237 C1317.72764,886.866237 1678.16277,1247.30137 1678.16277,1690.29089 L1678.16277,1793.39323 L1919.9033,1793.39323 L1919.9033,1690.29089 C1919.9033,1113.98147 1451.16841,645.125705 874.738114,645.125705\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconResetLine":{"variant":"Line","glyphName":"reset","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 L960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,692.894118 239.548235,444.084706 451.764706,284.272941 L451.764706,677.647059 L564.705882,677.647059 L564.705882,112.941176 L0,112.941176 L0,225.882353 L342.889412,225.882353 C127.058824,407.378824 0,674.710588 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconResetSolid":{"variant":"Solid","glyphName":"reset","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 L960,213.333333 C1371.62667,213.333333 1706.66667,548.266667 1706.66667,960 C1706.66667,1371.73333 1371.62667,1706.66667 960,1706.66667 C548.373333,1706.66667 213.333333,1371.73333 213.333333,960 C213.333333,762.986667 291.733333,577.493333 426.666667,439.253333 L426.666667,693.333333 L640,693.333333 L640,106.666667 L53.3333333,106.666667 L53.3333333,320 L244.373333,320 C88.64,494.08 0,720.96 0,960 C0,1489.28 430.613333,1920 960,1920 C1489.38667,1920 1920,1489.28 1920,960 C1920,430.72 1489.38667,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconReviewScreenLine":{"variant":"Line","glyphName":"review-screen","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path fill-rule=\"nonzero\" d=\"M0 53L0 1866.33 1386.67 1866.33 1386.67 1546.33 1280 1546.33 1280 1759.67 106.667 1759.67 106.667 159.667 1280 159.667 1280 373 1386.67 373 1386.67 53z\"/>\n        <path d=\"M1226.67,1439.67 C1340,1439.67 1444.15,1400.39 1526.27,1334.71 L1828.64,1637.36 C1849.46,1658.2 1883.23,1658.21 1904.06,1637.4 C1924.9,1616.58 1924.92,1582.81 1904.1,1561.97 L1601.69,1259.29 C1667.39,1177.17 1706.67,1073 1706.67,959.667 C1706.67,694.57 1491.76,479.667 1226.67,479.667 C961.57,479.667 746.667,694.57 746.667,959.667 C746.667,1224.76 961.57,1439.67 1226.67,1439.67 Z M1226.67,1333 C1432.85,1333 1600,1165.85 1600,959.667 C1600,753.48 1432.85,586.333 1226.67,586.333 C1020.48,586.333 853.333,753.48 853.333,959.667 C853.333,1165.85 1020.48,1333 1226.67,1333 Z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconReviewScreenSolid":{"variant":"Solid","glyphName":"review-screen","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\">\n        <path d=\"M0,53 L1386.67,53 L1386.67,395.083 C1335.8,380.698 1282.13,373 1226.67,373 C902.66,373 640,635.66 640,959.667 C640,1283.67 902.66,1546.33 1226.67,1546.33 C1282.13,1546.33 1335.8,1538.64 1386.67,1524.25 L1386.67,1866.33 L0,1866.33 L0,53 Z\" fill-rule=\"nonzero\"/>\n        <path d=\"M1226.67,1439.67 C1340,1439.67 1444.15,1400.39 1526.27,1334.71 L1828.64,1637.36 C1849.46,1658.2 1883.23,1658.21 1904.06,1637.4 C1924.9,1616.58 1924.92,1582.81 1904.1,1561.97 L1601.69,1259.29 C1667.39,1177.17 1706.67,1073 1706.67,959.667 C1706.67,694.57 1491.76,479.667 1226.67,479.667 C961.57,479.667 746.667,694.57 746.667,959.667 C746.667,1224.76 961.57,1439.67 1226.67,1439.67 Z M1226.67,1333 C1432.85,1333 1600,1165.85 1600,959.667 C1600,753.48 1432.85,586.333 1226.67,586.333 C1020.48,586.333 853.333,753.48 853.333,959.667 C853.333,1165.85 1020.48,1333 1226.67,1333 Z\"/>\n    </g>\n</svg>\n","deprecated":false},"IconRewindLine":{"variant":"Line","glyphName":"rewind","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1064.71853,308.989309 L0,959.644691 L1064.71853,1610.30007 L1064.71853,1087.93691 L1919.89309,1609.76552 L1919.89309,309.52386 L1064.71853,831.245559 L1064.71853,308.989309 Z M204.946823,959.644691 L957.701431,499.610168 L957.701431,1419.67921 L204.946823,959.644691 Z M1064.71853,962.745086 L1064.71853,956.437385 L1812.98291,499.930898 L1812.98291,1419.25157 L1064.71853,962.745086 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRewindSolid":{"variant":"Solid","glyphName":"rewind","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1064.71853 308.989309L0 959.644691 1064.71853 1610.30007 1064.71853 1087.93691 1919.89309 1609.76552 1919.89309 309.52386 1064.71853 831.245559z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRssAddLine":{"variant":"Line","glyphName":"rss-add","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M903.529412 0L903.529412 903.529412 0 903.529412 0 1016.47059 903.529412 1016.47059 903.529412 1920 1016.47059 1920 1016.47059 1016.47059 1920 1016.47059 1920 903.529412 1016.47059 903.529412 1016.47059 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconRssAddSolid":{"variant":"Solid","glyphName":"rss-add","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M840 0L840 840 0 840 0 1080 840 1080 840 1920 1080 1920 1080 1080 1920 1080 1920 840 1080 840 1080 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconRssLine":{"variant":"Line","glyphName":"rss","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1616.87467,1813.33333 C1589.248,993.066667 926.954667,330.773333 106.688,303.146667 L106.688,107.52 C1034.90133,135.253333 1784.768,885.12 1812.50133,1813.33333 L1616.87467,1813.33333 Z M53.3546667,0 L0.0213333333,0 L0.0213333333,408.853333 L53.3546667,408.853333 C857.088,408.853333 1511.06133,1062.82667 1511.06133,1866.66667 L1511.06133,1920 L1920.02133,1920 L1920.02133,1866.66667 C1920.02133,837.44 1082.58133,0 53.3546667,0 L53.3546667,0 Z M987.338667,1813.33333 C960.672,1339.84 580.192,959.36 106.698667,932.586667 L106.698667,736.853333 C687.925333,763.946667 1155.97867,1232.10667 1183.072,1813.33333 L987.338667,1813.33333 Z M53.3653333,628.906667 L0.032,628.906667 L0.032,1037.76 L53.3653333,1037.76 C510.325333,1037.76 882.165333,1409.70667 882.165333,1866.66667 L882.165333,1920 L1291.01867,1920 L1291.01867,1866.66667 C1291.01867,1184.21333 735.818667,628.906667 53.3653333,628.906667 L53.3653333,628.906667 Z M267.189333,1812.288 C179.189333,1812.288 107.616,1740.71467 107.616,1652.82133 C107.616,1564.928 179.189333,1493.35467 267.189333,1493.35467 C355.082667,1493.35467 426.656,1564.928 426.656,1652.82133 C426.656,1740.71467 355.082667,1812.288 267.189333,1812.288 M267.189333,1386.688 C120.416,1386.688 0.949333333,1506.048 0.949333333,1652.82133 C0.949333333,1799.59467 120.416,1918.95467 267.189333,1918.95467 C413.962667,1918.95467 533.322667,1799.59467 533.322667,1652.82133 C533.322667,1506.048 413.962667,1386.688 267.189333,1386.688\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRssSolid":{"variant":"Solid","glyphName":"rss","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M53.3333333,628.96 C735.786667,628.96 1291.09333,1184.16 1291.09333,1866.72 L1291.09333,1866.72 L1291.09333,1920.05333 L882.24,1920.05333 L882.24,1866.72 C882.24,1409.65333 510.4,1037.81333 53.3333333,1037.81333 L53.3333333,1037.81333 L0,1037.81333 L0,628.96 Z M53.3333333,0 C1082.56,0 1920,837.44 1920,1866.66667 L1920,1866.66667 L1920,1920 L1511.14667,1920 L1511.14667,1866.66667 C1511.14667,1062.82667 857.173333,408.853333 53.3333333,408.853333 L53.3333333,408.853333 L0,408.853333 L0,0 Z M267.189333,1386.66667 C413.962667,1386.66667 533.322667,1506.02667 533.322667,1652.8 C533.322667,1799.57333 413.962667,1919.04 267.189333,1919.04 C120.416,1919.04 0.949333333,1799.57333 0.949333333,1652.8 C0.949333333,1506.02667 120.416,1386.66667 267.189333,1386.66667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRubricDarkLine":{"variant":"Line","glyphName":"rubric-dark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1344.9618,112.9406 C1321.5838,47.3226 1259.4658,-0.0004 1185.9418,-0.0004 L734.1768,-0.0004 C660.6518,-0.0004 598.5338,47.3226 575.1548,112.9406 L112.9998,112.9406 L112.9998,1919.9996 L1807.1178,1919.9996 L1807.1178,112.9406 L1344.9618,112.9406 Z M1694.1758,1807.0586 L225.9418,1807.0586 L225.9418,225.8816 L564.7648,225.8816 L564.7648,451.7656 L1355.3538,451.7656 L1355.3538,225.8816 L1694.1758,225.8816 L1694.1758,1807.0586 Z M677.7058,225.8816 L677.7058,169.4126 C677.7058,138.2406 703.0048,112.9406 734.1768,112.9406 L1185.9418,112.9406 C1217.1138,112.9406 1242.4118,138.2406 1242.4118,169.4126 L1242.4118,225.8816 L1242.4118,338.8246 L677.7058,338.8246 L677.7058,225.8816 Z M451.846,1016.471 L790.669,1016.471 L790.669,677.647 L451.846,677.647 L451.846,1016.471 Z M564.787,903.529 L677.728,903.529 L677.728,790.588 L564.787,790.588 L564.787,903.529 Z M903.611,790.588 L1468.318,790.588 L1468.318,677.647 L903.611,677.647 L903.611,790.588 Z M903.611,1355.294 L1468.318,1355.294 L1468.318,1242.353 L903.611,1242.353 L903.611,1355.294 Z M903.611,1016.471 L1242.434,1016.471 L1242.434,903.529 L903.611,903.529 L903.611,1016.471 Z M903.611,1581.177 L1242.434,1581.177 L1242.434,1468.236 L903.611,1468.236 L903.611,1581.177 Z M564.787,1468.235 L677.728,1468.235 L677.728,1355.294 L564.787,1355.294 L564.787,1468.235 Z M451.846,1581.177 L790.669,1581.177 L790.669,1242.353 L451.846,1242.353 L451.846,1581.177 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRubricDarkSolid":{"variant":"Solid","glyphName":"rubric-dark","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1185.94118,-2.5243549e-29 C1259.46588,-2.5243549e-29 1321.58353,47.3223529 1344.96235,112.941176 L1344.96235,112.941176 L1807.11765,112.941176 L1807.11765,1920 L113,1920 L113,112.941176 L575.155294,112.941176 C598.534118,47.3223529 660.651765,-2.5243549e-29 734.176471,-2.5243549e-29 L734.176471,-2.5243549e-29 Z M1242.41176,1468.23529 L903.588235,1468.23529 L903.588235,1581.17647 L1242.41176,1581.17647 L1242.41176,1468.23529 Z M790.647059,1242.35294 L451.823529,1242.35294 L451.823529,1581.17647 L790.647059,1581.17647 L790.647059,1242.35294 Z M1468.29412,1242.35294 L903.588235,1242.35294 L903.588235,1355.29412 L1468.29412,1355.29412 L1468.29412,1242.35294 Z M790.647059,677.647059 L451.823529,677.647059 L451.823529,1016.47059 L790.647059,1016.47059 L790.647059,677.647059 Z M1242.41176,903.529412 L903.588235,903.529412 L903.588235,1016.47059 L1242.41176,1016.47059 L1242.41176,903.529412 Z M1468.29412,677.647059 L903.588235,677.647059 L903.588235,790.588235 L1468.29412,790.588235 L1468.29412,677.647059 Z M1185.94118,112.941176 L734.176471,112.941176 C703.117647,112.941176 677.705882,138.24 677.705882,169.411765 L677.705882,169.411765 L677.705882,338.823529 L1242.41176,338.823529 L1242.41176,169.411765 C1242.41176,138.24 1217,112.941176 1185.94118,112.941176 L1185.94118,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRubricLine":{"variant":"Line","glyphName":"rubric","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1344.9618,112.9406 C1321.5838,47.3226 1259.4658,-0.0004 1185.9418,-0.0004 L734.1768,-0.0004 C660.6518,-0.0004 598.5338,47.3226 575.1548,112.9406 L112.9998,112.9406 L112.9998,1919.9996 L1807.1178,1919.9996 L1807.1178,112.9406 L1344.9618,112.9406 Z M1694.1758,1807.0586 L225.9418,1807.0586 L225.9418,225.8816 L564.7648,225.8816 L564.7648,451.7656 L1355.3538,451.7656 L1355.3538,225.8816 L1694.1758,225.8816 L1694.1758,1807.0586 Z M677.7058,225.8816 L677.7058,169.4126 C677.7058,138.2406 703.0048,112.9406 734.1768,112.9406 L1185.9418,112.9406 C1217.1138,112.9406 1242.4118,138.2406 1242.4118,169.4126 L1242.4118,225.8816 L1242.4118,338.8246 L677.7058,338.8246 L677.7058,225.8816 Z M451.846,1016.471 L790.669,1016.471 L790.669,677.647 L451.846,677.647 L451.846,1016.471 Z M564.787,903.529 L677.728,903.529 L677.728,790.588 L564.787,790.588 L564.787,903.529 Z M903.611,790.588 L1468.318,790.588 L1468.318,677.647 L903.611,677.647 L903.611,790.588 Z M903.611,1355.294 L1468.318,1355.294 L1468.318,1242.353 L903.611,1242.353 L903.611,1355.294 Z M903.611,1016.471 L1242.434,1016.471 L1242.434,903.529 L903.611,903.529 L903.611,1016.471 Z M903.611,1581.177 L1242.434,1581.177 L1242.434,1468.236 L903.611,1468.236 L903.611,1581.177 Z M564.787,1468.235 L677.728,1468.235 L677.728,1355.294 L564.787,1355.294 L564.787,1468.235 Z M451.846,1581.177 L790.669,1581.177 L790.669,1242.353 L451.846,1242.353 L451.846,1581.177 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRubricSolid":{"variant":"Solid","glyphName":"rubric","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1185.94118,-2.5243549e-29 C1259.46588,-2.5243549e-29 1321.58353,47.3223529 1344.96235,112.941176 L1344.96235,112.941176 L1807.11765,112.941176 L1807.11765,1920 L113,1920 L113,112.941176 L575.155294,112.941176 C598.534118,47.3223529 660.651765,-2.5243549e-29 734.176471,-2.5243549e-29 L734.176471,-2.5243549e-29 Z M1242.41176,1468.23529 L903.588235,1468.23529 L903.588235,1581.17647 L1242.41176,1581.17647 L1242.41176,1468.23529 Z M790.647059,1242.35294 L451.823529,1242.35294 L451.823529,1581.17647 L790.647059,1581.17647 L790.647059,1242.35294 Z M1468.29412,1242.35294 L903.588235,1242.35294 L903.588235,1355.29412 L1468.29412,1355.29412 L1468.29412,1242.35294 Z M790.647059,677.647059 L451.823529,677.647059 L451.823529,1016.47059 L790.647059,1016.47059 L790.647059,677.647059 Z M1242.41176,903.529412 L903.588235,903.529412 L903.588235,1016.47059 L1242.41176,1016.47059 L1242.41176,903.529412 Z M1468.29412,677.647059 L903.588235,677.647059 L903.588235,790.588235 L1468.29412,790.588235 L1468.29412,677.647059 Z M1185.94118,112.941176 L734.176471,112.941176 C703.117647,112.941176 677.705882,138.24 677.705882,169.411765 L677.705882,169.411765 L677.705882,338.823529 L1242.41176,338.823529 L1242.41176,169.411765 C1242.41176,138.24 1217,112.941176 1185.94118,112.941176 L1185.94118,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRulerLine":{"variant":"Line","glyphName":"ruler","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1493.49214,0.0244900448 L0.94091614,1492.58261 L427.385403,1919.02051 L608.272192,1738.13472 L608.39113,1738.25466 L683.776866,1662.87392 L683.657928,1662.75398 L759.043665,1587.36325 L759.161603,1587.48319 L834.54734,1512.10245 L834.429401,1511.98251 L909.814138,1436.59178 L909.933077,1436.71171 L985.317814,1361.33097 L985.199875,1361.21104 L1060.58761,1285.8303 L1060.70755,1285.94024 L1136.08829,1210.5595 L1135.96835,1210.43956 L1211.35908,1135.05882 L1211.47902,1135.16877 L1286.85976,1059.78803 L1286.73982,1059.66809 L1362.13056,984.283352 L1362.25049,984.40229 L1437.63123,909.016554 L1437.5113,908.897616 L1512.90203,833.512879 L1513.01197,833.630817 L1588.40271,758.24608 L1588.28277,758.127142 L1663.6735,682.741406 L1663.78345,682.860344 L1739.17418,607.474607 L1739.05424,607.356668 L1919.94003,426.468881 L1493.49214,0.0244900448 Z M1663.6735,531.970932 L1769.16856,426.468881 L1493.49214,150.795461 L151.711983,1492.58261 L427.385403,1768.25903 L532.887454,1662.75398 L432.742613,1562.60614 L508.12835,1487.2254 L608.272192,1587.36325 L683.657928,1511.98251 L583.514086,1411.83467 L658.898824,1336.45393 L759.043665,1436.59178 L834.428402,1361.21104 L658.898824,1185.68246 L734.28456,1110.29172 L909.814138,1285.8203 L985.199875,1210.43956 L885.056033,1110.29172 L960.44077,1034.91098 L1060.58761,1135.05882 L1135.96835,1059.66809 L1035.8305,959.525247 L1111.21124,884.139511 L1211.35908,984.283352 L1286.73982,908.897616 L1111.21124,733.368037 L1186.60198,657.9833 L1362.13056,833.512879 L1437.5113,758.127142 L1337.36346,657.9833 L1412.75419,582.597564 L1512.90203,682.741406 L1588.28277,607.355669 L1488.13493,507.211827 L1563.52566,431.826091 L1663.6735,531.970932 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconRulerSolid":{"variant":"Solid","glyphName":"ruler","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0.937743992,1492.58261 L1493.49214,0.0244013909 L1919.94003,426.468881 L1776.74461,569.662301 L1776.86455,569.781239 L570.695763,1775.94503 L570.577824,1775.82509 L427.382405,1919.02051 L0.937743992,1492.58261 Z M533.002395,1662.87392 L608.388131,1587.48319 L508.125351,1487.2254 L432.739615,1562.60614 L533.002395,1662.87392 Z M683.773868,1512.10245 L759.158605,1436.71171 L658.895825,1336.45393 L583.511088,1411.83467 L683.773868,1512.10245 Z M834.544341,1361.33097 L909.930078,1285.94024 L734.281562,1110.29172 L658.895825,1185.68246 L834.544341,1361.33097 Z M985.314815,1210.5595 L1060.69755,1135.16877 L960.437772,1034.91098 L885.052035,1110.29172 L985.314815,1210.5595 Z M1136.08829,1059.78803 L1211.46903,984.40229 L1111.21124,884.139511 L1035.82051,959.524248 L1136.08829,1059.78803 Z M1286.85976,909.016554 L1362.2405,833.630817 L1186.59198,657.9833 L1111.21124,733.368037 L1286.85976,909.016554 Z M1437.63123,758.24608 L1513.01197,682.860344 L1412.75419,582.597564 L1337.36346,657.9833 L1437.63123,758.24608 Z M1588.40271,607.474607 L1663.78345,532.08887 L1563.52566,431.826091 L1488.13493,507.211827 L1588.40271,607.474607 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSaveLine":{"variant":"Line","glyphName":"save","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M790.705882,338.823529 L790.705882,451.764706 L395.411765,451.764706 C364.352941,451.764706 338.941176,477.063529 338.941176,508.235294 L338.941176,508.235294 L338.941176,1252.74353 C356.672941,1246.41882 375.534118,1242.35294 395.411765,1242.35294 L395.411765,1242.35294 L1524.82353,1242.35294 C1544.70118,1242.35294 1563.56235,1246.41882 1581.29412,1252.74353 L1581.29412,1252.74353 L1581.29412,508.235294 C1581.29412,477.063529 1555.88235,451.764706 1524.82353,451.764706 L1524.82353,451.764706 L1129.52941,451.764706 L1129.52941,338.823529 L1524.82353,338.823529 C1618.22588,338.823529 1694.23529,414.832941 1694.23529,508.235294 L1694.23529,508.235294 L1694.23529,1750.58824 C1694.23529,1843.99059 1618.22588,1920 1524.82353,1920 L1524.82353,1920 L395.411765,1920 C302.009412,1920 226,1843.99059 226,1750.58824 L226,1750.58824 L226,508.235294 C226,414.832941 302.009412,338.823529 395.411765,338.823529 L395.411765,338.823529 L790.705882,338.823529 Z M1524.82353,1355.29412 L395.411765,1355.29412 C364.352941,1355.29412 338.941176,1380.59294 338.941176,1411.76471 L338.941176,1411.76471 L338.941176,1750.58824 C338.941176,1781.76 364.352941,1807.05882 395.411765,1807.05882 L395.411765,1807.05882 L1524.82353,1807.05882 C1555.88235,1807.05882 1581.29412,1781.76 1581.29412,1750.58824 L1581.29412,1750.58824 L1581.29412,1411.76471 C1581.29412,1380.59294 1555.88235,1355.29412 1524.82353,1355.29412 L1524.82353,1355.29412 Z M1016.62212,-0.0225882353 L1016.62212,880.128 L1262.83388,633.803294 L1342.68329,713.652706 L960.151529,1096.29741 L577.506824,713.652706 L657.356235,633.803294 L903.680941,880.128 L903.680941,-0.0225882353 L1016.62212,-0.0225882353 Z M564.823529,1468.23529 C502.48,1468.23529 451.882353,1518.94588 451.882353,1581.17647 C451.882353,1643.40706 502.48,1694.11765 564.823529,1694.11765 C627.167059,1694.11765 677.764706,1643.40706 677.764706,1581.17647 C677.764706,1518.94588 627.167059,1468.23529 564.823529,1468.23529 L564.823529,1468.23529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSaveSolid":{"variant":"Solid","glyphName":"save","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1524.82353,1242.35294 C1618.22588,1242.35294 1694.23529,1318.36235 1694.23529,1411.76471 L1694.23529,1411.76471 L1694.23529,1750.58824 C1694.23529,1843.99059 1618.22588,1920 1524.82353,1920 L1524.82353,1920 L395.411765,1920 C302.009412,1920 226,1843.99059 226,1750.58824 L226,1750.58824 L226,1411.76471 C226,1318.36235 302.009412,1242.35294 395.411765,1242.35294 L395.411765,1242.35294 Z M1016.58824,0 L1016.58824,338.823529 L903.647059,338.823529 L903.647059,0 L1016.58824,0 Z M564.823529,1468.23529 C627.167059,1468.23529 677.764706,1518.94588 677.764706,1581.17647 C677.764706,1643.40706 627.167059,1694.11765 564.823529,1694.11765 C502.48,1694.11765 451.882353,1643.40706 451.882353,1581.17647 C451.882353,1518.94588 502.48,1468.23529 564.823529,1468.23529 Z M903.647059,338.823529 L903.647059,767.209412 L657.322353,520.884706 L577.472941,600.734118 L960.117647,983.378824 L1342.76235,600.734118 L1262.91294,520.884706 L1016.58824,767.209412 L1016.58824,338.823529 L1524.82353,338.823529 C1618.56471,338.823529 1694.23529,414.494118 1694.23529,508.235294 L1694.23529,508.235294 L1694.23529,1185.88235 C1647.92941,1150.87059 1588.07059,1129.41176 1524.82353,1129.41176 L1524.82353,1129.41176 L395.411765,1129.41176 C332.164706,1129.41176 272.305882,1150.87059 226,1185.88235 L226,1185.88235 L226,508.235294 C226,414.494118 301.670588,338.823529 395.411765,338.823529 L395.411765,338.823529 L903.647059,338.823529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconScreenCaptureLine":{"variant":"Line","glyphName":"screen-capture","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1706.67,106.667 L1386.67,106.667 L1386.67,0 L1706.67,0 C1824.49,0 1920,95.5126 1920,213.333 L1920,533.333 L1813.33,533.333 L1813.33,213.333 C1813.33,154.423 1765.58,106.667 1706.67,106.667 Z M533.333,0 L533.333,106.667 L213.333,106.667 C154.423,106.667 106.667,154.423 106.667,213.333 L106.667,533.333 L0,533.333 L0,213.333 C0,95.5126 95.5126,0 213.333,0 L533.333,0 Z M0,1386.67 L106.667,1386.67 L106.667,1706.67 C106.667,1765.58 154.423,1813.33 213.333,1813.33 L533.333,1813.33 L533.333,1920 L213.333,1920 C95.5126,1920 0,1824.49 0,1706.67 L0,1386.67 Z M1386.67,1920 L1386.67,1813.33 L1706.67,1813.33 C1765.58,1813.33 1813.33,1765.58 1813.33,1706.67 L1813.33,1386.67 L1920,1386.67 L1920,1706.67 C1920,1824.49 1824.49,1920 1706.67,1920 L1386.67,1920 Z M1280,960 C1280,1136.73 1136.73,1280 960,1280 C783.269,1280 640,1136.73 640,960 C640,783.269 783.269,640 960,640 C1136.73,640 1280,783.269 1280,960 Z M1386.67,960 C1386.67,1195.64 1195.64,1386.67 960,1386.67 C724.359,1386.67 533.333,1195.64 533.333,960 C533.333,724.359 724.359,533.333 960,533.333 C1195.64,533.333 1386.67,724.359 1386.67,960 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconScreenCaptureSolid":{"variant":"Solid","glyphName":"screen-capture","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M155.676,1349.19 L155.676,1686.49 C155.676,1729.48 190.525,1764.32 233.514,1764.32 L233.514,1764.32 L570.811,1764.32 L570.811,1920 L233.514,1920 C104.548,1920 -1.76214598e-12,1815.45 -1.76214598e-12,1686.49 L-1.76214598e-12,1686.49 L-1.76214598e-12,1349.19 L155.676,1349.19 Z M1920,1349.19 L1920,1686.49 C1920,1815.45 1815.45,1920 1686.49,1920 L1686.49,1920 L1349.19,1920 L1349.19,1764.32 L1686.49,1764.32 C1729.48,1764.32 1764.32,1729.48 1764.32,1686.49 L1764.32,1686.49 L1764.32,1349.19 L1920,1349.19 Z M960,544.865 C1189.27,544.865 1375.14,730.727 1375.14,960 C1375.14,1189.27 1189.27,1375.14 960,1375.14 C730.727,1375.14 544.865,1189.27 544.865,960 C544.865,730.727 730.727,544.865 960,544.865 Z M1686.49,0 C1815.45,0 1920,104.548 1920,233.514 L1920,233.514 L1920,570.811 L1764.32,570.811 L1764.32,233.514 C1764.32,190.525 1729.48,155.676 1686.49,155.676 L1686.49,155.676 L1349.19,155.676 L1349.19,0 Z M570.811,0 L570.811,155.676 L233.514,155.676 C190.525,155.676 155.676,190.525 155.676,233.514 L155.676,233.514 L155.676,570.811 L-1.76214598e-12,570.811 L-1.76214598e-12,233.514 C-1.76214598e-12,104.548 104.548,0 233.514,0 L233.514,0 L570.811,0 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconSearchAddressBookLine":{"variant":"Line","glyphName":"search-address-book","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M790.588235,1468.23529 C416.865882,1468.23529 112.941176,1164.31059 112.941176,790.588235 C112.941176,416.865882 416.865882,112.941176 790.588235,112.941176 C1164.31059,112.941176 1468.23529,416.865882 1468.23529,790.588235 C1468.23529,1164.31059 1164.31059,1468.23529 790.588235,1468.23529 L790.588235,1468.23529 Z M1387.36941,1307.52 C1507.76471,1168.82824 1581.17647,988.235294 1581.17647,790.588235 C1581.17647,354.748235 1226.42824,2.84217094e-14 790.588235,2.84217094e-14 C354.748235,2.84217094e-14 2.84217094e-14,354.748235 2.84217094e-14,790.588235 C2.84217094e-14,1226.42824 354.748235,1581.17647 790.588235,1581.17647 C988.235294,1581.17647 1168.82824,1507.76471 1307.52,1387.36941 L1823.54824,1903.51059 L1903.51059,1823.54824 L1387.36941,1307.52 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconSearchAddressBookSolid":{"variant":"Solid","glyphName":"search-address-book","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1458.94844,1305.62602 C1563.58502,1168.67679 1626.47541,998.439035 1626.47541,813.237703 C1626.47541,364.764218 1261.71119,0 813.237703,0 C364.764218,0 0,364.764218 0,813.237703 C0,1261.71119 364.764218,1626.47541 813.237703,1626.47541 C998.439035,1626.47541 1168.78523,1563.58502 1305.73446,1458.94844 L1766.67759,1920 L1920,1766.67759 L1458.94844,1305.62602 Z M813.237703,1409.61202 C484.364376,1409.61202 216.863387,1142.0026 216.863387,813.237703 C216.863387,484.472807 484.364376,216.863387 813.237703,216.863387 C1142.11103,216.863387 1409.61202,484.472807 1409.61202,813.237703 C1409.61202,1142.0026 1142.11103,1409.61202 813.237703,1409.61202 L813.237703,1409.61202 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconSearchLine":{"variant":"Line","glyphName":"search","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M790.588235,1468.23529 C416.865882,1468.23529 112.941176,1164.31059 112.941176,790.588235 C112.941176,416.865882 416.865882,112.941176 790.588235,112.941176 C1164.31059,112.941176 1468.23529,416.865882 1468.23529,790.588235 C1468.23529,1164.31059 1164.31059,1468.23529 790.588235,1468.23529 L790.588235,1468.23529 Z M1387.36941,1307.52 C1507.76471,1168.82824 1581.17647,988.235294 1581.17647,790.588235 C1581.17647,354.748235 1226.42824,2.84217094e-14 790.588235,2.84217094e-14 C354.748235,2.84217094e-14 2.84217094e-14,354.748235 2.84217094e-14,790.588235 C2.84217094e-14,1226.42824 354.748235,1581.17647 790.588235,1581.17647 C988.235294,1581.17647 1168.82824,1507.76471 1307.52,1387.36941 L1823.54824,1903.51059 L1903.51059,1823.54824 L1387.36941,1307.52 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSearchSolid":{"variant":"Solid","glyphName":"search","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1458.94844,1305.62602 C1563.58502,1168.67679 1626.47541,998.439035 1626.47541,813.237703 C1626.47541,364.764218 1261.71119,0 813.237703,0 C364.764218,0 0,364.764218 0,813.237703 C0,1261.71119 364.764218,1626.47541 813.237703,1626.47541 C998.439035,1626.47541 1168.78523,1563.58502 1305.73446,1458.94844 L1766.67759,1920 L1920,1766.67759 L1458.94844,1305.62602 Z M813.237703,1409.61202 C484.364376,1409.61202 216.863387,1142.0026 216.863387,813.237703 C216.863387,484.472807 484.364376,216.863387 813.237703,216.863387 C1142.11103,216.863387 1409.61202,484.472807 1409.61202,813.237703 C1409.61202,1142.0026 1142.11103,1409.61202 813.237703,1409.61202 L813.237703,1409.61202 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSettings2Line":{"variant":"Line","glyphName":"settings-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1739.33929,1293.41365 L1633.51341,1474.23247 L1393.28753,1394.04424 L1368.77929,1416.29365 C1298.86871,1479.87953 1218.56753,1525.95953 1130.13459,1553.06541 L1098.05929,1563.00424 L1048.59106,1807.07012 L835.584,1807.07012 L786.115765,1562.89129 L754.040471,1552.95247 C665.607529,1525.84659 585.306353,1479.76659 515.395765,1416.18071 L490.887529,1393.93129 L250.661647,1474.11953 L144.835765,1293.30071 L334.576941,1128.85835 L327.122824,1095.87953 C316.732235,1050.13835 311.536941,1004.39718 311.536941,960.011294 C311.536941,915.625412 316.732235,869.884235 327.122824,824.143059 L334.576941,791.164235 L144.835765,626.721882 L250.661647,445.903059 L490.887529,525.978353 L515.395765,503.728941 C585.306353,440.143059 665.607529,394.063059 754.040471,366.844235 L786.115765,357.018353 L835.584,112.952471 L1048.59106,112.952471 L1098.05929,357.131294 L1130.13459,366.957176 C1218.56753,394.176 1298.86871,440.143059 1368.77929,503.841882 L1393.28753,526.091294 L1633.51341,445.903059 L1739.33929,626.721882 L1549.59812,791.164235 L1557.05224,824.143059 C1567.44282,869.884235 1572.63812,915.625412 1572.63812,960.011294 C1572.63812,1004.39718 1567.44282,1050.13835 1557.05224,1095.87953 L1549.59812,1128.85835 L1739.33929,1293.41365 Z M1685.57929,960.011294 C1685.57929,918.223059 1681.73929,875.531294 1673.94635,832.726588 L1884.12988,650.665412 L1684.67576,309.808941 L1419.48988,398.241882 C1352.51576,342.674824 1276.16753,298.853647 1195.64047,269.827765 L1140.97694,0.0112941176 L743.198118,0.0112941176 L688.534588,269.714824 C607.104,298.853647 532.111059,341.997176 464.572235,398.128941 L199.499294,309.808941 L0.0451764706,650.665412 L210.115765,832.726588 C202.435765,875.531294 198.595765,918.223059 198.595765,960.011294 C198.595765,1001.79953 202.435765,1044.49129 210.115765,1087.18306 L0.0451764706,1269.35718 L199.499294,1610.21365 L464.685176,1521.66776 C531.659294,1577.34776 608.007529,1621.056 688.534588,1650.19482 L743.198118,1920.01129 L1140.97694,1920.01129 L1195.64047,1650.30776 C1276.95812,1621.056 1352.064,1578.02541 1419.48988,1521.78071 L1684.67576,1610.32659 L1884.12988,1269.47012 L1673.94635,1087.296 C1681.73929,1044.49129 1685.57929,1001.79953 1685.57929,960.011294 L1685.57929,960.011294 Z M942.076235,564.705882 C724.099765,564.705882 546.782118,742.023529 546.782118,960 C546.782118,1177.97647 724.099765,1355.29412 942.076235,1355.29412 C1160.05271,1355.29412 1337.37035,1177.97647 1337.37035,960 C1337.37035,742.023529 1160.05271,564.705882 942.076235,564.705882 M942.076235,1242.35294 C786.443294,1242.35294 659.723294,1115.63294 659.723294,960 C659.723294,804.367059 786.443294,677.647059 942.076235,677.647059 C1097.70918,677.647059 1224.42918,804.367059 1224.42918,960 C1224.42918,1115.63294 1097.70918,1242.35294 942.076235,1242.35294\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconSettings2Solid":{"variant":"Solid","glyphName":"settings-2","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1703.53412,960 C1703.53412,918.211765 1699.69412,875.52 1691.90118,832.828235 L1902.08471,650.654118 L1702.63059,309.797647 L1437.44471,398.230588 C1370.47059,342.663529 1294.12235,298.842353 1213.59529,269.816471 L1158.93176,0 L761.152941,0 L706.489412,269.703529 C625.058824,298.842353 550.065882,341.985882 482.527059,398.117647 L217.454118,309.797647 L18,650.654118 L228.183529,832.828235 C220.390588,875.52 216.550588,918.211765 216.550588,960 C216.550588,1001.78824 220.390588,1044.48 228.183529,1087.17176 L18,1269.34588 L217.454118,1610.20235 L482.64,1521.76941 C549.614118,1577.33647 625.962353,1621.15765 706.489412,1650.18353 L761.152941,1920 L1158.93176,1920 L1213.59529,1650.29647 C1294.91294,1621.15765 1370.01882,1578.01412 1437.55765,1521.88235 L1702.63059,1610.31529 L1902.08471,1269.45882 L1691.90118,1087.28471 C1699.69412,1044.48 1703.53412,1001.78824 1703.53412,960 M960.042353,1355.29412 C742.065882,1355.29412 564.748235,1177.97647 564.748235,960 C564.748235,742.023529 742.065882,564.705882 960.042353,564.705882 C1178.01882,564.705882 1355.33647,742.023529 1355.33647,960 C1355.33647,1177.97647 1178.01882,1355.29412 960.042353,1355.29412\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconSettingsLine":{"variant":"Line","glyphName":"settings","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1739.33929,1293.41365 L1633.51341,1474.23247 L1393.28753,1394.04424 L1368.77929,1416.29365 C1298.86871,1479.87953 1218.56753,1525.95953 1130.13459,1553.06541 L1098.05929,1563.00424 L1048.59106,1807.07012 L835.584,1807.07012 L786.115765,1562.89129 L754.040471,1552.95247 C665.607529,1525.84659 585.306353,1479.76659 515.395765,1416.18071 L490.887529,1393.93129 L250.661647,1474.11953 L144.835765,1293.30071 L334.576941,1128.85835 L327.122824,1095.87953 C316.732235,1050.13835 311.536941,1004.39718 311.536941,960.011294 C311.536941,915.625412 316.732235,869.884235 327.122824,824.143059 L334.576941,791.164235 L144.835765,626.721882 L250.661647,445.903059 L490.887529,525.978353 L515.395765,503.728941 C585.306353,440.143059 665.607529,394.063059 754.040471,366.844235 L786.115765,357.018353 L835.584,112.952471 L1048.59106,112.952471 L1098.05929,357.131294 L1130.13459,366.957176 C1218.56753,394.176 1298.86871,440.143059 1368.77929,503.841882 L1393.28753,526.091294 L1633.51341,445.903059 L1739.33929,626.721882 L1549.59812,791.164235 L1557.05224,824.143059 C1567.44282,869.884235 1572.63812,915.625412 1572.63812,960.011294 C1572.63812,1004.39718 1567.44282,1050.13835 1557.05224,1095.87953 L1549.59812,1128.85835 L1739.33929,1293.41365 Z M1685.57929,960.011294 C1685.57929,918.223059 1681.73929,875.531294 1673.94635,832.726588 L1884.12988,650.665412 L1684.67576,309.808941 L1419.48988,398.241882 C1352.51576,342.674824 1276.16753,298.853647 1195.64047,269.827765 L1140.97694,0.0112941176 L743.198118,0.0112941176 L688.534588,269.714824 C607.104,298.853647 532.111059,341.997176 464.572235,398.128941 L199.499294,309.808941 L0.0451764706,650.665412 L210.115765,832.726588 C202.435765,875.531294 198.595765,918.223059 198.595765,960.011294 C198.595765,1001.79953 202.435765,1044.49129 210.115765,1087.18306 L0.0451764706,1269.35718 L199.499294,1610.21365 L464.685176,1521.66776 C531.659294,1577.34776 608.007529,1621.056 688.534588,1650.19482 L743.198118,1920.01129 L1140.97694,1920.01129 L1195.64047,1650.30776 C1276.95812,1621.056 1352.064,1578.02541 1419.48988,1521.78071 L1684.67576,1610.32659 L1884.12988,1269.47012 L1673.94635,1087.296 C1681.73929,1044.49129 1685.57929,1001.79953 1685.57929,960.011294 L1685.57929,960.011294 Z M942.076235,564.705882 C724.099765,564.705882 546.782118,742.023529 546.782118,960 C546.782118,1177.97647 724.099765,1355.29412 942.076235,1355.29412 C1160.05271,1355.29412 1337.37035,1177.97647 1337.37035,960 C1337.37035,742.023529 1160.05271,564.705882 942.076235,564.705882 M942.076235,1242.35294 C786.443294,1242.35294 659.723294,1115.63294 659.723294,960 C659.723294,804.367059 786.443294,677.647059 942.076235,677.647059 C1097.70918,677.647059 1224.42918,804.367059 1224.42918,960 C1224.42918,1115.63294 1097.70918,1242.35294 942.076235,1242.35294\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSettingsSolid":{"variant":"Solid","glyphName":"settings","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1703.53412,960 C1703.53412,918.211765 1699.69412,875.52 1691.90118,832.828235 L1902.08471,650.654118 L1702.63059,309.797647 L1437.44471,398.230588 C1370.47059,342.663529 1294.12235,298.842353 1213.59529,269.816471 L1158.93176,0 L761.152941,0 L706.489412,269.703529 C625.058824,298.842353 550.065882,341.985882 482.527059,398.117647 L217.454118,309.797647 L18,650.654118 L228.183529,832.828235 C220.390588,875.52 216.550588,918.211765 216.550588,960 C216.550588,1001.78824 220.390588,1044.48 228.183529,1087.17176 L18,1269.34588 L217.454118,1610.20235 L482.64,1521.76941 C549.614118,1577.33647 625.962353,1621.15765 706.489412,1650.18353 L761.152941,1920 L1158.93176,1920 L1213.59529,1650.29647 C1294.91294,1621.15765 1370.01882,1578.01412 1437.55765,1521.88235 L1702.63059,1610.31529 L1902.08471,1269.45882 L1691.90118,1087.28471 C1699.69412,1044.48 1703.53412,1001.78824 1703.53412,960 M960.042353,1355.29412 C742.065882,1355.29412 564.748235,1177.97647 564.748235,960 C564.748235,742.023529 742.065882,564.705882 960.042353,564.705882 C1178.01882,564.705882 1355.33647,742.023529 1355.33647,960 C1355.33647,1177.97647 1178.01882,1355.29412 960.042353,1355.29412\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconShapeOvalLine":{"variant":"Line","glyphName":"shape-oval","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,1807.05882 C492.875294,1807.05882 112.941176,1427.12471 112.941176,960 C112.941176,492.875294 492.875294,112.941176 960,112.941176 C1427.12471,112.941176 1807.05882,492.875294 1807.05882,960 C1807.05882,1427.12471 1427.12471,1807.05882 960,1807.05882 M960,-5.68434189e-14 C430.644706,-5.68434189e-14 -5.68434189e-14,430.644706 -5.68434189e-14,960 C-5.68434189e-14,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,-5.68434189e-14 960,-5.68434189e-14\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconShapeOvalSolid":{"variant":"Solid","glyphName":"shape-oval","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconShapePolygonLine":{"variant":"Line","glyphName":"shape-polygon","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.360699,0.011351476 L109,508.784505 L109,1411.22685 L960.360699,1920 L1811.83491,1411.22685 L1811.83491,508.784505 L960.360699,0.011351476 Z M222.51476,1346.86398 L222.51476,573.033859 L960.360699,132.142532 L1698.32015,573.033859 L1698.32015,1346.86398 L960.360699,1787.86882 L222.51476,1346.86398 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconShapePolygonSolid":{"variant":"Solid","glyphName":"shape-polygon","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.360699 0.011351476L109 508.784505 109 1411.22685 960.360699 1920 1811.83491 1411.22685 1811.83491 508.784505z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconShapeRectangleLine":{"variant":"Line","glyphName":"shape-rectangle","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,169 L1920,1750.17647 L0,1750.17647 L0,169 L1920,169 Z M1807.05882,281.941176 L112.941176,281.941176 L112.941176,1637.23529 L1807.05882,1637.23529 L1807.05882,281.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconShapeRectangleSolid":{"variant":"Solid","glyphName":"shape-rectangle","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 1750.17647L1920 1750.17647 1920 169 0 169z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconShareLine":{"variant":"Line","glyphName":"share","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1478.49624,1318.49624 C1611.18797,1318.49624 1719.09774,1426.40602 1719.09774,1559.09774 C1719.09774,1691.78947 1611.18797,1799.69925 1478.49624,1799.69925 C1345.80451,1799.69925 1237.89474,1691.78947 1237.89474,1559.09774 C1237.89474,1538.04511 1241.50376,1517.95489 1246.55639,1498.46617 C1257.02256,1458.52632 1277.11278,1422.43609 1304.90226,1393.32331 C1348.69173,1347.48872 1410.16541,1318.49624 1478.49624,1318.49624 Z M440.902256,716.992481 C508.511278,716.992481 569.383459,745.142857 613.172932,790.135338 C641.203008,819.007519 661.293233,854.977444 672.120301,894.917293 C677.654135,915.007519 681.503759,935.699248 681.503759,957.593985 C681.503759,981.774436 676.81203,1004.87218 670.075188,1026.88722 C658.165414,1066.34586 637.112782,1101.83459 608.120301,1129.98496 C564.81203,1171.96992 505.984962,1198.19549 440.902256,1198.19549 C308.210526,1198.19549 200.300752,1090.28571 200.300752,957.593985 C200.300752,824.902256 308.210526,716.992481 440.902256,716.992481 Z M1478.49624,120.300752 C1611.18797,120.300752 1719.09774,228.210526 1719.09774,360.902256 C1719.09774,493.593985 1611.18797,601.503759 1478.49624,601.503759 C1411.00752,601.503759 1350.25564,573.473684 1306.58647,528.721805 C1278.43609,499.849624 1258.22556,463.879699 1247.3985,423.93985 C1241.86466,403.729323 1237.89474,382.917293 1237.89474,360.902256 C1237.89474,228.210526 1345.80451,120.300752 1478.49624,120.300752 Z M1478.49624,1198.19549 C1365.65414,1198.19549 1265.92481,1251.24812 1199.7594,1332.69173 L776.421053,1088.2406 C792.300752,1047.57895 801.804511,1003.78947 801.804511,957.593985 C801.804511,913.804511 792.781955,872.421053 778.466165,833.56391 L1201.44361,589.233083 C1267.72932,669.473684 1366.61654,721.804511 1478.49624,721.804511 C1677.47368,721.804511 1839.3985,559.879699 1839.3985,360.902256 C1839.3985,161.924812 1677.47368,0 1478.49624,0 C1279.5188,0 1117.59398,161.924812 1117.59398,360.902256 C1117.59398,404.81203 1126.61654,446.43609 1141.05263,485.293233 L718.195489,729.503759 C652.030075,649.142857 553.022556,596.691729 440.902256,596.691729 C241.924812,596.691729 80,758.616541 80,957.593985 C80,1156.57143 241.924812,1318.49624 440.902256,1318.49624 C550.496241,1318.49624 647.699248,1268.33083 713.864662,1190.97744 L1140.21053,1437.11278 C1126.37594,1475.48872 1117.59398,1516.15038 1117.59398,1559.09774 C1117.59398,1758.07519 1279.5188,1920 1478.49624,1920 C1677.47368,1920 1839.3985,1758.07519 1839.3985,1559.09774 C1839.3985,1360.1203 1677.47368,1198.19549 1478.49624,1198.19549\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconShareSolid":{"variant":"Solid","glyphName":"share","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1513.82658,1278.28019 C1417.05523,1278.28019 1331.19312,1322.04548 1272.41158,1389.81109 L708.211527,1064.07412 C720.019171,1030.57634 727.719809,995.025067 727.719809,957.420286 C727.719809,922.510729 720.660891,889.397987 710.393374,857.825372 L1274.2084,532.345085 C1332.98993,598.827257 1417.95364,641.69414 1513.82658,641.69414 C1691.06959,641.69414 1834.68648,498.077247 1834.68648,320.834236 C1834.68648,143.591224 1691.06959,-0.0256687924 1513.82658,-0.0256687924 C1336.58356,-0.0256687924 1192.96667,143.591224 1192.96667,320.834236 C1192.96667,356.000481 1200.02559,389.241567 1210.42145,420.814182 L646.734769,746.294469 C587.953235,679.555609 502.861188,636.560382 406.859905,636.560382 C229.616893,636.560382 86,780.177275 86,957.420286 C86,1134.6633 229.616893,1278.28019 406.859905,1278.28019 C500.294309,1278.28019 583.461196,1237.85184 642.114387,1174.06489 L1209.65139,1501.72703 C1199.7689,1532.52958 1192.96667,1564.87226 1192.96667,1599.1401 C1192.96667,1776.38311 1336.58356,1920 1513.82658,1920 C1691.06959,1920 1834.68648,1776.38311 1834.68648,1599.1401 C1834.68648,1421.89708 1691.06959,1278.28019 1513.82658,1278.28019\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSisImportedLine":{"variant":"Line","glyphName":"sis-imported","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M807.18584,686.592055 L1080.05012,959.456333 L0,959.456333 L0,1072.39684 L1080.05012,1072.39684 L807.18584,1345.37406 L886.921842,1425.223 L1296.21826,1016.03953 L886.921842,606.856054 L807.18584,686.592055 Z M1870.41912,434.689537 L1541.19752,105.580885 C1509.68712,74.0704819 1465.97914,56 1421.48058,56 L451.773343,56 L451.773343,786.612173 L564.713855,786.612173 L564.713855,168.940512 L1355.29744,168.940512 L1355.29744,620.702561 L1807.05949,620.702561 L1807.05949,1750.10768 L564.713855,1750.10768 L564.713855,1241.87538 L451.773343,1241.87538 L451.773343,1863.04819 L1920,1863.04819 L1920,554.51942 C1920,509.343216 1902.38128,466.764643 1870.41912,434.689537 L1870.41912,434.689537 Z M1468.23795,192.319198 L1783.6808,507.762048 L1468.23795,507.762048 L1468.23795,192.319198 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSisImportedSolid":{"variant":"Solid","glyphName":"sis-imported","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1574.51294,138.514824 C1544.13176,108.246588 1507.76471,86.6748235 1468.23529,72.896 L1468.23529,507.832471 L1903.17176,507.832471 C1889.39294,468.303059 1867.93412,431.936 1837.55294,401.667765 L1574.51294,138.514824 Z M1355.29412,620.705882 L1355.29412,56 L451.764706,56 L451.764706,959.529412 L0,959.529412 L0,1072.47059 L451.764706,1072.47059 L451.764706,1863.05882 L1920,1863.05882 L1920,620.705882 L1355.29412,620.705882 Z M887.04,1425.29882 L807.190588,1345.44941 L1080.05647,1072.47059 L564.705882,1072.47059 L564.705882,959.529412 L1080.05647,959.529412 L807.190588,686.663529 L887.04,606.814118 L1296.22588,1016 L887.04,1425.29882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSisNotSyncedLine":{"variant":"Line","glyphName":"sis-not-synced","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,674.710588 127.058824,407.378824 342.889412,225.882353 L342.889412,225.882353 L0,225.882353 L0,112.941176 L564.705882,112.941176 L564.705882,677.647059 L451.764706,677.647059 L451.764706,284.272941 C239.548235,444.084706 112.941176,692.894118 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 L960,112.941176 Z M1202.42824,694.192941 L1282.27765,774.042353 L1039.90588,1016.41412 L1282.27765,1258.89882 L1202.42824,1338.74824 L959.943529,1096.37647 L717.571765,1338.74824 L637.722353,1258.89882 L880.094118,1016.41412 L637.722353,774.042353 L717.571765,694.192941 L959.943529,936.564706 L1202.42824,694.192941 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSisNotSyncedSolid":{"variant":"Solid","glyphName":"sis-not-synced","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.28,0 1920,430.613333 1920,960 C1920,1489.38667 1489.28,1920 960,1920 C430.72,1920 0,1489.38667 0,960 C0,720.96 88.64,494.08 244.48,320 L244.48,320 L53.3333333,320 L53.3333333,106.666667 L640,106.666667 L640,693.333333 L426.666667,693.333333 L426.666667,439.253333 C291.733333,577.386667 213.333333,762.986667 213.333333,960 C213.333333,1371.62667 548.266667,1706.66667 960,1706.66667 C1371.73333,1706.66667 1706.66667,1371.62667 1706.66667,960 C1706.66667,548.373333 1371.73333,213.333333 960,213.333333 L960,213.333333 Z M1151.25333,671.253333 L1302.08,822.08 L1110.82667,1013.33333 L1302.08,1204.58667 L1151.25333,1355.41333 L960,1164.16 L768.746667,1355.41333 L617.92,1204.58667 L809.173333,1013.33333 L617.92,822.08 L768.746667,671.253333 L960,862.506667 L1151.25333,671.253333 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSisSyncedLine":{"variant":"Line","glyphName":"sis-synced","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,674.710588 127.058824,407.378824 342.889412,225.882353 L342.889412,225.882353 L0,225.882353 L0,112.941176 L564.705882,112.941176 L564.705882,677.647059 L451.764706,677.647059 L451.764706,284.272941 C239.548235,444.084706 112.941176,692.894118 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,492.875294 1427.12471,112.941176 960,112.941176 L960,112.941176 Z M1315.36941,714.375529 L1395.21882,794.224941 L919.736471,1269.70729 L637.722353,987.806118 L717.571765,907.956706 L919.736471,1110.00847 L1315.36941,714.375529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSisSyncedSolid":{"variant":"Solid","glyphName":"sis-synced","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.28,0 1920,430.613333 1920,960 C1920,1489.38667 1489.28,1920 960,1920 C430.72,1920 0,1489.38667 0,960 C0,720.96 88.64,494.08 244.48,320 L244.48,320 L53.3333333,320 L53.3333333,106.666667 L640,106.666667 L640,693.333333 L426.666667,693.333333 L426.666667,439.253333 C291.733333,577.386667 213.333333,762.986667 213.333333,960 C213.333333,1371.62667 548.266667,1706.66667 960,1706.66667 C1371.73333,1706.66667 1706.66667,1371.62667 1706.66667,960 C1706.66667,548.373333 1371.73333,213.333333 960,213.333333 L960,213.333333 Z M1257.93067,690.261333 L1408.75733,841.194667 L921.930667,1328.02133 L617.930667,1023.91467 L768.757333,873.088 L921.930667,1026.368 L1257.93067,690.261333 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSkypeLine":{"variant":"Line","glyphName":"skype","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1363.84376,1807.05882 C1290.65788,1807.05882 1218.03671,1789.10118 1153.88612,1755.21882 L1136.60612,1745.95765 L1117.40612,1749.45882 C1068.50259,1758.38118 1018.80847,1762.78588 969.566118,1762.78588 C525.481412,1762.78588 164.295529,1406.90824 164.295529,969.374118 C164.295529,915.614118 169.716706,861.967059 180.446118,810.127059 L184.963765,788.668235 L173.669647,769.807059 C133.914353,702.832941 112.907294,626.597647 112.907294,549.232941 C112.907294,308.668235 311.796706,112.941176 556.314353,112.941176 C640.116706,112.941176 721.773176,136.094118 792.474353,180.028235 L810.657882,191.322353 L831.777882,187.708235 C877.067294,179.915294 923.486118,176.075294 969.566118,176.075294 C1413.65082,176.075294 1775.06259,531.952941 1775.06259,969.374118 C1775.06259,1026.18353 1768.73788,1083.44471 1756.42729,1139.57647 L1752.02259,1159.22824 L1761.17082,1177.18588 C1791.66494,1237.72235 1807.02494,1302.77647 1807.02494,1370.76706 C1807.02494,1611.33176 1608.24847,1807.05882 1363.84376,1807.05882 M1870.72376,1144.54588 C1882.24376,1086.72 1888.00376,1027.87765 1888.00376,969.374118 C1888.00376,469.609412 1475.99435,63.1341176 969.566118,63.1341176 C924.163765,63.1341176 878.535529,66.4094118 833.584941,73.0729412 C749.443765,25.1858824 654.008471,0 556.314353,0 C249.566118,0 -0.0338823529,246.437647 -0.0338823529,549.232941 C-0.0338823529,639.585882 22.6672941,728.696471 65.8108235,808.32 C56.2108235,861.176471 51.3543529,915.162353 51.3543529,969.374118 C51.3543529,1469.13882 463.250824,1875.72706 969.566118,1875.72706 C1019.14729,1875.72706 1069.18024,1871.77412 1118.53553,1863.86824 C1194.54494,1900.68706 1278.912,1920 1363.84376,1920 C1670.47906,1920 1919.96612,1673.56235 1919.96612,1370.76706 C1919.96612,1291.82118 1903.47671,1215.81176 1870.72376,1144.54588 M1364.66824,1315.42588 C1331.12471,1363.2 1281.54353,1401.14824 1217.39294,1428.14118 C1153.58118,1454.68235 1077.23294,1468.23529 990.381176,1468.23529 C886.249412,1468.23529 798.832941,1449.82588 730.729412,1413.34588 C681.938824,1386.91765 641.731765,1350.88941 611.124706,1306.50353 C580.291765,1261.77882 564.705882,1217.28 564.705882,1174.47529 C564.705882,1147.70824 574.870588,1124.55529 595.087059,1105.35529 C614.851765,1086.60706 640.263529,1077.00706 670.644706,1077.00706 C695.604706,1077.00706 717.176471,1084.68706 734.682353,1099.48235 C751.284706,1113.82588 765.628235,1134.83294 777.261176,1162.16471 C790.023529,1191.75529 804.028235,1216.71529 818.823529,1236.59294 C833.167059,1255.56706 853.722353,1271.49176 879.811765,1284.02824 C906.127059,1296.45176 941.477647,1302.88941 985.185882,1302.88941 C1045.15765,1302.88941 1094.4,1290.01412 1131.33176,1264.60235 C1167.47294,1239.64235 1185.09176,1209.82588 1185.09176,1173.34588 C1185.09176,1144.43294 1175.94353,1121.84471 1157.08235,1103.88706 C1137.20471,1085.36471 1111.11529,1070.79529 1079.60471,1060.96941 C1046.62588,1050.69176 1001.78824,1039.51059 946.447059,1027.76471 C871.115294,1011.50118 807.077647,992.188235 756.141176,970.390588 C704.188235,948.141176 662.174118,917.308235 631.567059,878.456471 C600.395294,839.152941 584.583529,789.910588 584.583529,731.971765 C584.583529,676.743529 601.185882,627.049412 633.938824,584.131765 C666.352941,541.44 713.675294,508.348235 774.663529,485.534118 C834.974118,463.284706 906.578824,451.764706 987.670588,451.764706 C1052.38588,451.764706 1109.53412,459.218824 1157.08235,474.24 C1204.85647,489.261176 1245.17647,509.477647 1276.91294,534.437647 C1308.87529,559.510588 1332.59294,586.390588 1347.50118,614.287059 C1362.40941,642.522353 1370.20235,670.644706 1370.20235,697.637647 C1370.20235,723.84 1360.03765,747.557647 1340.38588,768.225882 C1320.50824,789.007059 1295.43529,799.623529 1265.84471,799.623529 C1239.07765,799.623529 1217.95765,793.072941 1203.27529,779.971765 C1189.72235,767.887059 1175.60471,749.025882 1160.01882,721.92 C1141.83529,687.247059 1119.92471,660.028235 1094.85176,640.715294 C1070.45647,622.08 1029.79765,612.592941 973.778824,612.592941 C921.712941,612.592941 879.472941,623.096471 848.075294,643.877647 C817.694118,663.868235 803.011765,686.795294 803.011765,713.901176 C803.011765,730.616471 807.755294,744.508235 817.581176,756.48 C827.858824,769.242353 842.428235,780.310588 860.724706,789.458824 C879.811765,799.284706 899.463529,806.851765 919.115294,812.385882 C939.331765,818.032941 973.214118,826.277647 1019.52,837.12 C1078.24941,849.882353 1132.23529,864 1180.00941,879.472941 C1228.34824,895.058824 1270.24941,914.258824 1304.24471,936.621176 C1338.80471,959.322353 1366.47529,988.574118 1385.90118,1023.58588 C1405.55294,1058.59765 1415.49176,1101.96706 1415.49176,1152.33882 C1415.49176,1212.42353 1398.43765,1267.31294 1364.66824,1315.42588 M1399.68,866.710588 C1407.36,860.498824 1414.81412,853.722353 1421.92941,846.268235 C1462.02353,804.48 1483.14353,753.091765 1483.14353,697.637647 C1483.14353,652.235294 1471.05882,606.494118 1447.34118,561.543529 C1424.75294,519.190588 1390.87059,480.338824 1346.48471,445.552941 C1304.47059,412.348235 1251.95294,385.694118 1190.85176,366.494118 C1132.68706,348.197647 1064.24471,338.823529 987.670588,338.823529 C893.590588,338.823529 808.658824,352.602353 735.585882,379.595294 C654.042353,409.976471 589.778824,455.717647 544.037647,515.576471 C496.037647,578.710588 471.642353,651.557647 471.642353,731.971765 C471.642353,816.112941 495.698824,888.96 543.134118,948.705882 C552.96,961.129412 563.576471,972.988235 575.096471,984.282353 C553.976471,993.995294 534.663529,1007.09647 517.496471,1023.36 C474.465882,1064.24471 451.764706,1116.42353 451.764706,1174.47529 C451.764706,1240.77176 474.127059,1306.72941 518.174118,1370.65412 C559.171765,1430.06118 612.592941,1477.83529 676.969412,1512.62118 C761.901176,1558.13647 867.275294,1581.17647 990.381176,1581.17647 C1092.02824,1581.17647 1183.05882,1564.8 1260.87529,1532.38588 C1345.24235,1496.92235 1411.2,1445.76 1457.16706,1380.25412 C1504.48941,1312.71529 1528.43294,1236.02824 1528.43294,1152.33882 C1528.43294,1082.42824 1513.63765,1020.64941 1484.61176,968.470588 C1462.92706,929.505882 1434.35294,895.397647 1399.68,866.710588\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSkypeSolid":{"variant":"Solid","glyphName":"skype","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1364.66824,1315.42588 C1331.12471,1363.2 1281.54353,1401.14824 1217.39294,1428.14118 C1153.58118,1454.68235 1077.23294,1468.23529 990.381176,1468.23529 C886.249412,1468.23529 798.832941,1449.82588 730.729412,1413.34588 C681.938824,1386.91765 641.731765,1350.88941 611.124706,1306.50353 C580.291765,1261.77882 564.705882,1217.28 564.705882,1174.47529 C564.705882,1147.70824 574.870588,1124.55529 595.087059,1105.35529 C614.851765,1086.60706 640.263529,1077.00706 670.644706,1077.00706 C695.604706,1077.00706 717.176471,1084.68706 734.682353,1099.48235 C751.284706,1113.82588 765.628235,1134.83294 777.261176,1162.16471 C790.023529,1191.75529 804.028235,1216.71529 818.823529,1236.59294 C833.167059,1255.56706 853.722353,1271.49176 879.811765,1284.02824 C906.127059,1296.45176 941.477647,1302.88941 985.185882,1302.88941 C1045.15765,1302.88941 1094.4,1290.01412 1131.33176,1264.60235 C1167.47294,1239.64235 1185.09176,1209.82588 1185.09176,1173.34588 C1185.09176,1144.43294 1175.94353,1121.84471 1157.08235,1103.88706 C1137.20471,1085.36471 1111.11529,1070.79529 1079.60471,1060.96941 C1046.62588,1050.69176 1001.78824,1039.51059 946.447059,1027.76471 C871.115294,1011.50118 807.077647,992.188235 756.141176,970.390588 C704.188235,948.141176 662.174118,917.308235 631.567059,878.456471 C600.395294,839.152941 584.583529,789.910588 584.583529,731.971765 C584.583529,676.743529 601.185882,627.049412 633.938824,584.131765 C666.352941,541.44 713.675294,508.348235 774.663529,485.534118 C834.974118,463.284706 906.578824,451.764706 987.670588,451.764706 C1052.38588,451.764706 1109.53412,459.218824 1157.08235,474.24 C1204.85647,489.261176 1245.17647,509.477647 1276.91294,534.437647 C1308.87529,559.510588 1332.59294,586.390588 1347.50118,614.287059 C1362.40941,642.522353 1370.20235,670.644706 1370.20235,697.637647 C1370.20235,723.84 1360.03765,747.557647 1340.38588,768.225882 C1320.50824,789.007059 1295.43529,799.623529 1265.84471,799.623529 C1239.07765,799.623529 1217.95765,793.072941 1203.27529,779.971765 C1189.72235,767.887059 1175.60471,749.025882 1160.01882,721.92 C1141.83529,687.247059 1119.92471,660.028235 1094.85176,640.715294 C1070.45647,622.08 1029.79765,612.592941 973.778824,612.592941 C921.712941,612.592941 879.472941,623.096471 848.075294,643.877647 C817.694118,663.868235 803.011765,686.795294 803.011765,713.901176 C803.011765,730.616471 807.755294,744.508235 817.581176,756.48 C827.858824,769.242353 842.428235,780.310588 860.724706,789.458824 C879.811765,799.284706 899.463529,806.851765 919.115294,812.385882 C939.331765,818.032941 973.214118,826.277647 1019.52,837.12 C1078.24941,849.882353 1132.23529,864 1180.00941,879.472941 C1228.34824,895.058824 1270.24941,914.258824 1304.24471,936.621176 C1338.80471,959.322353 1366.47529,988.574118 1385.90118,1023.58588 C1405.55294,1058.59765 1415.49176,1101.96706 1415.49176,1152.33882 C1415.49176,1212.42353 1398.43765,1267.31294 1364.66824,1315.42588 M1864.77176,1163.74588 C1878.55059,1101.40235 1886.00471,1036.68706 1886.00471,969.938824 C1886.00471,471.303529 1476.02824,67.0870588 970.164706,67.0870588 C916.856471,67.0870588 864.451765,71.6047059 813.628235,80.3011765 C731.745882,29.3647059 634.955294,0 531.049412,0 C237.854118,0 0,234.352941 0,523.595294 C0,620.272941 26.7670588,710.738824 72.96,788.555294 C60.8752941,847.171765 54.5505882,907.821176 54.5505882,969.938824 C54.5505882,1468.68706 464.414118,1873.01647 970.164706,1873.01647 C1027.53882,1873.01647 1083.44471,1867.70824 1137.88235,1857.88235 C1212.64941,1897.41176 1298.14588,1920 1389.06353,1920 C1682.37176,1920 1920,1685.64706 1920,1396.40471 C1920,1312.82824 1900.00941,1233.88235 1864.77176,1163.74588\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSortLine":{"variant":"Line","glyphName":"sort","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1539.04532,215.441064 L1539.04532,1465.18083 L1838.25106,1165.97509 L1920,1247.83982 L1481.03368,1686.80614 L1042.18316,1247.83982 L1124.04788,1165.97509 L1423.25363,1465.18083 L1423.25363,215.441064 L1539.04532,215.441064 Z M438.966318,160 L877.932636,599.08211 L796.067907,680.831047 L496.862166,381.625305 L496.862166,1631.36508 L381.186262,1631.36508 L381.186262,381.625305 L81.9805205,680.831047 L0,599.08211 L438.966318,160 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSortSolid":{"variant":"Solid","glyphName":"sort","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1549.41826,299.604646 L1549.41826,1429.61963 L1753.33251,1225.58751 L1920,1392.25499 L1431.54876,1880.8241 L942.979643,1392.25499 L1109.64713,1225.58751 L1313.67925,1429.61963 L1313.67925,299.604646 L1549.41826,299.604646 Z M488.569113,160 L977.138227,648.569113 L810.470741,815.118729 L606.438622,611.204479 L606.438622,1741.10159 L370.699605,1741.10159 L370.699605,611.204479 L166.667485,815.118729 L-2.21689334e-12,648.569113 L488.569113,160 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSpeedGraderLine":{"variant":"Line","glyphName":"speed-grader","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1865.91247,880.774118 C1884.77365,938.712941 1898.10071,998.571765 1905.55482,1058.88235 C1910.29835,1098.52471 1912.78306,1138.05412 1912.78306,1178.71294 C1912.78306,1219.37176 1910.29835,1258.90118 1905.55482,1298.43059 C1884.54776,1468.52 1817.34776,1630.81647 1711.18306,1767.81412 L1711.18306,1767.81412 L1621.95953,1698.69412 C1715.70071,1577.73412 1774.99482,1434.52471 1793.51718,1284.76471 C1797.696,1249.75294 1799.84188,1214.74118 1799.84188,1178.71294 C1799.84188,1142.68471 1797.696,1107.67294 1793.40424,1072.54824 C1786.96659,1019.57882 1775.22071,966.835294 1758.50541,915.898824 L1758.50541,915.898824 Z M112.037647,1284.76471 C130.56,1434.52471 189.854118,1577.73412 283.595294,1698.69412 L283.595294,1698.69412 L194.371765,1767.81412 C88.2070588,1630.81647 21.0070588,1468.52 -5.68434189e-14,1298.54353 L-5.68434189e-14,1298.54353 Z M1816.33129,456.589647 L1896.18071,536.552 L1009.25365,1423.47906 L498.759529,912.984941 L578.608941,833.135529 L1009.25365,1263.78024 L1816.33129,456.589647 Z M194.371765,589.611765 L283.595294,658.731765 C189.854118,779.691765 130.56,922.901176 112.037647,1072.66118 L112.037647,1072.66118 L-5.68434189e-14,1058.88235 C21.0070588,888.905882 88.2070588,726.609412 194.371765,589.611765 L194.371765,589.611765 Z M1072.63624,225.952471 C1242.61271,246.846588 1404.90918,314.159529 1541.90682,420.324235 L1541.90682,420.324235 L1472.78682,509.547765 C1351.71388,415.806588 1208.61741,356.512471 1058.85741,337.990118 L1058.85741,337.990118 Z M832.941176,225.941176 L846.72,337.978824 C696.96,356.501176 553.750588,415.795294 432.790588,509.536471 L432.790588,509.536471 L363.670588,420.312941 C500.668235,314.148235 662.964706,246.948235 832.941176,225.941176 L832.941176,225.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSpeedGraderSolid":{"variant":"Solid","glyphName":"speed-grader","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M211.733333,1260.088 C228.053333,1392.03467 280.32,1518.11467 362.986667,1624.888 L362.986667,1624.888 L194.346667,1755.55467 C88.2133333,1618.488 21.0133333,1456.14133 0,1286.22133 L0,1286.22133 Z M1865.888,868.504 C1884.768,926.317333 1898.208,986.264 1905.67467,1046.744 C1910.47467,1086.744 1912.82133,1125.89067 1912.82133,1166.53067 C1912.82133,1207.064 1910.47467,1246.21067 1905.67467,1285.99733 C1884.66133,1456.13067 1817.46133,1618.47733 1711.328,1755.544 L1711.328,1755.544 L1542.688,1624.87733 C1625.35467,1518.104 1677.62133,1392.024 1693.94133,1260.07733 C1697.67467,1229.35733 1699.488,1198.31733 1699.488,1166.53067 C1699.488,1134.63733 1697.67467,1103.59733 1693.94133,1072.664 C1688.07467,1026.05067 1677.83467,979.650667 1663.22133,934.850667 L1663.22133,934.850667 Z M1730.76267,446.797333 L1881.58933,597.624 L1006.176,1473.03733 L486.282667,953.144 L637.109333,802.317333 L1006.176,1171.384 L1730.76267,446.797333 Z M194.346667,577.410667 L362.986667,708.077333 C280.32,814.850667 228.053333,940.930667 211.733333,1072.87733 L211.733333,1072.87733 L0,1046.744 C21.0133333,876.824 88.2133333,714.477333 194.346667,577.410667 L194.346667,577.410667 Z M833.141333,213.709333 L859.274667,425.442667 C727.221333,441.656 601.141333,494.029333 494.474667,576.696 L494.474667,576.696 L363.701333,408.056 C500.768,301.922667 663.008,234.616 833.141333,213.709333 L833.141333,213.709333 Z M1072.59733,213.698667 C1242.624,234.712 1404.97067,301.912 1541.93067,408.045333 L1541.93067,408.045333 L1411.15733,576.685333 C1304.59733,494.018667 1178.41067,441.645333 1046.464,425.432 L1046.464,425.432 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStandardsLine":{"variant":"Line","glyphName":"standards","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.17647,1077.91059 C1694.17647,1401.14824 1224.00235,1657.97647 1023.30588,1767.64235 C997.442353,1781.76 975.870588,1793.50588 960.058824,1802.88 C944.247059,1793.50588 922.675294,1781.76 896.811765,1767.64235 C696.115294,1657.97647 225.941176,1401.14824 225.941176,1077.91059 L225.941176,437.534118 L960.058824,122.88 L1694.17647,437.534118 L1694.17647,1077.91059 Z M960.058824,0 L113,362.992941 L113,1077.91059 C113,1468.12235 624.397647,1747.53882 842.712941,1866.80471 C870.157647,1881.82588 892.407059,1893.91059 907.654118,1903.05882 L907.654118,1903.17176 C923.804706,1912.88471 941.875294,1917.74118 960.058824,1917.74118 C978.129412,1917.74118 996.312941,1912.88471 1012.46353,1903.05882 C1027.71059,1893.91059 1049.96,1881.82588 1077.40471,1866.80471 C1295.72,1747.53882 1807.11765,1468.12235 1807.11765,1077.91059 L1807.11765,362.992941 L960.058824,0 Z M604.689412,868.562824 L524.84,948.412235 L847.061176,1270.74635 L1451.74824,666.059294 L1371.89882,586.209882 L847.061176,1110.93459 L604.689412,868.562824 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStandardsSolid":{"variant":"Solid","glyphName":"standards","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.056537,0 L112,363.420495 L112,1079.18021 C112,1469.85159 624,1749.59717 842.572438,1869.00353 C870.04947,1884.0424 892.325088,1896.14134 907.590106,1905.30035 L907.590106,1905.41343 C923.759717,1915.13781 941.85159,1920 960.056537,1920 C978.14841,1920 996.353357,1915.13781 1012.52297,1905.30035 C1027.78799,1896.14134 1050.0636,1884.0424 1077.54064,1869.00353 C1296.11307,1749.59717 1808.11307,1469.85159 1808.11307,1079.18021 L1808.11307,363.420495 L960.056537,0 Z M846.982332,1272.19788 L524.268551,949.484099 L604.325088,869.540636 L846.982332,1112.31095 L1372.32509,586.855124 L1452.38163,666.798587 L846.982332,1272.19788 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStarLightLine":{"variant":"Line","glyphName":"star-light","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1306.18122,1110.40706 C1277.72005,1131.18824 1265.86122,1167.66824 1276.70358,1201.43765 L1442.84005,1712.83529 L1007.79064,1396.71294 C979.103577,1375.93176 940.703577,1375.93176 912.12946,1396.71294 L477.080048,1712.83529 L643.32946,1201.21176 C654.171812,1167.66824 642.312989,1131.18824 613.738871,1110.40706 L178.576518,794.284706 L716.402401,794.284706 C751.752989,794.284706 782.924754,771.583529 793.767107,738.04 L960.016518,226.529412 L1126.15299,737.927059 C1136.99534,771.583529 1168.16711,794.284706 1203.51769,794.284706 L1741.45652,794.284706 L1306.18122,1110.40706 Z M1915.95064,737.588235 C1904.99534,703.931765 1873.93652,681.343529 1838.58593,681.343529 L1226.44475,681.343529 L1037.38122,99.2447059 C1026.42593,65.5882353 995.367107,43 960.016518,43 C924.66593,43 893.494165,65.5882353 882.651812,99.2447059 L693.475342,681.343529 L81.3341654,681.343529 C45.9835772,681.343529 14.9247537,703.931765 3.96945955,737.588235 C-6.87289339,771.244706 4.98593014,807.724706 33.5600478,828.505882 L528.807107,1188.22353 L339.517695,1770.43529 C328.675342,1804.09176 340.534165,1840.57176 369.221224,1861.35294 C383.451812,1871.74353 400.280048,1876.93882 416.882401,1876.93882 C433.710636,1876.93882 450.538871,1871.74353 464.76946,1861.24 L960.016518,1501.52235 L1455.03769,1861.24 C1483.61181,1882.13412 1522.12475,1882.13412 1550.81181,1861.35294 C1579.38593,1840.57176 1591.24475,1804.09176 1580.4024,1770.32235 L1391.11299,1188.22353 L1886.36005,828.505882 C1915.04711,807.724706 1926.90593,771.244706 1915.95064,737.588235 L1915.95064,737.588235 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStarLightSolid":{"variant":"Solid","glyphName":"star-light","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1306.18122,1110.40706 C1277.72005,1131.18824 1265.86122,1167.66824 1276.70358,1201.43765 L1442.84005,1712.83529 L1007.79064,1396.71294 C979.103577,1375.93176 940.703577,1375.93176 912.12946,1396.71294 L477.080048,1712.83529 L643.32946,1201.21176 C654.171812,1167.66824 642.312989,1131.18824 613.738871,1110.40706 L178.576518,794.284706 L716.402401,794.284706 C751.752989,794.284706 782.924754,771.583529 793.767107,738.04 L960.016518,226.529412 L1126.15299,737.927059 C1136.99534,771.583529 1168.16711,794.284706 1203.51769,794.284706 L1741.45652,794.284706 L1306.18122,1110.40706 Z M1915.95064,737.588235 C1904.99534,703.931765 1873.93652,681.343529 1838.58593,681.343529 L1226.44475,681.343529 L1037.38122,99.2447059 C1026.42593,65.5882353 995.367107,43 960.016518,43 C924.66593,43 893.494165,65.5882353 882.651812,99.2447059 L693.475342,681.343529 L81.3341654,681.343529 C45.9835772,681.343529 14.9247537,703.931765 3.96945955,737.588235 C-6.87289339,771.244706 4.98593014,807.724706 33.5600478,828.505882 L528.807107,1188.22353 L339.517695,1770.43529 C328.675342,1804.09176 340.534165,1840.57176 369.221224,1861.35294 C383.451812,1871.74353 400.280048,1876.93882 416.882401,1876.93882 C433.710636,1876.93882 450.538871,1871.74353 464.76946,1861.24 L960.016518,1501.52235 L1455.03769,1861.24 C1483.61181,1882.13412 1522.12475,1882.13412 1550.81181,1861.35294 C1579.38593,1840.57176 1591.24475,1804.09176 1580.4024,1770.32235 L1391.11299,1188.22353 L1886.36005,828.505882 C1915.04711,807.724706 1926.90593,771.244706 1915.95064,737.588235 L1915.95064,737.588235 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStarLine":{"variant":"Line","glyphName":"star","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1915.91828,737.475294 C1904.96299,703.931765 1873.90416,681.343529 1838.55357,681.343529 L1226.52534,681.343529 L1037.46181,99.2447059 L1037.46181,99.1317647 C1026.39357,65.5882353 995.33475,43 959.984162,43 C924.746515,43 893.57475,65.5882353 882.619456,99.2447059 L693.442985,681.343529 L81.4147498,681.343529 C46.0641616,681.343529 15.0053381,703.931765 4.05004394,737.475294 C-6.90525018,771.018824 4.84063217,807.611765 33.527691,828.505882 L528.77475,1188.33647 L339.598279,1770.54824 C328.642985,1804.20471 340.727691,1840.79765 369.41475,1861.46588 C383.645338,1871.74353 400.360632,1876.95297 417.075926,1876.95297 C433.79122,1876.95297 450.506515,1871.74353 464.850044,1861.35294 L959.984162,1501.63529 L1455.00534,1861.35294 C1483.57946,1882.13412 1522.0924,1882.13412 1550.66651,1861.46588 C1579.35357,1840.79765 1591.32534,1804.20471 1580.37004,1770.43529 L1391.19357,1188.33647 L1886.55357,828.505882 C1915.12769,807.611765 1926.98651,771.018824 1915.91828,737.475294\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStarSolid":{"variant":"Solid","glyphName":"star","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1915.91828,737.475294 C1904.96299,703.931765 1873.90416,681.343529 1838.55357,681.343529 L1226.52534,681.343529 L1037.46181,99.2447059 L1037.46181,99.1317647 C1026.39357,65.5882353 995.33475,43 959.984162,43 C924.746515,43 893.57475,65.5882353 882.619456,99.2447059 L693.442985,681.343529 L81.4147498,681.343529 C46.0641616,681.343529 15.0053381,703.931765 4.05004394,737.475294 C-6.90525018,771.018824 4.84063217,807.611765 33.527691,828.505882 L528.77475,1188.33647 L339.598279,1770.54824 C328.642985,1804.20471 340.727691,1840.79765 369.41475,1861.46588 C383.645338,1871.74353 400.360632,1876.95297 417.075926,1876.95297 C433.79122,1876.95297 450.506515,1871.74353 464.850044,1861.35294 L959.984162,1501.63529 L1455.00534,1861.35294 C1483.57946,1882.13412 1522.0924,1882.13412 1550.66651,1861.46588 C1579.35357,1840.79765 1591.32534,1804.20471 1580.37004,1770.43529 L1391.19357,1188.33647 L1886.55357,828.505882 C1915.12769,807.611765 1926.98651,771.018824 1915.91828,737.475294\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStatsLine":{"variant":"Line","glyphName":"stats","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.17647,1734.74871 L1807.05882,1734.74871 L1807.05882,831.219294 L1581.17647,831.219294 L1581.17647,1734.74871 Z M1016.47059,1734.74871 L1242.35294,1734.74871 L1242.35294,1282.984 L1016.47059,1282.984 L1016.47059,1734.74871 Z M451.764706,1734.74871 L677.647059,1734.74871 L677.647059,1057.10165 L451.764706,1057.10165 L451.764706,1734.74871 Z M112.941176,153.572235 L112.941176,1734.74871 L338.823529,1734.74871 L338.823529,944.160471 L790.588235,944.160471 L790.588235,1734.74871 L903.529412,1734.74871 L903.529412,1170.04282 L1355.29412,1170.04282 L1355.29412,1734.74871 L1468.23529,1734.74871 L1468.23529,718.278118 L1920,718.278118 L1920,1847.68988 L0,1847.68988 L0,153.572235 L112.941176,153.572235 Z M1586.60894,73 L1688.70776,121.112941 C1681.70541,136.247059 1511.95482,491.785882 1248.35012,557.404706 C1138.68424,584.736471 1030.03482,559.098824 926.128941,481.056471 C805.733647,390.703529 706.006588,364.501176 629.997176,402.449412 C496.274824,469.197647 451.776,714.844706 451.776,774.703529 L451.776,774.703529 L338.834824,774.703529 C338.834824,680.510588 395.870118,393.188235 579.512471,301.367059 C697.197176,242.750588 836.566588,272.792941 993.893647,390.703529 C1070.24188,448.077647 1144.44424,466.825882 1220.67953,447.851765 C1432.33129,395.334118 1585.02776,76.2752941 1586.60894,73 L1586.60894,73 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStatsSolid":{"variant":"Solid","glyphName":"stats","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M112.941176,153.527059 L112.941176,1734.70353 L338.823529,1734.70353 L338.823529,944.115294 L790.588235,944.115294 L790.588235,1734.70353 L903.529412,1734.70353 L903.529412,1169.99765 L1355.29412,1169.99765 L1355.29412,1734.70353 L1468.23529,1734.70353 L1468.23529,718.232941 L1920,718.232941 L1920,1847.64471 L0,1847.64471 L0,153.527059 L112.941176,153.527059 Z M1586.59765,73 L1688.69647,121 C1681.69412,136.134118 1511.94353,491.672941 1248.33882,557.404706 C1138.56,584.623529 1030.02353,559.098824 926.117647,481.056471 C805.609412,390.703529 705.882353,364.501176 629.985882,402.449412 C496.376471,469.197647 451.764706,714.731765 451.764706,774.703529 L338.823529,774.703529 C338.823529,680.510588 395.858824,393.188235 579.501176,301.367059 C697.298824,242.637647 836.555294,272.68 993.882353,390.703529 C1070.34353,447.964706 1144.43294,466.712941 1220.78118,447.738824 C1432.43294,395.334118 1585.01647,76.1623529 1586.59765,73 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStopLine":{"variant":"Line","glyphName":"stop","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,0 L1920,1920 L0,1920 L0,0 L1920,0 Z M1782.85714,137.142857 L137.142857,137.142857 L137.142857,1782.85714 L1782.85714,1782.85714 L1782.85714,137.142857 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStopSolid":{"variant":"Solid","glyphName":"stop","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 1920L1920 1920 1920 0 0 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStrikethroughLine":{"variant":"Line","glyphName":"strikethrough","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1388.388,1178.604 C1423.428,1260.924 1426.308,1356.204 1397.028,1461.924 C1336.668,1677.924 1197.708,1756.644 1091.628,1784.604 C1049.508,1795.764 1005.948,1800.804 962.028,1800.804 C770.508,1800.804 571.788,1704.564 459.348,1592.844 L459.348,1592.844 L408.468,1538.244 L496.308,1456.524 L545.508,1509.324 C660.228,1623.324 885.228,1715.124 1060.908,1668.564 C1171.068,1639.524 1245.348,1559.124 1281.468,1429.644 C1303.548,1349.844 1302.468,1283.124 1277.988,1225.764 L1277.988,1225.764 Z M758.472,137.928 C985.152,76.248 1257.192,183.168 1398.312,314.928 L1398.312,314.928 L1316.472,402.648 C1199.832,293.928 965.592,205.728 790.032,253.728 C683.952,282.528 612.432,356.808 577.512,474.408 C503.112,724.728 713.232,809.568 995.592,894.408 C1070.232,916.848 1134.792,936.888 1181.952,962.208 L1181.952,962.208 L1919.952,962.208 L1919.952,1082.208 L-0.048,1082.208 L-0.048,962.208 L814.872,962.208 C601.632,885.288 370.272,750.288 462.432,440.088 C509.352,282.408 611.712,177.888 758.472,137.928 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStrikethroughSolid":{"variant":"Solid","glyphName":"strikethrough","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1471.2,1261.68877 C1480.44,1328.88877 1476.12,1400.52877 1454.88,1477.32877 C1401.72,1667.40877 1278.24,1796.88877 1106.88,1842.12877 C1060.44,1854.36877 1012.32,1859.88877 963.84,1859.88877 C754.68,1859.88877 538.92,1755.84877 417,1634.76877 L417,1634.76877 L364.56,1578.72877 L540.24,1415.04877 L589.44,1467.96877 C688.2,1565.88877 892.92,1650.12877 1045.68,1610.04877 C1134.96,1586.40877 1193.16,1522.08877 1223.64,1413.12877 C1240.2,1353.12877 1240.8,1303.68877 1226.76,1261.68877 L1226.76,1261.68877 Z M1439.28,270.608772 L1275.48,445.928772 C1170.36,347.768772 956.28,269.768772 805.68,311.168772 C719.88,334.448772 664.08,393.248772 635.04,490.928772 C580.56,674.168772 701.76,742.928772 1012.8,836.408772 C1083.84,857.768772 1146.36,877.088772 1196.76,901.688772 L1920,901.688772 L1920,1141.68877 L-5.68434189e-14,1141.68877 L-5.68434189e-14,901.688772 L561.72,901.688772 C426.12,804.848772 335.04,658.088772 405,422.528772 C472.08,196.688772 625.68,111.368772 742.8,79.4487723 C990.6,12.7287723 1286.4,127.808772 1439.28,270.608772 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStudentViewLine":{"variant":"Line","glyphName":"student-view","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1395.06,960 C1560.18,960 1694.46,1094.16 1694.94,1259.04 C1694.94,1259.34 1695.02333,1259.64 1695.05111,1259.87056 L1695.06,1260 C1695.06,1425.36 1560.42,1560 1395.06,1560 C1229.7,1560 1095.06,1425.36 1095.06,1260 C1095.06,1094.64 1229.7,960 1395.06,960 Z M420.06,960 C585.42,960 720.06,1094.64 720.06,1260 C720.06,1425.36 585.42,1560 420.06,1560 C254.58,1560 120.06,1425.36 120.06,1260 C120.06,1094.64 254.58,960 420.06,960 Z M1814.94,1259.04 C1814.58,1134.24 1717.98,477.24 1714.02,450.6 C1699.26,330.6 1596.9,240 1475.82,240 L1320.06,240 L1320.06,360 L1475.82,360 C1536.3,360 1587.54,405.24 1595.1,466.68 C1610.1,568.56 1637.94,763.92 1660.5,937.32 C1587.9,877.44 1496.22,840 1395.06,840 C1184.1,840 1010.58,997.08 981.06,1200 L833.94,1200 C804.54,997.08 631.02,840 420.06,840 C318.78,840 227.1,877.44 154.5,937.32 C177.06,763.8 205.02,567.84 220.02,465.24 C227.46,405.24 278.7,360 339.18,360 L480.06,360 L480.06,240 L339.18,240 C218.1,240 115.74,330.6 101.22,449.28 C97.02,477.24 0.06,1137 0.06,1260 C0.06,1491.6 188.46,1680 420.06,1680 C631.02,1680 804.54,1522.92 833.94,1320 L981.06,1320 C1010.58,1522.92 1184.1,1680 1395.06,1680 C1626.66,1680 1815.06,1491.6 1815.06,1260 C1815.06,1259.76 1814.94,1259.4 1814.94,1259.04\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStudentViewSolid":{"variant":"Solid","glyphName":"student-view","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M512,192 L512,320 L361.856,320 C297.216,320 242.688,368.256 234.752,432.256 C218.624,541.696 188.8,750.72 164.736,935.808 C242.176,871.936 340.096,832 448,832 C695.04,832 896,1032.96 896,1280 L895.948,1273.694 L895.9488,1216.0512 L1030.4768,1216.0512 C1061.8368,999.4752 1246.9248,832.0512 1471.9488,832.0512 C1582.5408,832.0512 1682.5088,873.7792 1760.8448,940.3392 C1737.4208,754.3552 1708.2368,543.2832 1692.6208,433.8432 C1684.8128,368.3072 1631.6928,320.0512 1569.1008,320.0512 L1569.1008,320.0512 L1407.9488,320.0512 L1407.9488,192.0512 L1569.1008,192.0512 C1694.4128,192.0512 1800.2688,288.6912 1815.5008,416.6912 C1819.5968,445.1072 1918.7968,1148.8512 1918.7968,1280.0512 C1918.7968,1526.9632 1718.9888,1728.0512 1471.9488,1728.0512 C1246.9248,1728.0512 1061.8368,1560.4992 1030.4768,1344.0512 L1030.4768,1344.0512 L895.9488,1344.0512 L895.95628,1286.30796 C892.570252,1530.45179 692.933965,1728 448,1728 C200.96,1728 0,1527.04 0,1280 C0,1148.8 103.552,445.056 107.904,415.232 C123.392,288.64 232.704,192 361.856,192 L361.856,192 L512,192 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStudioLine":{"variant":"Line","glyphName":"studio","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1735.1347,0 C1767.59552,0 1793.91021,26.3146923 1793.91021,58.7755102 L1793.91021,1184.36294 C1793.91021,1216.82376 1767.59552,1243.13845 1735.1347,1243.13845 L1489.85675,1243.13845 L1489.85675,1442.95552 C1489.85675,1457.15713 1501.36943,1468.66981 1515.57103,1468.66981 L1577.03377,1468.66981 C1600.4115,1402.98637 1663.1355,1355.96296 1736.84241,1355.96296 C1830.4996,1355.96296 1906.42375,1431.88712 1906.42375,1525.54431 C1906.42375,1619.2015 1830.4996,1695.12566 1736.84241,1695.12566 C1662.52714,1695.12566 1599.37683,1647.32281 1576.46297,1580.78862 L1517.36272,1580.8373 C1440.2319,1580.8373 1377.73451,1518.33991 1377.73451,1441.24547 L1377.76817,1243.13845 L1254.36291,1243.13845 L1254.36291,1590.3165 C1320.48067,1613.45917 1367.90132,1676.40107 1367.90132,1750.41865 C1367.90132,1844.07584 1291.97717,1920 1198.31997,1920 C1104.66278,1920 1028.73863,1844.07584 1028.73863,1750.41865 C1028.73863,1676.40107 1076.15928,1613.45917 1142.27704,1590.3165 L1142.27704,1243.13845 L777.213784,1243.13845 L777.213784,1590.3165 C843.331544,1613.45917 890.752197,1676.40107 890.752197,1750.41865 C890.752197,1844.07584 814.828042,1920 721.17085,1920 C627.513658,1920 551.589502,1844.07584 551.589502,1750.41865 C551.589502,1676.40107 599.010155,1613.45917 665.127916,1590.3165 L665.127916,1243.13845 L541.655579,1243.13845 L541.689247,1441.24547 C541.689247,1518.33991 479.191853,1580.8373 402.09741,1580.8373 L342.960786,1580.78862 C320.046924,1647.32281 256.896612,1695.12566 182.581348,1695.12566 C88.9241555,1695.12566 13,1619.2015 13,1525.54431 C13,1431.88712 88.9241555,1355.96296 182.581348,1355.96296 C256.288255,1355.96296 319.012258,1402.98637 342.389983,1468.66981 L403.85272,1468.66981 C418.054328,1468.66981 429.567006,1457.15713 429.567006,1442.95552 L429.567006,1243.13845 L183.114532,1243.13845 C150.653714,1243.13845 124.339021,1216.82376 124.339021,1184.36294 L124.339021,58.7755102 C124.339021,26.3146923 150.653714,0 183.114532,0 L1735.1347,0 Z M1199.67111,1694.78976 C1168.94812,1694.78976 1144.04222,1719.69566 1144.04222,1750.41865 C1144.04222,1781.14164 1168.94812,1806.04755 1199.67111,1806.04755 C1230.3941,1806.04755 1255.30001,1781.14164 1255.30001,1750.41865 C1255.30001,1719.69566 1230.3941,1694.78976 1199.67111,1694.78976 Z M722.52199,1694.78976 C691.799,1694.78976 666.893096,1719.69566 666.893096,1750.41865 C666.893096,1781.14164 691.799,1806.04755 722.52199,1806.04755 C753.244979,1806.04755 778.150884,1781.14164 778.150884,1750.41865 C778.150884,1719.69566 753.244979,1694.78976 722.52199,1694.78976 Z M1738.19355,1469.91542 C1707.47056,1469.91542 1682.56465,1494.82132 1682.56465,1525.54431 C1682.56465,1556.2673 1707.47056,1581.17321 1738.19355,1581.17321 C1768.91654,1581.17321 1793.82244,1556.2673 1793.82244,1525.54431 C1793.82244,1494.82132 1768.91654,1469.91542 1738.19355,1469.91542 Z M181.230208,1469.91542 C150.507218,1469.91542 125.601314,1494.82132 125.601314,1525.54431 C125.601314,1556.2673 150.507218,1581.17321 181.230208,1581.17321 C211.953198,1581.17321 236.859102,1556.2673 236.859102,1525.54431 C236.859102,1494.82132 211.953198,1469.91542 181.230208,1469.91542 Z M1687.20211,1040 L231.047122,1040 L231.047122,1107.09854 C231.047122,1123.32895 244.204468,1136.48629 260.434877,1136.48629 L1657.81435,1136.48629 C1674.04476,1136.48629 1687.20211,1123.32895 1687.20211,1107.09854 L1687.20211,1040 Z M1657.81435,106.666667 L260.434877,106.666667 C244.204468,106.666667 231.047122,119.824013 231.047122,136.054422 L231.047122,933.333333 L1687.20211,933.333333 L1687.20211,136.054422 C1687.20211,119.824013 1674.04476,106.666667 1657.81435,106.666667 Z M901.046855,348.664896 L1121.08185,480.46113 C1133.59009,489.628452 1141,504.337618 1141,520 C1141,535.662382 1133.59009,550.371548 1121.08185,559.53887 L901.046855,691.335104 C886.19456,700.041024 867.897012,700.046423 853.039735,691.349269 C838.182458,682.652115 829.019897,666.572114 829,649.160309 L829,390.839691 C829.019897,373.427886 838.182458,357.347885 853.039735,348.650731 C867.897012,339.953577 886.19456,339.958976 901.046855,348.664896 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconStudioSolid":{"variant":"Solid","glyphName":"studio","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1740.1347,0 C1772.59552,0 1798.91021,26.3146923 1798.91021,58.7755102 L1798.91021,1184.36294 C1798.91021,1216.82376 1772.59552,1243.13845 1740.1347,1243.13845 L1494.85675,1243.13845 L1494.85675,1442.95552 C1494.85675,1457.15713 1506.36943,1468.66981 1520.57103,1468.66981 L1582.03377,1468.66981 C1605.4115,1402.98637 1668.1355,1355.96296 1741.84241,1355.96296 C1835.4996,1355.96296 1911.42375,1431.88712 1911.42375,1525.54431 C1911.42375,1619.2015 1835.4996,1695.12566 1741.84241,1695.12566 C1667.52714,1695.12566 1604.37683,1647.32281 1581.46297,1580.78862 L1522.36272,1580.8373 C1445.2319,1580.8373 1382.73451,1518.33991 1382.73451,1441.24547 L1382.76817,1243.13845 L1259.36291,1243.13845 L1259.36291,1590.3165 C1325.48067,1613.45917 1372.90132,1676.40107 1372.90132,1750.41865 C1372.90132,1844.07584 1296.97717,1920 1203.31997,1920 C1109.66278,1920 1033.73863,1844.07584 1033.73863,1750.41865 C1033.73863,1676.40107 1081.15928,1613.45917 1147.27704,1590.3165 L1147.27704,1243.13845 L782.213784,1243.13845 L782.213784,1590.3165 C848.331544,1613.45917 895.752197,1676.40107 895.752197,1750.41865 C895.752197,1844.07584 819.828042,1920 726.17085,1920 C632.513658,1920 556.589502,1844.07584 556.589502,1750.41865 C556.589502,1676.40107 604.010155,1613.45917 670.127916,1590.3165 L670.127916,1243.13845 L546.655579,1243.13845 L546.689247,1441.24547 C546.689247,1518.33991 484.191853,1580.8373 407.09741,1580.8373 L347.960786,1580.78862 C325.046924,1647.32281 261.896612,1695.12566 187.581348,1695.12566 C93.9241555,1695.12566 18,1619.2015 18,1525.54431 C18,1431.88712 93.9241555,1355.96296 187.581348,1355.96296 C261.288255,1355.96296 324.012258,1402.98637 347.389983,1468.66981 L408.85272,1468.66981 C423.054328,1468.66981 434.567006,1457.15713 434.567006,1442.95552 L434.567006,1243.13845 L188.114532,1243.13845 C155.653714,1243.13845 129.339021,1216.82376 129.339021,1184.36294 L129.339021,58.7755102 C129.339021,26.3146923 155.653714,0 188.114532,0 L1740.1347,0 Z M1204.67111,1694.78976 C1173.94812,1694.78976 1149.04222,1719.69566 1149.04222,1750.41865 C1149.04222,1781.14164 1173.94812,1806.04755 1204.67111,1806.04755 C1235.3941,1806.04755 1260.30001,1781.14164 1260.30001,1750.41865 C1260.30001,1719.69566 1235.3941,1694.78976 1204.67111,1694.78976 Z M727.52199,1694.78976 C696.799,1694.78976 671.893096,1719.69566 671.893096,1750.41865 C671.893096,1781.14164 696.799,1806.04755 727.52199,1806.04755 C758.244979,1806.04755 783.150884,1781.14164 783.150884,1750.41865 C783.150884,1719.69566 758.244979,1694.78976 727.52199,1694.78976 Z M1743.19355,1469.91542 C1712.47056,1469.91542 1687.56465,1494.82132 1687.56465,1525.54431 C1687.56465,1556.2673 1712.47056,1581.17321 1743.19355,1581.17321 C1773.91654,1581.17321 1798.82244,1556.2673 1798.82244,1525.54431 C1798.82244,1494.82132 1773.91654,1469.91542 1743.19355,1469.91542 Z M186.230208,1469.91542 C155.507218,1469.91542 130.601314,1494.82132 130.601314,1525.54431 C130.601314,1556.2673 155.507218,1581.17321 186.230208,1581.17321 C216.953198,1581.17321 241.859102,1556.2673 241.859102,1525.54431 C241.859102,1494.82132 216.953198,1469.91542 186.230208,1469.91542 Z M1692.20211,1040 L236.047122,1040 L236.047122,1107.09854 C236.047122,1123.32895 249.204468,1136.48629 265.434877,1136.48629 L1662.81435,1136.48629 C1679.04476,1136.48629 1692.20211,1123.32895 1692.20211,1107.09854 L1692.20211,1040 Z M1662.81435,106.666667 L265.434877,106.666667 C249.204468,106.666667 236.047122,119.824013 236.047122,136.054422 L236.047122,933.333333 L1692.20211,933.333333 L1692.20211,136.054422 C1692.20211,119.824013 1679.04476,106.666667 1662.81435,106.666667 Z M906.046855,348.664896 L1126.08185,480.46113 C1138.59009,489.628452 1146,504.337618 1146,520 C1146,535.662382 1138.59009,550.371548 1126.08185,559.53887 L906.046855,691.335104 C891.19456,700.041024 872.897012,700.046423 858.039735,691.349269 C843.182458,682.652115 834.019897,666.572114 834,649.160309 L834,390.839691 C834.019897,373.427886 843.182458,357.347885 858.039735,348.650731 C872.897012,339.953577 891.19456,339.958976 906.046855,348.664896 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSubaccountsLine":{"variant":"Line","glyphName":"subaccounts","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1242.24,0 L1242.24,564.705882 L1016.47059,564.705882 L1016.47059,865.807059 L1694.11765,865.807059 L1694.11765,1355.29412 L1920,1355.29412 L1920,1920 L1355.18118,1920 L1355.18118,1355.29412 L1581.17647,1355.29412 L1581.17647,978.861176 L1016.47059,978.861176 L1016.47059,1355.29412 L1242.24,1355.29412 L1242.24,1920 L677.647059,1920 L677.647059,1355.29412 L903.529412,1355.29412 L903.529412,978.861176 L338.710588,978.861176 L338.710588,1355.29412 L564.705882,1355.29412 L564.705882,1920 L0,1920 L0,1355.29412 L225.769412,1355.29412 L225.769412,865.807059 L903.529412,865.807059 L903.529412,564.705882 L677.647059,564.705882 L677.647059,0 L1242.24,0 Z M1807.05882,1468.34824 L1468.12235,1468.34824 L1468.12235,1807.17176 L1807.05882,1807.17176 L1807.05882,1468.34824 Z M1129.41176,1468.34824 L790.588235,1468.34824 L790.588235,1807.17176 L1129.41176,1807.17176 L1129.41176,1468.34824 Z M451.764706,1468.34824 L112.941176,1468.34824 L112.941176,1807.17176 L451.764706,1807.17176 L451.764706,1468.34824 Z M1129.41176,112.941176 L790.588235,112.941176 L790.588235,451.877647 L1129.41176,451.877647 L1129.41176,112.941176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSubaccountsSolid":{"variant":"Solid","glyphName":"subaccounts","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M677.647059 0L677.647059 564.705882 903.529412 564.705882 903.529412 865.807059 225.769412 865.807059 225.769412 1355.29412 0 1355.29412 0 1920 564.705882 1920 564.705882 1355.29412 338.710588 1355.29412 338.710588 978.861176 903.529412 978.861176 903.529412 1355.29412 677.647059 1355.29412 677.647059 1920 1242.24 1920 1242.24 1355.29412 1016.47059 1355.29412 1016.47059 978.861176 1581.17647 978.861176 1581.17647 1355.29412 1355.18118 1355.29412 1355.18118 1920 1920 1920 1920 1355.29412 1694.11765 1355.29412 1694.11765 865.807059 1016.47059 865.807059 1016.47059 564.705882 1242.24 564.705882 1242.24 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSyllabusLine":{"variant":"Line","glyphName":"syllabus","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1801.44118,0 L1801.44118,1920 L219.029412,1920 L219.029412,1480.78431 L162.514706,1480.78431 C131.318588,1480.78431 106,1455.48549 106,1424.31373 C106,1393.14196 131.318588,1367.84314 162.514706,1367.84314 L162.514706,1367.84314 L219.029412,1367.84314 L219.029412,1029.01961 L162.514706,1029.01961 C131.318588,1029.01961 106,1003.72078 106,972.54902 C106,941.377255 131.318588,916.078431 162.514706,916.078431 L162.514706,916.078431 L219.029412,916.078431 L219.029412,577.254902 L162.514706,577.254902 C131.318588,577.254902 106,551.956078 106,520.784314 C106,489.612549 131.318588,464.313725 162.514706,464.313725 L162.514706,464.313725 L219.029412,464.313725 L219.029412,0 L1801.44118,0 Z M1688.41176,112.941176 L332.058824,112.941176 L332.058824,464.313725 L388.573529,464.313725 C419.769647,464.313725 445.088235,489.612549 445.088235,520.784314 C445.088235,551.956078 419.769647,577.254902 388.573529,577.254902 L388.573529,577.254902 L332.058824,577.254902 L332.058824,916.078431 L388.573529,916.078431 C419.769647,916.078431 445.088235,941.377255 445.088235,972.54902 C445.088235,1003.72078 419.769647,1029.01961 388.573529,1029.01961 L388.573529,1029.01961 L332.058824,1029.01961 L332.058824,1367.84314 L388.573529,1367.84314 C419.769647,1367.84314 445.088235,1393.14196 445.088235,1424.31373 C445.088235,1455.48549 419.769647,1480.78431 388.573529,1480.78431 L388.573529,1480.78431 L332.058824,1480.78431 L332.058824,1807.05882 L1688.41176,1807.05882 L1688.41176,112.941176 Z M640.287953,425.201841 L1388.89922,425.201841 L1388.89922,538.141843 L640.287953,538.141843 L640.287953,425.201841 Z M640.287953,640.031283 L1279.72674,640.031283 L1279.72674,752.971285 L640.287953,752.971285 L640.287953,640.031283 Z M640.287953,1174.87637 L1388.89922,1174.87637 L1388.89922,1287.81637 L640.287953,1287.81637 L640.287953,1174.87637 Z M640.287953,1389.70581 L1279.72674,1389.70581 L1279.72674,1502.64581 L640.287953,1502.64581 L640.287953,1389.70581 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconSyllabusSolid":{"variant":"Solid","glyphName":"syllabus","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1801.44118,0 L1801.44118,1920 L219.029412,1920 L219.029412,1480.78431 L162.514706,1480.78431 C131.318588,1480.78431 106,1455.48549 106,1424.31373 C106,1393.14196 131.318588,1367.84314 162.514706,1367.84314 L162.514706,1367.84314 L219.029412,1367.84314 L219.029412,1029.01961 L162.514706,1029.01961 C131.318588,1029.01961 106,1003.72078 106,972.54902 C106,941.377255 131.318588,916.078431 162.514706,916.078431 L162.514706,916.078431 L219.029412,916.078431 L219.029412,577.254902 L162.514706,577.254902 C131.318588,577.254902 106,551.956078 106,520.784314 C106,489.612549 131.318588,464.313725 162.514706,464.313725 L162.514706,464.313725 L219.029412,464.313725 L219.029412,0 L1801.44118,0 Z M1279.72674,1389.70581 L640.287953,1389.70581 L640.287953,1502.64581 L1279.72674,1502.64581 L1279.72674,1389.70581 Z M1388.89922,1174.87637 L640.287953,1174.87637 L640.287953,1287.81637 L1388.89922,1287.81637 L1388.89922,1174.87637 Z M1279.72674,640.031283 L640.287953,640.031283 L640.287953,752.971285 L1279.72674,752.971285 L1279.72674,640.031283 Z M1388.89922,425.201841 L640.287953,425.201841 L640.287953,538.141843 L1388.89922,538.141843 L1388.89922,425.201841 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableCellSelectAllLine":{"variant":"Line","glyphName":"table-cell-select-all","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1740,0 C1839.24,0 1920,80.76 1920,180 L1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L180,1920 C80.76,1920 0,1839.24 0,1740 L0,180 C0,80.76 80.76,0 180,0 L1740,0 Z M894,1800 L894,1026 L120,1026 L120,1703.25 C120,1756.4625 163.5375,1800 216.75,1800 L894,1800 Z M894,894 L894,120 L216.75,120 C163.5375,120 120,163.5375 120,216.75 L120,894 L894,894 Z M1800,1703.25 L1800,1026 L1026,1026 L1026,1800 L1703.25,1800 C1756.4625,1800 1800,1756.4625 1800,1703.25 Z M1800,894 L1800,216.75 C1800,163.5375 1756.4625,120 1703.25,120 L1026,120 L1026,894 L1800,894 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableCellSelectAllSolid":{"variant":"Solid","glyphName":"table-cell-select-all","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M225.882353,-2.27373675e-13 L1694.11765,-2.27373675e-13 C1818.69176,-2.27373675e-13 1920,101.308235 1920,225.882353 L1920,1694.11765 C1920,1818.69176 1818.69176,1920 1694.11765,1920 L225.882353,1920 C101.308235,1920 0,1818.69176 0,1694.11765 L0,225.882353 C0,101.308235 101.308235,-2.27373675e-13 225.882353,-2.27373675e-13 Z M1080.34353,1694.11765 L1694.34353,1694.11765 L1694.34353,1080.11765 L1080.34353,1080.11765 L1080.34353,1694.11765 Z M225.882353,839.882353 L839.882353,839.882353 L839.882353,225.882353 L225.882353,225.882353 L225.882353,839.882353 Z M225.882353,1694.11765 L839.882353,1694.11765 L839.882353,1080.11765 L225.882353,1080.11765 L225.882353,1694.11765 Z M1080.11765,839.882353 L1694.11765,839.882353 L1694.11765,225.882353 L1080.11765,225.882353 L1080.11765,839.882353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableDeleteColumnLine":{"variant":"Line","glyphName":"table-delete-column","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1800,1740 C1800,1773 1773,1800 1740,1800 L1320,1800 L1320,1500 L1200,1500 L1200,1800 L720,1800 L720,1500 L600,1500 L600,1800 L180,1800 C146.88,1800 120,1773 120,1740 L120,180 C120,147 146.88,120 180,120 L600,120 L600,420 L720,420 L720,120 L1200,120 L1200,420 L1320,420 L1320,120 L1740,120 C1773,120 1800,147 1800,180 L1800,1740 Z M1740,0 L180,0 C80.76,0 0,80.76 0,180 L0,1740 C0,1839.24 80.76,1920 180,1920 L1740,1920 C1839.24,1920 1920,1839.24 1920,1740 L1920,180 C1920,80.76 1839.24,0 1740,0 L1740,0 Z M1434.84,654.84 L1265.16,485.16 L960,790.32 L654.84,485.16 L485.16,654.84 L790.32,960 L485.16,1265.16 L654.84,1434.84 L960,1129.68 L1265.16,1434.84 L1434.84,1265.16 L1129.68,960 L1434.84,654.84 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableDeleteColumnSolid":{"variant":"Solid","glyphName":"table-delete-column","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.232,1694.064 L1355.352,1694.064 L1355.352,1500.024 L1129.392,1500.024 L1129.392,1694.064 L790.632,1694.064 L790.632,1500.024 L564.672,1500.024 L564.672,1694.064 L225.912,1694.064 L225.912,225.984 L564.672,225.984 L564.672,425.784 L790.632,425.784 L790.632,225.984 L1129.392,225.984 L1129.392,425.784 L1355.352,425.784 L1355.352,225.984 L1694.232,225.984 L1694.232,1694.064 Z M1694.112,0.024 L225.912,0.024 C101.352,0.024 0.072,101.304 0.072,225.984 L0.072,1694.064 C0.072,1818.744 101.352,1920.024 225.912,1920.024 L1694.112,1920.024 C1818.672,1920.024 1920.072,1818.744 1920.072,1694.064 L1920.072,225.984 C1920.072,101.304 1818.672,0.024 1694.112,0.024 L1694.112,0.024 Z M1201.344,484.92 L960.024,726.24 L718.824,484.92 L484.944,718.68 L726.264,960 L484.944,1201.32 L718.824,1435.08 L960.024,1193.76 L1201.344,1435.08 L1434.984,1201.32 L1193.784,960 L1434.984,718.68 L1201.344,484.92 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableDeleteRowLine":{"variant":"Line","glyphName":"table-delete-row","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1800,1740 C1800,1773 1773,1800 1740,1800 L1320,1800 L1320,1500 L1200,1500 L1200,1800 L720,1800 L720,1500 L600,1500 L600,1800 L180,1800 C146.88,1800 120,1773 120,1740 L120,180 C120,147 146.88,120 180,120 L600,120 L600,420 L720,420 L720,120 L1200,120 L1200,420 L1320,420 L1320,120 L1740,120 C1773,120 1800,147 1800,180 L1800,1740 Z M1740,1.13686838e-13 L180,1.13686838e-13 C80.76,1.13686838e-13 -1.13686838e-13,80.76 -1.13686838e-13,180 L-1.13686838e-13,1740 C-1.13686838e-13,1839.24 80.76,1920 180,1920 L1740,1920 C1839.24,1920 1920,1839.24 1920,1740 L1920,180 C1920,80.76 1839.24,1.13686838e-13 1740,1.13686838e-13 L1740,1.13686838e-13 Z M1265,1434.68 L1434.68,1265 L1129.52,959.84 L1434.68,654.68 L1265,485 L959.84,790.16 L654.68,485 L485,654.68 L790.16,959.84 L485,1265 L654.68,1434.68 L959.84,1129.52 L1265,1434.68 Z\" transform=\"rotate(90 960 960)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableDeleteRowSolid":{"variant":"Solid","glyphName":"table-delete-row","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.136,1694.112 L1355.256,1694.112 L1355.256,1500.072 L1129.296,1500.072 L1129.296,1694.112 L790.536,1694.112 L790.536,1500.072 L564.576,1500.072 L564.576,1694.112 L225.816,1694.112 L225.816,226.032 L564.576,226.032 L564.576,425.832 L790.536,425.832 L790.536,226.032 L1129.296,226.032 L1129.296,425.832 L1355.256,425.832 L1355.256,226.032 L1694.136,226.032 L1694.136,1694.112 Z M1694.016,0.072 L225.816,0.072 C101.256,0.072 -0.024,101.352 -0.024,226.032 L-0.024,1694.112 C-0.024,1818.792 101.256,1920.072 225.816,1920.072 L1694.016,1920.072 C1818.576,1920.072 1919.976,1818.792 1919.976,1694.112 L1919.976,226.032 C1919.976,101.352 1818.576,0.072 1694.016,0.072 L1694.016,0.072 Z M1435.076,1201.532 L1193.756,960.212 L1435.076,719.012 L1201.316,485.132 L959.996,726.452 L718.676,485.132 L484.916,719.012 L726.236,960.212 L484.916,1201.532 L718.676,1435.172 L959.996,1193.972 L1201.316,1435.172 L1435.076,1201.532 Z\" transform=\"rotate(90 959.976 960.072)\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableDeleteTableLine":{"variant":"Line","glyphName":"table-delete-table","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1800,1740 C1800,1773 1773.12,1800 1740,1800 L180,1800 C146.88,1800 120,1773 120,1740 L120,180 C120,146.88 146.88,120 180,120 L1740,120 C1773.12,120 1800,146.88 1800,180 L1800,1740 Z M1740,0 L180,0 C80.76,0 0,80.76 0,180 L0,1740 C0,1839.24 80.76,1920 180,1920 L1740,1920 C1839.24,1920 1920,1839.24 1920,1740 L1920,180 C1920,80.76 1839.24,0 1740,0 L1740,0 Z M1504.92,245.388 L960,790.308 L415.08,245.388 L245.4,415.068 L790.32,959.988 L245.4,1504.908 L415.08,1674.588 L960,1129.668 L1504.92,1674.588 L1674.6,1504.908 L1129.68,959.988 L1674.6,415.068 L1504.92,245.388 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableDeleteTableSolid":{"variant":"Solid","glyphName":"table-delete-table","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.244,1694.064 L1129.404,1694.064 L790.644,1694.064 L225.924,1694.064 L225.924,225.864 L1694.244,225.864 L1694.244,1694.064 Z M1694.124,0.024 L225.924,0.024 C101.364,0.024 -0.036,101.304 -0.036,225.864 L-0.036,1694.064 C-0.036,1818.744 101.364,1920.024 225.924,1920.024 L1694.124,1920.024 C1818.684,1920.024 1919.964,1818.744 1919.964,1694.064 L1919.964,225.864 C1919.964,101.304 1818.684,0.024 1694.124,0.024 L1694.124,0.024 Z M635.388,1599.024 L959.988,1274.424 L1284.588,1599.024 L1599.108,1284.624 L1274.508,960.024 L1599.108,635.424 L1284.588,320.904 L959.988,645.504 L635.388,320.904 L320.868,635.424 L645.468,960.024 L320.868,1284.624 L635.388,1599.024 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableInsertColumnAfterLine":{"variant":"Line","glyphName":"table-insert-column-after","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1740,0 C1839.24,0 1920,80.76 1920,180 L1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L180,1920 C80.76,1920 0,1839.24 0,1740 L0,180 C0,80.76 80.76,0 180,0 L1740,0 Z M1800,1740 L1800,180 C1800,147 1773.12,120 1740,120 L720,120 L720,1800 L1740,1800 C1773.12,1800 1800,1773 1800,1740 Z M180,1800 L600,1800 L600,1320 L120,1320 L120,1740 C120,1773 146.88,1800 180,1800 Z M120,1200 L600,1200 L600,720 L120,720 L120,1200 Z M180,120 C146.88,120 120,147 120,180 L120,600 L600,600 L600,120 L180,120 Z M1143.516,510 L1383.516,510 L1383.516,840 L1713.516,840 L1713.516,1080 L1383.516,1080 L1383.516,1410 L1143.516,1410 L1143.516,1080 L813.516,1080 L813.516,840 L1143.516,840 L1143.516,510 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableInsertColumnAfterSolid":{"variant":"Solid","glyphName":"table-insert-column-after","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.11765,0 C1818.69176,0 1920,101.308235 1920,225.882353 L1920,1694.11765 C1920,1818.57882 1818.69176,1920 1694.11765,1920 L225.882353,1920 C101.308235,1920 -1.13686838e-13,1818.57882 -1.13686838e-13,1694.11765 L-1.13686838e-13,225.882353 C-1.13686838e-13,101.308235 101.308235,0 225.882353,0 L1694.11765,0 Z M790.588235,1694.11765 L1694.11765,1694.11765 L1694.11765,225.882353 L790.588235,225.882353 L790.588235,1694.11765 Z M225.882353,564.705882 L564.705882,564.705882 L564.705882,225.882353 L225.882353,225.882353 L225.882353,564.705882 Z M225.882353,1129.41176 L564.705882,1129.41176 L564.705882,790.588235 L225.882353,790.588235 L225.882353,1129.41176 Z M225.882353,1694.11765 L564.705882,1694.11765 L564.705882,1355.29412 L225.882353,1355.29412 L225.882353,1694.11765 Z M1113.37412,1355.29412 L1113.37412,1088.97882 L847.058824,1088.97882 L847.058824,831.021176 L1113.37412,831.021176 L1113.37412,564.705882 L1371.44471,564.705882 L1371.44471,831.021176 L1637.64706,831.021176 L1637.64706,1088.97882 L1371.44471,1088.97882 L1371.44471,1355.29412 L1113.37412,1355.29412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableInsertColumnBeforeLine":{"variant":"Line","glyphName":"table-insert-column-before","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M120,180 L120,1740 C120,1773 146.88,1800 180,1800 L1200,1800 L1200,120 L180,120 C146.88,120 120,147 120,180 Z M1740,120 L1320,120 L1320,600 L1800,600 L1800,180 C1800,147 1773.12,120 1740,120 Z M1800,720 L1320,720 L1320,1200 L1800,1200 L1800,720 Z M1740,1800 C1773.12,1800 1800,1773 1800,1740 L1800,1320 L1320,1320 L1320,1800 L1740,1800 Z M180,1920 C80.76,1920 -2.27373675e-13,1839.24 -2.27373675e-13,1740 L-2.27373675e-13,180 C-2.27373675e-13,80.76 80.76,-2.27373675e-13 180,-2.27373675e-13 L1740,-2.27373675e-13 C1839.24,-2.27373675e-13 1920,80.76 1920,180 L1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L180,1920 Z M776.484,1410 L536.484,1410 L536.484,1080 L206.484,1080 L206.484,840 L536.484,840 L536.484,510 L776.484,510 L776.484,840 L1106.484,840 L1106.484,1080 L776.484,1080 L776.484,1410 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableInsertColumnBeforeSolid":{"variant":"Solid","glyphName":"table-insert-column-before","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1129.41176,225.882353 L225.882353,225.882353 L225.882353,1694.11765 L1129.41176,1694.11765 L1129.41176,225.882353 Z M1694.11765,1355.29412 L1355.29412,1355.29412 L1355.29412,1694.11765 L1694.11765,1694.11765 L1694.11765,1355.29412 Z M1694.11765,790.588235 L1355.29412,790.588235 L1355.29412,1129.41176 L1694.11765,1129.41176 L1694.11765,790.588235 Z M1694.11765,225.882353 L1355.29412,225.882353 L1355.29412,564.705882 L1694.11765,564.705882 L1694.11765,225.882353 Z M225.882353,1920 C101.308235,1920 -2.27373675e-13,1818.69176 -2.27373675e-13,1694.11765 L-2.27373675e-13,225.882353 C-2.27373675e-13,101.421176 101.308235,-2.27373675e-13 225.882353,-2.27373675e-13 L1694.11765,-2.27373675e-13 C1818.69176,-2.27373675e-13 1920,101.421176 1920,225.882353 L1920,1694.11765 C1920,1818.69176 1818.69176,1920 1694.11765,1920 L225.882353,1920 Z M806.625882,564.705882 L806.625882,831.021176 L1072.94118,831.021176 L1072.94118,1088.97882 L806.625882,1088.97882 L806.625882,1355.29412 L548.555294,1355.29412 L548.555294,1088.97882 L282.352941,1088.97882 L282.352941,831.021176 L548.555294,831.021176 L548.555294,564.705882 L806.625882,564.705882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableInsertRowAboveLine":{"variant":"Line","glyphName":"table-insert-row-above","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1740,120 L180,120 C147,120 120,146.88 120,180 L120,1200 L1800,1200 L1800,180 C1800,146.88 1773,120 1740,120 Z M1800,1740 L1800,1320 L1320,1320 L1320,1800 L1740,1800 C1773,1800 1800,1773.12 1800,1740 Z M1200,1800 L1200,1320 L720,1320 L720,1800 L1200,1800 Z M120,1740 C120,1773.12 147,1800 180,1800 L600,1800 L600,1320 L120,1320 L120,1740 Z M-1.02665017e-13,180 C-1.02665017e-13,80.76 80.76,0 180,0 L1740,0 C1839.24,0 1920,80.76 1920,180 L1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L180,1920 C80.76,1920 -1.02665017e-13,1839.24 -1.02665017e-13,1740 L-1.02665017e-13,180 Z M510,776.484 L510,536.484 L840,536.484 L840,206.484 L1080,206.484 L1080,536.484 L1410,536.484 L1410,776.484 L1080,776.484 L1080,1106.484 L840,1106.484 L840,776.484 L510,776.484 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableInsertRowAboveSolid":{"variant":"Solid","glyphName":"table-insert-row-above","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.11765,1129.41176 L1694.11765,225.882353 L225.882353,225.882353 L225.882353,1129.41176 L1694.11765,1129.41176 Z M564.705882,1694.11765 L564.705882,1355.29412 L225.882353,1355.29412 L225.882353,1694.11765 L564.705882,1694.11765 Z M1129.41176,1694.11765 L1129.41176,1355.29412 L790.588235,1355.29412 L790.588235,1694.11765 L1129.41176,1694.11765 Z M1694.11765,1694.11765 L1694.11765,1355.29412 L1355.29412,1355.29412 L1355.29412,1694.11765 L1694.11765,1694.11765 Z M-9.98555327e-14,225.882353 C-9.98555327e-14,101.308235 101.308235,0 225.882353,0 L1694.11765,0 C1818.57882,0 1920,101.308235 1920,225.882353 L1920,1694.11765 C1920,1818.69176 1818.57882,1920 1694.11765,1920 L225.882353,1920 C101.308235,1920 -9.98555327e-14,1818.69176 -9.98555327e-14,1694.11765 L-9.98555327e-14,225.882353 Z M1355.29412,806.625882 L1088.97882,806.625882 L1088.97882,1072.94118 L831.021176,1072.94118 L831.021176,806.625882 L564.705882,806.625882 L564.705882,548.555294 L831.021176,548.555294 L831.021176,282.352941 L1088.97882,282.352941 L1088.97882,548.555294 L1355.29412,548.555294 L1355.29412,806.625882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableInsertRowAfterLine":{"variant":"Line","glyphName":"table-insert-row-after","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M180,1800 L1740,1800 C1773,1800 1800,1773.12 1800,1740 L1800,720 L120,720 L120,1740 C120,1773.12 147,1800 180,1800 Z M120,180 L120,600 L600,600 L600,120 L180,120 C147,120 120,146.88 120,180 Z M720,120 L720,600 L1200,600 L1200,120 L720,120 Z M1800,180 C1800,146.88 1773,120 1740,120 L1320,120 L1320,600 L1800,600 L1800,180 Z M1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L180,1920 C80.76,1920 0,1839.24 0,1740 L0,180 C0,80.76 80.76,-1.43283676e-13 180,-1.43283676e-13 L1740,-1.43283676e-13 C1839.24,-1.43283676e-13 1920,80.76 1920,180 L1920,1740 Z M1410,1143.516 L1410,1383.516 L1080,1383.516 L1080,1713.516 L840,1713.516 L840,1383.516 L510,1383.516 L510,1143.516 L840,1143.516 L840,813.516 L1080,813.516 L1080,1143.516 L1410,1143.516 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableInsertRowAfterSolid":{"variant":"Solid","glyphName":"table-insert-row-after","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1694.11765 C1920,1818.69176 1818.69176,1920 1694.11765,1920 L225.882353,1920 C101.421176,1920 -2.27373675e-13,1818.69176 -2.27373675e-13,1694.11765 L-2.27373675e-13,225.882353 C-2.27373675e-13,101.308235 101.421176,-1.34855224e-13 225.882353,-1.34855224e-13 L1694.11765,-1.34855224e-13 C1818.69176,-1.34855224e-13 1920,101.308235 1920,225.882353 L1920,1694.11765 Z M225.882353,790.588235 L225.882353,1694.11765 L1694.11765,1694.11765 L1694.11765,790.588235 L225.882353,790.588235 Z M1355.29412,225.882353 L1355.29412,564.705882 L1694.11765,564.705882 L1694.11765,225.882353 L1355.29412,225.882353 Z M790.588235,225.882353 L790.588235,564.705882 L1129.41176,564.705882 L1129.41176,225.882353 L790.588235,225.882353 Z M225.882353,225.882353 L225.882353,564.705882 L564.705882,564.705882 L564.705882,225.882353 L225.882353,225.882353 Z M564.705882,1113.37412 L831.021176,1113.37412 L831.021176,847.058824 L1088.97882,847.058824 L1088.97882,1113.37412 L1355.29412,1113.37412 L1355.29412,1371.44471 L1088.97882,1371.44471 L1088.97882,1637.64706 L831.021176,1637.64706 L831.021176,1371.44471 L564.705882,1371.44471 L564.705882,1113.37412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableLeftHeaderLine":{"variant":"Line","glyphName":"table-left-header","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1740,0 C1839.24,0 1920,80.76 1920,180 L1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L180,1920 C80.76,1920 0,1839.24 0,1740 L0,180 C0,80.76 80.76,0 180,0 L1740,0 Z M1800,1320 L1320,1320 L1320,1800 L1740,1800 C1773,1800 1800,1773 1800,1740 L1800,1320 Z M1200,1320 L720,1320 L720,1800 L1200,1800 L1200,1320 Z M1800,720 L1320,720 L1320,1200 L1800,1200 L1800,720 Z M1200,720 L720,720 L720,1200 L1200,1200 L1200,720 Z M1740,120 L1320,120 L1320,600 L1800,600 L1800,180 C1800,147 1773,120 1740,120 Z M1200,120 L720,120 L720,600 L1200,600 L1200,120 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableLeftHeaderSolid":{"variant":"Solid","glyphName":"table-left-header","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.11765,0 C1818.69176,0 1920,101.308235 1920,225.882353 L1920,1694.11765 C1920,1818.69176 1818.69176,1920 1694.11765,1920 L225.882353,1920 C101.308235,1920 0,1818.69176 0,1694.11765 L0,225.882353 C0,101.308235 101.308235,0 225.882353,0 L1694.11765,0 Z M1694.34353,1355.29412 L1355.29412,1355.29412 L1355.29412,1694.11765 L1694.34353,1694.11765 L1694.34353,1355.29412 Z M1129.41176,1355.29412 L790.588235,1355.29412 L790.588235,1694.11765 L1129.41176,1694.11765 L1129.41176,1355.29412 Z M1129.41176,790.588235 L790.588235,790.588235 L790.588235,1129.41176 L1129.41176,1129.41176 L1129.41176,790.588235 Z M1694.23059,790.588235 L1355.29412,790.588235 L1355.29412,1129.41176 L1694.23059,1129.41176 L1694.23059,790.588235 Z M1129.41176,225.882353 L790.588235,225.882353 L790.588235,564.705882 L1129.41176,564.705882 L1129.41176,225.882353 Z M1694.11765,225.882353 L1355.29412,225.882353 L1355.29412,564.705882 L1694.11765,564.705882 L1694.11765,225.882353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableMergeCellsLine":{"variant":"Line","glyphName":"table-merge-cells","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1740,0 C1839.24,0 1920,80.76 1920,180 L1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L180,1920 C80.76,1920 0,1839.24 0,1740 L0,180 C0,80.76 80.76,0 180,0 L1740,0 Z M1800,600 L1800,180 C1800,147 1773,120 1740,120 L1320,120 L1320,600 L1800,600 Z M1800,1665 L1800,720 L720,720 L720,1800 L1665,1800 C1739.25,1800 1800,1739.25 1800,1665 Z M720,600 L1200,600 L1200,120 L720,120 L720,600 Z M600,600 L600,120 L180,120 C147,120 120,147 120,180 L120,600 L600,600 Z M120,1200 L600,1200 L600,720 L120,720 L120,1200 Z M600,1800 L600,1320 L120,1320 L120,1740 C120,1773 147,1800 180,1800 L600,1800 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableMergeCellsSolid":{"variant":"Solid","glyphName":"table-merge-cells","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.11765,0 C1818.69176,0 1920,101.308235 1920,225.882353 L1920,1694.11765 C1920,1818.69176 1818.69176,1920 1694.11765,1920 L225.882353,1920 C101.308235,1920 0,1818.69176 0,1694.11765 L0,225.882353 C0,101.308235 101.308235,0 225.882353,0 L1694.11765,0 Z M790.588235,564.705882 L1129.41176,564.705882 L1129.41176,225.882353 L790.588235,225.882353 L790.588235,564.705882 Z M225.882353,564.705882 L564.705882,564.705882 L564.705882,225.882353 L225.882353,225.882353 L225.882353,564.705882 Z M225.882353,1129.41176 L564.705882,1129.41176 L564.705882,790.588235 L225.882353,790.588235 L225.882353,1129.41176 Z M225.882353,1694.11765 L564.705882,1694.11765 L564.705882,1355.29412 L225.882353,1355.29412 L225.882353,1694.11765 Z M790.230588,1694.58824 L1694.23059,1694.58824 L1694.23059,790.588235 L790.230588,790.588235 L790.230588,1694.58824 Z M1355.29412,564.705882 L1694.11765,564.705882 L1694.11765,225.882353 L1355.29412,225.882353 L1355.29412,564.705882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableRowPropertiesLine":{"variant":"Line","glyphName":"table-row-properties","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1740,0 C1839.24,0 1920,80.76 1920,180 L1920,180 L1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L1740,1920 L180,1920 C80.76,1920 0,1839.24 0,1740 L0,1740 L0,180 C0,80.76 80.76,0 180,0 L180,0 Z M1800,1320 L1320,1320 L1320,1800 L1740,1800 C1773,1800 1800,1773 1800,1740 L1800,1740 L1800,1320 Z M1200,1320 L720,1320 L720,1800 L1200,1800 L1200,1320 Z M600,1320 L120,1320 L120,1740 C120,1773 147,1800 180,1800 L180,1800 L600,1800 L600,1320 Z M1740,120 L1320,120 L1320,600 L1800,600 L1800,180 C1800,147 1773,120 1740,120 L1740,120 Z M1200,120 L720,120 L720,600 L1200,600 L1200,120 Z M600,120 L180,120 C147,120 120,147 120,180 L120,180 L120,600 L600,600 L600,120 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableRowPropertiesSolid":{"variant":"Solid","glyphName":"table-row-properties","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.11765,2.84217094e-14 C1818.69176,2.84217094e-14 1920,101.308235 1920,225.882353 L1920,225.882353 L1920,1694.11765 C1920,1818.69176 1818.69176,1920 1694.11765,1920 L1694.11765,1920 L225.882353,1920 C101.308235,1920 2.84217094e-14,1818.69176 2.84217094e-14,1694.11765 L2.84217094e-14,1694.11765 L2.84217094e-14,225.882353 C2.84217094e-14,101.308235 101.308235,2.84217094e-14 225.882353,2.84217094e-14 L225.882353,2.84217094e-14 Z M1694.34353,1355.29412 L1355.29412,1355.29412 L1355.29412,1694.11765 L1694.34353,1694.11765 L1694.34353,1355.29412 Z M1129.41176,1355.29412 L790.588235,1355.29412 L790.588235,1694.11765 L1129.41176,1694.11765 L1129.41176,1355.29412 Z M564.705882,1355.29412 L225.882353,1355.29412 L225.882353,1694.11765 L564.705882,1694.11765 L564.705882,1355.29412 Z M1129.41176,225.882353 L790.588235,225.882353 L790.588235,564.705882 L1129.41176,564.705882 L1129.41176,225.882353 Z M564.705882,225.882353 L225.882353,225.882353 L225.882353,564.705882 L564.705882,564.705882 L564.705882,225.882353 Z M1694.11765,225.882353 L1355.29412,225.882353 L1355.29412,564.705882 L1694.11765,564.705882 L1694.11765,225.882353 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableSplitCellsLine":{"variant":"Line","glyphName":"table-split-cells","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1740,0 C1839.24,0 1920,80.76 1920,180 L1920,180 L1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L1740,1920 L180,1920 C80.76,1920 0,1839.24 0,1740 L0,1740 L0,180 C0,80.76 80.76,0 180,0 L180,0 Z M1800,720 L720,720 L720,1800 L1665,1800 C1739.25,1800 1800,1739.25 1800,1665 L1800,1665 L1800,720 Z M600,1320 L120,1320 L120,1740 C120,1773 147,1800 180,1800 L180,1800 L600,1800 L600,1320 Z M600,720 L120,720 L120,1200 L600,1200 L600,720 Z M1740,120 L1320,120 L1320,600 L1800,600 L1800,180 C1800,147 1773,120 1740,120 L1740,120 Z M1200,120 L720,120 L720,600 L1200,600 L1200,120 Z M600,120 L180,120 C147,120 120,147 120,180 L120,180 L120,600 L600,600 L600,120 Z M1734,961.558504 L1564.4415,792 L1259.5,1096.9415 L954.558504,792 L785,961.558504 L1089.9415,1266.5 L785,1571.4415 L954.558504,1741 L1259.5,1436.0585 L1564.4415,1741 L1734,1571.4415 L1429.0585,1266.5 L1734,961.558504 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableSplitCellsSolid":{"variant":"Solid","glyphName":"table-split-cells","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.11765,2.84217094e-14 C1818.69176,2.84217094e-14 1920,101.308235 1920,225.882353 L1920,225.882353 L1920,1694.11765 C1920,1818.69176 1818.69176,1920 1694.11765,1920 L1694.11765,1920 L225.882353,1920 C101.308235,1920 2.84217094e-14,1818.69176 2.84217094e-14,1694.11765 L2.84217094e-14,1694.11765 L2.84217094e-14,225.882353 C2.84217094e-14,101.308235 101.308235,2.84217094e-14 225.882353,2.84217094e-14 L225.882353,2.84217094e-14 Z M1694.23059,790.588235 L790.230588,790.588235 L790.230588,1694.58824 L1694.23059,1694.58824 L1694.23059,790.588235 Z M564.705882,1355.29412 L225.882353,1355.29412 L225.882353,1694.11765 L564.705882,1694.11765 L564.705882,1355.29412 Z M564.705882,790.588235 L225.882353,790.588235 L225.882353,1129.41176 L564.705882,1129.41176 L564.705882,790.588235 Z M1129.41176,225.882353 L790.588235,225.882353 L790.588235,564.705882 L1129.41176,564.705882 L1129.41176,225.882353 Z M564.705882,225.882353 L225.882353,225.882353 L225.882353,564.705882 L564.705882,564.705882 L564.705882,225.882353 Z M1694.11765,225.882353 L1355.29412,225.882353 L1355.29412,564.705882 L1694.11765,564.705882 L1694.11765,225.882353 Z M1442.17829,849 L1238.9536,1052.22468 L1035.91451,849 L839,1045.82171 L1042.22468,1249.0464 L839,1452.17829 L1035.91451,1649 L1238.9536,1445.77532 L1442.17829,1649 L1639,1452.17829 L1435.86811,1249.0464 L1639,1045.82171 L1442.17829,849 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableTopHeaderLine":{"variant":"Line","glyphName":"table-top-header","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1740,0 C1839.24,0 1920,80.76 1920,180 L1920,1740 C1920,1839.24 1839.24,1920 1740,1920 L180,1920 C80.76,1920 0,1839.24 0,1740 L0,180 C0,80.76 80.76,0 180,0 L1740,0 Z M1320,1200 L1800,1200 L1800,720 L1320,720 L1320,1200 Z M1800,1740 L1800,1320 L1320,1320 L1320,1800 L1740,1800 C1773,1800 1800,1773 1800,1740 Z M720,1200 L1200,1200 L1200,720 L720,720 L720,1200 Z M720,1800 L1200,1800 L1200,1320 L720,1320 L720,1800 Z M120,1200 L600,1200 L600,720 L120,720 L120,1200 Z M600,1800 L600,1320 L120,1320 L120,1740 C120,1773 147,1800 180,1800 L600,1800 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableTopHeaderSolid":{"variant":"Solid","glyphName":"table-top-header","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.11765,0 C1818.69176,0 1920,101.308235 1920,225.882353 L1920,1694.11765 C1920,1818.69176 1818.69176,1920 1694.11765,1920 L225.882353,1920 C101.308235,1920 0,1818.69176 0,1694.11765 L0,225.882353 C0,101.308235 101.308235,0 225.882353,0 L1694.11765,0 Z M1355.29412,1694.11765 L1694.34353,1694.11765 L1694.34353,1355.29412 L1355.29412,1355.29412 L1355.29412,1694.11765 Z M790.588235,1129.41176 L1129.41176,1129.41176 L1129.41176,790.588235 L790.588235,790.588235 L790.588235,1129.41176 Z M790.588235,1694.11765 L1129.41176,1694.11765 L1129.41176,1355.29412 L790.588235,1355.29412 L790.588235,1694.11765 Z M225.882353,1129.41176 L564.705882,1129.41176 L564.705882,790.588235 L225.882353,790.588235 L225.882353,1129.41176 Z M225.882353,1694.11765 L564.705882,1694.11765 L564.705882,1355.29412 L225.882353,1355.29412 L225.882353,1694.11765 Z M1355.29412,1129.41176 L1694.23059,1129.41176 L1694.23059,790.588235 L1355.29412,790.588235 L1355.29412,1129.41176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableLine":{"variant":"Line","glyphName":"table","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1800,1320 L1800,1740 C1800,1773 1773,1800 1740,1800 L1320,1800 L1320,1320 L1800,1320 Z M1200,1320 L1200,1800 L720,1800 L720,1320 L1200,1320 Z M600,1320 L600,1800 L180,1800 C147,1800 120,1773 120,1740 L120,1320 L600,1320 Z M1800,720 L1800,1200 L1320,1200 L1320,720 L1800,720 Z M1200,720 L1200,1200 L720,1200 L720,720 L1200,720 Z M600,720 L600,1200 L120,1200 L120,720 L600,720 Z M1740,120 C1773,120 1800,147 1800,180 L1800,600 L1320,600 L1320,120 L1740,120 Z M1200,120 L1200,600 L720,600 L720,120 L1200,120 Z M600,120 L600,600 L120,600 L120,180 C120,147 147,120 180,120 L600,120 Z M1740,0 L180,0 C80.76,0 0,80.76 0,180 L0,1740 C0,1839.24 80.76,1920 180,1920 L1740,1920 C1839.24,1920 1920,1839.24 1920,1740 L1920,180 C1920,80.76 1839.24,0 1740,0 L1740,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTableSolid":{"variant":"Solid","glyphName":"table","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.34353,1355.29412 L1694.34353,1694.11765 L1355.29412,1694.11765 L1355.29412,1355.29412 L1694.34353,1355.29412 Z M1129.41176,1355.29412 L1129.41176,1694.11765 L790.588235,1694.11765 L790.588235,1355.29412 L1129.41176,1355.29412 Z M564.705882,1355.29412 L564.705882,1694.11765 L225.882353,1694.11765 L225.882353,1355.29412 L564.705882,1355.29412 Z M1129.41176,790.588235 L1129.41176,1129.41176 L790.588235,1129.41176 L790.588235,790.588235 L1129.41176,790.588235 Z M564.705882,790.588235 L564.705882,1129.41176 L225.882353,1129.41176 L225.882353,790.588235 L564.705882,790.588235 Z M1694.23059,790.588235 L1694.23059,1129.41176 L1355.29412,1129.41176 L1355.29412,790.588235 L1694.23059,790.588235 Z M1129.41176,225.882353 L1129.41176,564.705882 L790.588235,564.705882 L790.588235,225.882353 L1129.41176,225.882353 Z M564.705882,225.882353 L564.705882,564.705882 L225.882353,564.705882 L225.882353,225.882353 L564.705882,225.882353 Z M1694.11765,225.882353 L1694.11765,564.705882 L1355.29412,564.705882 L1355.29412,225.882353 L1694.11765,225.882353 Z M1694.11765,5.04870979e-29 L225.882353,5.04870979e-29 C101.308235,5.04870979e-29 0,101.308235 0,225.882353 L0,1694.11765 C0,1818.69176 101.308235,1920 225.882353,1920 L1694.11765,1920 C1818.69176,1920 1920,1818.69176 1920,1694.11765 L1920,225.882353 C1920,101.308235 1818.69176,5.04870979e-29 1694.11765,5.04870979e-29 L1694.11765,5.04870979e-29 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTagLine":{"variant":"Line","glyphName":"tag","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1152.82133,372.968 C1150.368,390.461333 1148.128,408.061333 1148.128,426.301333 C1148.128,444.541333 1150.368,462.461333 1153.03467,480.274667 C1096.82133,478.994667 1040.07467,499.368 997.301333,542.141333 C914.208,625.234667 914.208,760.701333 997.301333,843.794667 C1038.90133,885.394667 1093.51467,906.194667 1148.128,906.194667 C1202.74133,906.194667 1257.35467,885.394667 1298.95467,843.794667 C1382.048,760.701333 1382.048,625.234667 1298.95467,542.141333 C1290.74133,533.928 1281.568,526.994667 1272.39467,520.488 L1271.648,518.461333 C1260.55467,488.594667 1254.79467,457.554667 1254.79467,426.301333 C1254.79467,407.848 1257.14133,390.248 1260.98133,372.968 L1414.79467,372.968 C1444.128,372.968 1468.128,396.968 1468.128,426.301333 L1468.128,1051.79467 L829.728,1690.30133 L150.794667,1011.368 L789.301333,372.968 L1152.82133,372.968 Z M1148.128,586.408 C1162.95467,586.408 1177.35467,590.034667 1191.11467,596.114667 C1207.11467,627.794667 1227.59467,656.594667 1252.55467,682.194667 C1255.86133,713.021333 1247.11467,744.808 1223.54133,768.381333 C1181.83467,810.088 1114.42133,810.088 1072.71467,768.381333 C1031.11467,726.781333 1031.11467,659.154667 1072.71467,617.554667 C1093.51467,596.754667 1120.82133,586.408 1148.128,586.408 Z M1521.46133,52.968 C1375.22133,52.968 1244.98133,138.301333 1185.78133,266.301333 L745.141333,266.301333 L-0.032,1011.368 L829.728,1841.128 L1574.79467,1095.95467 L1574.79467,426.301333 C1574.79467,338.088 1503.008,266.301333 1414.79467,266.301333 L1308.448,266.301333 C1357.30133,200.594667 1435.59467,159.634667 1521.46133,159.634667 C1668.55467,159.634667 1788.128,279.208 1788.128,426.301333 L1894.79467,426.301333 C1894.79467,220.434667 1727.328,52.968 1521.46133,52.968 L1521.46133,52.968 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTagSolid":{"variant":"Solid","glyphName":"tag","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1521.46133,53 C1417.99467,53 1321.99467,95.6666667 1254.79467,166.066667 C1217.46133,203.4 1188.66133,249.266667 1170.528,300.466667 C1155.59467,338.866667 1148.128,381.533333 1148.128,426.333333 C1148.128,445.64 1150.15467,464.733333 1153.46133,483.72 C1156.23467,501.64 1160.71467,519.026667 1165.83467,536.306667 L1165.83467,536.413333 C1167.648,542.386667 1168.50133,548.573333 1170.528,554.333333 C1173.728,562.866667 1177.99467,572.466667 1180.128,575.666667 C1181.19467,578.866667 1183.328,583.133333 1185.46133,586.333333 C1204.66133,630.066667 1232.39467,668.466667 1270.79467,701.533333 C1272.288,702.813333 1284.23467,711.666667 1302.15467,723.293333 C1296.39467,753.48 1284.55467,782.813333 1261.30133,806.173333 C1198.79467,868.573333 1097.46133,868.573333 1034.95467,806.173333 C972.554667,743.666667 972.554667,642.333333 1034.95467,579.826667 C1043.38133,571.506667 1053.728,567.133333 1063.328,561.053333 C1050.31467,518.813333 1041.46133,472.733333 1041.46133,426.333333 C1041.46133,370.333333 1050.95467,316.36 1070.15467,266.333333 L745.141333,266.333333 L-0.032,1011.4 L829.728,1841.16 L1574.79467,1095.98667 L1574.79467,426.333333 C1574.79467,338.12 1503.008,266.333333 1414.79467,266.333333 L1308.23467,266.333333 C1357.19467,200.733333 1435.91467,159.666667 1521.46133,159.666667 C1668.66133,159.666667 1788.128,279.133333 1788.128,426.333333 L1894.79467,426.333333 C1894.79467,220.466667 1727.328,53 1521.46133,53\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTargetLine":{"variant":"Line","glyphName":"target","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1691.24894,1016.47059 C1663.69129,1376.18824 1376.14306,1663.62353 1016.42541,1691.29412 L1016.42541,1468.23529 L903.484235,1468.23529 L903.484235,1691.29412 C543.766588,1663.62353 256.331294,1376.18824 228.773647,1016.47059 L451.719529,1016.47059 L451.719529,903.529412 L228.773647,903.529412 C256.331294,543.811765 543.766588,256.376471 903.484235,228.705882 L903.484235,451.764706 L1016.42541,451.764706 L1016.42541,228.705882 C1376.14306,256.376471 1663.69129,543.811765 1691.24894,903.529412 L1468.19012,903.529412 L1468.19012,1016.47059 L1691.24894,1016.47059 Z M1804.19012,903.529412 C1776.18071,481.581176 1438.48659,143.774118 1016.42541,115.764706 L1016.42541,0 L903.484235,0 L903.484235,115.764706 C481.536,143.774118 143.841882,481.581176 115.832471,903.529412 L-0.0451764706,903.529412 L-0.0451764706,1016.47059 L115.832471,1016.47059 C143.841882,1438.41882 481.536,1776.22588 903.484235,1804.23529 L903.484235,1920 L1016.42541,1920 L1016.42541,1804.23529 C1438.48659,1776.22588 1776.18071,1438.41882 1804.19012,1016.47059 L1919.95482,1016.47059 L1919.95482,903.529412 L1804.19012,903.529412 Z M960,1242.35294 C804.367059,1242.35294 677.647059,1115.63294 677.647059,960 C677.647059,804.367059 804.367059,677.647059 960,677.647059 C1115.63294,677.647059 1242.35294,804.367059 1242.35294,960 C1242.35294,1115.63294 1115.63294,1242.35294 960,1242.35294 M960,564.705882 C742.023529,564.705882 564.705882,742.023529 564.705882,960 C564.705882,1177.97647 742.023529,1355.29412 960,1355.29412 C1177.97647,1355.29412 1355.29412,1177.97647 1355.29412,960 C1355.29412,742.023529 1177.97647,564.705882 960,564.705882\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTargetSolid":{"variant":"Solid","glyphName":"target","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1691.24894,1016.47059 C1663.69129,1376.18824 1376.14306,1663.62353 1016.42541,1691.29412 L1016.42541,1468.23529 L903.484235,1468.23529 L903.484235,1691.29412 C543.766588,1663.62353 256.331294,1376.18824 228.773647,1016.47059 L451.719529,1016.47059 L451.719529,903.529412 L228.773647,903.529412 C256.331294,543.811765 543.766588,256.376471 903.484235,228.705882 L903.484235,451.764706 L1016.42541,451.764706 L1016.42541,228.705882 C1376.14306,256.376471 1663.69129,543.811765 1691.24894,903.529412 L1468.19012,903.529412 L1468.19012,1016.47059 L1691.24894,1016.47059 Z M1804.19012,903.529412 C1776.18071,481.581176 1438.48659,143.774118 1016.42541,115.764706 L1016.42541,0 L903.484235,0 L903.484235,115.764706 C481.536,143.774118 143.841882,481.581176 115.832471,903.529412 L-0.0451764706,903.529412 L-0.0451764706,1016.47059 L115.832471,1016.47059 C143.841882,1438.41882 481.536,1776.22588 903.484235,1804.23529 L903.484235,1920 L1016.42541,1920 L1016.42541,1804.23529 C1438.48659,1776.22588 1776.18071,1438.41882 1804.19012,1016.47059 L1919.95482,1016.47059 L1919.95482,903.529412 L1804.19012,903.529412 Z M960,564.705882 C742.023529,564.705882 564.705882,742.023529 564.705882,960 C564.705882,1177.97647 742.023529,1355.29412 960,1355.29412 C1177.97647,1355.29412 1355.29412,1177.97647 1355.29412,960 C1355.29412,742.023529 1177.97647,564.705882 960,564.705882\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextBackgroundColorLine":{"variant":"Line","glyphName":"text-background-color","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M742.8096,1024.0512 L928.7936,512.0512 L991.1296,512.0512 L1177.2416,1024.0512 L742.8096,1024.0512 Z M1347.8656,1493.9392 L1468.1856,1450.1632 L1080.8576,384.0512 L839.1936,384.0512 L451.8656,1450.1632 L572.1856,1493.9392 L696.3456,1152.0512 L1223.7056,1152.0512 L1347.8656,1493.9392 Z M1792,1728.0512 C1792,1763.2512 1763.328,1792.0512 1728,1792.0512 L192,1792.0512 C156.672,1792.0512 128,1763.2512 128,1728.0512 L128,192.0512 C128,156.8512 156.672,128.0512 192,128.0512 L1728,128.0512 C1763.328,128.0512 1792,156.8512 1792,192.0512 L1792,1728.0512 Z M1728,0.0512 L192,0.0512 C86.144,0.0512 5.68434189e-14,86.1952 5.68434189e-14,192.0512 L5.68434189e-14,1728.0512 C5.68434189e-14,1833.9072 86.144,1920.0512 192,1920.0512 L1728,1920.0512 C1833.856,1920.0512 1920,1833.9072 1920,1728.0512 L1920,192.0512 C1920,86.1952 1833.856,0.0512 1728,0.0512 L1728,0.0512 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextBackgroundColorSolid":{"variant":"Solid","glyphName":"text-background-color","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M928.8064,512 L742.8224,1024 L1177.1264,1024 L991.1424,512 L928.8064,512 Z M1347.8784,1493.8752 L1223.7184,1151.9872 L696.3584,1151.9872 L572.0704,1493.8752 L451.8784,1450.0992 L839.2064,383.9872 L1080.8704,383.9872 L1468.0704,1450.0992 L1347.8784,1493.8752 Z M1728.0384,-0.0128 L192.0384,-0.0128 C86.1824,-0.0128 0.0384,86.1312 0.0384,191.9872 L0.0384,1727.9872 C0.0384,1833.8432 86.1824,1919.9872 192.0384,1919.9872 L1728.0384,1919.9872 C1833.8944,1919.9872 1920.0384,1833.8432 1920.0384,1727.9872 L1920.0384,191.9872 C1920.0384,86.1312 1833.8944,-0.0128 1728.0384,-0.0128 L1728.0384,-0.0128 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextCenteredLine":{"variant":"Line","glyphName":"text-centered","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1664,1664 L1664,1792 L256,1792 L256,1664 L1664,1664 Z M1920,1280 L1920,1408 L0,1408 L0,1280 L1920,1280 Z M1792.128,896 L1792.128,1024 L128,1024 L128,896 L1792.128,896 Z M1920,512 L1920,640 L0,640 L0,512 L1920,512 Z M1664,128 L1664,256 L256,256 L256,128 L1664,128 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextCenteredSolid":{"variant":"Solid","glyphName":"text-centered","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1664,1600.128 L1664,1856.128 L256,1856.128 L256,1600.128 L1664,1600.128 Z M1920,1216 L1920,1472.128 L0,1472.128 L0,1216 L1920,1216 Z M1792,832.128 L1792,1088.128 L128,1088.128 L128,832.128 L1792,832.128 Z M1920,448.128 L1920,704.128 L0,704.128 L0,448.128 L1920,448.128 Z M1664,64 L1664,320.128 L256,320.128 L256,64 L1664,64 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextColorLine":{"variant":"Line","glyphName":"text-color","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1846.30769,1476.92308 L1846.30769,1920 L74,1920 L74,1476.92308 L1846.30769,1476.92308 Z M1698.61538,1624.61538 L221.692308,1624.61538 L221.692308,1772.30769 L1698.61538,1772.30769 L1698.61538,1624.61538 Z M1109.75138,0.0590769231 L1619.14215,1227.08677 L1482.67446,1283.65292 L1317.70215,886.065231 L602.576,886.065231 L437.603692,1283.65292 L301.136,1227.08677 L810.526769,0.0590769231 L1109.75138,0.0590769231 Z M1011.09292,147.751385 L909.332923,147.751385 L663.868308,738.372923 L1256.40985,738.372923 L1011.09292,147.751385 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextColorSolid":{"variant":"Solid","glyphName":"text-color","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M74 1920L1846.30769 1920 1846.30769 1476.92308 74 1476.92308zM1109.75138.0590769231L1619.14215 1227.08677 1482.67446 1283.65292 1317.70215 886.065231 602.576 886.065231 437.603692 1283.65292 301.136 1227.08677 810.526769.0590769231 1109.75138.0590769231zM1011.09292 147.751385L909.332923 147.751385 663.868308 738.372923 1256.40985 738.372923 1011.09292 147.751385z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextDirectionLtrLine":{"variant":"Line","glyphName":"text-direction-ltr","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1384.15184,1232.85621 L1654.44497,1503.07551 L288.974957,1503.07551 L288.974957,1588.96848 L1654.44497,1588.96848 L1384.15184,1859.27367 L1444.89477,1920 L1818.97496,1546.10789 L1444.89477,1172.21577 L1384.15184,1232.85621 Z M650.966702,85.8929738 L813.864276,85.8929738 L813.864276,629.509605 L650.966702,629.509605 C501.04251,629.509605 379.041163,507.627475 379.041163,357.744236 C379.041163,207.775104 501.04251,85.8929738 650.966702,85.8929738 M650.966702,715.402579 L813.864276,715.402579 L813.864276,1256.18474 L899.780718,1256.18474 L899.780718,85.8929738 L1125.65504,85.8929738 L1125.65504,1256.18474 L1211.57149,1256.18474 L1211.57149,85.8929738 L1377.47614,85.8929738 L1377.47614,0 L650.966702,0 C453.702551,0 293.124721,160.448075 293.124721,357.744236 C293.124721,554.954504 453.702551,715.402579 650.966702,715.402579\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextDirectionLtrSolid":{"variant":"Solid","glyphName":"text-direction-ltr","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M306.204615,1607.00929 L1596.80189,1607.00929 L1403.20385,1800.61266 L1522.5879,1920 L1920,1522.57695 L1522.5879,1125.15389 L1403.20385,1244.54123 L1596.80189,1438.1446 L306.204615,1438.1446 L306.204615,1607.00929 Z M695.866039,787.669359 L729.215897,787.669359 L729.215897,1234.82307 L898.075935,1234.82307 L898.075935,168.864693 L1094.79788,168.864693 L1094.79788,1234.82307 L1263.65792,1234.82307 L1263.65792,168.864693 L1435.05086,168.864693 L1435.05086,0 L695.866039,0 C478.71203,0 302,176.632469 302,393.792464 C302,611.036891 478.71203,787.669359 695.866039,787.669359\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextDirectionRtlLine":{"variant":"Line","glyphName":"text-direction-rtl","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M188,1544.88673 L561.6325,1918.48769 L622.4025,1857.80864 L352.285,1587.71395 L1725.0175,1587.71395 L1725.0175,1501.97369 L352.285,1501.97369 L622.4025,1231.87899 L561.6325,1171.28577 L188,1544.88673 Z M755.598667,85.826087 L918.338667,85.826087 L918.338667,629.019391 L755.598667,629.019391 C605.8195,629.019391 483.936167,507.232174 483.936167,357.465652 C483.936167,207.613304 605.8195,85.826087 755.598667,85.826087 M755.598667,714.845478 L918.338667,714.845478 L918.338667,1255.20652 L1004.172,1255.20652 L1004.172,85.826087 L1229.82783,85.826087 L1229.82783,1255.20652 L1315.66117,1255.20652 L1315.66117,85.826087 L1481.40533,85.826087 L1481.40533,0 L755.598667,0 C558.525333,0 398.102833,160.32313 398.102833,357.465652 C398.102833,554.522348 558.525333,714.845478 755.598667,714.845478\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextDirectionRtlSolid":{"variant":"Solid","glyphName":"text-direction-rtl","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M822.455512,787.785569 L855.793458,787.785569 L855.793458,1235.00525 L1024.59318,1235.00525 L1024.59318,168.889606 L1221.24486,168.889606 L1221.24486,1235.00525 L1390.04459,1235.00525 L1390.04459,168.889606 L1561.37631,168.889606 L1561.37631,0 L822.455512,0 C605.379066,0 428.730154,176.658528 428.730154,393.850562 C428.730154,611.127041 605.379066,787.785569 822.455512,787.785569 M1771.984,1438.17535 L523.26841,1438.17535 L716.918136,1244.58434 L597.502212,1125.20462 L199.984,1522.60231 L597.502212,1920 L716.918136,1800.62028 L523.26841,1607.02927 L1771.984,1607.02927 L1771.984,1438.17535 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextEndLine":{"variant":"Line","glyphName":"text-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1663.89761 L1920,1791.88907 L255.982934,1791.88907 L255.982934,1663.89761 L1920,1663.89761 Z M1919.87201,1279.92321 L1919.87201,1407.91467 L0,1407.91467 L0,1279.92321 L1919.87201,1279.92321 Z M1920,895.948803 L1920,1023.94027 L255.982934,1023.94027 L255.982934,895.948803 L1920,895.948803 Z M1919.87201,511.974402 L1919.87201,639.965869 L0,639.965869 L0,511.974402 L1919.87201,511.974402 Z M1920,128 L1920,255.991467 L255.982934,255.991467 L255.982934,128 L1920,128 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextEndSolid":{"variant":"Solid","glyphName":"text-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920.128,1600 L1920.128,1856 L256,1856 L256,1600 L1920.128,1600 Z M1920,1215.872 L1920,1472 L-2.5243549e-29,1472 L-2.5243549e-29,1215.872 L1920,1215.872 Z M1920.128,832 L1920.128,1088 L256,1088 L256,832 L1920.128,832 Z M1920,448 L1920,704 L-2.5243549e-29,704 L-2.5243549e-29,448 L1920,448 Z M1920.128,63.872 L1920.128,320 L256,320 L256,63.872 L1920.128,63.872 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextLeftLine":{"variant":"Line","glyphName":"text-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1664,1664 L1664,1792 L0,1792 L0,1664 L1664,1664 Z M1920,1280 L1920,1408 L0,1408 L0,1280 L1920,1280 Z M1664,896 L1664,1024 L0,1024 L0,896 L1664,896 Z M1920,512 L1920,640 L0,640 L0,512 L1920,512 Z M1664,128 L1664,256 L0,256 L0,128 L1664,128 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconTextLeftSolid":{"variant":"Solid","glyphName":"text-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1664,1600 L1664,1856 L0,1856 L0,1600 L1664,1600 Z M1920,1215.872 L1920,1472 L0,1472 L0,1215.872 L1920,1215.872 Z M1664,832 L1664,1088 L0,1088 L0,832 L1664,832 Z M1920,448 L1920,704 L0,704 L0,448 L1920,448 Z M1664,63.872 L1664,320 L0,320 L0,63.872 L1664,63.872 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconTextRightLine":{"variant":"Line","glyphName":"text-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1663.89761 L1920,1791.88907 L255.982934,1791.88907 L255.982934,1663.89761 L1920,1663.89761 Z M1919.87201,1279.92321 L1919.87201,1407.91467 L0,1407.91467 L0,1279.92321 L1919.87201,1279.92321 Z M1920,895.948803 L1920,1023.94027 L255.982934,1023.94027 L255.982934,895.948803 L1920,895.948803 Z M1919.87201,511.974402 L1919.87201,639.965869 L0,639.965869 L0,511.974402 L1919.87201,511.974402 Z M1920,128 L1920,255.991467 L255.982934,255.991467 L255.982934,128 L1920,128 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconTextRightSolid":{"variant":"Solid","glyphName":"text-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920.128,1600 L1920.128,1856 L256,1856 L256,1600 L1920.128,1600 Z M1920,1215.872 L1920,1472 L-2.5243549e-29,1472 L-2.5243549e-29,1215.872 L1920,1215.872 Z M1920.128,832 L1920.128,1088 L256,1088 L256,832 L1920.128,832 Z M1920,448 L1920,704 L-2.5243549e-29,704 L-2.5243549e-29,448 L1920,448 Z M1920.128,63.872 L1920.128,320 L256,320 L256,63.872 L1920.128,63.872 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconTextStartLine":{"variant":"Line","glyphName":"text-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1664,1664 L1664,1792 L0,1792 L0,1664 L1664,1664 Z M1920,1280 L1920,1408 L0,1408 L0,1280 L1920,1280 Z M1664,896 L1664,1024 L0,1024 L0,896 L1664,896 Z M1920,512 L1920,640 L0,640 L0,512 L1920,512 Z M1664,128 L1664,256 L0,256 L0,128 L1664,128 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextStartSolid":{"variant":"Solid","glyphName":"text-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1664,1600 L1664,1856 L0,1856 L0,1600 L1664,1600 Z M1920,1215.872 L1920,1472 L0,1472 L0,1215.872 L1920,1215.872 Z M1664,832 L1664,1088 L0,1088 L0,832 L1664,832 Z M1920,448 L1920,704 L0,704 L0,448 L1920,448 Z M1664,63.872 L1664,320 L0,320 L0,63.872 L1664,63.872 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextSubscriptLine":{"variant":"Line","glyphName":"text-subscript","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1543.86059,983 C1642.5128,983 1733.91319,1043.3435 1771.13012,1133.243 C1807.93656,1222.18467 1783.71819,1321.6625 1706.27415,1399.11017 C1615.96838,1489.42017 1493.23463,1600.11833 1417.84299,1667.16667 L1417.84299,1667.16667 L1783.30771,1667.16667 L1783.30771,1804 L1304.41346,1804 C1266.64923,1804 1236,1773.34933 1236,1735.58333 L1236,1735.58333 L1236,1675.65033 C1236,1655.94633 1244.6201,1637.06333 1259.53423,1624.06417 C1261.72346,1622.1485 1475.99443,1435.91833 1609.53751,1302.369 C1648.12271,1263.782 1660.3003,1223.41617 1644.70204,1185.51333 C1628.69328,1146.7895 1587.23473,1119.83333 1543.86059,1119.83333 C1443.70328,1119.83333 1359.9652,1228.34217 1359.00741,1229.57367 L1359.00741,1229.57367 L1249.68269,1147.2 C1254.74529,1140.49517 1374.87933,983 1543.86059,983 Z M1373,162 L1373,298.8 L825.888889,298.8 L825.888889,1530 L689.111111,1530 L689.111111,298.8 L142,298.8 L142,162 L1373,162 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextSubscriptSolid":{"variant":"Solid","glyphName":"text-subscript","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1469.70084,963 C1595.52646,963 1711.92542,1040.38029 1759.60527,1155.357 C1807.42174,1270.60714 1777.63891,1397.88814 1680.09331,1495.50214 C1647.63276,1527.98546 1611.16568,1562.91196 1574.20934,1597.52524 L1569.16713,1602.24303 C1553.19265,1617.17491 1537.15674,1632.02503 1521.34263,1646.57143 L1521.34263,1646.57143 L1777.09243,1646.57143 L1777.09243,1920 L1230.61849,1920 C1155.06846,1920 1094,1858.88871 1094,1783.28571 L1094,1783.28571 L1094,1723.54157 C1094,1683.89443 1111.21393,1646.298 1140.99676,1620.32229 C1143.04604,1618.40829 1355.35116,1433.844 1486.91477,1302.18814 C1496.88792,1292.208 1512.73566,1273.47814 1507.1343,1259.94343 C1502.48928,1248.59614 1486.91477,1236.42857 1469.70084,1236.42857 C1419.69847,1236.42857 1360.13281,1292.34471 1339.3668,1319.41414 L1339.3668,1319.41414 L1121.3237,1154.53671 C1136.07849,1134.84986 1270.51108,963 1469.70084,963 Z M1094,142 L1094,415.454545 L683.75,415.454545 L683.75,1646 L410.25,1646 L410.25,415.454545 L0,415.454545 L0,142 L1094,142 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextSuperscriptLine":{"variant":"Line","glyphName":"text-superscript","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1231.31354,481.451526 L1231.31354,618.264141 L684.063075,618.264141 L684.063075,1849.57768 L547.25046,1849.57768 L547.25046,618.264141 L0,618.264141 L0,481.451526 L1231.31354,481.451526 Z M1675.88613,71 C1774.52802,71 1865.91885,131.334363 1903.13188,221.220251 C1939.93448,310.148451 1915.71864,409.611222 1838.2827,487.047162 C1747.98638,577.343488 1625.26546,688.024894 1549.88171,755.063075 L1549.88171,755.063075 L1915.3082,755.063075 L1915.3082,891.87569 L1436.46405,891.87569 C1398.70377,891.87569 1368.05774,861.229665 1368.05774,823.469383 L1368.05774,823.469383 L1368.05774,763.545457 C1368.05774,743.844441 1376.67694,724.9643 1391.58951,711.967101 C1393.77852,710.051725 1608.02707,523.849756 1741.55618,390.320644 C1780.13734,351.739486 1792.31366,311.379765 1776.71703,273.48267 C1760.70995,234.7647 1719.25573,207.812615 1675.88613,207.812615 C1575.73929,207.812615 1492.00997,316.305019 1491.05229,317.536332 L1491.05229,317.536332 L1381.73901,235.175138 C1386.80107,228.47132 1506.92255,71 1675.88613,71 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextSuperscriptSolid":{"variant":"Solid","glyphName":"text-superscript","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1094.33497,415.47137 L1094.33497,689.055113 L683.959359,689.055113 L683.959359,1920.18196 L410.375615,1920.18196 L410.375615,689.055113 L0,689.055113 L0,415.47137 L1094.33497,415.47137 Z M1607.30449,5 C1733.28981,5 1849.83648,82.4241994 1897.57685,197.466164 C1945.454,312.781712 1915.63337,440.134944 1817.96398,537.804341 C1769.95003,585.818288 1713.1814,639.167118 1659.01182,688.959359 L1659.01182,688.959359 L1915.0862,688.959359 L1915.0862,962.543102 L1367.91872,962.543102 C1292.27281,962.543102 1231.12685,901.397136 1231.12685,825.751231 L1231.12685,825.751231 L1231.12685,765.973183 C1231.12685,726.30354 1248.36262,688.685775 1278.18325,662.69532 C1278.32688,662.561263 1279.50207,661.531713 1281.60889,659.687511 L1283.64055,657.909145 C1317.84371,627.96861 1504.66545,464.255455 1624.54027,344.380634 C1634.52608,334.394827 1650.39393,315.654341 1644.78547,302.111946 C1640.13454,290.75822 1624.54027,278.583744 1607.30449,278.583744 C1557.23867,278.583744 1497.59741,334.531619 1476.80505,361.61641 L1476.80505,361.61641 L1258.48522,196.645412 C1273.25874,176.947383 1407.86194,5 1607.30449,5 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextLine":{"variant":"Line","glyphName":"text","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M247 0L1673.28571 0 1673.28571 501.942857 1470.31429 501.942857 1470.31429 202.971429 1072.6 202.971429 1072.6 1717.02857 1374.31429 1717.02857 1374.31429 1920 543.228571 1920 543.228571 1717.02857 844.942857 1717.02857 844.942857 202.971429 449.971429 202.971429 449.971429 501.942857 247 501.942857z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextSolid":{"variant":"Solid","glyphName":"text","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M460.342857 1618.28571L773.028571 1618.28571 773.028571 301.714286 509.714286 301.714286 509.714286 633.6 208 633.6 208 0 1711.08571 0 1711.08571 633.6 1409.37143 633.6 1409.37143 301.714286 1148.8 301.714286 1148.8 1618.28571 1458.74286 1618.28571 1458.74286 1920 460.342857 1920z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextareaLine":{"variant":"Line","glyphName":"textarea","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M480,660 L1440,660 L1440,540 L480,540 L480,660 Z M480,1020 L1200,1020 L1200,900 L480,900 L480,1020 Z M420,1830 L300,1830 C300,1598.4 488.4,1410 720,1410 L1800,1410 L1800,210 L120,210 L120,1830 L0,1830 L0,90 L1920,90 L1920,1530 L720,1530 C554.64,1530 420,1664.64 420,1830\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTextareaSolid":{"variant":"Solid","glyphName":"textarea","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,60 L1920,1500 L600,1500 C434.64,1500 300,1634.64 300,1800 L300,1800 L300,1860 L0,1860 L0,60 L1920,60 Z M1200,900 L480,900 L480,1020 L1200,1020 L1200,900 Z M1440,540 L480,540 L480,660 L1440,660 L1440,540 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTimerLine":{"variant":"Line","glyphName":"timer","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.35529,0 1920,430.644706 1920,960 C1920,1489.35529 1489.35529,1920 960,1920 C430.644706,1920 0,1489.35529 0,960 C0,787.312941 46.4188235,618.014118 134.174118,470.4 L134.174118,470.4 L231.190588,528.112941 C153.825882,658.221176 112.941176,807.529412 112.941176,960 C112.941176,1427.12471 492.875294,1807.05882 960,1807.05882 C1427.12471,1807.05882 1807.05882,1427.12471 1807.05882,960 C1807.05882,511.962353 1457.28,144 1016.47059,114.861176 L1016.47059,114.861176 L1016.47059,338.823529 L903.529412,338.823529 L903.529412,0 Z M322.334118,242.371765 L804.592941,724.743529 C849.204706,695.04 902.512941,677.647059 960,677.647059 C1115.63294,677.647059 1242.35294,804.367059 1242.35294,960 C1242.35294,1115.63294 1115.63294,1242.35294 960,1242.35294 C804.367059,1242.35294 677.647059,1115.63294 677.647059,960 C677.647059,902.512941 695.04,849.204706 724.743529,804.592941 L724.743529,804.592941 L242.371765,322.334118 L322.334118,242.371765 Z M960,790.588235 C866.597647,790.588235 790.588235,866.597647 790.588235,960 C790.588235,1053.40235 866.597647,1129.41176 960,1129.41176 C1053.40235,1129.41176 1129.41176,1053.40235 1129.41176,960 C1129.41176,866.597647 1053.40235,790.588235 960,790.588235 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTimerSolid":{"variant":"Solid","glyphName":"timer","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1489.69412,0 1920,430.305882 1920,960 C1920,1489.69412 1489.69412,1920 960,1920 C430.305882,1920 0,1489.69412 0,960 C0,787.2 46.3058824,617.788235 134.4,470.964706 L134.4,470.964706 L169.411765,412.235294 L198.776471,438.211765 L633.6,873.035294 C625.694118,900.141176 621.176471,929.505882 621.176471,960 C621.176471,1146.35294 773.647059,1298.82353 960,1298.82353 C1146.35294,1298.82353 1298.82353,1146.35294 1298.82353,960 C1298.82353,773.647059 1146.35294,621.176471 960,621.176471 C940.8,621.176471 921.6,623.435294 903.529412,626.823529 L903.529412,626.823529 L903.529412,0 Z M322.334118,242.371765 L845.929412,766.08 C879.585882,746.315294 918.211765,734.117647 960,734.117647 C1084.57412,734.117647 1185.88235,835.425882 1185.88235,960 C1185.88235,1084.57412 1084.57412,1185.88235 960,1185.88235 C835.425882,1185.88235 734.117647,1084.57412 734.117647,960 C734.117647,918.211765 746.315294,879.585882 766.08,845.929412 L766.08,845.929412 L242.371765,322.334118 L322.334118,242.371765 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconToggleEndLine":{"variant":"Line","glyphName":"toggle-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1072.94118,113 C1540.06588,113 1920,492.934118 1920,960.058824 C1920,1427.18353 1540.06588,1807.11765 1072.94118,1807.11765 C816.790588,1807.11765 577.694118,1693.27294 416.865882,1494.83529 L416.865882,1494.83529 L504.734118,1423.68235 C643.990588,1595.57882 851.011765,1694.17647 1072.94118,1694.17647 C1477.72235,1694.17647 1807.05882,1364.84 1807.05882,960.058824 C1807.05882,555.277647 1477.72235,225.941176 1072.94118,225.941176 C851.011765,225.941176 643.990588,324.538824 504.734118,496.435294 L504.734118,496.435294 L416.865882,425.282353 C577.694118,226.844706 816.790588,113 1072.94118,113 Z M943.442824,524.885176 L1378.60518,960.047529 L943.442824,1395.20988 L863.593412,1315.47341 L1162.54871,1016.51812 L0.0451764706,1016.51812 L0.0451764706,903.576941 L1162.54871,903.576941 L863.593412,604.734588 L943.442824,524.885176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconToggleEndSolid":{"variant":"Solid","glyphName":"toggle-end","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1016.47059,56 C1514.65412,56 1920,461.345882 1920,959.529412 C1920,1457.71294 1514.65412,1863.05882 1016.47059,1863.05882 C743.265882,1863.05882 488.131765,1741.64706 316.574118,1529.76941 L316.574118,1529.76941 L492.084706,1387.68941 C620.611765,1546.25882 811.821176,1637.17647 1016.47059,1637.17647 C1390.19294,1637.17647 1694.11765,1333.25176 1694.11765,959.529412 C1694.11765,585.807059 1390.19294,281.882353 1016.47059,281.882353 C811.821176,281.882353 620.611765,372.8 492.084706,531.369412 L492.084706,531.369412 L316.574118,389.289412 C488.131765,177.411765 743.265882,56 1016.47059,56 Z M926.930824,484.408471 L1401.96141,959.552 L926.930824,1434.69553 L767.232,1274.88376 L969.735529,1072.49318 L0.0225882353,1072.49318 L0.0225882353,846.610824 L969.735529,846.610824 L767.232,644.107294 L926.930824,484.408471 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconToggleLeftLine":{"variant":"Line","glyphName":"toggle-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M847.058824,113 C1103.20941,113 1342.30588,226.844706 1503.13412,425.282353 L1503.13412,425.282353 L1415.26588,496.435294 C1276.00941,324.538824 1068.98824,225.941176 847.058824,225.941176 C442.277647,225.941176 112.941176,555.277647 112.941176,960.058824 C112.941176,1364.84 442.277647,1694.17647 847.058824,1694.17647 C1068.98824,1694.17647 1276.00941,1595.57882 1415.26588,1423.68235 L1415.26588,1423.68235 L1503.13412,1494.83529 C1342.30588,1693.27294 1103.20941,1807.11765 847.058824,1807.11765 C379.934118,1807.11765 0,1427.18353 0,960.058824 C0,492.934118 379.934118,113 847.058824,113 Z M976.534588,524.817412 L1056.384,604.779765 L757.428706,903.622118 L1920.04518,903.622118 L1920.04518,1016.45035 L757.428706,1016.45035 L1056.384,1315.40565 L976.534588,1395.25506 L541.372235,960.092706 L976.534588,524.817412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconToggleLeftSolid":{"variant":"Solid","glyphName":"toggle-left","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M903.529412,56 C1176.73412,56 1431.86824,177.411765 1603.42588,389.289412 L1603.42588,389.289412 L1427.91529,531.369412 C1299.38824,372.8 1108.17882,281.882353 903.529412,281.882353 C529.807059,281.882353 225.882353,585.807059 225.882353,959.529412 C225.882353,1333.25176 529.807059,1637.17647 903.529412,1637.17647 C1108.17882,1637.17647 1299.38824,1546.25882 1427.91529,1387.68941 L1427.91529,1387.68941 L1603.42588,1529.76941 C1431.86824,1741.64706 1176.73412,1863.05882 903.529412,1863.05882 C405.345882,1863.05882 0,1457.71294 0,959.529412 C0,461.345882 405.345882,56 903.529412,56 Z M993.091765,484.385882 L1152.79059,644.084706 L950.287059,846.588235 L1920,846.588235 L1920,1072.47059 L950.287059,1072.47059 L1152.79059,1274.97412 L993.091765,1434.67294 L517.948235,959.529412 L993.091765,484.385882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconToggleRightLine":{"variant":"Line","glyphName":"toggle-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1072.94118,113 C1540.06588,113 1920,492.934118 1920,960.058824 C1920,1427.18353 1540.06588,1807.11765 1072.94118,1807.11765 C816.790588,1807.11765 577.694118,1693.27294 416.865882,1494.83529 L416.865882,1494.83529 L504.734118,1423.68235 C643.990588,1595.57882 851.011765,1694.17647 1072.94118,1694.17647 C1477.72235,1694.17647 1807.05882,1364.84 1807.05882,960.058824 C1807.05882,555.277647 1477.72235,225.941176 1072.94118,225.941176 C851.011765,225.941176 643.990588,324.538824 504.734118,496.435294 L504.734118,496.435294 L416.865882,425.282353 C577.694118,226.844706 816.790588,113 1072.94118,113 Z M943.442824,524.885176 L1378.60518,960.047529 L943.442824,1395.20988 L863.593412,1315.47341 L1162.54871,1016.51812 L0.0451764706,1016.51812 L0.0451764706,903.576941 L1162.54871,903.576941 L863.593412,604.734588 L943.442824,524.885176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconToggleRightSolid":{"variant":"Solid","glyphName":"toggle-right","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1016.47059,56 C1514.65412,56 1920,461.345882 1920,959.529412 C1920,1457.71294 1514.65412,1863.05882 1016.47059,1863.05882 C743.265882,1863.05882 488.131765,1741.64706 316.574118,1529.76941 L316.574118,1529.76941 L492.084706,1387.68941 C620.611765,1546.25882 811.821176,1637.17647 1016.47059,1637.17647 C1390.19294,1637.17647 1694.11765,1333.25176 1694.11765,959.529412 C1694.11765,585.807059 1390.19294,281.882353 1016.47059,281.882353 C811.821176,281.882353 620.611765,372.8 492.084706,531.369412 L492.084706,531.369412 L316.574118,389.289412 C488.131765,177.411765 743.265882,56 1016.47059,56 Z M926.930824,484.408471 L1401.96141,959.552 L926.930824,1434.69553 L767.232,1274.88376 L969.735529,1072.49318 L0.0225882353,1072.49318 L0.0225882353,846.610824 L969.735529,846.610824 L767.232,644.107294 L926.930824,484.408471 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconToggleStartLine":{"variant":"Line","glyphName":"toggle-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M847.058824,113 C1103.20941,113 1342.30588,226.844706 1503.13412,425.282353 L1503.13412,425.282353 L1415.26588,496.435294 C1276.00941,324.538824 1068.98824,225.941176 847.058824,225.941176 C442.277647,225.941176 112.941176,555.277647 112.941176,960.058824 C112.941176,1364.84 442.277647,1694.17647 847.058824,1694.17647 C1068.98824,1694.17647 1276.00941,1595.57882 1415.26588,1423.68235 L1415.26588,1423.68235 L1503.13412,1494.83529 C1342.30588,1693.27294 1103.20941,1807.11765 847.058824,1807.11765 C379.934118,1807.11765 0,1427.18353 0,960.058824 C0,492.934118 379.934118,113 847.058824,113 Z M976.534588,524.817412 L1056.384,604.779765 L757.428706,903.622118 L1920.04518,903.622118 L1920.04518,1016.45035 L757.428706,1016.45035 L1056.384,1315.40565 L976.534588,1395.25506 L541.372235,960.092706 L976.534588,524.817412 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconToggleStartSolid":{"variant":"Solid","glyphName":"toggle-start","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M903.529412,56 C1176.73412,56 1431.86824,177.411765 1603.42588,389.289412 L1603.42588,389.289412 L1427.91529,531.369412 C1299.38824,372.8 1108.17882,281.882353 903.529412,281.882353 C529.807059,281.882353 225.882353,585.807059 225.882353,959.529412 C225.882353,1333.25176 529.807059,1637.17647 903.529412,1637.17647 C1108.17882,1637.17647 1299.38824,1546.25882 1427.91529,1387.68941 L1427.91529,1387.68941 L1603.42588,1529.76941 C1431.86824,1741.64706 1176.73412,1863.05882 903.529412,1863.05882 C405.345882,1863.05882 0,1457.71294 0,959.529412 C0,461.345882 405.345882,56 903.529412,56 Z M993.091765,484.385882 L1152.79059,644.084706 L950.287059,846.588235 L1920,846.588235 L1920,1072.47059 L950.287059,1072.47059 L1152.79059,1274.97412 L993.091765,1434.67294 L517.948235,959.529412 L993.091765,484.385882 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTrashLine":{"variant":"Line","glyphName":"trash","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.17647,1750.58824 C1581.17647,1781.64706 1555.76471,1807.05882 1524.70588,1807.05882 L395.294118,1807.05882 C364.235294,1807.05882 338.823529,1781.64706 338.823529,1750.58824 L338.823529,564.705882 L225.882353,564.705882 L225.882353,1750.58824 C225.882353,1843.99059 301.891765,1920 395.294118,1920 L1524.70588,1920 C1618.10824,1920 1694.11765,1843.99059 1694.11765,1750.58824 L1694.11765,564.705882 L1581.17647,564.705882 L1581.17647,1750.58824 Z M677.647059,1581.17647 L790.588235,1581.17647 L790.588235,677.647059 L677.647059,677.647059 L677.647059,1581.17647 Z M1129.41176,1581.17647 L1242.35294,1581.17647 L1242.35294,677.647059 L1129.41176,677.647059 L1129.41176,1581.17647 Z M1340.62306,338.823529 L1217.06541,2.5243549e-29 L694.599529,2.5243549e-29 L571.267765,338.823529 L0.0112941176,338.823529 L0.0112941176,451.764706 L1920.01129,451.764706 L1920.01129,338.823529 L1340.62306,338.823529 Z M691.324235,338.823529 L773.658353,112.941176 L1138.11953,112.941176 L1220.45365,338.823529 L691.324235,338.823529 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTrashSolid":{"variant":"Solid","glyphName":"trash","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1694.06317,564.68396 L1694.06317,1750.49656 C1694.06317,1843.89342 1618.05823,1919.89836 1524.66137,1919.89836 L1524.66137,1919.89836 L395.31604,1919.89836 C301.919181,1919.89836 225.91424,1843.89342 225.91424,1750.49656 L225.91424,1750.49656 L225.91424,564.68396 L1694.06317,564.68396 Z M1217.09546,0 L1340.53291,338.8036 L1920,338.8036 L1920,451.851068 L0,451.851068 L0,338.8036 L571.222869,338.8036 L694.660314,0 L1217.09546,0 Z M677.652373,1581.09476 L790.586907,1581.09476 L790.586907,903.48756 L677.652373,903.48756 L677.652373,1581.09476 Z M1129.39051,1581.09476 L1242.32504,1581.09476 L1242.32504,903.48756 L1129.39051,903.48756 L1129.39051,1581.09476 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTroubleLine":{"variant":"Line","glyphName":"trouble","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M961,1 C431.644706,1 1,431.644706 1,961 C1,1490.35529 431.644706,1921 961,1921 C1490.35529,1921 1921,1490.35529 1921,961 C1921,431.644706 1490.35529,1 961,1 M961,1808.05882 C493.875294,1808.05882 113.941176,1428.12471 113.941176,961 C113.941176,493.875294 493.875294,113.941176 961,113.941176 C1428.12471,113.941176 1808.05882,493.875294 1808.05882,961 C1808.05882,1428.12471 1428.12471,1808.05882 961,1808.05882 M1280.46541,561.685176 L960.954824,881.195765 L641.557176,561.685176 L561.707765,641.534588 L881.105412,961.045176 L561.707765,1280.44282 L641.557176,1360.29224 L960.954824,1040.89459 L1280.46541,1360.29224 L1360.31482,1280.44282 L1040.80424,961.045176 L1360.31482,641.534588 L1280.46541,561.685176 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTroubleSolid":{"variant":"Solid","glyphName":"trouble","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1359.36,1279.51059 L1279.51059,1359.36 L960,1039.84941 L640.602353,1359.36 L560.752941,1279.51059 L880.150588,960 L560.752941,640.602353 L640.602353,560.752941 L960,880.150588 L1279.51059,560.752941 L1359.36,640.602353 L1039.84941,960 L1359.36,1279.51059 Z M960,0 C430.644706,0 0,430.644706 0,960 C0,1489.35529 430.644706,1920 960,1920 C1489.35529,1920 1920,1489.35529 1920,960 C1920,430.644706 1489.35529,0 960,0 L960,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTwitterBoxedLine":{"variant":"Line","glyphName":"twitter-boxed","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1643.82494,518.605647 C1629.36847,529.899765 1621.23671,547.405647 1622.14024,565.702118 C1622.70494,582.078588 1623.15671,598.455059 1623.15671,615.057412 C1623.15671,1145.42918 1249.66024,1694.21035 624.643765,1694.21035 C502.441412,1694.21035 382.046118,1669.928 268.879059,1623.05741 C405.312,1600.46918 535.307294,1540.61035 643.843765,1449.24094 C661.801412,1433.99388 668.464941,1409.37271 660.672,1387.23624 C652.879059,1365.09976 632.097882,1350.07859 608.493176,1349.51388 C503.119059,1347.368 407.683765,1286.83153 352.116706,1192.29976 C390.177882,1191.17035 431.175529,1185.18447 461.895529,1176.26212 C486.742588,1169.03388 503.457882,1145.88094 502.667294,1120.13035 C501.763765,1094.26682 483.467294,1072.35624 458.168471,1066.82212 C346.017882,1042.53976 263.457882,950.040941 235.561412,822.982118 C267.636706,829.419765 297.904941,831.452706 314.620235,831.904471 C339.241412,834.615059 361.942588,817.448 370.074353,793.843294 C378.093176,770.351529 369.848471,744.262118 349.632,729.692706 C271.589647,673.448 188.013176,568.525647 188.013176,443.273882 C188.013176,412.440941 191.853176,381.946824 199.194353,352.469176 C394.356706,569.655059 660.672,700.779765 943.024941,716.026824 C961.999059,717.043294 977.697882,709.589176 989.104941,696.262118 C1000.512,682.935059 1005.02965,664.864471 1001.41553,647.697412 C995.768471,622.059765 992.944941,595.518588 992.944941,568.638588 C992.944941,379.688 1134.00847,225.975059 1307.37318,225.975059 C1394.56376,225.975059 1475.65553,263.810353 1535.51435,332.704471 C1548.84141,348.064471 1569.84847,355.179765 1589.72612,350.888 C1618.41318,344.789176 1646.64847,337.109176 1674.432,327.735059 C1657.94259,344.450353 1639.75906,359.358588 1619.99435,372.120941 C1597.74494,386.464471 1588.48376,414.135059 1597.51906,438.982118 C1606.55435,463.829176 1632.07906,478.850353 1657.82965,475.575059 C1672.512,473.655059 1687.08141,471.396235 1701.53788,468.572706 C1683.24141,486.304471 1664.04141,503.019765 1643.82494,518.605647 M1905.50965,318.925647 C1888.79435,300.290353 1861.91435,295.095059 1839.10024,305.711529 C1835.03435,307.631529 1830.96847,309.551529 1826.78965,311.471529 C1843.84376,281.203294 1857.73553,248.789176 1867.78729,214.793882 C1874.56376,192.205647 1866.54494,167.810353 1847.68376,153.579765 C1828.70965,139.462118 1803.18494,138.332706 1783.19435,151.095059 C1724.91671,188.478588 1662.23435,215.923294 1596.72847,233.203294 C1518.46024,156.403294 1414.78024,113.033882 1307.37318,113.033882 C1071.77788,113.033882 880.003765,317.457412 880.003765,568.638588 C880.003765,578.125647 880.229647,587.612706 880.794353,596.986824 C625.999059,564.008 390.516706,424.977412 226.639059,208.469176 C215.119059,193.222118 196.483765,185.429176 177.396706,186.332706 C158.196706,187.800941 141.029647,198.869176 131.881412,215.810353 C94.7237647,284.704471 75.072,363.424471 75.072,443.273882 C75.072,529.899765 103.759059,608.280941 145.321412,674.012706 C125.895529,683.048 112.342588,702.586824 112.342588,725.400941 L112.342588,728.224471 L112.342588,730.596235 C112.342588,870.417412 162.149647,992.506824 245.839059,1075.06682 C236.803765,1078.00329 228.559059,1083.31153 221.895529,1090.42682 C208.455529,1105.10918 203.712,1125.66447 209.359059,1144.75153 C250.130824,1281.74918 347.147294,1386.89741 467.768471,1434.55859 C344.888471,1504.13035 199.081412,1531.688 63.3261176,1515.31153 C36.7849412,1511.35859 12.8414118,1527.17035 3.69317647,1551.33976 C-5.568,1575.62212 3.01552941,1603.17976 24.4743529,1617.86212 C204.163765,1741.64565 411.749647,1807.15153 624.643765,1807.15153 C1320.36141,1807.15153 1736.09788,1200.99624 1736.09788,615.057412 C1736.09788,606.473882 1735.98494,598.003294 1735.75906,589.532706 C1804.31435,532.384471 1863.26965,464.168 1911.49553,386.464471 C1924.70965,365.118588 1922.33788,337.560941 1905.50965,318.925647\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconTwitterBoxedSolid":{"variant":"Solid","glyphName":"twitter-boxed","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,311.855529 C1849.29882,345.624941 1773.40235,368.326118 1693.77882,378.716706 C1775.09647,326.199059 1837.55294,243.187294 1867.03059,144.024941 C1790.79529,192.702588 1706.31529,228.053176 1616.64,247.027294 C1544.92235,164.467294 1442.37176,112.966118 1329.20471,112.966118 C1111.45412,112.966118 935.04,302.933176 935.04,537.173176 C935.04,570.490824 938.654118,602.792 945.204706,633.850824 C617.901176,616.119059 327.303529,447.384941 133.044706,190.669647 C99.2752941,253.239059 79.7364706,326.199059 79.7364706,403.902588 C79.7364706,551.064941 170.767059,680.721412 276.48,756.956706 C211.877647,754.697882 119.378824,735.497882 119.378824,703.648471 L119.378824,709.295529 C119.378824,914.622588 233.788235,1085.95435 413.929412,1125.14494 C380.950588,1134.632 335.548235,1139.94024 299.52,1139.94024 C274.108235,1139.94024 244.065882,1137.22965 219.896471,1132.14729 C270.155294,1300.65553 413.025882,1423.30965 585.374118,1426.92376 C450.522353,1540.42965 279.303529,1608.30729 94.7576471,1608.30729 C62.9082353,1608.30729 30.72,1606.27435 0,1602.43435 C174.494118,1722.60376 381.176471,1792.96612 603.670588,1792.96612 C1328.64,1792.96612 1724.72471,1146.82965 1724.72471,586.415529 C1724.72471,568.006118 1724.27294,549.483765 1723.36941,531.300235 C1800.39529,471.554353 1867.25647,396.900235 1920,311.855529\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconTwitterLine":{"variant":"Line","glyphName":"twitter","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1643.82494,518.605647 C1629.36847,529.899765 1621.23671,547.405647 1622.14024,565.702118 C1622.70494,582.078588 1623.15671,598.455059 1623.15671,615.057412 C1623.15671,1145.42918 1249.66024,1694.21035 624.643765,1694.21035 C502.441412,1694.21035 382.046118,1669.928 268.879059,1623.05741 C405.312,1600.46918 535.307294,1540.61035 643.843765,1449.24094 C661.801412,1433.99388 668.464941,1409.37271 660.672,1387.23624 C652.879059,1365.09976 632.097882,1350.07859 608.493176,1349.51388 C503.119059,1347.368 407.683765,1286.83153 352.116706,1192.29976 C390.177882,1191.17035 431.175529,1185.18447 461.895529,1176.26212 C486.742588,1169.03388 503.457882,1145.88094 502.667294,1120.13035 C501.763765,1094.26682 483.467294,1072.35624 458.168471,1066.82212 C346.017882,1042.53976 263.457882,950.040941 235.561412,822.982118 C267.636706,829.419765 297.904941,831.452706 314.620235,831.904471 C339.241412,834.615059 361.942588,817.448 370.074353,793.843294 C378.093176,770.351529 369.848471,744.262118 349.632,729.692706 C271.589647,673.448 188.013176,568.525647 188.013176,443.273882 C188.013176,412.440941 191.853176,381.946824 199.194353,352.469176 C394.356706,569.655059 660.672,700.779765 943.024941,716.026824 C961.999059,717.043294 977.697882,709.589176 989.104941,696.262118 C1000.512,682.935059 1005.02965,664.864471 1001.41553,647.697412 C995.768471,622.059765 992.944941,595.518588 992.944941,568.638588 C992.944941,379.688 1134.00847,225.975059 1307.37318,225.975059 C1394.56376,225.975059 1475.65553,263.810353 1535.51435,332.704471 C1548.84141,348.064471 1569.84847,355.179765 1589.72612,350.888 C1618.41318,344.789176 1646.64847,337.109176 1674.432,327.735059 C1657.94259,344.450353 1639.75906,359.358588 1619.99435,372.120941 C1597.74494,386.464471 1588.48376,414.135059 1597.51906,438.982118 C1606.55435,463.829176 1632.07906,478.850353 1657.82965,475.575059 C1672.512,473.655059 1687.08141,471.396235 1701.53788,468.572706 C1683.24141,486.304471 1664.04141,503.019765 1643.82494,518.605647 M1905.50965,318.925647 C1888.79435,300.290353 1861.91435,295.095059 1839.10024,305.711529 C1835.03435,307.631529 1830.96847,309.551529 1826.78965,311.471529 C1843.84376,281.203294 1857.73553,248.789176 1867.78729,214.793882 C1874.56376,192.205647 1866.54494,167.810353 1847.68376,153.579765 C1828.70965,139.462118 1803.18494,138.332706 1783.19435,151.095059 C1724.91671,188.478588 1662.23435,215.923294 1596.72847,233.203294 C1518.46024,156.403294 1414.78024,113.033882 1307.37318,113.033882 C1071.77788,113.033882 880.003765,317.457412 880.003765,568.638588 C880.003765,578.125647 880.229647,587.612706 880.794353,596.986824 C625.999059,564.008 390.516706,424.977412 226.639059,208.469176 C215.119059,193.222118 196.483765,185.429176 177.396706,186.332706 C158.196706,187.800941 141.029647,198.869176 131.881412,215.810353 C94.7237647,284.704471 75.072,363.424471 75.072,443.273882 C75.072,529.899765 103.759059,608.280941 145.321412,674.012706 C125.895529,683.048 112.342588,702.586824 112.342588,725.400941 L112.342588,728.224471 L112.342588,730.596235 C112.342588,870.417412 162.149647,992.506824 245.839059,1075.06682 C236.803765,1078.00329 228.559059,1083.31153 221.895529,1090.42682 C208.455529,1105.10918 203.712,1125.66447 209.359059,1144.75153 C250.130824,1281.74918 347.147294,1386.89741 467.768471,1434.55859 C344.888471,1504.13035 199.081412,1531.688 63.3261176,1515.31153 C36.7849412,1511.35859 12.8414118,1527.17035 3.69317647,1551.33976 C-5.568,1575.62212 3.01552941,1603.17976 24.4743529,1617.86212 C204.163765,1741.64565 411.749647,1807.15153 624.643765,1807.15153 C1320.36141,1807.15153 1736.09788,1200.99624 1736.09788,615.057412 C1736.09788,606.473882 1735.98494,598.003294 1735.75906,589.532706 C1804.31435,532.384471 1863.26965,464.168 1911.49553,386.464471 C1924.70965,365.118588 1922.33788,337.560941 1905.50965,318.925647\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconTwitterSolid":{"variant":"Solid","glyphName":"twitter","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,311.855529 C1849.29882,345.624941 1773.40235,368.326118 1693.77882,378.716706 C1775.09647,326.199059 1837.55294,243.187294 1867.03059,144.024941 C1790.79529,192.702588 1706.31529,228.053176 1616.64,247.027294 C1544.92235,164.467294 1442.37176,112.966118 1329.20471,112.966118 C1111.45412,112.966118 935.04,302.933176 935.04,537.173176 C935.04,570.490824 938.654118,602.792 945.204706,633.850824 C617.901176,616.119059 327.303529,447.384941 133.044706,190.669647 C99.2752941,253.239059 79.7364706,326.199059 79.7364706,403.902588 C79.7364706,551.064941 170.767059,680.721412 276.48,756.956706 C211.877647,754.697882 119.378824,735.497882 119.378824,703.648471 L119.378824,709.295529 C119.378824,914.622588 233.788235,1085.95435 413.929412,1125.14494 C380.950588,1134.632 335.548235,1139.94024 299.52,1139.94024 C274.108235,1139.94024 244.065882,1137.22965 219.896471,1132.14729 C270.155294,1300.65553 413.025882,1423.30965 585.374118,1426.92376 C450.522353,1540.42965 279.303529,1608.30729 94.7576471,1608.30729 C62.9082353,1608.30729 30.72,1606.27435 0,1602.43435 C174.494118,1722.60376 381.176471,1792.96612 603.670588,1792.96612 C1328.64,1792.96612 1724.72471,1146.82965 1724.72471,586.415529 C1724.72471,568.006118 1724.27294,549.483765 1723.36941,531.300235 C1800.39529,471.554353 1867.25647,396.900235 1920,311.855529\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUnarchiveLine":{"variant":"Line","glyphName":"unarchive","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M533.333,586.667 L533.333,693.333 L213.333,693.333 L213.333,1173.33 L213.755,1173.33 L447.355,1386.67 L1472.64,1386.67 L1706.24,1173.33 L1706.67,1173.33 L1706.67,693.333 L1386.67,693.333 L1386.67,586.667 L1738.67,586.667 C1779.9,586.667 1813.33,620.096 1813.33,661.333 L1813.33,661.333 L1813.33,1173.33 L1856,1173.33 C1891.35,1173.33 1920,1201.99 1920,1237.33 L1920,1856 C1920,1891.35 1891.35,1920 1856,1920 L64,1920 C28.6538,1920 0,1891.35 0,1856 L0,1237.33 C0,1201.99 28.6538,1173.33 64,1173.33 L106.667,1173.33 L106.667,661.333 C106.667,620.096 140.096,586.667 181.333,586.667 L533.333,586.667 Z M172.378,1280 L106.667,1280 L106.667,1813.33 L1813.33,1813.33 L1813.33,1280 L1747.62,1280 L1514.02,1493.33 L405.978,1493.33 L172.378,1280 Z M960.001,0 L1317.71,357.712 L1242.29,433.137 L1013.33,204.178 L1013.33,1173.33 L906.667,1173.33 L906.667,204.183 L677.713,433.137 L602.288,357.712 L960.001,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUnarchiveSolid":{"variant":"Solid","glyphName":"unarchive","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M533.333,560 L533.333,720 L240,720 L240.008,1173.33 L240.008,1173.33 L449.074,1386.67 L1470.93,1386.67 L1679.99,1173.33 L1680,720 L1386.67,720 L1386.67,560 L1738.67,560 C1794.63,560 1840,605.368 1840,661.333 L1840,661.333 L1840,1173.33 L1856,1173.33 C1891.35,1173.33 1920,1201.99 1920,1237.33 L1920,1856 C1920,1891.35 1891.35,1920 1856,1920 L64,1920 C28.6538,1920 0,1891.35 0,1856 L0,1237.33 C0,1201.99 28.6538,1173.33 64,1173.33 L80,1173.33 L80,661.333 C80,605.368 125.369,560 181.333,560 L533.333,560 Z M960,0 L1336.57,376.569 L1223.43,489.706 L1040,306.275 L1040,1173.33 L879.999,1173.33 L879.998,306.275 L696.568,489.706 L583.431,376.568 L960,0 Z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconUnderlineLine":{"variant":"Line","glyphName":"underline","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1698.92308,1772.30769 L1698.92308,1920 L222,1920 L222,1772.30769 L1698.92308,1772.30769 Z M369.692308,0 L369.692308,812.307692 C369.692308,1097.35385 601.569231,1329.23077 886.615385,1329.23077 L886.615385,1329.23077 L1034.30769,1329.23077 C1319.35385,1329.23077 1551.23077,1097.35385 1551.23077,812.307692 L1551.23077,812.307692 L1551.23077,0 L1698.92308,0 L1698.92308,812.307692 C1698.92308,1178.73231 1400.73231,1476.92308 1034.30769,1476.92308 L1034.30769,1476.92308 L886.615385,1476.92308 C520.190769,1476.92308 222,1178.73231 222,812.307692 L222,812.307692 L222,0 L369.692308,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUnderlineSolid":{"variant":"Solid","glyphName":"underline","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1714.57143,1645.71429 L1714.57143,1920 L206,1920 L206,1645.71429 L1714.57143,1645.71429 Z M480.285714,0 L480.285714,822.857143 C480.285714,1050.10286 664.468571,1234.28571 891.714286,1234.28571 L891.714286,1234.28571 L1028.85714,1234.28571 C1256.10286,1234.28571 1440.28571,1050.10286 1440.28571,822.857143 L1440.28571,822.857143 L1440.28571,0 L1714.57143,0 L1714.57143,822.857143 C1714.57143,1201.64571 1407.50857,1508.57143 1028.85714,1508.57143 L1028.85714,1508.57143 L891.714286,1508.57143 C513.062857,1508.57143 206,1201.64571 206,822.857143 L206,822.857143 L206,0 L480.285714,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUnlockLine":{"variant":"Line","glyphName":"unlock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1581.29412,1694.11765 C1581.29412,1756.34824 1530.58353,1807.05882 1468.35294,1807.05882 L451.882353,1807.05882 C389.651765,1807.05882 338.941176,1756.34824 338.941176,1694.11765 L338.941176,1016.47059 L1581.29412,1016.47059 L1581.29412,1694.11765 Z M564.823529,903.529412 L564.823529,508.235294 C564.823529,290.258824 742.141176,112.941176 960.117647,112.941176 C1178.09412,112.941176 1355.41176,290.258824 1355.41176,508.235294 L1468.35294,508.235294 C1468.35294,228.028235 1240.32471,0 960.117647,0 C679.910588,0 451.882353,228.028235 451.882353,508.235294 L451.882353,903.529412 L226,903.529412 L226,1694.11765 C226,1818.69176 327.308235,1920 451.882353,1920 L1468.35294,1920 C1592.92706,1920 1694.23529,1818.69176 1694.23529,1694.11765 L1694.23529,903.529412 L564.823529,903.529412 Z M903.647059,1581.17647 L1016.58824,1581.17647 L1016.58824,1242.35294 L903.647059,1242.35294 L903.647059,1581.17647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUnlockSolid":{"variant":"Solid","glyphName":"unlock","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M564.823529,903.529412 L564.823529,508.235294 C564.823529,290.258824 742.141176,112.941176 960.117647,112.941176 C1178.09412,112.941176 1355.41176,290.258824 1355.41176,508.235294 L1468.35294,508.235294 C1468.35294,228.028235 1240.32471,5.04870979e-29 960.117647,5.04870979e-29 C679.910588,5.04870979e-29 451.882353,228.028235 451.882353,508.235294 L451.882353,903.529412 L226,903.529412 L226,1694.11765 C226,1818.69176 327.308235,1920 451.882353,1920 L1468.35294,1920 C1592.92706,1920 1694.23529,1818.69176 1694.23529,1694.11765 L1694.23529,903.529412 L564.823529,903.529412 Z M903.647059,1581.17647 L1016.58824,1581.17647 L1016.58824,1242.35294 L903.647059,1242.35294 L903.647059,1581.17647 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUnmutedLine":{"variant":"Line","glyphName":"unmuted","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1185.92753,1581.17647 C1185.92753,1705.75059 1084.61929,1807.05882 960.045176,1807.05882 C835.471059,1807.05882 734.162824,1705.75059 734.162824,1581.17647 L1185.92753,1581.17647 Z M960.045176,225.882353 C1302.48282,225.882353 1581.22165,504.508235 1581.22165,847.058824 L1581.22165,1242.35294 C1581.22165,1329.09176 1613.97459,1408.26353 1667.62165,1468.23529 L252.355765,1468.23529 C306.115765,1408.26353 338.868706,1329.09176 338.868706,1242.35294 L338.868706,847.058824 C338.868706,504.508235 617.494588,225.882353 960.045176,225.882353 Z M1694.16282,1242.35294 L1694.16282,847.058824 C1694.16282,461.364706 1394.86871,144.790588 1016.51576,115.764706 L1016.51576,2.84217094e-14 L903.574588,2.84217094e-14 L903.574588,115.764706 C525.108706,144.790588 225.927529,461.364706 225.927529,847.058824 L225.927529,1242.35294 C225.927529,1366.92706 124.619294,1468.23529 0.0451764706,1468.23529 L0.0451764706,1581.17647 L621.221647,1581.17647 C621.221647,1767.98118 773.127529,1920 960.045176,1920 C1146.84988,1920 1298.86871,1767.98118 1298.86871,1581.17647 L1920.04518,1581.17647 L1920.04518,1468.23529 C1795.47106,1468.23529 1694.16282,1366.92706 1694.16282,1242.35294 L1694.16282,1242.35294 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUnmutedSolid":{"variant":"Solid","glyphName":"unmuted","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1298.82353,1581.17647 C1298.82353,1767.98118 1146.80471,1920 960,1920 C773.195294,1920 621.176471,1767.98118 621.176471,1581.17647 L1298.82353,1581.17647 Z M1016.47059,0 L1016.47059,115.764706 C1394.93647,144.790588 1694.11765,461.364706 1694.11765,847.058824 L1694.11765,847.058824 L1694.11765,1129.41176 C1694.11765,1253.98588 1795.42588,1355.29412 1920,1355.29412 L1920,1355.29412 L1920,1468.23529 L0,1468.23529 L0,1355.29412 C124.574118,1355.29412 225.882353,1253.98588 225.882353,1129.41176 L225.882353,1129.41176 L225.882353,847.058824 C225.882353,461.364706 525.063529,144.790588 903.529412,115.764706 L903.529412,115.764706 L903.529412,0 L1016.47059,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUnpublishLine":{"variant":"Line","glyphName":"unpublish","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1599.04,1523.62667 L396.373333,320.96 C546.88,188.053333 743.786667,106.666667 960,106.666667 C1430.50667,106.666667 1813.33333,489.493333 1813.33333,960 C1813.33333,1176.10667 1731.94667,1373.12 1599.04,1523.62667 M106.666667,960 C106.666667,743.786667 187.946667,546.88 320.96,396.373333 L1523.62667,1599.04 C1373.12,1731.94667 1176.10667,1813.33333 960,1813.33333 C489.493333,1813.33333 106.666667,1430.50667 106.666667,960 M960,0 C429.76,0 0,429.76 0,960 C0,1490.24 429.76,1920 960,1920 C1490.13333,1920 1920,1490.24 1920,960 C1920,429.76 1490.13333,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconUnpublishSolid":{"variant":"Solid","glyphName":"unpublish","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M213.333333,960 C213.333333,792.64 269.333333,638.293333 362.773333,513.6 L1406.4,1557.22667 C1281.70667,1650.66667 1127.36,1706.66667 960,1706.66667 C548.373333,1706.66667 213.333333,1371.62667 213.333333,960 M1706.66667,960 C1706.66667,1127.36 1650.66667,1281.70667 1557.22667,1406.4 L513.6,362.773333 C638.293333,269.333333 792.64,213.333333 960,213.333333 C1371.62667,213.333333 1706.66667,548.373333 1706.66667,960 M960,0 C429.76,0 0,429.76 0,960 C0,1490.24 429.76,1920 960,1920 C1490.24,1920 1920,1490.24 1920,960 C1920,429.76 1490.24,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconUnpublishedLine":{"variant":"Line","glyphName":"unpublished","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1599.04,1523.62667 L396.373333,320.96 C546.88,188.053333 743.786667,106.666667 960,106.666667 C1430.50667,106.666667 1813.33333,489.493333 1813.33333,960 C1813.33333,1176.10667 1731.94667,1373.12 1599.04,1523.62667 M106.666667,960 C106.666667,743.786667 187.946667,546.88 320.96,396.373333 L1523.62667,1599.04 C1373.12,1731.94667 1176.10667,1813.33333 960,1813.33333 C489.493333,1813.33333 106.666667,1430.50667 106.666667,960 M960,0 C429.76,0 0,429.76 0,960 C0,1490.24 429.76,1920 960,1920 C1490.13333,1920 1920,1490.24 1920,960 C1920,429.76 1490.13333,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUnpublishedSolid":{"variant":"Solid","glyphName":"unpublished","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M213.333333,960 C213.333333,792.64 269.333333,638.293333 362.773333,513.6 L1406.4,1557.22667 C1281.70667,1650.66667 1127.36,1706.66667 960,1706.66667 C548.373333,1706.66667 213.333333,1371.62667 213.333333,960 M1706.66667,960 C1706.66667,1127.36 1650.66667,1281.70667 1557.22667,1406.4 L513.6,362.773333 C638.293333,269.333333 792.64,213.333333 960,213.333333 C1371.62667,213.333333 1706.66667,548.373333 1706.66667,960 M960,0 C429.76,0 0,429.76 0,960 C0,1490.24 429.76,1920 960,1920 C1490.24,1920 1920,1490.24 1920,960 C1920,429.76 1490.24,0 960,0\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUpdownLine":{"variant":"Line","glyphName":"updown","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960.18174 0.0116972603L451 509.193437 533.69963 592.01004 901.812411 223.897259 901.812411 1696.11444 533.69963 1328.11863 451 1410.81826 960.18174 1920 1469.36348 1410.81826 1386.78082 1328.11863 1018.66804 1696.11444 1018.66804 223.897259 1386.78082 592.01004 1469.36348 509.193437z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUpdownSolid":{"variant":"Solid","glyphName":"updown","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M959.921096 0.0107695155L453 506.931866 605.28095 659.212816 852.225941 412.267824 852.225941 1507.74295 605.28095 1260.79795 453 1413.0789 959.921096 1920 1466.84219 1413.0789 1314.56124 1260.79795 1067.61625 1507.74295 1067.61625 412.267824 1314.56124 659.212816 1466.84219 506.931866z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUploadLine":{"variant":"Line","glyphName":"upload","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1838.86029,1451.57632 L1920,1532.94589 L1558.4341,1894.51179 L361.565904,1894.51179 L0,1532.94589 L81.2546391,1451.57632 L409.146414,1779.58302 L1510.85359,1779.58302 L1838.86029,1451.57632 Z M962.333054,25 L1462.61798,525.284928 L1381.47827,606.654495 L1019.68251,244.973662 L1019.68251,1432.53262 L904.86867,1432.53262 L904.86867,244.973662 L543.187837,606.654495 L462.048126,525.284928 L962.333054,25 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUploadSolid":{"variant":"Solid","glyphName":"upload","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1764.98015,1402.82421 L1920.34165,1558.18571 L1558.52736,1920 L368.81429,1920 L7,1558.18571 L162.361496,1402.82421 L459.789763,1700.25248 L1467.55189,1700.25248 L1764.98015,1402.82421 Z M965.901262,0 L1483.07705,517.175787 L1327.71555,672.537283 L1075.77502,420.596752 L1075.77502,1423.30468 L856.027503,1423.30468 L856.027503,420.596752 L604.086972,672.537283 L448.725476,517.175787 L965.901262,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUserAddLine":{"variant":"Line","glyphName":"user-add","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M903.529412 0L903.529412 903.529412 0 903.529412 0 1016.47059 903.529412 1016.47059 903.529412 1920 1016.47059 1920 1016.47059 1016.47059 1920 1016.47059 1920 903.529412 1016.47059 903.529412 1016.47059 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconUserAddSolid":{"variant":"Solid","glyphName":"user-add","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M840 0L840 840 0 840 0 1080 840 1080 840 1920 1080 1920 1080 1080 1920 1080 1920 840 1080 840 1080 0z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":true},"IconUserLine":{"variant":"Line","glyphName":"user","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M970.110588,1129.47953 C1165.16,1130.38306 1358.96706,1159.97365 1545.99765,1217.46071 C1634.65647,1244.67953 1694.17647,1324.52894 1694.17647,1416.23718 L1694.17647,1571.30541 C1560.90588,1666.28894 1305.20706,1807.01365 960.058824,1807.01365 C807.136471,1807.01365 511.682353,1775.95482 225.941176,1571.30541 L225.941176,1416.23718 C225.941176,1324.52894 285.687059,1244.56659 374.684706,1217.34776 C568.265882,1157.94071 768.510588,1130.15718 970.110588,1129.47953 Z M967.964706,112.896 C1152.28471,112.896 1309.27294,242.778353 1346.65647,420.208941 C1314.69412,438.731294 1281.60235,451.719529 1224.34118,451.719529 C1150.70353,451.719529 1117.27294,430.599529 1074.80706,403.945412 C1026.46824,373.451294 971.804706,338.778353 866.317647,338.778353 C760.04,338.778353 705.037647,373.564235 656.472941,404.171294 C628.124706,422.016 603.729412,437.376 568.604706,445.620706 C595.371765,257.799529 757.216471,112.896 952.152941,112.896 L967.964706,112.896 Z M1579.08941,1109.48894 C1472.81176,1076.84894 1364.27529,1053.47012 1254.60941,1037.88424 C1383.47529,947.305412 1468.29412,798.110118 1468.29412,629.037176 L1355.35294,629.037176 C1355.35294,842.721882 1181.53647,1016.42541 967.964706,1016.42541 L952.152941,1016.42541 C738.581176,1016.42541 564.764706,842.721882 564.764706,629.037176 L564.764706,561.046588 C634.901176,551.333647 677.931765,524.227765 716.783529,499.606588 C759.249412,472.839529 792.792941,451.719529 866.317647,451.719529 C939.051765,451.719529 972.369412,472.726588 1014.49647,499.380706 C1063.06118,529.987765 1118.06353,564.660706 1224.34118,564.660706 C1330.61882,564.660706 1385.84706,529.648941 1438.70353,496.105412 L1468.63294,477.131294 L1464.56706,441.780706 C1434.86353,189.921882 1221.29176,-0.0451764706 967.964706,-0.0451764706 L952.152941,-0.0451764706 C676.237647,-0.0451764706 451.823529,224.481882 451.823529,508.190118 L451.823529,629.037176 C451.823529,798.448941 536.868235,947.757176 665.96,1038.336 C556.407059,1053.58306 447.870588,1076.736 341.48,1109.376 C204.821176,1151.27718 113,1274.72188 113,1416.23718 L113,1628.22776 L135.588235,1645.16894 C454.421176,1884.26541 788.952941,1919.95482 960.058824,1919.95482 C1358.51529,1919.95482 1647.64471,1747.71953 1784.52941,1645.16894 L1807.11765,1628.22776 L1807.11765,1416.23718 C1807.11765,1274.60894 1715.40941,1151.39012 1579.08941,1109.48894 L1579.08941,1109.48894 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconUserSolid":{"variant":"Solid","glyphName":"user","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1587.85365,1133.98588 C1478.18776,1091.63294 1364.34306,1061.92941 1248.57835,1042.72941 L1243.38306,1042.72941 C1378.91247,951.36 1468.24894,796.404706 1468.24894,621.12 L1468.24894,596.272941 C1440.01365,614.343529 1403.87247,638.061176 1353.16188,653.985882 C1337.23718,856.150588 1166.696,1016.41412 960.013647,1016.41412 C760.220706,1016.41412 594.084235,867.444706 569.237176,674.202353 C565.848941,657.261176 564.719529,639.303529 564.719529,621.12 L564.719529,560.131765 C566.074824,560.018824 566.978353,559.68 568.333647,559.454118 C578.837176,557.647059 588.211294,555.275294 597.698353,552.790588 C605.830118,550.757647 613.848941,548.611765 621.077176,546.127059 C628.983059,543.416471 636.550118,540.705882 643.665412,537.543529 C651.797176,534.042353 659.251294,530.428235 666.705412,526.588235 C671.787765,523.764706 677.096,521.28 681.839529,518.456471 C689.067765,514.164706 695.844235,509.985882 702.507765,505.694118 C705.896,503.435294 709.848941,501.176471 713.011294,499.143529 C717.867765,495.981176 722.611294,493.157647 727.354824,490.221176 C761.801882,468.649412 794.667765,451.821176 855.881882,451.708235 L856.107765,451.708235 C909.303059,451.708235 941.039529,463.792941 970.743059,480.734118 C980.568941,486.381176 990.281882,492.705882 1000.55953,499.256471 C1035.68424,522.070588 1074.536,546.804706 1134.28188,558.211765 C1134.95953,558.324706 1135.41129,558.663529 1136.08894,558.776471 C1156.41835,562.503529 1179.23247,564.649412 1205.096,564.649412 C1205.54776,564.649412 1205.88659,564.536471 1206.33835,564.536471 C1309.67953,564.310588 1363.55247,529.750588 1410.87482,499.143529 L1466.66776,464.696471 L1466.66776,464.583529 L1467.23247,464.131765 L1463.27953,442.785882 L1460.90776,427.312941 C1455.59953,392.865882 1445.66071,359.887059 1433.68894,327.811765 C1408.95482,261.063529 1371.11953,199.849412 1319.16659,148.009412 C1292.17365,120.790588 1261.56659,97.0729412 1229.94306,77.8729412 C1149.75482,27.1623529 1056.01365,-0.0564705882 960.013647,-0.0564705882 C739.778353,-0.0564705882 551.166588,141.12 481.143059,338.767059 C461.943059,391.849412 451.778353,448.32 451.778353,508.178824 L451.778353,621.12 C451.778353,640.32 452.907765,659.52 455.279529,677.590588 C472.107765,829.948235 557.152471,960.734118 677.999529,1042.16471 L672.917176,1042.16471 C561.105412,1060.57412 450.874824,1089.14824 344.484235,1129.35529 C203.872471,1182.66353 112.954824,1312.77176 112.954824,1461.06353 L112.954824,1669.10118 L139.721882,1685.59059 C311.957176,1792.54588 594.197176,1919.94353 960.013647,1919.94353 C1161.95247,1919.94353 1468.24894,1879.39765 1780.41835,1685.59059 L1807.07247,1669.10118 L1807.07247,1461.06353 C1807.07247,1316.16 1718.97835,1184.80941 1587.85365,1133.98588\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconVideoCameraOffLine":{"variant":"Line","glyphName":"video-camera-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1421.14123,2.41732472 L1512.916,66.6794857 L215.481342,1918.96202 L216.076,1919.37849 L215.698175,1919.91862 L123.327514,1855.23998 L246.074,1679.99949 L0,1680 L0,240 L1254.726,239.999486 L1421.14123,2.41732472 Z M1500.536,280.904486 L1500.53647,678.889412 L1920,346.051765 L1920,1574.06118 L1500.53647,1241.11059 L1500.53647,1680 L520.538,1679.99949 L597.433,1570.22049 L1390.75765,1570.22118 L1390.75765,1013.98588 L1568.75294,1155.27529 L1810.22118,1346.82353 L1810.22118,573.176471 L1568.75294,764.837647 L1390.75765,906.127059 L1390.757,437.630486 L1500.536,280.904486 Z M1177.831,349.778486 L109.778824,349.778824 L109.778824,1570.22118 L322.969,1570.22049 L1177.831,349.778486 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconVideoCameraOffSolid":{"variant":"Solid","glyphName":"video-camera-off","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1421.14123,3.0066885 L1512.916,67.2688495 L215.481342,1919.55138 L216.076,1919.96785 L215.698175,1920.50798 L123.327514,1855.82935 L246.487,1679.99985 L0,1680 L0,240 L1255.139,239.999849 L1421.14123,3.0066885 Z M1500.536,281.493849 L1500.53647,791.830588 L1920,346.051765 L1920,1574.06118 L1500.53647,1128.16941 L1500.53647,1680 L520.95,1679.99985 L1500.536,281.493849 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconVideoCameraLine":{"variant":"Line","glyphName":"video-camera","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0,240 L0,1680 L1500.53647,1680 L1500.53647,1241.11059 L1920,1574.06118 L1920,346.051765 L1500.53647,678.889412 L1500.53647,240 L0,240 Z M109.778824,349.778824 L1390.75765,349.778824 L1390.75765,678.889412 L1390.75765,906.127059 L1568.75294,764.837647 L1810.22118,573.176471 L1810.22118,960 L1810.22118,1346.82353 L1568.75294,1155.27529 L1390.75765,1013.98588 L1390.75765,1241.11059 L1390.75765,1570.22118 L109.778824,1570.22118 L109.778824,349.778824 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconVideoCameraSolid":{"variant":"Solid","glyphName":"video-camera","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 240L0 1680 1500.53647 1680 1500.53647 1128.16941 1920 1574.06118 1920 346.051765 1500.53647 791.830588 1500.53647 240z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconVideoLine":{"variant":"Line","glyphName":"video","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1813.33333,1557.19467 C1255.57333,1684.02133 664.853333,1684.02133 106.666667,1557.19467 L106.666667,468.448 C664.426667,341.621333 1255.14667,341.514667 1813.33333,468.448 L1813.33333,1557.19467 Z M1879.04,374.261333 C1278.72,230.688 640.64,230.794667 40.96,374.261333 L0,384.074667 L0,1641.568 L40.96,1651.38133 C341.013333,1723.168 650.24,1759.43467 960,1759.43467 C1269.86667,1759.43467 1579.2,1723.168 1879.04,1651.38133 L1920,1641.568 L1920,384.074667 L1879.04,374.261333 Z M853.333333,786.986667 L1229.65333,1012.8 L853.333333,1238.61333 L853.333333,786.986667 Z M746.666667,1426.98667 L1437.01333,1012.8 L746.666667,598.613333 L746.666667,1426.98667 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconVideoSolid":{"variant":"Solid","glyphName":"video","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M746.666667,1374.30933 L746.666667,545.936 L1437.01333,960.122667 L746.666667,1374.30933 Z M1879.04,321.616 C1278.93333,178.149333 640.64,178.149333 40.96,321.616 L0,331.429333 L0,1588.92267 L40.96,1598.736 C341.013333,1670.416 650.24,1706.78933 960,1706.78933 C1269.86667,1706.78933 1579.2,1670.416 1879.04,1598.736 L1920,1588.92267 L1920,331.429333 L1879.04,321.616 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconWarningBorderlessLine":{"variant":"Line","glyphName":"warning-borderless","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M933.974205 1477.39433C811.947215 1477.39433 712.671368 1576.67017 712.671368 1698.69716 712.671368 1820.72415 811.947215 1920 933.974205 1920 1056.00119 1920 1155.27704 1820.72415 1155.27704 1698.69716 1155.27704 1576.67017 1056.00119 1477.39433 933.974205 1477.39433zM1227.94841 0L640 0 783.188111 1298.17148 1084.7603 1298.17148z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconWarningBorderlessSolid":{"variant":"Solid","glyphName":"warning-borderless","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M994.577974 1436.35559C861.21303 1436.35559 752.755772 1544.81285 752.755772 1678.1778 752.755772 1811.54274 861.21303 1920 994.577974 1920 1127.94292 1920 1236.40018 1811.54274 1236.40018 1678.1778 1236.40018 1544.81285 1127.94292 1436.35559 994.577974 1436.35559L994.577974 1436.35559zM1165.06263 1315.44449L1310.15595 0 679 0 824.093322 1315.44449z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconWarningLine":{"variant":"Line","glyphName":"warning","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1490.19336,0 1920,429.80664 1920,960 C1920,1490.19336 1490.19336,1920 960,1920 C429.80664,1920 0,1490.19336 0,960 C0,429.80664 429.80664,0 960,0 Z M960,101.052632 C485.616468,101.052632 101.052632,485.616468 101.052632,960 C101.052632,1434.38353 485.616468,1818.94737 960,1818.94737 C1434.38353,1818.94737 1818.94737,1434.38353 1818.94737,960 C1818.94737,485.616468 1434.38353,101.052632 960,101.052632 Z M950.679927,1322.54386 C870.655911,1322.54386 805.551855,1387.64792 805.551855,1467.67193 C805.551855,1547.69595 870.655911,1612.8 950.679927,1612.8 C1030.70394,1612.8 1095.808,1547.69595 1095.808,1467.67193 C1095.808,1387.64792 1030.70394,1322.54386 950.679927,1322.54386 Z M1143.46512,353.684211 L757.894737,353.684211 L851.795993,1205.0114 L1049.56386,1205.0114 L1143.46512,353.684211 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconWarningSolid":{"variant":"Solid","glyphName":"warning","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M960,0 C1490.19336,0 1920,429.80664 1920,960 C1920,1490.19336 1490.19336,1920 960,1920 C429.80664,1920 0,1490.19336 0,960 C0,429.80664 429.80664,0 960,0 Z M950.162145,1342.68519 C865.69235,1342.68519 796.971403,1411.40613 796.971403,1495.87593 C796.971403,1580.34572 865.69235,1649.06667 950.162145,1649.06667 C1034.63194,1649.06667 1103.35289,1580.34572 1103.35289,1495.87593 C1103.35289,1411.40613 1034.63194,1342.68519 950.162145,1342.68519 Z M1153.65762,320 L746.666667,320 L845.784659,1218.62315 L1054.53963,1218.62315 L1153.65762,320 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconWindowsLine":{"variant":"Line","glyphName":"windows","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M677.647059,1642.60518 L112.941176,1564.33694 L112.941176,1129.40047 L677.647059,1129.40047 L677.647059,1642.60518 Z M734.117647,1016.45929 L56.4705882,1016.45929 C25.2988235,1016.45929 0,1041.75812 0,1072.92988 L0,1613.46635 C0,1641.70165 20.7811765,1665.53224 48.7905882,1669.37224 L726.437647,1763.33929 C728.922353,1763.79106 731.632941,1763.904 734.117647,1763.904 C747.670588,1763.904 760.771765,1759.04753 771.162353,1750.01224 C783.472941,1739.28282 790.588235,1723.80988 790.588235,1707.43341 L790.588235,1072.92988 C790.588235,1041.75812 765.289412,1016.45929 734.117647,1016.45929 L734.117647,1016.45929 Z M771.162353,169.976471 C758.851765,159.247059 742.588235,154.164706 726.437647,156.649412 L48.7905882,250.616471 C20.7811765,254.456471 0,278.287059 0,306.522353 L0,847.058824 C0,878.230588 25.2988235,903.529412 56.4705882,903.529412 L734.117647,903.529412 C765.289412,903.529412 790.588235,878.230588 790.588235,847.058824 L790.588235,212.555294 C790.588235,196.178824 783.472941,180.705882 771.162353,169.976471 L771.162353,169.976471 Z M677.647059,790.588235 L112.941176,790.588235 L112.941176,355.651765 L677.647059,277.383529 L677.647059,790.588235 Z M1900.68706,14.0047059 C1888.48941,3.16235294 1871.88706,-1.69411765 1855.96235,0.451764706 L952.432941,123.783529 C924.423529,127.623529 903.529412,151.567059 903.529412,179.802353 L903.529412,847.058824 C903.529412,878.230588 928.828235,903.529412 960,903.529412 L1863.52941,903.529412 C1894.70118,903.529412 1920,878.230588 1920,847.058824 L1920,56.4705882 C1920,40.0941176 1912.88471,24.6211765 1900.68706,14.0047059 L1900.68706,14.0047059 Z M1807.05882,790.588235 L1016.47059,790.588235 L1016.47059,229.044706 L1807.05882,121.185882 L1807.05882,790.588235 Z M1863.52941,1016.49318 L960,1016.49318 C928.828235,1016.49318 903.529412,1041.67906 903.529412,1072.96376 L903.529412,1740.22024 C903.529412,1768.45553 924.423529,1792.28612 952.432941,1796.23906 L1855.96235,1919.45788 C1858.44706,1919.79671 1861.04471,1920.02259 1863.52941,1920.02259 C1877.08235,1920.02259 1890.29647,1915.05318 1900.68706,1906.01788 C1912.88471,1895.28847 1920,1879.81553 1920,1863.552 L1920,1072.96376 C1920,1041.67906 1894.70118,1016.49318 1863.52941,1016.49318 L1863.52941,1016.49318 Z M1807.05882,1798.83671 L1016.47059,1690.86494 L1016.47059,1129.43435 L1807.05882,1129.43435 L1807.05882,1798.83671 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconWindowsSolid":{"variant":"Solid","glyphName":"windows","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1863.52941,1016.43671 C1894.70118,1016.43671 1920,1041.73553 1920,1072.90729 L1920,1072.90729 L1920,1863.49553 C1920,1879.872 1912.88471,1895.34494 1900.68706,1905.96141 C1890.29647,1915.10965 1877.08235,1919.96612 1863.52941,1919.96612 C1861.04471,1919.96612 1858.44706,1919.85318 1855.96235,1919.51435 L1855.96235,1919.51435 L952.432941,1796.18259 C924.423529,1792.34259 903.529412,1768.39906 903.529412,1740.16376 L903.529412,1740.16376 L903.529412,1072.90729 C903.529412,1041.73553 928.828235,1016.43671 960,1016.43671 L960,1016.43671 Z M734.117647,1016.43671 C765.289412,1016.43671 790.588235,1041.73553 790.588235,1072.90729 L790.588235,1072.90729 L790.588235,1707.41082 C790.588235,1723.78729 783.472941,1739.26024 771.162353,1749.98965 C760.771765,1759.02494 747.670588,1763.88141 734.117647,1763.88141 C731.632941,1763.88141 728.922353,1763.76847 726.437647,1763.31671 L726.437647,1763.31671 L48.7905882,1669.34965 C20.7811765,1665.50965 0,1641.67906 0,1613.44376 L0,1613.44376 L0,1072.90729 C0,1041.73553 25.2988235,1016.43671 56.4705882,1016.43671 L56.4705882,1016.43671 Z M726.392471,156.581647 C742.543059,154.209882 758.806588,159.179294 771.117176,169.908706 C783.540706,180.638118 790.543059,196.224 790.543059,212.487529 L790.543059,212.487529 L790.543059,846.991059 C790.543059,878.275765 765.357176,903.461647 734.072471,903.461647 L734.072471,903.461647 L56.4254118,903.461647 C25.2536471,903.461647 -0.0451764706,878.275765 -0.0451764706,846.991059 L-0.0451764706,846.991059 L-0.0451764706,306.454588 C-0.0451764706,278.332235 20.736,254.388706 48.7454118,250.548706 L48.7454118,250.548706 Z M1855.97365,0.474352941 C1872.12424,-1.55858824 1888.38776,3.18494118 1900.69835,13.9143529 C1912.896,24.6437647 1920.01129,40.1167059 1920.01129,56.3802353 L1920.01129,56.3802353 L1920.01129,846.968471 C1920.01129,878.253176 1894.71247,903.439059 1863.54071,903.439059 L1863.54071,903.439059 L960.011294,903.439059 C928.839529,903.439059 903.540706,878.253176 903.540706,846.968471 L903.540706,846.968471 L903.540706,179.712 C903.540706,151.476706 924.321882,127.646118 952.444235,123.806118 L952.444235,123.806118 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconWordpressLine":{"variant":"Line","glyphName":"wordpress","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1595.88141,168.918588 C1780.87906,168.918588 1801.77318,378.763294 1801.77318,378.763294 C1813.97082,451.158588 1805.38729,574.264471 1770.60141,682.688 C1679.45788,964.928 1454.14024,1472.71153 1366.83671,1666.06682 C1320.41788,1712.03388 1266.99671,1719.93976 1235.93788,1719.93976 C1220.12612,1719.93976 1210.18729,1717.79388 1210.18729,1717.79388 L999.890824,1156.36329 L759.100235,1719.488 C668.069647,1717.22918 615.326118,1662.33976 615.326118,1662.33976 L256.286118,535.638588 C256.286118,535.638588 242.281412,479.732706 162.093176,479.732706 L112.963765,479.732706 L145.603765,394.800941 L604.144941,394.800941 L604.144941,479.732706 C604.144941,479.732706 558.629647,516.438588 569.359059,567.262118 C580.088471,617.972706 763.617882,1350.17035 763.617882,1350.17035 L940.596706,958.377412 L858.488471,699.290353 C826.977882,619.666824 801.114353,542.979765 780.446118,522.537412 C751.307294,491.026824 698.337882,479.732706 698.337882,479.732706 L698.337882,394.800941 L1263.38259,394.800941 L1263.38259,479.732706 L1169.98024,479.732706 C1169.98024,479.732706 1120.73788,489.671529 1116.44612,561.953882 C1115.54259,576.523294 1123.90024,627.120941 1123.90024,627.120941 L1343.11906,1347.91153 C1343.11906,1347.91153 1568.43671,934.433882 1571.712,844.306824 C1574.98729,754.405647 1540.08847,607.243294 1441.71671,548.400941 C1284.38965,453.643294 1323.91906,265.031529 1445.44376,198.396235 C1497.28376,170.048 1543.36376,168.918588 1595.88141,168.918588 Z M1307.20376,583.864471 C1328.66259,607.017412 1354.30024,627.572706 1383.43906,645.078588 C1431.21318,673.652706 1461.36847,770.782118 1458.77082,840.240941 C1454.70494,867.008 1418.45082,949.680941 1370.33788,1048.84329 L1234.13082,601.144471 C1233.792,598.772706 1233.34024,595.836235 1232.77553,592.673882 L1263.38259,592.673882 C1278.96847,592.673882 1293.76376,589.511529 1307.20376,583.864471 Z M692.464941,596.739765 C693.820235,597.417412 695.175529,598.095059 696.304941,598.772706 C702.177882,609.857882 711.057035,631.679529 719.933802,654.312376 L720.753102,656.403577 C721.572219,658.496504 722.390528,660.59374 723.20566,662.68748 L724.019647,664.779765 C727.406118,673.490353 730.723765,682.095059 733.801412,690.029176 L751.872,736.786824 L819.975529,951.262118 L794.337882,1007.73271 C752.323765,839.450353 712.229647,678.170353 692.464941,596.739765 Z M1913.69788,363.629176 C1901.50024,254.866824 1820.40847,55.9774118 1595.88141,55.9774118 C1542.912,55.9774118 1470.29082,55.9774118 1391.11906,99.3468235 C1319.85318,138.537412 1266.20612,205.398588 1241.02024,281.859765 L698.337882,281.859765 C681.622588,281.859765 665.584941,285.473882 651.241412,292.137412 C636.897882,285.473882 621.086118,281.859765 604.144941,281.859765 L145.603765,281.859765 C98.8461176,281.859765 57.0578824,310.659765 40.1167059,354.255059 L7.47670588,439.186824 C-5.85035294,473.859765 -1.21976471,513.050353 19.9002353,543.657412 C40.9072941,574.377412 75.8061176,592.673882 112.963765,592.673882 L155.994353,592.673882 L507.693176,1696.67388 C513.001412,1713.16329 521.923765,1728.18447 533.782588,1740.608 C542.479059,1749.64329 622.554353,1829.04094 756.389647,1832.42918 L759.100235,1832.42918 C804.276706,1832.42918 845.161412,1805.54918 863.006118,1763.87388 L993.001412,1459.94918 L1104.36141,1757.43624 C1118.02729,1793.80329 1149.42494,1820.57035 1187.26024,1828.47624 C1193.69788,1829.71859 1211.20376,1832.88094 1235.93788,1832.88094 C1315.33553,1832.88094 1390.10259,1802.048 1446.34729,1746.25506 C1456.17318,1736.54212 1464.192,1725.02212 1469.72612,1712.48565 C1561.77318,1508.62682 1785.73553,1003.44094 1878.12141,717.473882 C1915.05318,602.273882 1929.28376,460.871529 1913.69788,363.629176\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconWordpressSolid":{"variant":"Solid","glyphName":"wordpress","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1243.56141,1811.41082 L1005.25553,1175.21318 L732.389647,1813.33082 C629.161412,1810.73318 569.302588,1748.50259 569.302588,1748.50259 L162.601412,471.589647 C162.601412,471.589647 146.563765,408.229647 55.7590588,408.229647 L-0.0338823529,408.229647 L37.0108235,312.003765 L556.766118,312.003765 L556.766118,408.229647 C556.766118,408.229647 505.152,449.792 517.236706,507.392 C529.434353,564.992 737.472,1394.65788 737.472,1394.65788 L938.055529,950.686118 L844.992,657.039059 C809.302588,566.799059 779.937882,479.834353 756.559059,456.794353 C723.580235,420.992 663.495529,408.229647 663.495529,408.229647 L663.495529,312.003765 L1303.872,312.003765 L1303.872,408.229647 L1197.93318,408.229647 C1197.93318,408.229647 1142.14024,419.410824 1137.28376,501.406118 C1136.26729,517.895529 1145.86729,575.269647 1145.86729,575.269647 L1394.33788,1392.17318 C1394.33788,1392.17318 1649.58494,923.467294 1653.19906,821.368471 C1656.92612,719.495529 1617.39671,552.681412 1505.92376,486.046118 C1327.58965,378.639059 1372.65318,164.954353 1510.10259,89.3967059 C1568.832,57.2084706 1621.12376,55.9661176 1680.64376,55.9661176 C1890.48847,55.9661176 1914.09318,293.820235 1914.09318,293.820235 C1927.98494,375.815529 1918.15906,515.297882 1878.62965,638.290824 C1775.40141,958.140235 1519.92847,1533.57553 1420.992,1752.68141 C1341.48141,1831.62729 1243.56141,1811.41082 1243.56141,1811.41082\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconXLine":{"variant":"Line","glyphName":"x","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M954.63973 826.4177L426.666667 298.444637 298.444637 426.666667 826.4177 954.63973 298.444637 1482.61279 426.666667 1610.83482 954.63973 1082.86176 1482.61279 1610.83482 1610.83482 1482.61279 1082.86176 954.63973 1610.83482 426.666667 1482.61279 298.444637z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconXSolid":{"variant":"Solid","glyphName":"x","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M797.319865 985.881673L344.771525 1438.43001 533.333333 1626.99182 985.881673 1174.44348 1438.43001 1626.99182 1626.99182 1438.43001 1174.44348 985.881673 1626.99182 533.333333 1438.43001 344.771525 985.881673 797.319865 533.333333 344.771525 344.771525 533.333333z\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\"/>\n</svg>\n","deprecated":false},"IconZippedLine":{"variant":"Line","glyphName":"zipped","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1185.47059,112.941176 L1185.47059,564.705882 L1637.23529,564.705882 L1637.23529,1807.05882 L846.872941,1807.05882 L846.872941,1468.23529 L959.588235,1468.23529 L959.588235,1355.29412 L846.872941,1355.29412 L846.872941,1242.35294 L959.588235,1242.35294 L959.588235,1129.41176 L846.872941,1129.41176 L846.872941,1016.47059 L959.588235,1016.47059 L959.588235,903.529412 L846.872941,903.529412 L846.872941,790.588235 L959.588235,790.588235 L959.588235,677.647059 L846.872941,677.647059 L846.872941,441.261176 C912.378824,417.882353 959.588235,355.764706 959.588235,282.352941 L959.588235,112.941176 L1185.47059,112.941176 Z M620.764706,112.941176 L620.764706,282.352941 C620.764706,355.990588 668.2,418.108235 733.931765,441.487059 L733.931765,564.705882 L620.764706,564.705882 L620.764706,677.647059 L733.931765,677.647059 L733.931765,790.588235 L620.764706,790.588235 L620.764706,903.529412 L733.931765,903.529412 L733.931765,1016.47059 L620.764706,1016.47059 L620.764706,1129.41176 L733.931765,1129.41176 L733.931765,1242.35294 L620.764706,1242.35294 L620.764706,1355.29412 L733.931765,1355.29412 L733.931765,1468.23529 L620.764706,1468.23529 L620.764706,1581.17647 L733.931765,1581.17647 L733.931765,1807.05882 L281.941176,1807.05882 L281.941176,112.941176 L620.764706,112.941176 Z M1298.41176,136.32 L1613.85647,451.764706 L1298.41176,451.764706 L1298.41176,136.32 Z M846.647059,112.941176 L846.647059,282.352941 C846.647059,313.524706 821.235294,338.823529 790.176471,338.823529 C759.117647,338.823529 733.705882,313.524706 733.705882,282.352941 L733.705882,112.941176 L846.647059,112.941176 Z M1700.59529,378.804706 L1371.48471,49.5811765 C1339.86118,18.0705882 1296.26588,-5.68434189e-14 1251.65412,-5.68434189e-14 L959.588235,-5.68434189e-14 L620.764706,-5.68434189e-14 L169,-5.68434189e-14 L169,1920 L1750.17647,1920 L1750.17647,498.522353 C1750.17647,453.345882 1732.55765,410.767059 1700.59529,378.804706 L1700.59529,378.804706 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconZippedSolid":{"variant":"Solid","glyphName":"zipped","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M620.764706,0 L620.764706,282.352941 C620.764706,355.990588 668.2,418.108235 733.931765,441.487059 L733.931765,441.487059 L733.931765,564.705882 L620.764706,564.705882 L620.764706,677.647059 L733.931765,677.647059 L733.931765,790.588235 L620.764706,790.588235 L620.764706,903.529412 L733.931765,903.529412 L733.931765,1016.47059 L620.764706,1016.47059 L620.764706,1129.41176 L733.931765,1129.41176 L733.931765,1242.35294 L620.764706,1242.35294 L620.764706,1355.29412 L733.931765,1355.29412 L733.931765,1468.23529 L620.764706,1468.23529 L620.764706,1581.17647 L733.931765,1581.17647 L733.931765,1920 L169,1920 L169,0 L620.764706,0 Z M1185.47059,0 L1185.47059,564.705882 L1750.17647,564.705882 L1750.17647,1920 L846.872941,1920 L846.872941,1468.23529 L959.588235,1468.23529 L959.588235,1355.29412 L846.872941,1355.29412 L846.872941,1242.35294 L959.588235,1242.35294 L959.588235,1129.41176 L846.872941,1129.41176 L846.872941,1016.47059 L959.588235,1016.47059 L959.588235,903.529412 L846.872941,903.529412 L846.872941,790.588235 L959.588235,790.588235 L959.588235,677.647059 L846.872941,677.647059 L846.872941,441.261176 C912.378824,417.882353 959.588235,355.764706 959.588235,282.352941 L959.588235,282.352941 L959.588235,0 L1185.47059,0 Z M1298.41176,7.45411765 L1742.94824,451.764706 L1298.41176,451.764706 L1298.41176,7.45411765 Z M846.647059,0 L846.647059,282.352941 C846.647059,313.524706 821.235294,338.823529 790.176471,338.823529 C759.117647,338.823529 733.705882,313.524706 733.705882,282.352941 L733.705882,0 L846.647059,0 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconZoomInLine":{"variant":"Line","glyphName":"zoom-in","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M854.396582,1594.87362 C446.108936,1594.87362 113.919544,1262.68423 113.919544,854.396582 C113.919544,446.108936 446.108936,113.919544 854.396582,113.919544 C1262.68423,113.919544 1594.87362,446.108936 1594.87362,854.396582 C1594.87362,1262.68423 1262.68423,1594.87362 854.396582,1594.87362 L854.396582,1594.87362 Z M1920,1839.34496 L1496.67497,1416.13386 C1628.25205,1265.64614 1708.79316,1069.5906 1708.79316,854.396582 C1708.79316,383.225347 1325.56782,0 854.396582,0 C383.225347,0 0,383.225347 0,854.396582 C0,1325.56782 383.225347,1708.79316 854.396582,1708.79316 C1069.47668,1708.79316 1265.76006,1628.25205 1416.13386,1496.67497 L1839.34496,1920 L1920,1839.34496 Z M911.356355,455.678177 L797.43681,455.678177 L797.43681,797.43681 L455.678177,797.43681 L455.678177,911.356355 L797.43681,911.356355 L797.43681,1253.11499 L911.356355,1253.11499 L911.356355,911.356355 L1253.11499,911.356355 L1253.11499,797.43681 L911.356355,797.43681 L911.356355,455.678177 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconZoomInSolid":{"variant":"Solid","glyphName":"zoom-in","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1920,1766.67759 L1551.8744,1398.44355 C1666.16141,1251.62704 1734.9071,1067.61846 1734.9071,867.453549 C1734.9071,389.161349 1345.74575,0 867.453549,0 C389.161349,0 0,389.161349 0,867.453549 C0,1345.74575 389.161349,1734.9071 867.453549,1734.9071 C1067.61846,1734.9071 1251.51861,1666.05297 1398.44355,1551.8744 L1766.67759,1920 L1920,1766.67759 Z M867.453549,1518.04371 C508.653075,1518.04371 216.863387,1226.25402 216.863387,867.453549 C216.863387,508.653075 508.653075,216.863387 867.453549,216.863387 C1226.25402,216.863387 1518.04371,508.653075 1518.04371,867.453549 C1518.04371,1226.25402 1226.25402,1518.04371 867.453549,1518.04371 L867.453549,1518.04371 Z M975.885243,487.942622 L759.021856,487.942622 L759.021856,759.021856 L487.942622,759.021856 L487.942622,975.885243 L759.021856,975.885243 L759.021856,1246.96448 L975.885243,1246.96448 L975.885243,975.885243 L1246.96448,975.885243 L1246.96448,759.021856 L975.885243,759.021856 L975.885243,487.942622 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconZoomOutLine":{"variant":"Line","glyphName":"zoom-out","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M853,1600 C470.706667,1600 159.666667,1288.96 159.666667,906.666667 C159.666667,524.373333 470.706667,213.333333 853,213.333333 C1235.29333,213.333333 1546.33333,524.373333 1546.33333,906.666667 C1546.33333,1288.96 1235.29333,1600 853,1600 L853,1600 Z M1850.76,1828.90667 L1454.38667,1432.64 C1577.58667,1291.73333 1653,1108.16 1653,906.666667 C1653,465.493333 1294.17333,106.666667 853,106.666667 C411.826667,106.666667 53,465.493333 53,906.666667 C53,1347.84 411.826667,1706.66667 853,1706.66667 C1054.38667,1706.66667 1238.17333,1631.25333 1378.97333,1508.05333 L1775.24,1904.42667 L1850.76,1828.90667 Z M479.666667,960.053333 L1226.33333,960.053333 L1226.33333,853.386667 L479.666667,853.386667 L479.666667,960.053333 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false},"IconZoomOutSolid":{"variant":"Solid","glyphName":"zoom-out","src":"<svg viewBox=\"0 0 1920 1920\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M867.453549,1518.04371 C508.653075,1518.04371 216.863387,1226.25402 216.863387,867.453549 C216.863387,508.653075 508.653075,216.863387 867.453549,216.863387 C1226.25402,216.863387 1518.04371,508.653075 1518.04371,867.453549 C1518.04371,1226.25402 1226.25402,1518.04371 867.453549,1518.04371 L867.453549,1518.04371 Z M1920,1766.67759 L1551.8744,1398.44355 C1666.16141,1251.62704 1734.9071,1067.61846 1734.9071,867.453549 C1734.9071,389.161349 1345.74575,0 867.453549,0 C389.161349,0 0,389.161349 0,867.453549 C0,1345.74575 389.161349,1734.9071 867.453549,1734.9071 C1067.61846,1734.9071 1251.51861,1666.05297 1398.44355,1551.8744 L1766.67759,1920 L1920,1766.67759 Z M487.942622,975.885243 L1246.96448,975.885243 L1246.96448,759.021856 L487.942622,759.021856 L487.942622,975.885243 Z\" stroke=\"none\" stroke-width=\"1\" fill-rule=\"evenodd\"/>\n</svg>\n","deprecated":false}},"packageName":"@instructure/ui-icons","requirePath":"@instructure/ui-icons/es/svg"},"icons-font":{"format":"Font","glyphs":{"IconArcLine":{"variant":"Line","glyphName":"Arc","cssFile":"InstructureIcons-Line.css","codepoint":"EA01","className":"icon-Arc","classes":["icon-line","icon-Arc"],"bidirectional":false,"deprecated":false},"IconArcSolid":{"variant":"Solid","glyphName":"Arc","cssFile":"InstructureIcons-Solid.css","codepoint":"EA01","className":"icon-Arc","classes":["icon-solid","icon-Arc"],"bidirectional":false,"deprecated":false},"IconA11yLine":{"variant":"Line","glyphName":"a11y","cssFile":"InstructureIcons-Line.css","codepoint":"EA02","className":"icon-a11y","classes":["icon-line","icon-a11y"],"bidirectional":false,"deprecated":false},"IconA11ySolid":{"variant":"Solid","glyphName":"a11y","cssFile":"InstructureIcons-Solid.css","codepoint":"EA02","className":"icon-a11y","classes":["icon-solid","icon-a11y"],"bidirectional":false,"deprecated":false},"IconAddFolderLine":{"variant":"Line","glyphName":"add-folder","cssFile":"InstructureIcons-Line.css","codepoint":"EA03","className":"icon-add-folder","classes":["icon-line","icon-add-folder"],"bidirectional":false,"deprecated":false},"IconAddFolderSolid":{"variant":"Solid","glyphName":"add-folder","cssFile":"InstructureIcons-Solid.css","codepoint":"EA03","className":"icon-add-folder","classes":["icon-solid","icon-add-folder"],"bidirectional":false,"deprecated":false},"IconAddMediaLine":{"variant":"Line","glyphName":"add-media","cssFile":"InstructureIcons-Line.css","codepoint":"EA04","className":"icon-add-media","classes":["icon-line","icon-add-media"],"bidirectional":false,"deprecated":false},"IconAddMediaSolid":{"variant":"Solid","glyphName":"add-media","cssFile":"InstructureIcons-Solid.css","codepoint":"EA04","className":"icon-add-media","classes":["icon-solid","icon-add-media"],"bidirectional":false,"deprecated":false},"IconAddLine":{"variant":"Line","glyphName":"add","cssFile":"InstructureIcons-Line.css","codepoint":"EA05","className":"icon-add","classes":["icon-line","icon-add"],"bidirectional":false,"deprecated":false},"IconAddSolid":{"variant":"Solid","glyphName":"add","cssFile":"InstructureIcons-Solid.css","codepoint":"EA05","className":"icon-add","classes":["icon-solid","icon-add"],"bidirectional":false,"deprecated":false},"IconAddressBookLine":{"variant":"Line","glyphName":"address-book","cssFile":"InstructureIcons-Line.css","codepoint":"EA06","className":"icon-address-book","classes":["icon-line","icon-address-book"],"bidirectional":true,"deprecated":false},"IconAddressBookSolid":{"variant":"Solid","glyphName":"address-book","cssFile":"InstructureIcons-Solid.css","codepoint":"EA06","className":"icon-address-book","classes":["icon-solid","icon-address-book"],"bidirectional":true,"deprecated":false},"IconAdminToolsLine":{"variant":"Line","glyphName":"admin-tools","cssFile":"InstructureIcons-Line.css","codepoint":"EA07","className":"icon-admin-tools","classes":["icon-line","icon-admin-tools"],"bidirectional":false,"deprecated":false},"IconAdminToolsSolid":{"variant":"Solid","glyphName":"admin-tools","cssFile":"InstructureIcons-Solid.css","codepoint":"EA07","className":"icon-admin-tools","classes":["icon-solid","icon-admin-tools"],"bidirectional":false,"deprecated":false},"IconAdminLine":{"variant":"Line","glyphName":"admin","cssFile":"InstructureIcons-Line.css","codepoint":"EA08","className":"icon-admin","classes":["icon-line","icon-admin"],"bidirectional":false,"deprecated":false},"IconAdminSolid":{"variant":"Solid","glyphName":"admin","cssFile":"InstructureIcons-Solid.css","codepoint":"EA08","className":"icon-admin","classes":["icon-solid","icon-admin"],"bidirectional":false,"deprecated":false},"IconAlertsLine":{"variant":"Line","glyphName":"alerts","cssFile":"InstructureIcons-Line.css","codepoint":"EA09","className":"icon-alerts","classes":["icon-line","icon-alerts"],"bidirectional":false,"deprecated":false},"IconAlertsSolid":{"variant":"Solid","glyphName":"alerts","cssFile":"InstructureIcons-Solid.css","codepoint":"EA09","className":"icon-alerts","classes":["icon-solid","icon-alerts"],"bidirectional":false,"deprecated":false},"IconAnalyticsLine":{"variant":"Line","glyphName":"analytics","cssFile":"InstructureIcons-Line.css","codepoint":"EA0A","className":"icon-analytics","classes":["icon-line","icon-analytics"],"bidirectional":false,"deprecated":false},"IconAnalyticsSolid":{"variant":"Solid","glyphName":"analytics","cssFile":"InstructureIcons-Solid.css","codepoint":"EA0A","className":"icon-analytics","classes":["icon-solid","icon-analytics"],"bidirectional":false,"deprecated":false},"IconAndroidLine":{"variant":"Line","glyphName":"android","cssFile":"InstructureIcons-Line.css","codepoint":"EA0B","className":"icon-android","classes":["icon-line","icon-android"],"bidirectional":false,"deprecated":false},"IconAndroidSolid":{"variant":"Solid","glyphName":"android","cssFile":"InstructureIcons-Solid.css","codepoint":"EA0B","className":"icon-android","classes":["icon-solid","icon-android"],"bidirectional":false,"deprecated":false},"IconAnnotateLine":{"variant":"Line","glyphName":"annotate","cssFile":"InstructureIcons-Line.css","codepoint":"EA0C","className":"icon-annotate","classes":["icon-line","icon-annotate"],"bidirectional":true,"deprecated":false},"IconAnnotateSolid":{"variant":"Solid","glyphName":"annotate","cssFile":"InstructureIcons-Solid.css","codepoint":"EA0C","className":"icon-annotate","classes":["icon-solid","icon-annotate"],"bidirectional":true,"deprecated":false},"IconAnnouncementLine":{"variant":"Line","glyphName":"announcement","cssFile":"InstructureIcons-Line.css","codepoint":"EA0D","className":"icon-announcement","classes":["icon-line","icon-announcement"],"bidirectional":true,"deprecated":false},"IconAnnouncementSolid":{"variant":"Solid","glyphName":"announcement","cssFile":"InstructureIcons-Solid.css","codepoint":"EA0D","className":"icon-announcement","classes":["icon-solid","icon-announcement"],"bidirectional":true,"deprecated":false},"IconAppleLine":{"variant":"Line","glyphName":"apple","cssFile":"InstructureIcons-Line.css","codepoint":"EA0E","className":"icon-apple","classes":["icon-line","icon-apple"],"bidirectional":false,"deprecated":false},"IconAppleSolid":{"variant":"Solid","glyphName":"apple","cssFile":"InstructureIcons-Solid.css","codepoint":"EA0E","className":"icon-apple","classes":["icon-solid","icon-apple"],"bidirectional":false,"deprecated":false},"IconArchiveLine":{"variant":"Line","glyphName":"archive","cssFile":"InstructureIcons-Line.css","codepoint":"EA0F","className":"icon-archive","classes":["icon-line","icon-archive"],"bidirectional":false,"deprecated":false},"IconArchiveSolid":{"variant":"Solid","glyphName":"archive","cssFile":"InstructureIcons-Solid.css","codepoint":"EA0F","className":"icon-archive","classes":["icon-solid","icon-archive"],"bidirectional":false,"deprecated":false},"IconArrowDownLine":{"variant":"Line","glyphName":"arrow-down","cssFile":"InstructureIcons-Line.css","codepoint":"EA10","className":"icon-arrow-down","classes":["icon-line","icon-arrow-down"],"bidirectional":false,"deprecated":false},"IconArrowDownSolid":{"variant":"Solid","glyphName":"arrow-down","cssFile":"InstructureIcons-Solid.css","codepoint":"EA10","className":"icon-arrow-down","classes":["icon-solid","icon-arrow-down"],"bidirectional":false,"deprecated":false},"IconArrowEndLine":{"variant":"Line","glyphName":"arrow-end","cssFile":"InstructureIcons-Line.css","codepoint":"EA11","className":"icon-arrow-end","classes":["icon-line","icon-arrow-end"],"bidirectional":true,"deprecated":false},"IconArrowEndSolid":{"variant":"Solid","glyphName":"arrow-end","cssFile":"InstructureIcons-Solid.css","codepoint":"EA11","className":"icon-arrow-end","classes":["icon-solid","icon-arrow-end"],"bidirectional":true,"deprecated":false},"IconArrowLeftLine":{"variant":"Line","glyphName":"arrow-left","cssFile":"InstructureIcons-Line.css","codepoint":"EA12","className":"icon-arrow-left","classes":["icon-line","icon-arrow-left"],"bidirectional":true,"deprecated":true},"IconArrowLeftSolid":{"variant":"Solid","glyphName":"arrow-left","cssFile":"InstructureIcons-Solid.css","codepoint":"EA12","className":"icon-arrow-left","classes":["icon-solid","icon-arrow-left"],"bidirectional":true,"deprecated":true},"IconArrowOpenDownLine":{"variant":"Line","glyphName":"arrow-open-down","cssFile":"InstructureIcons-Line.css","codepoint":"EA13","className":"icon-arrow-open-down","classes":["icon-line","icon-arrow-open-down"],"bidirectional":false,"deprecated":false},"IconArrowOpenDownSolid":{"variant":"Solid","glyphName":"arrow-open-down","cssFile":"InstructureIcons-Solid.css","codepoint":"EA13","className":"icon-arrow-open-down","classes":["icon-solid","icon-arrow-open-down"],"bidirectional":false,"deprecated":false},"IconArrowOpenEndLine":{"variant":"Line","glyphName":"arrow-open-end","cssFile":"InstructureIcons-Line.css","codepoint":"EA14","className":"icon-arrow-open-end","classes":["icon-line","icon-arrow-open-end"],"bidirectional":true,"deprecated":false},"IconArrowOpenEndSolid":{"variant":"Solid","glyphName":"arrow-open-end","cssFile":"InstructureIcons-Solid.css","codepoint":"EA14","className":"icon-arrow-open-end","classes":["icon-solid","icon-arrow-open-end"],"bidirectional":true,"deprecated":false},"IconArrowOpenLeftLine":{"variant":"Line","glyphName":"arrow-open-left","cssFile":"InstructureIcons-Line.css","codepoint":"EA15","className":"icon-arrow-open-left","classes":["icon-line","icon-arrow-open-left"],"bidirectional":true,"deprecated":true},"IconArrowOpenLeftSolid":{"variant":"Solid","glyphName":"arrow-open-left","cssFile":"InstructureIcons-Solid.css","codepoint":"EA15","className":"icon-arrow-open-left","classes":["icon-solid","icon-arrow-open-left"],"bidirectional":true,"deprecated":true},"IconArrowOpenRightLine":{"variant":"Line","glyphName":"arrow-open-right","cssFile":"InstructureIcons-Line.css","codepoint":"EA16","className":"icon-arrow-open-right","classes":["icon-line","icon-arrow-open-right"],"bidirectional":true,"deprecated":true},"IconArrowOpenRightSolid":{"variant":"Solid","glyphName":"arrow-open-right","cssFile":"InstructureIcons-Solid.css","codepoint":"EA16","className":"icon-arrow-open-right","classes":["icon-solid","icon-arrow-open-right"],"bidirectional":true,"deprecated":true},"IconArrowOpenStartLine":{"variant":"Line","glyphName":"arrow-open-start","cssFile":"InstructureIcons-Line.css","codepoint":"EA17","className":"icon-arrow-open-start","classes":["icon-line","icon-arrow-open-start"],"bidirectional":true,"deprecated":false},"IconArrowOpenStartSolid":{"variant":"Solid","glyphName":"arrow-open-start","cssFile":"InstructureIcons-Solid.css","codepoint":"EA17","className":"icon-arrow-open-start","classes":["icon-solid","icon-arrow-open-start"],"bidirectional":true,"deprecated":false},"IconArrowOpenUpLine":{"variant":"Line","glyphName":"arrow-open-up","cssFile":"InstructureIcons-Line.css","codepoint":"EA18","className":"icon-arrow-open-up","classes":["icon-line","icon-arrow-open-up"],"bidirectional":false,"deprecated":false},"IconArrowOpenUpSolid":{"variant":"Solid","glyphName":"arrow-open-up","cssFile":"InstructureIcons-Solid.css","codepoint":"EA18","className":"icon-arrow-open-up","classes":["icon-solid","icon-arrow-open-up"],"bidirectional":false,"deprecated":false},"IconArrowRightLine":{"variant":"Line","glyphName":"arrow-right","cssFile":"InstructureIcons-Line.css","codepoint":"EA19","className":"icon-arrow-right","classes":["icon-line","icon-arrow-right"],"bidirectional":true,"deprecated":true},"IconArrowRightSolid":{"variant":"Solid","glyphName":"arrow-right","cssFile":"InstructureIcons-Solid.css","codepoint":"EA19","className":"icon-arrow-right","classes":["icon-solid","icon-arrow-right"],"bidirectional":true,"deprecated":true},"IconArrowStartLine":{"variant":"Line","glyphName":"arrow-start","cssFile":"InstructureIcons-Line.css","codepoint":"EA1A","className":"icon-arrow-start","classes":["icon-line","icon-arrow-start"],"bidirectional":true,"deprecated":false},"IconArrowStartSolid":{"variant":"Solid","glyphName":"arrow-start","cssFile":"InstructureIcons-Solid.css","codepoint":"EA1A","className":"icon-arrow-start","classes":["icon-solid","icon-arrow-start"],"bidirectional":true,"deprecated":false},"IconArrowUpLine":{"variant":"Line","glyphName":"arrow-up","cssFile":"InstructureIcons-Line.css","codepoint":"EA1B","className":"icon-arrow-up","classes":["icon-line","icon-arrow-up"],"bidirectional":false,"deprecated":false},"IconArrowUpSolid":{"variant":"Solid","glyphName":"arrow-up","cssFile":"InstructureIcons-Solid.css","codepoint":"EA1B","className":"icon-arrow-up","classes":["icon-solid","icon-arrow-up"],"bidirectional":false,"deprecated":false},"IconAssignmentLine":{"variant":"Line","glyphName":"assignment","cssFile":"InstructureIcons-Line.css","codepoint":"EA1C","className":"icon-assignment","classes":["icon-line","icon-assignment"],"bidirectional":true,"deprecated":false},"IconAssignmentSolid":{"variant":"Solid","glyphName":"assignment","cssFile":"InstructureIcons-Solid.css","codepoint":"EA1C","className":"icon-assignment","classes":["icon-solid","icon-assignment"],"bidirectional":true,"deprecated":false},"IconAttachMediaLine":{"variant":"Line","glyphName":"attach-media","cssFile":"InstructureIcons-Line.css","codepoint":"EA1D","className":"icon-attach-media","classes":["icon-line","icon-attach-media"],"bidirectional":false,"deprecated":false},"IconAttachMediaSolid":{"variant":"Solid","glyphName":"attach-media","cssFile":"InstructureIcons-Solid.css","codepoint":"EA1D","className":"icon-attach-media","classes":["icon-solid","icon-attach-media"],"bidirectional":false,"deprecated":false},"IconAudioOffLine":{"variant":"Line","glyphName":"audio-off","cssFile":"InstructureIcons-Line.css","codepoint":"EA1E","className":"icon-audio-off","classes":["icon-line","icon-audio-off"],"bidirectional":false,"deprecated":false},"IconAudioOffSolid":{"variant":"Solid","glyphName":"audio-off","cssFile":"InstructureIcons-Solid.css","codepoint":"EA1E","className":"icon-audio-off","classes":["icon-solid","icon-audio-off"],"bidirectional":false,"deprecated":false},"IconAudioLine":{"variant":"Line","glyphName":"audio","cssFile":"InstructureIcons-Line.css","codepoint":"EA1F","className":"icon-audio","classes":["icon-line","icon-audio"],"bidirectional":true,"deprecated":false},"IconAudioSolid":{"variant":"Solid","glyphName":"audio","cssFile":"InstructureIcons-Solid.css","codepoint":"EA1F","className":"icon-audio","classes":["icon-solid","icon-audio"],"bidirectional":true,"deprecated":false},"IconBankLine":{"variant":"Line","glyphName":"bank","cssFile":"InstructureIcons-Line.css","codepoint":"EA20","className":"icon-bank","classes":["icon-line","icon-bank"],"bidirectional":false,"deprecated":false},"IconBankSolid":{"variant":"Solid","glyphName":"bank","cssFile":"InstructureIcons-Solid.css","codepoint":"EA20","className":"icon-bank","classes":["icon-solid","icon-bank"],"bidirectional":false,"deprecated":false},"IconBlueprintLockLine":{"variant":"Line","glyphName":"blueprint-lock","cssFile":"InstructureIcons-Line.css","codepoint":"EA21","className":"icon-blueprint-lock","classes":["icon-line","icon-blueprint-lock"],"bidirectional":false,"deprecated":false},"IconBlueprintLockSolid":{"variant":"Solid","glyphName":"blueprint-lock","cssFile":"InstructureIcons-Solid.css","codepoint":"EA21","className":"icon-blueprint-lock","classes":["icon-solid","icon-blueprint-lock"],"bidirectional":false,"deprecated":false},"IconBlueprintLine":{"variant":"Line","glyphName":"blueprint","cssFile":"InstructureIcons-Line.css","codepoint":"EA22","className":"icon-blueprint","classes":["icon-line","icon-blueprint"],"bidirectional":false,"deprecated":false},"IconBlueprintSolid":{"variant":"Solid","glyphName":"blueprint","cssFile":"InstructureIcons-Solid.css","codepoint":"EA22","className":"icon-blueprint","classes":["icon-solid","icon-blueprint"],"bidirectional":false,"deprecated":false},"IconBoldLine":{"variant":"Line","glyphName":"bold","cssFile":"InstructureIcons-Line.css","codepoint":"EA23","className":"icon-bold","classes":["icon-line","icon-bold"],"bidirectional":false,"deprecated":false},"IconBoldSolid":{"variant":"Solid","glyphName":"bold","cssFile":"InstructureIcons-Solid.css","codepoint":"EA23","className":"icon-bold","classes":["icon-solid","icon-bold"],"bidirectional":false,"deprecated":false},"IconBookmarkLine":{"variant":"Line","glyphName":"bookmark","cssFile":"InstructureIcons-Line.css","codepoint":"EA24","className":"icon-bookmark","classes":["icon-line","icon-bookmark"],"bidirectional":false,"deprecated":false},"IconBookmarkSolid":{"variant":"Solid","glyphName":"bookmark","cssFile":"InstructureIcons-Solid.css","codepoint":"EA24","className":"icon-bookmark","classes":["icon-solid","icon-bookmark"],"bidirectional":false,"deprecated":false},"IconBoxLine":{"variant":"Line","glyphName":"box","cssFile":"InstructureIcons-Line.css","codepoint":"EA25","className":"icon-box","classes":["icon-line","icon-box"],"bidirectional":false,"deprecated":false},"IconBoxSolid":{"variant":"Solid","glyphName":"box","cssFile":"InstructureIcons-Solid.css","codepoint":"EA25","className":"icon-box","classes":["icon-solid","icon-box"],"bidirectional":false,"deprecated":false},"IconBulletListAlphaLine":{"variant":"Line","glyphName":"bullet-list-alpha","cssFile":"InstructureIcons-Line.css","codepoint":"EA26","className":"icon-bullet-list-alpha","classes":["icon-line","icon-bullet-list-alpha"],"bidirectional":false,"deprecated":false},"IconBulletListAlphaSolid":{"variant":"Solid","glyphName":"bullet-list-alpha","cssFile":"InstructureIcons-Solid.css","codepoint":"EA26","className":"icon-bullet-list-alpha","classes":["icon-solid","icon-bullet-list-alpha"],"bidirectional":false,"deprecated":false},"IconBulletListCircleOutlineLine":{"variant":"Line","glyphName":"bullet-list-circle-outline","cssFile":"InstructureIcons-Line.css","codepoint":"EA27","className":"icon-bullet-list-circle-outline","classes":["icon-line","icon-bullet-list-circle-outline"],"bidirectional":false,"deprecated":false},"IconBulletListCircleOutlineSolid":{"variant":"Solid","glyphName":"bullet-list-circle-outline","cssFile":"InstructureIcons-Solid.css","codepoint":"EA27","className":"icon-bullet-list-circle-outline","classes":["icon-solid","icon-bullet-list-circle-outline"],"bidirectional":false,"deprecated":false},"IconBulletListRomanLine":{"variant":"Line","glyphName":"bullet-list-roman","cssFile":"InstructureIcons-Line.css","codepoint":"EA28","className":"icon-bullet-list-roman","classes":["icon-line","icon-bullet-list-roman"],"bidirectional":false,"deprecated":false},"IconBulletListRomanSolid":{"variant":"Solid","glyphName":"bullet-list-roman","cssFile":"InstructureIcons-Solid.css","codepoint":"EA28","className":"icon-bullet-list-roman","classes":["icon-solid","icon-bullet-list-roman"],"bidirectional":false,"deprecated":false},"IconBulletListSquareLine":{"variant":"Line","glyphName":"bullet-list-square","cssFile":"InstructureIcons-Line.css","codepoint":"EA29","className":"icon-bullet-list-square","classes":["icon-line","icon-bullet-list-square"],"bidirectional":false,"deprecated":false},"IconBulletListSquareSolid":{"variant":"Solid","glyphName":"bullet-list-square","cssFile":"InstructureIcons-Solid.css","codepoint":"EA29","className":"icon-bullet-list-square","classes":["icon-solid","icon-bullet-list-square"],"bidirectional":false,"deprecated":false},"IconBulletListLine":{"variant":"Line","glyphName":"bullet-list","cssFile":"InstructureIcons-Line.css","codepoint":"EA2A","className":"icon-bullet-list","classes":["icon-line","icon-bullet-list"],"bidirectional":true,"deprecated":false},"IconBulletListSolid":{"variant":"Solid","glyphName":"bullet-list","cssFile":"InstructureIcons-Solid.css","codepoint":"EA2A","className":"icon-bullet-list","classes":["icon-solid","icon-bullet-list"],"bidirectional":true,"deprecated":false},"IconCalculatorDesmosLine":{"variant":"Line","glyphName":"calculator-desmos","cssFile":"InstructureIcons-Line.css","codepoint":"EA2B","className":"icon-calculator-desmos","classes":["icon-line","icon-calculator-desmos"],"bidirectional":false,"deprecated":false},"IconCalculatorDesmosSolid":{"variant":"Solid","glyphName":"calculator-desmos","cssFile":"InstructureIcons-Solid.css","codepoint":"EA2B","className":"icon-calculator-desmos","classes":["icon-solid","icon-calculator-desmos"],"bidirectional":false,"deprecated":false},"IconCalculatorLine":{"variant":"Line","glyphName":"calculator","cssFile":"InstructureIcons-Line.css","codepoint":"EA2C","className":"icon-calculator","classes":["icon-line","icon-calculator"],"bidirectional":false,"deprecated":false},"IconCalculatorSolid":{"variant":"Solid","glyphName":"calculator","cssFile":"InstructureIcons-Solid.css","codepoint":"EA2C","className":"icon-calculator","classes":["icon-solid","icon-calculator"],"bidirectional":false,"deprecated":false},"IconCalendarAddLine":{"variant":"Line","glyphName":"calendar-add","cssFile":"InstructureIcons-Line.css","codepoint":"EA2D","className":"icon-calendar-add","classes":["icon-line","icon-calendar-add"],"bidirectional":false,"deprecated":false},"IconCalendarAddSolid":{"variant":"Solid","glyphName":"calendar-add","cssFile":"InstructureIcons-Solid.css","codepoint":"EA2D","className":"icon-calendar-add","classes":["icon-solid","icon-calendar-add"],"bidirectional":false,"deprecated":false},"IconCalendarClockLine":{"variant":"Line","glyphName":"calendar-clock","cssFile":"InstructureIcons-Line.css","codepoint":"EA2E","className":"icon-calendar-clock","classes":["icon-line","icon-calendar-clock"],"bidirectional":false,"deprecated":false},"IconCalendarClockSolid":{"variant":"Solid","glyphName":"calendar-clock","cssFile":"InstructureIcons-Solid.css","codepoint":"EA2E","className":"icon-calendar-clock","classes":["icon-solid","icon-calendar-clock"],"bidirectional":false,"deprecated":false},"IconCalendarDayLine":{"variant":"Line","glyphName":"calendar-day","cssFile":"InstructureIcons-Line.css","codepoint":"EA2F","className":"icon-calendar-day","classes":["icon-line","icon-calendar-day"],"bidirectional":false,"deprecated":false},"IconCalendarDaySolid":{"variant":"Solid","glyphName":"calendar-day","cssFile":"InstructureIcons-Solid.css","codepoint":"EA2F","className":"icon-calendar-day","classes":["icon-solid","icon-calendar-day"],"bidirectional":false,"deprecated":false},"IconCalendarDaysLine":{"variant":"Line","glyphName":"calendar-days","cssFile":"InstructureIcons-Line.css","codepoint":"EA30","className":"icon-calendar-days","classes":["icon-line","icon-calendar-days"],"bidirectional":false,"deprecated":false},"IconCalendarDaysSolid":{"variant":"Solid","glyphName":"calendar-days","cssFile":"InstructureIcons-Solid.css","codepoint":"EA30","className":"icon-calendar-days","classes":["icon-solid","icon-calendar-days"],"bidirectional":false,"deprecated":false},"IconCalendarMonthLine":{"variant":"Line","glyphName":"calendar-month","cssFile":"InstructureIcons-Line.css","codepoint":"EA31","className":"icon-calendar-month","classes":["icon-line","icon-calendar-month"],"bidirectional":false,"deprecated":false},"IconCalendarMonthSolid":{"variant":"Solid","glyphName":"calendar-month","cssFile":"InstructureIcons-Solid.css","codepoint":"EA31","className":"icon-calendar-month","classes":["icon-solid","icon-calendar-month"],"bidirectional":false,"deprecated":false},"IconCalendarReservedLine":{"variant":"Line","glyphName":"calendar-reserved","cssFile":"InstructureIcons-Line.css","codepoint":"EA32","className":"icon-calendar-reserved","classes":["icon-line","icon-calendar-reserved"],"bidirectional":false,"deprecated":false},"IconCalendarReservedSolid":{"variant":"Solid","glyphName":"calendar-reserved","cssFile":"InstructureIcons-Solid.css","codepoint":"EA32","className":"icon-calendar-reserved","classes":["icon-solid","icon-calendar-reserved"],"bidirectional":false,"deprecated":false},"IconCertifiedLine":{"variant":"Line","glyphName":"certified","cssFile":"InstructureIcons-Line.css","codepoint":"EA33","className":"icon-certified","classes":["icon-line","icon-certified"],"bidirectional":false,"deprecated":false},"IconCertifiedSolid":{"variant":"Solid","glyphName":"certified","cssFile":"InstructureIcons-Solid.css","codepoint":"EA33","className":"icon-certified","classes":["icon-solid","icon-certified"],"bidirectional":false,"deprecated":false},"IconChatLine":{"variant":"Line","glyphName":"chat","cssFile":"InstructureIcons-Line.css","codepoint":"EA34","className":"icon-chat","classes":["icon-line","icon-chat"],"bidirectional":true,"deprecated":false},"IconChatSolid":{"variant":"Solid","glyphName":"chat","cssFile":"InstructureIcons-Solid.css","codepoint":"EA34","className":"icon-chat","classes":["icon-solid","icon-chat"],"bidirectional":true,"deprecated":false},"IconCheckDarkLine":{"variant":"Line","glyphName":"check-dark","cssFile":"InstructureIcons-Line.css","codepoint":"EA35","className":"icon-check-dark","classes":["icon-line","icon-check-dark"],"bidirectional":false,"deprecated":false},"IconCheckDarkSolid":{"variant":"Solid","glyphName":"check-dark","cssFile":"InstructureIcons-Solid.css","codepoint":"EA35","className":"icon-check-dark","classes":["icon-solid","icon-check-dark"],"bidirectional":false,"deprecated":false},"IconCheckMarkIndeterminateLine":{"variant":"Line","glyphName":"check-mark-indeterminate","cssFile":"InstructureIcons-Line.css","codepoint":"EA36","className":"icon-check-mark-indeterminate","classes":["icon-line","icon-check-mark-indeterminate"],"bidirectional":false,"deprecated":false},"IconCheckMarkIndeterminateSolid":{"variant":"Solid","glyphName":"check-mark-indeterminate","cssFile":"InstructureIcons-Solid.css","codepoint":"EA36","className":"icon-check-mark-indeterminate","classes":["icon-solid","icon-check-mark-indeterminate"],"bidirectional":false,"deprecated":false},"IconCheckMarkLine":{"variant":"Line","glyphName":"check-mark","cssFile":"InstructureIcons-Line.css","codepoint":"EA37","className":"icon-check-mark","classes":["icon-line","icon-check-mark"],"bidirectional":false,"deprecated":false},"IconCheckMarkSolid":{"variant":"Solid","glyphName":"check-mark","cssFile":"InstructureIcons-Solid.css","codepoint":"EA37","className":"icon-check-mark","classes":["icon-solid","icon-check-mark"],"bidirectional":false,"deprecated":false},"IconCheckPlusLine":{"variant":"Line","glyphName":"check-plus","cssFile":"InstructureIcons-Line.css","codepoint":"EA38","className":"icon-check-plus","classes":["icon-line","icon-check-plus"],"bidirectional":false,"deprecated":false},"IconCheckPlusSolid":{"variant":"Solid","glyphName":"check-plus","cssFile":"InstructureIcons-Solid.css","codepoint":"EA38","className":"icon-check-plus","classes":["icon-solid","icon-check-plus"],"bidirectional":false,"deprecated":false},"IconCheckLine":{"variant":"Line","glyphName":"check","cssFile":"InstructureIcons-Line.css","codepoint":"EA39","className":"icon-check","classes":["icon-line","icon-check"],"bidirectional":false,"deprecated":false},"IconCheckSolid":{"variant":"Solid","glyphName":"check","cssFile":"InstructureIcons-Solid.css","codepoint":"EA39","className":"icon-check","classes":["icon-solid","icon-check"],"bidirectional":false,"deprecated":false},"IconCircleArrowDownLine":{"variant":"Line","glyphName":"circle-arrow-down","cssFile":"InstructureIcons-Line.css","codepoint":"EA3A","className":"icon-circle-arrow-down","classes":["icon-line","icon-circle-arrow-down"],"bidirectional":false,"deprecated":false},"IconCircleArrowDownSolid":{"variant":"Solid","glyphName":"circle-arrow-down","cssFile":"InstructureIcons-Solid.css","codepoint":"EA3A","className":"icon-circle-arrow-down","classes":["icon-solid","icon-circle-arrow-down"],"bidirectional":false,"deprecated":false},"IconCircleArrowUpLine":{"variant":"Line","glyphName":"circle-arrow-up","cssFile":"InstructureIcons-Line.css","codepoint":"EA3B","className":"icon-circle-arrow-up","classes":["icon-line","icon-circle-arrow-up"],"bidirectional":false,"deprecated":false},"IconCircleArrowUpSolid":{"variant":"Solid","glyphName":"circle-arrow-up","cssFile":"InstructureIcons-Solid.css","codepoint":"EA3B","className":"icon-circle-arrow-up","classes":["icon-solid","icon-circle-arrow-up"],"bidirectional":false,"deprecated":false},"IconClearTextFormattingLine":{"variant":"Line","glyphName":"clear-text-formatting","cssFile":"InstructureIcons-Line.css","codepoint":"EA3C","className":"icon-clear-text-formatting","classes":["icon-line","icon-clear-text-formatting"],"bidirectional":false,"deprecated":false},"IconClearTextFormattingSolid":{"variant":"Solid","glyphName":"clear-text-formatting","cssFile":"InstructureIcons-Solid.css","codepoint":"EA3C","className":"icon-clear-text-formatting","classes":["icon-solid","icon-clear-text-formatting"],"bidirectional":false,"deprecated":false},"IconClockLine":{"variant":"Line","glyphName":"clock","cssFile":"InstructureIcons-Line.css","codepoint":"EA3D","className":"icon-clock","classes":["icon-line","icon-clock"],"bidirectional":false,"deprecated":false},"IconClockSolid":{"variant":"Solid","glyphName":"clock","cssFile":"InstructureIcons-Solid.css","codepoint":"EA3D","className":"icon-clock","classes":["icon-solid","icon-clock"],"bidirectional":false,"deprecated":false},"IconClosedCaptioningOffLine":{"variant":"Line","glyphName":"closed-captioning-off","cssFile":"InstructureIcons-Line.css","codepoint":"EA3E","className":"icon-closed-captioning-off","classes":["icon-line","icon-closed-captioning-off"],"bidirectional":false,"deprecated":false},"IconClosedCaptioningOffSolid":{"variant":"Solid","glyphName":"closed-captioning-off","cssFile":"InstructureIcons-Solid.css","codepoint":"EA3E","className":"icon-closed-captioning-off","classes":["icon-solid","icon-closed-captioning-off"],"bidirectional":false,"deprecated":false},"IconClosedCaptioningOnLine":{"variant":"Line","glyphName":"closed-captioning-on","cssFile":"InstructureIcons-Line.css","codepoint":"EA3F","className":"icon-closed-captioning-on","classes":["icon-line","icon-closed-captioning-on"],"bidirectional":false,"deprecated":false},"IconClosedCaptioningOnSolid":{"variant":"Solid","glyphName":"closed-captioning-on","cssFile":"InstructureIcons-Solid.css","codepoint":"EA3F","className":"icon-closed-captioning-on","classes":["icon-solid","icon-closed-captioning-on"],"bidirectional":false,"deprecated":false},"IconClosedCaptioningLine":{"variant":"Line","glyphName":"closed-captioning","cssFile":"InstructureIcons-Line.css","codepoint":"EA40","className":"icon-closed-captioning","classes":["icon-line","icon-closed-captioning"],"bidirectional":false,"deprecated":false},"IconClosedCaptioningSolid":{"variant":"Solid","glyphName":"closed-captioning","cssFile":"InstructureIcons-Solid.css","codepoint":"EA40","className":"icon-closed-captioning","classes":["icon-solid","icon-closed-captioning"],"bidirectional":false,"deprecated":false},"IconCloudDownloadLine":{"variant":"Line","glyphName":"cloud-download","cssFile":"InstructureIcons-Line.css","codepoint":"EA41","className":"icon-cloud-download","classes":["icon-line","icon-cloud-download"],"bidirectional":false,"deprecated":false},"IconCloudDownloadSolid":{"variant":"Solid","glyphName":"cloud-download","cssFile":"InstructureIcons-Solid.css","codepoint":"EA41","className":"icon-cloud-download","classes":["icon-solid","icon-cloud-download"],"bidirectional":false,"deprecated":false},"IconCloudLockLine":{"variant":"Line","glyphName":"cloud-lock","cssFile":"InstructureIcons-Line.css","codepoint":"EA42","className":"icon-cloud-lock","classes":["icon-line","icon-cloud-lock"],"bidirectional":false,"deprecated":false},"IconCloudLockSolid":{"variant":"Solid","glyphName":"cloud-lock","cssFile":"InstructureIcons-Solid.css","codepoint":"EA42","className":"icon-cloud-lock","classes":["icon-solid","icon-cloud-lock"],"bidirectional":false,"deprecated":false},"IconCodeLine":{"variant":"Line","glyphName":"code","cssFile":"InstructureIcons-Line.css","codepoint":"EA43","className":"icon-code","classes":["icon-line","icon-code"],"bidirectional":false,"deprecated":false},"IconCodeSolid":{"variant":"Solid","glyphName":"code","cssFile":"InstructureIcons-Solid.css","codepoint":"EA43","className":"icon-code","classes":["icon-solid","icon-code"],"bidirectional":false,"deprecated":false},"IconCollapseLine":{"variant":"Line","glyphName":"collapse","cssFile":"InstructureIcons-Line.css","codepoint":"EA44","className":"icon-collapse","classes":["icon-line","icon-collapse"],"bidirectional":false,"deprecated":false},"IconCollapseSolid":{"variant":"Solid","glyphName":"collapse","cssFile":"InstructureIcons-Solid.css","codepoint":"EA44","className":"icon-collapse","classes":["icon-solid","icon-collapse"],"bidirectional":false,"deprecated":false},"IconCollectionSaveLine":{"variant":"Line","glyphName":"collection-save","cssFile":"InstructureIcons-Line.css","codepoint":"EA45","className":"icon-collection-save","classes":["icon-line","icon-collection-save"],"bidirectional":false,"deprecated":false},"IconCollectionSaveSolid":{"variant":"Solid","glyphName":"collection-save","cssFile":"InstructureIcons-Solid.css","codepoint":"EA45","className":"icon-collection-save","classes":["icon-solid","icon-collection-save"],"bidirectional":false,"deprecated":false},"IconCollectionLine":{"variant":"Line","glyphName":"collection","cssFile":"InstructureIcons-Line.css","codepoint":"EA46","className":"icon-collection","classes":["icon-line","icon-collection"],"bidirectional":false,"deprecated":false},"IconCollectionSolid":{"variant":"Solid","glyphName":"collection","cssFile":"InstructureIcons-Solid.css","codepoint":"EA46","className":"icon-collection","classes":["icon-solid","icon-collection"],"bidirectional":false,"deprecated":false},"IconCommentLine":{"variant":"Line","glyphName":"comment","cssFile":"InstructureIcons-Line.css","codepoint":"EA47","className":"icon-comment","classes":["icon-line","icon-comment"],"bidirectional":false,"deprecated":false},"IconCommentSolid":{"variant":"Solid","glyphName":"comment","cssFile":"InstructureIcons-Solid.css","codepoint":"EA47","className":"icon-comment","classes":["icon-solid","icon-comment"],"bidirectional":false,"deprecated":false},"IconCommentsOffLine":{"variant":"Line","glyphName":"comments-off","cssFile":"InstructureIcons-Line.css","codepoint":"EA48","className":"icon-comments-off","classes":["icon-line","icon-comments-off"],"bidirectional":false,"deprecated":false},"IconCommentsOffSolid":{"variant":"Solid","glyphName":"comments-off","cssFile":"InstructureIcons-Solid.css","codepoint":"EA48","className":"icon-comments-off","classes":["icon-solid","icon-comments-off"],"bidirectional":false,"deprecated":false},"IconCommentsOnLine":{"variant":"Line","glyphName":"comments-on","cssFile":"InstructureIcons-Line.css","codepoint":"EA49","className":"icon-comments-on","classes":["icon-line","icon-comments-on"],"bidirectional":false,"deprecated":false},"IconCommentsOnSolid":{"variant":"Solid","glyphName":"comments-on","cssFile":"InstructureIcons-Solid.css","codepoint":"EA49","className":"icon-comments-on","classes":["icon-solid","icon-comments-on"],"bidirectional":false,"deprecated":false},"IconCommonsLine":{"variant":"Line","glyphName":"commons","cssFile":"InstructureIcons-Line.css","codepoint":"EA4A","className":"icon-commons","classes":["icon-line","icon-commons"],"bidirectional":false,"deprecated":false},"IconCommonsSolid":{"variant":"Solid","glyphName":"commons","cssFile":"InstructureIcons-Solid.css","codepoint":"EA4A","className":"icon-commons","classes":["icon-solid","icon-commons"],"bidirectional":false,"deprecated":false},"IconCompassLine":{"variant":"Line","glyphName":"compass","cssFile":"InstructureIcons-Line.css","codepoint":"EA4B","className":"icon-compass","classes":["icon-line","icon-compass"],"bidirectional":false,"deprecated":false},"IconCompassSolid":{"variant":"Solid","glyphName":"compass","cssFile":"InstructureIcons-Solid.css","codepoint":"EA4B","className":"icon-compass","classes":["icon-solid","icon-compass"],"bidirectional":false,"deprecated":false},"IconCompleteLine":{"variant":"Line","glyphName":"complete","cssFile":"InstructureIcons-Line.css","codepoint":"EA4C","className":"icon-complete","classes":["icon-line","icon-complete"],"bidirectional":false,"deprecated":false},"IconCompleteSolid":{"variant":"Solid","glyphName":"complete","cssFile":"InstructureIcons-Solid.css","codepoint":"EA4C","className":"icon-complete","classes":["icon-solid","icon-complete"],"bidirectional":false,"deprecated":false},"IconComposeLine":{"variant":"Line","glyphName":"compose","cssFile":"InstructureIcons-Line.css","codepoint":"EA4D","className":"icon-compose","classes":["icon-line","icon-compose"],"bidirectional":true,"deprecated":false},"IconComposeSolid":{"variant":"Solid","glyphName":"compose","cssFile":"InstructureIcons-Solid.css","codepoint":"EA4D","className":"icon-compose","classes":["icon-solid","icon-compose"],"bidirectional":true,"deprecated":false},"IconCopyCourseLine":{"variant":"Line","glyphName":"copy-course","cssFile":"InstructureIcons-Line.css","codepoint":"EA4E","className":"icon-copy-course","classes":["icon-line","icon-copy-course"],"bidirectional":false,"deprecated":true},"IconCopyCourseSolid":{"variant":"Solid","glyphName":"copy-course","cssFile":"InstructureIcons-Solid.css","codepoint":"EA4E","className":"icon-copy-course","classes":["icon-solid","icon-copy-course"],"bidirectional":false,"deprecated":true},"IconCopyLine":{"variant":"Line","glyphName":"copy","cssFile":"InstructureIcons-Line.css","codepoint":"EA4F","className":"icon-copy","classes":["icon-line","icon-copy"],"bidirectional":false,"deprecated":false},"IconCopySolid":{"variant":"Solid","glyphName":"copy","cssFile":"InstructureIcons-Solid.css","codepoint":"EA4F","className":"icon-copy","classes":["icon-solid","icon-copy"],"bidirectional":false,"deprecated":false},"IconCoursesLine":{"variant":"Line","glyphName":"courses","cssFile":"InstructureIcons-Line.css","codepoint":"EA50","className":"icon-courses","classes":["icon-line","icon-courses"],"bidirectional":true,"deprecated":false},"IconCoursesSolid":{"variant":"Solid","glyphName":"courses","cssFile":"InstructureIcons-Solid.css","codepoint":"EA50","className":"icon-courses","classes":["icon-solid","icon-courses"],"bidirectional":true,"deprecated":false},"IconDashboardLine":{"variant":"Line","glyphName":"dashboard","cssFile":"InstructureIcons-Line.css","codepoint":"EA51","className":"icon-dashboard","classes":["icon-line","icon-dashboard"],"bidirectional":false,"deprecated":false},"IconDashboardSolid":{"variant":"Solid","glyphName":"dashboard","cssFile":"InstructureIcons-Solid.css","codepoint":"EA51","className":"icon-dashboard","classes":["icon-solid","icon-dashboard"],"bidirectional":false,"deprecated":false},"IconDeactivateUserLine":{"variant":"Line","glyphName":"deactivate-user","cssFile":"InstructureIcons-Line.css","codepoint":"EA52","className":"icon-deactivate-user","classes":["icon-line","icon-deactivate-user"],"bidirectional":false,"deprecated":false},"IconDeactivateUserSolid":{"variant":"Solid","glyphName":"deactivate-user","cssFile":"InstructureIcons-Solid.css","codepoint":"EA52","className":"icon-deactivate-user","classes":["icon-solid","icon-deactivate-user"],"bidirectional":false,"deprecated":false},"IconDiscussionCheckLine":{"variant":"Line","glyphName":"discussion-check","cssFile":"InstructureIcons-Line.css","codepoint":"EA53","className":"icon-discussion-check","classes":["icon-line","icon-discussion-check"],"bidirectional":false,"deprecated":false},"IconDiscussionCheckSolid":{"variant":"Solid","glyphName":"discussion-check","cssFile":"InstructureIcons-Solid.css","codepoint":"EA53","className":"icon-discussion-check","classes":["icon-solid","icon-discussion-check"],"bidirectional":false,"deprecated":false},"IconDiscussionNewLine":{"variant":"Line","glyphName":"discussion-new","cssFile":"InstructureIcons-Line.css","codepoint":"EA54","className":"icon-discussion-new","classes":["icon-line","icon-discussion-new"],"bidirectional":false,"deprecated":false},"IconDiscussionNewSolid":{"variant":"Solid","glyphName":"discussion-new","cssFile":"InstructureIcons-Solid.css","codepoint":"EA54","className":"icon-discussion-new","classes":["icon-solid","icon-discussion-new"],"bidirectional":false,"deprecated":false},"IconDiscussionReply2Line":{"variant":"Line","glyphName":"discussion-reply-2","cssFile":"InstructureIcons-Line.css","codepoint":"EA55","className":"icon-discussion-reply-2","classes":["icon-line","icon-discussion-reply-2"],"bidirectional":true,"deprecated":false},"IconDiscussionReply2Solid":{"variant":"Solid","glyphName":"discussion-reply-2","cssFile":"InstructureIcons-Solid.css","codepoint":"EA55","className":"icon-discussion-reply-2","classes":["icon-solid","icon-discussion-reply-2"],"bidirectional":true,"deprecated":false},"IconDiscussionReplyDarkLine":{"variant":"Line","glyphName":"discussion-reply-dark","cssFile":"InstructureIcons-Line.css","codepoint":"EA56","className":"icon-discussion-reply-dark","classes":["icon-line","icon-discussion-reply-dark"],"bidirectional":false,"deprecated":true},"IconDiscussionReplyDarkSolid":{"variant":"Solid","glyphName":"discussion-reply-dark","cssFile":"InstructureIcons-Solid.css","codepoint":"EA56","className":"icon-discussion-reply-dark","classes":["icon-solid","icon-discussion-reply-dark"],"bidirectional":false,"deprecated":true},"IconDiscussionReplyLine":{"variant":"Line","glyphName":"discussion-reply","cssFile":"InstructureIcons-Line.css","codepoint":"EA57","className":"icon-discussion-reply","classes":["icon-line","icon-discussion-reply"],"bidirectional":false,"deprecated":true},"IconDiscussionReplySolid":{"variant":"Solid","glyphName":"discussion-reply","cssFile":"InstructureIcons-Solid.css","codepoint":"EA57","className":"icon-discussion-reply","classes":["icon-solid","icon-discussion-reply"],"bidirectional":false,"deprecated":true},"IconDiscussionSearchLine":{"variant":"Line","glyphName":"discussion-search","cssFile":"InstructureIcons-Line.css","codepoint":"EA58","className":"icon-discussion-search","classes":["icon-line","icon-discussion-search"],"bidirectional":false,"deprecated":true},"IconDiscussionSearchSolid":{"variant":"Solid","glyphName":"discussion-search","cssFile":"InstructureIcons-Solid.css","codepoint":"EA58","className":"icon-discussion-search","classes":["icon-solid","icon-discussion-search"],"bidirectional":false,"deprecated":true},"IconDiscussionXLine":{"variant":"Line","glyphName":"discussion-x","cssFile":"InstructureIcons-Line.css","codepoint":"EA59","className":"icon-discussion-x","classes":["icon-line","icon-discussion-x"],"bidirectional":false,"deprecated":true},"IconDiscussionXSolid":{"variant":"Solid","glyphName":"discussion-x","cssFile":"InstructureIcons-Solid.css","codepoint":"EA59","className":"icon-discussion-x","classes":["icon-solid","icon-discussion-x"],"bidirectional":false,"deprecated":true},"IconDiscussionLine":{"variant":"Line","glyphName":"discussion","cssFile":"InstructureIcons-Line.css","codepoint":"EA5A","className":"icon-discussion","classes":["icon-line","icon-discussion"],"bidirectional":true,"deprecated":false},"IconDiscussionSolid":{"variant":"Solid","glyphName":"discussion","cssFile":"InstructureIcons-Solid.css","codepoint":"EA5A","className":"icon-discussion","classes":["icon-solid","icon-discussion"],"bidirectional":true,"deprecated":false},"IconDocumentLine":{"variant":"Line","glyphName":"document","cssFile":"InstructureIcons-Line.css","codepoint":"EA5B","className":"icon-document","classes":["icon-line","icon-document"],"bidirectional":true,"deprecated":false},"IconDocumentSolid":{"variant":"Solid","glyphName":"document","cssFile":"InstructureIcons-Solid.css","codepoint":"EA5B","className":"icon-document","classes":["icon-solid","icon-document"],"bidirectional":true,"deprecated":false},"IconDownloadLine":{"variant":"Line","glyphName":"download","cssFile":"InstructureIcons-Line.css","codepoint":"EA5C","className":"icon-download","classes":["icon-line","icon-download"],"bidirectional":false,"deprecated":false},"IconDownloadSolid":{"variant":"Solid","glyphName":"download","cssFile":"InstructureIcons-Solid.css","codepoint":"EA5C","className":"icon-download","classes":["icon-solid","icon-download"],"bidirectional":false,"deprecated":false},"IconDragHandleLine":{"variant":"Line","glyphName":"drag-handle","cssFile":"InstructureIcons-Line.css","codepoint":"EA5D","className":"icon-drag-handle","classes":["icon-line","icon-drag-handle"],"bidirectional":false,"deprecated":false},"IconDragHandleSolid":{"variant":"Solid","glyphName":"drag-handle","cssFile":"InstructureIcons-Solid.css","codepoint":"EA5D","className":"icon-drag-handle","classes":["icon-solid","icon-drag-handle"],"bidirectional":false,"deprecated":false},"IconDropDownLine":{"variant":"Line","glyphName":"drop-down","cssFile":"InstructureIcons-Line.css","codepoint":"EA5E","className":"icon-drop-down","classes":["icon-line","icon-drop-down"],"bidirectional":false,"deprecated":false},"IconDropDownSolid":{"variant":"Solid","glyphName":"drop-down","cssFile":"InstructureIcons-Solid.css","codepoint":"EA5E","className":"icon-drop-down","classes":["icon-solid","icon-drop-down"],"bidirectional":false,"deprecated":false},"IconDuplicateLine":{"variant":"Line","glyphName":"duplicate","cssFile":"InstructureIcons-Line.css","codepoint":"EA5F","className":"icon-duplicate","classes":["icon-line","icon-duplicate"],"bidirectional":false,"deprecated":false},"IconDuplicateSolid":{"variant":"Solid","glyphName":"duplicate","cssFile":"InstructureIcons-Solid.css","codepoint":"EA5F","className":"icon-duplicate","classes":["icon-solid","icon-duplicate"],"bidirectional":false,"deprecated":false},"IconEditLine":{"variant":"Line","glyphName":"edit","cssFile":"InstructureIcons-Line.css","codepoint":"EA60","className":"icon-edit","classes":["icon-line","icon-edit"],"bidirectional":true,"deprecated":false},"IconEditSolid":{"variant":"Solid","glyphName":"edit","cssFile":"InstructureIcons-Solid.css","codepoint":"EA60","className":"icon-edit","classes":["icon-solid","icon-edit"],"bidirectional":true,"deprecated":false},"IconEducatorsLine":{"variant":"Line","glyphName":"educators","cssFile":"InstructureIcons-Line.css","codepoint":"EA61","className":"icon-educators","classes":["icon-line","icon-educators"],"bidirectional":false,"deprecated":false},"IconEducatorsSolid":{"variant":"Solid","glyphName":"educators","cssFile":"InstructureIcons-Solid.css","codepoint":"EA61","className":"icon-educators","classes":["icon-solid","icon-educators"],"bidirectional":false,"deprecated":false},"IconEmailLine":{"variant":"Line","glyphName":"email","cssFile":"InstructureIcons-Line.css","codepoint":"EA62","className":"icon-email","classes":["icon-line","icon-email"],"bidirectional":false,"deprecated":false},"IconEmailSolid":{"variant":"Solid","glyphName":"email","cssFile":"InstructureIcons-Solid.css","codepoint":"EA62","className":"icon-email","classes":["icon-solid","icon-email"],"bidirectional":false,"deprecated":false},"IconEmptyLine":{"variant":"Line","glyphName":"empty","cssFile":"InstructureIcons-Line.css","codepoint":"EA63","className":"icon-empty","classes":["icon-line","icon-empty"],"bidirectional":false,"deprecated":false},"IconEmptySolid":{"variant":"Solid","glyphName":"empty","cssFile":"InstructureIcons-Solid.css","codepoint":"EA63","className":"icon-empty","classes":["icon-solid","icon-empty"],"bidirectional":false,"deprecated":false},"IconEndLine":{"variant":"Line","glyphName":"end","cssFile":"InstructureIcons-Line.css","codepoint":"EA64","className":"icon-end","classes":["icon-line","icon-end"],"bidirectional":false,"deprecated":false},"IconEndSolid":{"variant":"Solid","glyphName":"end","cssFile":"InstructureIcons-Solid.css","codepoint":"EA64","className":"icon-end","classes":["icon-solid","icon-end"],"bidirectional":false,"deprecated":false},"IconEportfolioLine":{"variant":"Line","glyphName":"eportfolio","cssFile":"InstructureIcons-Line.css","codepoint":"EA65","className":"icon-eportfolio","classes":["icon-line","icon-eportfolio"],"bidirectional":false,"deprecated":false},"IconEportfolioSolid":{"variant":"Solid","glyphName":"eportfolio","cssFile":"InstructureIcons-Solid.css","codepoint":"EA65","className":"icon-eportfolio","classes":["icon-solid","icon-eportfolio"],"bidirectional":false,"deprecated":false},"IconEquationLine":{"variant":"Line","glyphName":"equation","cssFile":"InstructureIcons-Line.css","codepoint":"EA66","className":"icon-equation","classes":["icon-line","icon-equation"],"bidirectional":false,"deprecated":false},"IconEquationSolid":{"variant":"Solid","glyphName":"equation","cssFile":"InstructureIcons-Solid.css","codepoint":"EA66","className":"icon-equation","classes":["icon-solid","icon-equation"],"bidirectional":false,"deprecated":false},"IconEquellaLine":{"variant":"Line","glyphName":"equella","cssFile":"InstructureIcons-Line.css","codepoint":"EA67","className":"icon-equella","classes":["icon-line","icon-equella"],"bidirectional":false,"deprecated":false},"IconEquellaSolid":{"variant":"Solid","glyphName":"equella","cssFile":"InstructureIcons-Solid.css","codepoint":"EA67","className":"icon-equella","classes":["icon-solid","icon-equella"],"bidirectional":false,"deprecated":false},"IconEssayLine":{"variant":"Line","glyphName":"essay","cssFile":"InstructureIcons-Line.css","codepoint":"EA68","className":"icon-essay","classes":["icon-line","icon-essay"],"bidirectional":true,"deprecated":false},"IconEssaySolid":{"variant":"Solid","glyphName":"essay","cssFile":"InstructureIcons-Solid.css","codepoint":"EA68","className":"icon-essay","classes":["icon-solid","icon-essay"],"bidirectional":true,"deprecated":false},"IconExitFullScreenLine":{"variant":"Line","glyphName":"exit-full-screen","cssFile":"InstructureIcons-Line.css","codepoint":"EA69","className":"icon-exit-full-screen","classes":["icon-line","icon-exit-full-screen"],"bidirectional":false,"deprecated":false},"IconExitFullScreenSolid":{"variant":"Solid","glyphName":"exit-full-screen","cssFile":"InstructureIcons-Solid.css","codepoint":"EA69","className":"icon-exit-full-screen","classes":["icon-solid","icon-exit-full-screen"],"bidirectional":false,"deprecated":false},"IconExpandItemsLine":{"variant":"Line","glyphName":"expand-items","cssFile":"InstructureIcons-Line.css","codepoint":"EA6A","className":"icon-expand-items","classes":["icon-line","icon-expand-items"],"bidirectional":false,"deprecated":false},"IconExpandItemsSolid":{"variant":"Solid","glyphName":"expand-items","cssFile":"InstructureIcons-Solid.css","codepoint":"EA6A","className":"icon-expand-items","classes":["icon-solid","icon-expand-items"],"bidirectional":false,"deprecated":false},"IconExpandLeftLine":{"variant":"Line","glyphName":"expand-left","cssFile":"InstructureIcons-Line.css","codepoint":"EA6B","className":"icon-expand-left","classes":["icon-line","icon-expand-left"],"bidirectional":true,"deprecated":true},"IconExpandLeftSolid":{"variant":"Solid","glyphName":"expand-left","cssFile":"InstructureIcons-Solid.css","codepoint":"EA6B","className":"icon-expand-left","classes":["icon-solid","icon-expand-left"],"bidirectional":true,"deprecated":true},"IconExpandStartLine":{"variant":"Line","glyphName":"expand-start","cssFile":"InstructureIcons-Line.css","codepoint":"EA6C","className":"icon-expand-start","classes":["icon-line","icon-expand-start"],"bidirectional":true,"deprecated":false},"IconExpandStartSolid":{"variant":"Solid","glyphName":"expand-start","cssFile":"InstructureIcons-Solid.css","codepoint":"EA6C","className":"icon-expand-start","classes":["icon-solid","icon-expand-start"],"bidirectional":true,"deprecated":false},"IconExpandLine":{"variant":"Line","glyphName":"expand","cssFile":"InstructureIcons-Line.css","codepoint":"EA6D","className":"icon-expand","classes":["icon-line","icon-expand"],"bidirectional":false,"deprecated":false},"IconExpandSolid":{"variant":"Solid","glyphName":"expand","cssFile":"InstructureIcons-Solid.css","codepoint":"EA6D","className":"icon-expand","classes":["icon-solid","icon-expand"],"bidirectional":false,"deprecated":false},"IconExportContentLine":{"variant":"Line","glyphName":"export-content","cssFile":"InstructureIcons-Line.css","codepoint":"EA6E","className":"icon-export-content","classes":["icon-line","icon-export-content"],"bidirectional":true,"deprecated":false},"IconExportContentSolid":{"variant":"Solid","glyphName":"export-content","cssFile":"InstructureIcons-Solid.css","codepoint":"EA6E","className":"icon-export-content","classes":["icon-solid","icon-export-content"],"bidirectional":true,"deprecated":false},"IconExportLine":{"variant":"Line","glyphName":"export","cssFile":"InstructureIcons-Line.css","codepoint":"EA6F","className":"icon-export","classes":["icon-line","icon-export"],"bidirectional":true,"deprecated":false},"IconExportSolid":{"variant":"Solid","glyphName":"export","cssFile":"InstructureIcons-Solid.css","codepoint":"EA6F","className":"icon-export","classes":["icon-solid","icon-export"],"bidirectional":true,"deprecated":false},"IconExternalLinkLine":{"variant":"Line","glyphName":"external-link","cssFile":"InstructureIcons-Line.css","codepoint":"EA70","className":"icon-external-link","classes":["icon-line","icon-external-link"],"bidirectional":true,"deprecated":false},"IconExternalLinkSolid":{"variant":"Solid","glyphName":"external-link","cssFile":"InstructureIcons-Solid.css","codepoint":"EA70","className":"icon-external-link","classes":["icon-solid","icon-external-link"],"bidirectional":true,"deprecated":false},"IconEyeLine":{"variant":"Line","glyphName":"eye","cssFile":"InstructureIcons-Line.css","codepoint":"EA71","className":"icon-eye","classes":["icon-line","icon-eye"],"bidirectional":false,"deprecated":false},"IconEyeSolid":{"variant":"Solid","glyphName":"eye","cssFile":"InstructureIcons-Solid.css","codepoint":"EA71","className":"icon-eye","classes":["icon-solid","icon-eye"],"bidirectional":false,"deprecated":false},"IconFacebookBoxedLine":{"variant":"Line","glyphName":"facebook-boxed","cssFile":"InstructureIcons-Line.css","codepoint":"EA72","className":"icon-facebook-boxed","classes":["icon-line","icon-facebook-boxed"],"bidirectional":false,"deprecated":false},"IconFacebookBoxedSolid":{"variant":"Solid","glyphName":"facebook-boxed","cssFile":"InstructureIcons-Solid.css","codepoint":"EA72","className":"icon-facebook-boxed","classes":["icon-solid","icon-facebook-boxed"],"bidirectional":false,"deprecated":false},"IconFacebookLine":{"variant":"Line","glyphName":"facebook","cssFile":"InstructureIcons-Line.css","codepoint":"EA73","className":"icon-facebook","classes":["icon-line","icon-facebook"],"bidirectional":false,"deprecated":false},"IconFacebookSolid":{"variant":"Solid","glyphName":"facebook","cssFile":"InstructureIcons-Solid.css","codepoint":"EA73","className":"icon-facebook","classes":["icon-solid","icon-facebook"],"bidirectional":false,"deprecated":false},"IconFastForwardLine":{"variant":"Line","glyphName":"fast-forward","cssFile":"InstructureIcons-Line.css","codepoint":"EA74","className":"icon-fast-forward","classes":["icon-line","icon-fast-forward"],"bidirectional":false,"deprecated":false},"IconFastForwardSolid":{"variant":"Solid","glyphName":"fast-forward","cssFile":"InstructureIcons-Solid.css","codepoint":"EA74","className":"icon-fast-forward","classes":["icon-solid","icon-fast-forward"],"bidirectional":false,"deprecated":false},"IconFeedbackLine":{"variant":"Line","glyphName":"feedback","cssFile":"InstructureIcons-Line.css","codepoint":"EA75","className":"icon-feedback","classes":["icon-line","icon-feedback"],"bidirectional":true,"deprecated":false},"IconFeedbackSolid":{"variant":"Solid","glyphName":"feedback","cssFile":"InstructureIcons-Solid.css","codepoint":"EA75","className":"icon-feedback","classes":["icon-solid","icon-feedback"],"bidirectional":true,"deprecated":false},"IconFileLockedLine":{"variant":"Line","glyphName":"file-locked","cssFile":"InstructureIcons-Line.css","codepoint":"EA76","className":"icon-file-locked","classes":["icon-line","icon-file-locked"],"bidirectional":false,"deprecated":false},"IconFileLockedSolid":{"variant":"Solid","glyphName":"file-locked","cssFile":"InstructureIcons-Solid.css","codepoint":"EA76","className":"icon-file-locked","classes":["icon-solid","icon-file-locked"],"bidirectional":false,"deprecated":false},"IconFilesCopyrightLine":{"variant":"Line","glyphName":"files-copyright","cssFile":"InstructureIcons-Line.css","codepoint":"EA77","className":"icon-files-copyright","classes":["icon-line","icon-files-copyright"],"bidirectional":false,"deprecated":false},"IconFilesCopyrightSolid":{"variant":"Solid","glyphName":"files-copyright","cssFile":"InstructureIcons-Solid.css","codepoint":"EA77","className":"icon-files-copyright","classes":["icon-solid","icon-files-copyright"],"bidirectional":false,"deprecated":false},"IconFilesCreativeCommonsLine":{"variant":"Line","glyphName":"files-creative-commons","cssFile":"InstructureIcons-Line.css","codepoint":"EA78","className":"icon-files-creative-commons","classes":["icon-line","icon-files-creative-commons"],"bidirectional":false,"deprecated":false},"IconFilesCreativeCommonsSolid":{"variant":"Solid","glyphName":"files-creative-commons","cssFile":"InstructureIcons-Solid.css","codepoint":"EA78","className":"icon-files-creative-commons","classes":["icon-solid","icon-files-creative-commons"],"bidirectional":false,"deprecated":false},"IconFilesFairUseLine":{"variant":"Line","glyphName":"files-fair-use","cssFile":"InstructureIcons-Line.css","codepoint":"EA79","className":"icon-files-fair-use","classes":["icon-line","icon-files-fair-use"],"bidirectional":false,"deprecated":false},"IconFilesFairUseSolid":{"variant":"Solid","glyphName":"files-fair-use","cssFile":"InstructureIcons-Solid.css","codepoint":"EA79","className":"icon-files-fair-use","classes":["icon-solid","icon-files-fair-use"],"bidirectional":false,"deprecated":false},"IconFilesObtainedPermissionLine":{"variant":"Line","glyphName":"files-obtained-permission","cssFile":"InstructureIcons-Line.css","codepoint":"EA7A","className":"icon-files-obtained-permission","classes":["icon-line","icon-files-obtained-permission"],"bidirectional":false,"deprecated":false},"IconFilesObtainedPermissionSolid":{"variant":"Solid","glyphName":"files-obtained-permission","cssFile":"InstructureIcons-Solid.css","codepoint":"EA7A","className":"icon-files-obtained-permission","classes":["icon-solid","icon-files-obtained-permission"],"bidirectional":false,"deprecated":false},"IconFilesPublicDomainLine":{"variant":"Line","glyphName":"files-public-domain","cssFile":"InstructureIcons-Line.css","codepoint":"EA7B","className":"icon-files-public-domain","classes":["icon-line","icon-files-public-domain"],"bidirectional":false,"deprecated":false},"IconFilesPublicDomainSolid":{"variant":"Solid","glyphName":"files-public-domain","cssFile":"InstructureIcons-Solid.css","codepoint":"EA7B","className":"icon-files-public-domain","classes":["icon-solid","icon-files-public-domain"],"bidirectional":false,"deprecated":false},"IconFilmstripLine":{"variant":"Line","glyphName":"filmstrip","cssFile":"InstructureIcons-Line.css","codepoint":"EA7C","className":"icon-filmstrip","classes":["icon-line","icon-filmstrip"],"bidirectional":false,"deprecated":false},"IconFilmstripSolid":{"variant":"Solid","glyphName":"filmstrip","cssFile":"InstructureIcons-Solid.css","codepoint":"EA7C","className":"icon-filmstrip","classes":["icon-solid","icon-filmstrip"],"bidirectional":false,"deprecated":false},"IconFilterLine":{"variant":"Line","glyphName":"filter","cssFile":"InstructureIcons-Line.css","codepoint":"EA7D","className":"icon-filter","classes":["icon-line","icon-filter"],"bidirectional":false,"deprecated":false},"IconFilterSolid":{"variant":"Solid","glyphName":"filter","cssFile":"InstructureIcons-Solid.css","codepoint":"EA7D","className":"icon-filter","classes":["icon-solid","icon-filter"],"bidirectional":false,"deprecated":false},"IconFlagLine":{"variant":"Line","glyphName":"flag","cssFile":"InstructureIcons-Line.css","codepoint":"EA7E","className":"icon-flag","classes":["icon-line","icon-flag"],"bidirectional":false,"deprecated":false},"IconFlagSolid":{"variant":"Solid","glyphName":"flag","cssFile":"InstructureIcons-Solid.css","codepoint":"EA7E","className":"icon-flag","classes":["icon-solid","icon-flag"],"bidirectional":false,"deprecated":false},"IconFolderLockedLine":{"variant":"Line","glyphName":"folder-locked","cssFile":"InstructureIcons-Line.css","codepoint":"EA7F","className":"icon-folder-locked","classes":["icon-line","icon-folder-locked"],"bidirectional":true,"deprecated":false},"IconFolderLockedSolid":{"variant":"Solid","glyphName":"folder-locked","cssFile":"InstructureIcons-Solid.css","codepoint":"EA7F","className":"icon-folder-locked","classes":["icon-solid","icon-folder-locked"],"bidirectional":true,"deprecated":false},"IconFolderLine":{"variant":"Line","glyphName":"folder","cssFile":"InstructureIcons-Line.css","codepoint":"EA80","className":"icon-folder","classes":["icon-line","icon-folder"],"bidirectional":true,"deprecated":false},"IconFolderSolid":{"variant":"Solid","glyphName":"folder","cssFile":"InstructureIcons-Solid.css","codepoint":"EA80","className":"icon-folder","classes":["icon-solid","icon-folder"],"bidirectional":true,"deprecated":false},"IconForwardLine":{"variant":"Line","glyphName":"forward","cssFile":"InstructureIcons-Line.css","codepoint":"EA81","className":"icon-forward","classes":["icon-line","icon-forward"],"bidirectional":true,"deprecated":false},"IconForwardSolid":{"variant":"Solid","glyphName":"forward","cssFile":"InstructureIcons-Solid.css","codepoint":"EA81","className":"icon-forward","classes":["icon-solid","icon-forward"],"bidirectional":true,"deprecated":false},"IconFullScreenLine":{"variant":"Line","glyphName":"full-screen","cssFile":"InstructureIcons-Line.css","codepoint":"EA82","className":"icon-full-screen","classes":["icon-line","icon-full-screen"],"bidirectional":false,"deprecated":false},"IconFullScreenSolid":{"variant":"Solid","glyphName":"full-screen","cssFile":"InstructureIcons-Solid.css","codepoint":"EA82","className":"icon-full-screen","classes":["icon-solid","icon-full-screen"],"bidirectional":false,"deprecated":false},"IconGithubLine":{"variant":"Line","glyphName":"github","cssFile":"InstructureIcons-Line.css","codepoint":"EA83","className":"icon-github","classes":["icon-line","icon-github"],"bidirectional":false,"deprecated":false},"IconGithubSolid":{"variant":"Solid","glyphName":"github","cssFile":"InstructureIcons-Solid.css","codepoint":"EA83","className":"icon-github","classes":["icon-solid","icon-github"],"bidirectional":false,"deprecated":false},"IconGradebookExportLine":{"variant":"Line","glyphName":"gradebook-export","cssFile":"InstructureIcons-Line.css","codepoint":"EA84","className":"icon-gradebook-export","classes":["icon-line","icon-gradebook-export"],"bidirectional":true,"deprecated":false},"IconGradebookExportSolid":{"variant":"Solid","glyphName":"gradebook-export","cssFile":"InstructureIcons-Solid.css","codepoint":"EA84","className":"icon-gradebook-export","classes":["icon-solid","icon-gradebook-export"],"bidirectional":true,"deprecated":false},"IconGradebookImportLine":{"variant":"Line","glyphName":"gradebook-import","cssFile":"InstructureIcons-Line.css","codepoint":"EA85","className":"icon-gradebook-import","classes":["icon-line","icon-gradebook-import"],"bidirectional":true,"deprecated":false},"IconGradebookImportSolid":{"variant":"Solid","glyphName":"gradebook-import","cssFile":"InstructureIcons-Solid.css","codepoint":"EA85","className":"icon-gradebook-import","classes":["icon-solid","icon-gradebook-import"],"bidirectional":true,"deprecated":false},"IconGradebookLine":{"variant":"Line","glyphName":"gradebook","cssFile":"InstructureIcons-Line.css","codepoint":"EA86","className":"icon-gradebook","classes":["icon-line","icon-gradebook"],"bidirectional":false,"deprecated":false},"IconGradebookSolid":{"variant":"Solid","glyphName":"gradebook","cssFile":"InstructureIcons-Solid.css","codepoint":"EA86","className":"icon-gradebook","classes":["icon-solid","icon-gradebook"],"bidirectional":false,"deprecated":false},"IconGroupDarkNewLine":{"variant":"Line","glyphName":"group-dark-new","cssFile":"InstructureIcons-Line.css","codepoint":"EA87","className":"icon-group-dark-new","classes":["icon-line","icon-group-dark-new"],"bidirectional":false,"deprecated":false},"IconGroupDarkNewSolid":{"variant":"Solid","glyphName":"group-dark-new","cssFile":"InstructureIcons-Solid.css","codepoint":"EA87","className":"icon-group-dark-new","classes":["icon-solid","icon-group-dark-new"],"bidirectional":false,"deprecated":false},"IconGroupNewLine":{"variant":"Line","glyphName":"group-new","cssFile":"InstructureIcons-Line.css","codepoint":"EA88","className":"icon-group-new","classes":["icon-line","icon-group-new"],"bidirectional":false,"deprecated":false},"IconGroupNewSolid":{"variant":"Solid","glyphName":"group-new","cssFile":"InstructureIcons-Solid.css","codepoint":"EA88","className":"icon-group-new","classes":["icon-solid","icon-group-new"],"bidirectional":false,"deprecated":false},"IconGroupLine":{"variant":"Line","glyphName":"group","cssFile":"InstructureIcons-Line.css","codepoint":"EA89","className":"icon-group","classes":["icon-line","icon-group"],"bidirectional":false,"deprecated":false},"IconGroupSolid":{"variant":"Solid","glyphName":"group","cssFile":"InstructureIcons-Solid.css","codepoint":"EA89","className":"icon-group","classes":["icon-solid","icon-group"],"bidirectional":false,"deprecated":false},"IconHamburgerLine":{"variant":"Line","glyphName":"hamburger","cssFile":"InstructureIcons-Line.css","codepoint":"EA8A","className":"icon-hamburger","classes":["icon-line","icon-hamburger"],"bidirectional":false,"deprecated":false},"IconHamburgerSolid":{"variant":"Solid","glyphName":"hamburger","cssFile":"InstructureIcons-Solid.css","codepoint":"EA8A","className":"icon-hamburger","classes":["icon-solid","icon-hamburger"],"bidirectional":false,"deprecated":false},"IconHeartLine":{"variant":"Line","glyphName":"heart","cssFile":"InstructureIcons-Line.css","codepoint":"EA8B","className":"icon-heart","classes":["icon-line","icon-heart"],"bidirectional":false,"deprecated":false},"IconHeartSolid":{"variant":"Solid","glyphName":"heart","cssFile":"InstructureIcons-Solid.css","codepoint":"EA8B","className":"icon-heart","classes":["icon-solid","icon-heart"],"bidirectional":false,"deprecated":false},"IconHighlighterLine":{"variant":"Line","glyphName":"highlighter","cssFile":"InstructureIcons-Line.css","codepoint":"EA8C","className":"icon-highlighter","classes":["icon-line","icon-highlighter"],"bidirectional":true,"deprecated":false},"IconHighlighterSolid":{"variant":"Solid","glyphName":"highlighter","cssFile":"InstructureIcons-Solid.css","codepoint":"EA8C","className":"icon-highlighter","classes":["icon-solid","icon-highlighter"],"bidirectional":true,"deprecated":false},"IconHomeLine":{"variant":"Line","glyphName":"home","cssFile":"InstructureIcons-Line.css","codepoint":"EA8D","className":"icon-home","classes":["icon-line","icon-home"],"bidirectional":false,"deprecated":false},"IconHomeSolid":{"variant":"Solid","glyphName":"home","cssFile":"InstructureIcons-Solid.css","codepoint":"EA8D","className":"icon-home","classes":["icon-solid","icon-home"],"bidirectional":false,"deprecated":false},"IconHourGlassLine":{"variant":"Line","glyphName":"hour-glass","cssFile":"InstructureIcons-Line.css","codepoint":"EA8E","className":"icon-hour-glass","classes":["icon-line","icon-hour-glass"],"bidirectional":false,"deprecated":false},"IconHourGlassSolid":{"variant":"Solid","glyphName":"hour-glass","cssFile":"InstructureIcons-Solid.css","codepoint":"EA8E","className":"icon-hour-glass","classes":["icon-solid","icon-hour-glass"],"bidirectional":false,"deprecated":false},"IconImageLine":{"variant":"Line","glyphName":"image","cssFile":"InstructureIcons-Line.css","codepoint":"EA8F","className":"icon-image","classes":["icon-line","icon-image"],"bidirectional":false,"deprecated":false},"IconImageSolid":{"variant":"Solid","glyphName":"image","cssFile":"InstructureIcons-Solid.css","codepoint":"EA8F","className":"icon-image","classes":["icon-solid","icon-image"],"bidirectional":false,"deprecated":false},"IconImportContentLine":{"variant":"Line","glyphName":"import-content","cssFile":"InstructureIcons-Line.css","codepoint":"EA90","className":"icon-import-content","classes":["icon-line","icon-import-content"],"bidirectional":true,"deprecated":false},"IconImportContentSolid":{"variant":"Solid","glyphName":"import-content","cssFile":"InstructureIcons-Solid.css","codepoint":"EA90","className":"icon-import-content","classes":["icon-solid","icon-import-content"],"bidirectional":true,"deprecated":false},"IconImportLine":{"variant":"Line","glyphName":"import","cssFile":"InstructureIcons-Line.css","codepoint":"EA91","className":"icon-import","classes":["icon-line","icon-import"],"bidirectional":true,"deprecated":false},"IconImportSolid":{"variant":"Solid","glyphName":"import","cssFile":"InstructureIcons-Solid.css","codepoint":"EA91","className":"icon-import","classes":["icon-solid","icon-import"],"bidirectional":true,"deprecated":false},"IconInboxLine":{"variant":"Line","glyphName":"inbox","cssFile":"InstructureIcons-Line.css","codepoint":"EA92","className":"icon-inbox","classes":["icon-line","icon-inbox"],"bidirectional":false,"deprecated":false},"IconInboxSolid":{"variant":"Solid","glyphName":"inbox","cssFile":"InstructureIcons-Solid.css","codepoint":"EA92","className":"icon-inbox","classes":["icon-solid","icon-inbox"],"bidirectional":false,"deprecated":false},"IconIndent2Line":{"variant":"Line","glyphName":"indent-2","cssFile":"InstructureIcons-Line.css","codepoint":"EA93","className":"icon-indent-2","classes":["icon-line","icon-indent-2"],"bidirectional":true,"deprecated":false},"IconIndent2Solid":{"variant":"Solid","glyphName":"indent-2","cssFile":"InstructureIcons-Solid.css","codepoint":"EA93","className":"icon-indent-2","classes":["icon-solid","icon-indent-2"],"bidirectional":true,"deprecated":false},"IconIndentLine":{"variant":"Line","glyphName":"indent","cssFile":"InstructureIcons-Line.css","codepoint":"EA94","className":"icon-indent","classes":["icon-line","icon-indent"],"bidirectional":true,"deprecated":false},"IconIndentSolid":{"variant":"Solid","glyphName":"indent","cssFile":"InstructureIcons-Solid.css","codepoint":"EA94","className":"icon-indent","classes":["icon-solid","icon-indent"],"bidirectional":true,"deprecated":false},"IconInfoBorderlessLine":{"variant":"Line","glyphName":"info-borderless","cssFile":"InstructureIcons-Line.css","codepoint":"EA95","className":"icon-info-borderless","classes":["icon-line","icon-info-borderless"],"bidirectional":false,"deprecated":false},"IconInfoBorderlessSolid":{"variant":"Solid","glyphName":"info-borderless","cssFile":"InstructureIcons-Solid.css","codepoint":"EA95","className":"icon-info-borderless","classes":["icon-solid","icon-info-borderless"],"bidirectional":false,"deprecated":false},"IconInfoLine":{"variant":"Line","glyphName":"info","cssFile":"InstructureIcons-Line.css","codepoint":"EA96","className":"icon-info","classes":["icon-line","icon-info"],"bidirectional":false,"deprecated":false},"IconInfoSolid":{"variant":"Solid","glyphName":"info","cssFile":"InstructureIcons-Solid.css","codepoint":"EA96","className":"icon-info","classes":["icon-solid","icon-info"],"bidirectional":false,"deprecated":false},"IconInstructureLine":{"variant":"Line","glyphName":"instructure","cssFile":"InstructureIcons-Line.css","codepoint":"EA97","className":"icon-instructure","classes":["icon-line","icon-instructure"],"bidirectional":false,"deprecated":false},"IconInstructureSolid":{"variant":"Solid","glyphName":"instructure","cssFile":"InstructureIcons-Solid.css","codepoint":"EA97","className":"icon-instructure","classes":["icon-solid","icon-instructure"],"bidirectional":false,"deprecated":false},"IconIntegrationsLine":{"variant":"Line","glyphName":"integrations","cssFile":"InstructureIcons-Line.css","codepoint":"EA98","className":"icon-integrations","classes":["icon-line","icon-integrations"],"bidirectional":false,"deprecated":false},"IconIntegrationsSolid":{"variant":"Solid","glyphName":"integrations","cssFile":"InstructureIcons-Solid.css","codepoint":"EA98","className":"icon-integrations","classes":["icon-solid","icon-integrations"],"bidirectional":false,"deprecated":false},"IconInvitationLine":{"variant":"Line","glyphName":"invitation","cssFile":"InstructureIcons-Line.css","codepoint":"EA99","className":"icon-invitation","classes":["icon-line","icon-invitation"],"bidirectional":false,"deprecated":false},"IconInvitationSolid":{"variant":"Solid","glyphName":"invitation","cssFile":"InstructureIcons-Solid.css","codepoint":"EA99","className":"icon-invitation","classes":["icon-solid","icon-invitation"],"bidirectional":false,"deprecated":false},"IconItalicLine":{"variant":"Line","glyphName":"italic","cssFile":"InstructureIcons-Line.css","codepoint":"EA9A","className":"icon-italic","classes":["icon-line","icon-italic"],"bidirectional":false,"deprecated":false},"IconItalicSolid":{"variant":"Solid","glyphName":"italic","cssFile":"InstructureIcons-Solid.css","codepoint":"EA9A","className":"icon-italic","classes":["icon-solid","icon-italic"],"bidirectional":false,"deprecated":false},"IconKeyboardShortcutsLine":{"variant":"Line","glyphName":"keyboard-shortcuts","cssFile":"InstructureIcons-Line.css","codepoint":"EA9B","className":"icon-keyboard-shortcuts","classes":["icon-line","icon-keyboard-shortcuts"],"bidirectional":false,"deprecated":false},"IconKeyboardShortcutsSolid":{"variant":"Solid","glyphName":"keyboard-shortcuts","cssFile":"InstructureIcons-Solid.css","codepoint":"EA9B","className":"icon-keyboard-shortcuts","classes":["icon-solid","icon-keyboard-shortcuts"],"bidirectional":false,"deprecated":false},"IconLaunchLine":{"variant":"Line","glyphName":"launch","cssFile":"InstructureIcons-Line.css","codepoint":"EA9C","className":"icon-launch","classes":["icon-line","icon-launch"],"bidirectional":false,"deprecated":false},"IconLaunchSolid":{"variant":"Solid","glyphName":"launch","cssFile":"InstructureIcons-Solid.css","codepoint":"EA9C","className":"icon-launch","classes":["icon-solid","icon-launch"],"bidirectional":false,"deprecated":false},"IconLifePreserverLine":{"variant":"Line","glyphName":"life-preserver","cssFile":"InstructureIcons-Line.css","codepoint":"EA9D","className":"icon-life-preserver","classes":["icon-line","icon-life-preserver"],"bidirectional":false,"deprecated":false},"IconLifePreserverSolid":{"variant":"Solid","glyphName":"life-preserver","cssFile":"InstructureIcons-Solid.css","codepoint":"EA9D","className":"icon-life-preserver","classes":["icon-solid","icon-life-preserver"],"bidirectional":false,"deprecated":false},"IconLikeLine":{"variant":"Line","glyphName":"like","cssFile":"InstructureIcons-Line.css","codepoint":"EA9E","className":"icon-like","classes":["icon-line","icon-like"],"bidirectional":false,"deprecated":false},"IconLikeSolid":{"variant":"Solid","glyphName":"like","cssFile":"InstructureIcons-Solid.css","codepoint":"EA9E","className":"icon-like","classes":["icon-solid","icon-like"],"bidirectional":false,"deprecated":false},"IconLineReaderLine":{"variant":"Line","glyphName":"line-reader","cssFile":"InstructureIcons-Line.css","codepoint":"EA9F","className":"icon-line-reader","classes":["icon-line","icon-line-reader"],"bidirectional":false,"deprecated":false},"IconLineReaderSolid":{"variant":"Solid","glyphName":"line-reader","cssFile":"InstructureIcons-Solid.css","codepoint":"EA9F","className":"icon-line-reader","classes":["icon-solid","icon-line-reader"],"bidirectional":false,"deprecated":false},"IconLinkLine":{"variant":"Line","glyphName":"link","cssFile":"InstructureIcons-Line.css","codepoint":"EAA0","className":"icon-link","classes":["icon-line","icon-link"],"bidirectional":false,"deprecated":false},"IconLinkSolid":{"variant":"Solid","glyphName":"link","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA0","className":"icon-link","classes":["icon-solid","icon-link"],"bidirectional":false,"deprecated":false},"IconLinkedinLine":{"variant":"Line","glyphName":"linkedin","cssFile":"InstructureIcons-Line.css","codepoint":"EAA1","className":"icon-linkedin","classes":["icon-line","icon-linkedin"],"bidirectional":false,"deprecated":false},"IconLinkedinSolid":{"variant":"Solid","glyphName":"linkedin","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA1","className":"icon-linkedin","classes":["icon-solid","icon-linkedin"],"bidirectional":false,"deprecated":false},"IconLockLine":{"variant":"Line","glyphName":"lock","cssFile":"InstructureIcons-Line.css","codepoint":"EAA2","className":"icon-lock","classes":["icon-line","icon-lock"],"bidirectional":false,"deprecated":false},"IconLockSolid":{"variant":"Solid","glyphName":"lock","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA2","className":"icon-lock","classes":["icon-solid","icon-lock"],"bidirectional":false,"deprecated":false},"IconLtiLine":{"variant":"Line","glyphName":"lti","cssFile":"InstructureIcons-Line.css","codepoint":"EAA3","className":"icon-lti","classes":["icon-line","icon-lti"],"bidirectional":false,"deprecated":false},"IconLtiSolid":{"variant":"Solid","glyphName":"lti","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA3","className":"icon-lti","classes":["icon-solid","icon-lti"],"bidirectional":false,"deprecated":false},"IconMarkAsReadLine":{"variant":"Line","glyphName":"mark-as-read","cssFile":"InstructureIcons-Line.css","codepoint":"EAA4","className":"icon-mark-as-read","classes":["icon-line","icon-mark-as-read"],"bidirectional":false,"deprecated":false},"IconMarkAsReadSolid":{"variant":"Solid","glyphName":"mark-as-read","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA4","className":"icon-mark-as-read","classes":["icon-solid","icon-mark-as-read"],"bidirectional":false,"deprecated":false},"IconMarkerLine":{"variant":"Line","glyphName":"marker","cssFile":"InstructureIcons-Line.css","codepoint":"EAA5","className":"icon-marker","classes":["icon-line","icon-marker"],"bidirectional":false,"deprecated":false},"IconMarkerSolid":{"variant":"Solid","glyphName":"marker","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA5","className":"icon-marker","classes":["icon-solid","icon-marker"],"bidirectional":false,"deprecated":false},"IconMasqueradeLine":{"variant":"Line","glyphName":"masquerade","cssFile":"InstructureIcons-Line.css","codepoint":"EAA6","className":"icon-masquerade","classes":["icon-line","icon-masquerade"],"bidirectional":false,"deprecated":false},"IconMasqueradeSolid":{"variant":"Solid","glyphName":"masquerade","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA6","className":"icon-masquerade","classes":["icon-solid","icon-masquerade"],"bidirectional":false,"deprecated":false},"IconMasteryPathsLine":{"variant":"Line","glyphName":"mastery-paths","cssFile":"InstructureIcons-Line.css","codepoint":"EAA7","className":"icon-mastery-paths","classes":["icon-line","icon-mastery-paths"],"bidirectional":false,"deprecated":false},"IconMasteryPathsSolid":{"variant":"Solid","glyphName":"mastery-paths","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA7","className":"icon-mastery-paths","classes":["icon-solid","icon-mastery-paths"],"bidirectional":false,"deprecated":false},"IconMaterialsRequiredLightLine":{"variant":"Line","glyphName":"materials-required-light","cssFile":"InstructureIcons-Line.css","codepoint":"EAA8","className":"icon-materials-required-light","classes":["icon-line","icon-materials-required-light"],"bidirectional":false,"deprecated":true},"IconMaterialsRequiredLightSolid":{"variant":"Solid","glyphName":"materials-required-light","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA8","className":"icon-materials-required-light","classes":["icon-solid","icon-materials-required-light"],"bidirectional":false,"deprecated":true},"IconMaterialsRequiredLine":{"variant":"Line","glyphName":"materials-required","cssFile":"InstructureIcons-Line.css","codepoint":"EAA9","className":"icon-materials-required","classes":["icon-line","icon-materials-required"],"bidirectional":false,"deprecated":false},"IconMaterialsRequiredSolid":{"variant":"Solid","glyphName":"materials-required","cssFile":"InstructureIcons-Solid.css","codepoint":"EAA9","className":"icon-materials-required","classes":["icon-solid","icon-materials-required"],"bidirectional":false,"deprecated":false},"IconMatureLightLine":{"variant":"Line","glyphName":"mature-light","cssFile":"InstructureIcons-Line.css","codepoint":"EAAA","className":"icon-mature-light","classes":["icon-line","icon-mature-light"],"bidirectional":false,"deprecated":true},"IconMatureLightSolid":{"variant":"Solid","glyphName":"mature-light","cssFile":"InstructureIcons-Solid.css","codepoint":"EAAA","className":"icon-mature-light","classes":["icon-solid","icon-mature-light"],"bidirectional":false,"deprecated":true},"IconMatureLine":{"variant":"Line","glyphName":"mature","cssFile":"InstructureIcons-Line.css","codepoint":"EAAB","className":"icon-mature","classes":["icon-line","icon-mature"],"bidirectional":false,"deprecated":false},"IconMatureSolid":{"variant":"Solid","glyphName":"mature","cssFile":"InstructureIcons-Solid.css","codepoint":"EAAB","className":"icon-mature","classes":["icon-solid","icon-mature"],"bidirectional":false,"deprecated":false},"IconMediaLine":{"variant":"Line","glyphName":"media","cssFile":"InstructureIcons-Line.css","codepoint":"EAAC","className":"icon-media","classes":["icon-line","icon-media"],"bidirectional":false,"deprecated":false},"IconMediaSolid":{"variant":"Solid","glyphName":"media","cssFile":"InstructureIcons-Solid.css","codepoint":"EAAC","className":"icon-media","classes":["icon-solid","icon-media"],"bidirectional":false,"deprecated":false},"IconMessageLine":{"variant":"Line","glyphName":"message","cssFile":"InstructureIcons-Line.css","codepoint":"EAAD","className":"icon-message","classes":["icon-line","icon-message"],"bidirectional":false,"deprecated":false},"IconMessageSolid":{"variant":"Solid","glyphName":"message","cssFile":"InstructureIcons-Solid.css","codepoint":"EAAD","className":"icon-message","classes":["icon-solid","icon-message"],"bidirectional":false,"deprecated":false},"IconMicOffLine":{"variant":"Line","glyphName":"mic-off","cssFile":"InstructureIcons-Line.css","codepoint":"EAAE","className":"icon-mic-off","classes":["icon-line","icon-mic-off"],"bidirectional":false,"deprecated":false},"IconMicOffSolid":{"variant":"Solid","glyphName":"mic-off","cssFile":"InstructureIcons-Solid.css","codepoint":"EAAE","className":"icon-mic-off","classes":["icon-solid","icon-mic-off"],"bidirectional":false,"deprecated":false},"IconMicLine":{"variant":"Line","glyphName":"mic","cssFile":"InstructureIcons-Line.css","codepoint":"EAAF","className":"icon-mic","classes":["icon-line","icon-mic"],"bidirectional":false,"deprecated":false},"IconMicSolid":{"variant":"Solid","glyphName":"mic","cssFile":"InstructureIcons-Solid.css","codepoint":"EAAF","className":"icon-mic","classes":["icon-solid","icon-mic"],"bidirectional":false,"deprecated":false},"IconMiniArrowDownLine":{"variant":"Line","glyphName":"mini-arrow-down","cssFile":"InstructureIcons-Line.css","codepoint":"EAB0","className":"icon-mini-arrow-down","classes":["icon-line","icon-mini-arrow-down"],"bidirectional":false,"deprecated":false},"IconMiniArrowDownSolid":{"variant":"Solid","glyphName":"mini-arrow-down","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB0","className":"icon-mini-arrow-down","classes":["icon-solid","icon-mini-arrow-down"],"bidirectional":false,"deprecated":false},"IconMiniArrowEndLine":{"variant":"Line","glyphName":"mini-arrow-end","cssFile":"InstructureIcons-Line.css","codepoint":"EAB1","className":"icon-mini-arrow-end","classes":["icon-line","icon-mini-arrow-end"],"bidirectional":true,"deprecated":false},"IconMiniArrowEndSolid":{"variant":"Solid","glyphName":"mini-arrow-end","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB1","className":"icon-mini-arrow-end","classes":["icon-solid","icon-mini-arrow-end"],"bidirectional":true,"deprecated":false},"IconMiniArrowLeftLine":{"variant":"Line","glyphName":"mini-arrow-left","cssFile":"InstructureIcons-Line.css","codepoint":"EAB2","className":"icon-mini-arrow-left","classes":["icon-line","icon-mini-arrow-left"],"bidirectional":true,"deprecated":true},"IconMiniArrowLeftSolid":{"variant":"Solid","glyphName":"mini-arrow-left","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB2","className":"icon-mini-arrow-left","classes":["icon-solid","icon-mini-arrow-left"],"bidirectional":true,"deprecated":true},"IconMiniArrowRightLine":{"variant":"Line","glyphName":"mini-arrow-right","cssFile":"InstructureIcons-Line.css","codepoint":"EAB3","className":"icon-mini-arrow-right","classes":["icon-line","icon-mini-arrow-right"],"bidirectional":true,"deprecated":true},"IconMiniArrowRightSolid":{"variant":"Solid","glyphName":"mini-arrow-right","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB3","className":"icon-mini-arrow-right","classes":["icon-solid","icon-mini-arrow-right"],"bidirectional":true,"deprecated":true},"IconMiniArrowStartLine":{"variant":"Line","glyphName":"mini-arrow-start","cssFile":"InstructureIcons-Line.css","codepoint":"EAB4","className":"icon-mini-arrow-start","classes":["icon-line","icon-mini-arrow-start"],"bidirectional":true,"deprecated":false},"IconMiniArrowStartSolid":{"variant":"Solid","glyphName":"mini-arrow-start","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB4","className":"icon-mini-arrow-start","classes":["icon-solid","icon-mini-arrow-start"],"bidirectional":true,"deprecated":false},"IconMiniArrowUpLine":{"variant":"Line","glyphName":"mini-arrow-up","cssFile":"InstructureIcons-Line.css","codepoint":"EAB5","className":"icon-mini-arrow-up","classes":["icon-line","icon-mini-arrow-up"],"bidirectional":false,"deprecated":false},"IconMiniArrowUpSolid":{"variant":"Solid","glyphName":"mini-arrow-up","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB5","className":"icon-mini-arrow-up","classes":["icon-solid","icon-mini-arrow-up"],"bidirectional":false,"deprecated":false},"IconMinimizeLine":{"variant":"Line","glyphName":"minimize","cssFile":"InstructureIcons-Line.css","codepoint":"EAB6","className":"icon-minimize","classes":["icon-line","icon-minimize"],"bidirectional":false,"deprecated":false},"IconMinimizeSolid":{"variant":"Solid","glyphName":"minimize","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB6","className":"icon-minimize","classes":["icon-solid","icon-minimize"],"bidirectional":false,"deprecated":false},"IconModuleLine":{"variant":"Line","glyphName":"module","cssFile":"InstructureIcons-Line.css","codepoint":"EAB7","className":"icon-module","classes":["icon-line","icon-module"],"bidirectional":false,"deprecated":false},"IconModuleSolid":{"variant":"Solid","glyphName":"module","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB7","className":"icon-module","classes":["icon-solid","icon-module"],"bidirectional":false,"deprecated":false},"IconMoreLine":{"variant":"Line","glyphName":"more","cssFile":"InstructureIcons-Line.css","codepoint":"EAB8","className":"icon-more","classes":["icon-line","icon-more"],"bidirectional":false,"deprecated":false},"IconMoreSolid":{"variant":"Solid","glyphName":"more","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB8","className":"icon-more","classes":["icon-solid","icon-more"],"bidirectional":false,"deprecated":false},"IconMoveDownBottomLine":{"variant":"Line","glyphName":"move-down-bottom","cssFile":"InstructureIcons-Line.css","codepoint":"EAB9","className":"icon-move-down-bottom","classes":["icon-line","icon-move-down-bottom"],"bidirectional":false,"deprecated":false},"IconMoveDownBottomSolid":{"variant":"Solid","glyphName":"move-down-bottom","cssFile":"InstructureIcons-Solid.css","codepoint":"EAB9","className":"icon-move-down-bottom","classes":["icon-solid","icon-move-down-bottom"],"bidirectional":false,"deprecated":false},"IconMoveDownLine":{"variant":"Line","glyphName":"move-down","cssFile":"InstructureIcons-Line.css","codepoint":"EABA","className":"icon-move-down","classes":["icon-line","icon-move-down"],"bidirectional":false,"deprecated":false},"IconMoveDownSolid":{"variant":"Solid","glyphName":"move-down","cssFile":"InstructureIcons-Solid.css","codepoint":"EABA","className":"icon-move-down","classes":["icon-solid","icon-move-down"],"bidirectional":false,"deprecated":false},"IconMoveEndLine":{"variant":"Line","glyphName":"move-end","cssFile":"InstructureIcons-Line.css","codepoint":"EABB","className":"icon-move-end","classes":["icon-line","icon-move-end"],"bidirectional":true,"deprecated":false},"IconMoveEndSolid":{"variant":"Solid","glyphName":"move-end","cssFile":"InstructureIcons-Solid.css","codepoint":"EABB","className":"icon-move-end","classes":["icon-solid","icon-move-end"],"bidirectional":true,"deprecated":false},"IconMoveLeftLine":{"variant":"Line","glyphName":"move-left","cssFile":"InstructureIcons-Line.css","codepoint":"EABC","className":"icon-move-left","classes":["icon-line","icon-move-left"],"bidirectional":true,"deprecated":true},"IconMoveLeftSolid":{"variant":"Solid","glyphName":"move-left","cssFile":"InstructureIcons-Solid.css","codepoint":"EABC","className":"icon-move-left","classes":["icon-solid","icon-move-left"],"bidirectional":true,"deprecated":true},"IconMoveRightLine":{"variant":"Line","glyphName":"move-right","cssFile":"InstructureIcons-Line.css","codepoint":"EABD","className":"icon-move-right","classes":["icon-line","icon-move-right"],"bidirectional":true,"deprecated":true},"IconMoveRightSolid":{"variant":"Solid","glyphName":"move-right","cssFile":"InstructureIcons-Solid.css","codepoint":"EABD","className":"icon-move-right","classes":["icon-solid","icon-move-right"],"bidirectional":true,"deprecated":true},"IconMoveStartLine":{"variant":"Line","glyphName":"move-start","cssFile":"InstructureIcons-Line.css","codepoint":"EABE","className":"icon-move-start","classes":["icon-line","icon-move-start"],"bidirectional":true,"deprecated":false},"IconMoveStartSolid":{"variant":"Solid","glyphName":"move-start","cssFile":"InstructureIcons-Solid.css","codepoint":"EABE","className":"icon-move-start","classes":["icon-solid","icon-move-start"],"bidirectional":true,"deprecated":false},"IconMoveUpTopLine":{"variant":"Line","glyphName":"move-up-top","cssFile":"InstructureIcons-Line.css","codepoint":"EABF","className":"icon-move-up-top","classes":["icon-line","icon-move-up-top"],"bidirectional":false,"deprecated":false},"IconMoveUpTopSolid":{"variant":"Solid","glyphName":"move-up-top","cssFile":"InstructureIcons-Solid.css","codepoint":"EABF","className":"icon-move-up-top","classes":["icon-solid","icon-move-up-top"],"bidirectional":false,"deprecated":false},"IconMoveUpLine":{"variant":"Line","glyphName":"move-up","cssFile":"InstructureIcons-Line.css","codepoint":"EAC0","className":"icon-move-up","classes":["icon-line","icon-move-up"],"bidirectional":false,"deprecated":false},"IconMoveUpSolid":{"variant":"Solid","glyphName":"move-up","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC0","className":"icon-move-up","classes":["icon-solid","icon-move-up"],"bidirectional":false,"deprecated":false},"IconMsExcelLine":{"variant":"Line","glyphName":"ms-excel","cssFile":"InstructureIcons-Line.css","codepoint":"EAC1","className":"icon-ms-excel","classes":["icon-line","icon-ms-excel"],"bidirectional":false,"deprecated":false},"IconMsExcelSolid":{"variant":"Solid","glyphName":"ms-excel","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC1","className":"icon-ms-excel","classes":["icon-solid","icon-ms-excel"],"bidirectional":false,"deprecated":false},"IconMsPptLine":{"variant":"Line","glyphName":"ms-ppt","cssFile":"InstructureIcons-Line.css","codepoint":"EAC2","className":"icon-ms-ppt","classes":["icon-line","icon-ms-ppt"],"bidirectional":false,"deprecated":false},"IconMsPptSolid":{"variant":"Solid","glyphName":"ms-ppt","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC2","className":"icon-ms-ppt","classes":["icon-solid","icon-ms-ppt"],"bidirectional":false,"deprecated":false},"IconMsWordLine":{"variant":"Line","glyphName":"ms-word","cssFile":"InstructureIcons-Line.css","codepoint":"EAC3","className":"icon-ms-word","classes":["icon-line","icon-ms-word"],"bidirectional":false,"deprecated":false},"IconMsWordSolid":{"variant":"Solid","glyphName":"ms-word","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC3","className":"icon-ms-word","classes":["icon-solid","icon-ms-word"],"bidirectional":false,"deprecated":false},"IconMutedLine":{"variant":"Line","glyphName":"muted","cssFile":"InstructureIcons-Line.css","codepoint":"EAC4","className":"icon-muted","classes":["icon-line","icon-muted"],"bidirectional":false,"deprecated":false},"IconMutedSolid":{"variant":"Solid","glyphName":"muted","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC4","className":"icon-muted","classes":["icon-solid","icon-muted"],"bidirectional":false,"deprecated":false},"IconNextUnreadLine":{"variant":"Line","glyphName":"next-unread","cssFile":"InstructureIcons-Line.css","codepoint":"EAC5","className":"icon-next-unread","classes":["icon-line","icon-next-unread"],"bidirectional":true,"deprecated":false},"IconNextUnreadSolid":{"variant":"Solid","glyphName":"next-unread","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC5","className":"icon-next-unread","classes":["icon-solid","icon-next-unread"],"bidirectional":true,"deprecated":false},"IconNoLine":{"variant":"Line","glyphName":"no","cssFile":"InstructureIcons-Line.css","codepoint":"EAC6","className":"icon-no","classes":["icon-line","icon-no"],"bidirectional":false,"deprecated":false},"IconNoSolid":{"variant":"Solid","glyphName":"no","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC6","className":"icon-no","classes":["icon-solid","icon-no"],"bidirectional":false,"deprecated":false},"IconNotGradedLine":{"variant":"Line","glyphName":"not-graded","cssFile":"InstructureIcons-Line.css","codepoint":"EAC7","className":"icon-not-graded","classes":["icon-line","icon-not-graded"],"bidirectional":true,"deprecated":false},"IconNotGradedSolid":{"variant":"Solid","glyphName":"not-graded","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC7","className":"icon-not-graded","classes":["icon-solid","icon-not-graded"],"bidirectional":true,"deprecated":false},"IconNoteDarkLine":{"variant":"Line","glyphName":"note-dark","cssFile":"InstructureIcons-Line.css","codepoint":"EAC8","className":"icon-note-dark","classes":["icon-line","icon-note-dark"],"bidirectional":false,"deprecated":true},"IconNoteDarkSolid":{"variant":"Solid","glyphName":"note-dark","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC8","className":"icon-note-dark","classes":["icon-solid","icon-note-dark"],"bidirectional":false,"deprecated":true},"IconNoteLightLine":{"variant":"Line","glyphName":"note-light","cssFile":"InstructureIcons-Line.css","codepoint":"EAC9","className":"icon-note-light","classes":["icon-line","icon-note-light"],"bidirectional":false,"deprecated":true},"IconNoteLightSolid":{"variant":"Solid","glyphName":"note-light","cssFile":"InstructureIcons-Solid.css","codepoint":"EAC9","className":"icon-note-light","classes":["icon-solid","icon-note-light"],"bidirectional":false,"deprecated":true},"IconNoteLine":{"variant":"Line","glyphName":"note","cssFile":"InstructureIcons-Line.css","codepoint":"EACA","className":"icon-note","classes":["icon-line","icon-note"],"bidirectional":true,"deprecated":false},"IconNoteSolid":{"variant":"Solid","glyphName":"note","cssFile":"InstructureIcons-Solid.css","codepoint":"EACA","className":"icon-note","classes":["icon-solid","icon-note"],"bidirectional":true,"deprecated":false},"IconNotepadLine":{"variant":"Line","glyphName":"notepad","cssFile":"InstructureIcons-Line.css","codepoint":"EACB","className":"icon-notepad","classes":["icon-line","icon-notepad"],"bidirectional":false,"deprecated":false},"IconNotepadSolid":{"variant":"Solid","glyphName":"notepad","cssFile":"InstructureIcons-Solid.css","codepoint":"EACB","className":"icon-notepad","classes":["icon-solid","icon-notepad"],"bidirectional":false,"deprecated":false},"IconNumberedListLine":{"variant":"Line","glyphName":"numbered-list","cssFile":"InstructureIcons-Line.css","codepoint":"EACC","className":"icon-numbered-list","classes":["icon-line","icon-numbered-list"],"bidirectional":false,"deprecated":false},"IconNumberedListSolid":{"variant":"Solid","glyphName":"numbered-list","cssFile":"InstructureIcons-Solid.css","codepoint":"EACC","className":"icon-numbered-list","classes":["icon-solid","icon-numbered-list"],"bidirectional":false,"deprecated":false},"IconOffLine":{"variant":"Line","glyphName":"off","cssFile":"InstructureIcons-Line.css","codepoint":"EACD","className":"icon-off","classes":["icon-line","icon-off"],"bidirectional":false,"deprecated":false},"IconOffSolid":{"variant":"Solid","glyphName":"off","cssFile":"InstructureIcons-Solid.css","codepoint":"EACD","className":"icon-off","classes":["icon-solid","icon-off"],"bidirectional":false,"deprecated":false},"IconOpenFolderLine":{"variant":"Line","glyphName":"open-folder","cssFile":"InstructureIcons-Line.css","codepoint":"EACE","className":"icon-open-folder","classes":["icon-line","icon-open-folder"],"bidirectional":true,"deprecated":false},"IconOpenFolderSolid":{"variant":"Solid","glyphName":"open-folder","cssFile":"InstructureIcons-Solid.css","codepoint":"EACE","className":"icon-open-folder","classes":["icon-solid","icon-open-folder"],"bidirectional":true,"deprecated":false},"IconOutcomesLine":{"variant":"Line","glyphName":"outcomes","cssFile":"InstructureIcons-Line.css","codepoint":"EACF","className":"icon-outcomes","classes":["icon-line","icon-outcomes"],"bidirectional":false,"deprecated":false},"IconOutcomesSolid":{"variant":"Solid","glyphName":"outcomes","cssFile":"InstructureIcons-Solid.css","codepoint":"EACF","className":"icon-outcomes","classes":["icon-solid","icon-outcomes"],"bidirectional":false,"deprecated":false},"IconOutdentLine":{"variant":"Line","glyphName":"outdent","cssFile":"InstructureIcons-Line.css","codepoint":"EAD0","className":"icon-outdent","classes":["icon-line","icon-outdent"],"bidirectional":true,"deprecated":false},"IconOutdentSolid":{"variant":"Solid","glyphName":"outdent","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD0","className":"icon-outdent","classes":["icon-solid","icon-outdent"],"bidirectional":true,"deprecated":false},"IconOutdent2Line":{"variant":"Line","glyphName":"outdent2","cssFile":"InstructureIcons-Line.css","codepoint":"EAD1","className":"icon-outdent2","classes":["icon-line","icon-outdent2"],"bidirectional":true,"deprecated":false},"IconOutdent2Solid":{"variant":"Solid","glyphName":"outdent2","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD1","className":"icon-outdent2","classes":["icon-solid","icon-outdent2"],"bidirectional":true,"deprecated":false},"IconOvalHalfLine":{"variant":"Line","glyphName":"oval-half","cssFile":"InstructureIcons-Line.css","codepoint":"EAD2","className":"icon-oval-half","classes":["icon-line","icon-oval-half"],"bidirectional":false,"deprecated":false},"IconOvalHalfSolid":{"variant":"Solid","glyphName":"oval-half","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD2","className":"icon-oval-half","classes":["icon-solid","icon-oval-half"],"bidirectional":false,"deprecated":false},"IconPageDownLine":{"variant":"Line","glyphName":"page-down","cssFile":"InstructureIcons-Line.css","codepoint":"EAD3","className":"icon-page-down","classes":["icon-line","icon-page-down"],"bidirectional":false,"deprecated":false},"IconPageDownSolid":{"variant":"Solid","glyphName":"page-down","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD3","className":"icon-page-down","classes":["icon-solid","icon-page-down"],"bidirectional":false,"deprecated":false},"IconPageUpLine":{"variant":"Line","glyphName":"page-up","cssFile":"InstructureIcons-Line.css","codepoint":"EAD4","className":"icon-page-up","classes":["icon-line","icon-page-up"],"bidirectional":false,"deprecated":false},"IconPageUpSolid":{"variant":"Solid","glyphName":"page-up","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD4","className":"icon-page-up","classes":["icon-solid","icon-page-up"],"bidirectional":false,"deprecated":false},"IconPaintLine":{"variant":"Line","glyphName":"paint","cssFile":"InstructureIcons-Line.css","codepoint":"EAD5","className":"icon-paint","classes":["icon-line","icon-paint"],"bidirectional":false,"deprecated":false},"IconPaintSolid":{"variant":"Solid","glyphName":"paint","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD5","className":"icon-paint","classes":["icon-solid","icon-paint"],"bidirectional":false,"deprecated":false},"IconPaperclipLine":{"variant":"Line","glyphName":"paperclip","cssFile":"InstructureIcons-Line.css","codepoint":"EAD6","className":"icon-paperclip","classes":["icon-line","icon-paperclip"],"bidirectional":false,"deprecated":false},"IconPaperclipSolid":{"variant":"Solid","glyphName":"paperclip","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD6","className":"icon-paperclip","classes":["icon-solid","icon-paperclip"],"bidirectional":false,"deprecated":false},"IconPartialLine":{"variant":"Line","glyphName":"partial","cssFile":"InstructureIcons-Line.css","codepoint":"EAD7","className":"icon-partial","classes":["icon-line","icon-partial"],"bidirectional":false,"deprecated":false},"IconPartialSolid":{"variant":"Solid","glyphName":"partial","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD7","className":"icon-partial","classes":["icon-solid","icon-partial"],"bidirectional":false,"deprecated":false},"IconPauseLine":{"variant":"Line","glyphName":"pause","cssFile":"InstructureIcons-Line.css","codepoint":"EAD8","className":"icon-pause","classes":["icon-line","icon-pause"],"bidirectional":false,"deprecated":false},"IconPauseSolid":{"variant":"Solid","glyphName":"pause","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD8","className":"icon-pause","classes":["icon-solid","icon-pause"],"bidirectional":false,"deprecated":false},"IconPdfLine":{"variant":"Line","glyphName":"pdf","cssFile":"InstructureIcons-Line.css","codepoint":"EAD9","className":"icon-pdf","classes":["icon-line","icon-pdf"],"bidirectional":false,"deprecated":false},"IconPdfSolid":{"variant":"Solid","glyphName":"pdf","cssFile":"InstructureIcons-Solid.css","codepoint":"EAD9","className":"icon-pdf","classes":["icon-solid","icon-pdf"],"bidirectional":false,"deprecated":false},"IconPeerGradedLine":{"variant":"Line","glyphName":"peer-graded","cssFile":"InstructureIcons-Line.css","codepoint":"EADA","className":"icon-peer-graded","classes":["icon-line","icon-peer-graded"],"bidirectional":false,"deprecated":false},"IconPeerGradedSolid":{"variant":"Solid","glyphName":"peer-graded","cssFile":"InstructureIcons-Solid.css","codepoint":"EADA","className":"icon-peer-graded","classes":["icon-solid","icon-peer-graded"],"bidirectional":false,"deprecated":false},"IconPeerReviewLine":{"variant":"Line","glyphName":"peer-review","cssFile":"InstructureIcons-Line.css","codepoint":"EADB","className":"icon-peer-review","classes":["icon-line","icon-peer-review"],"bidirectional":false,"deprecated":false},"IconPeerReviewSolid":{"variant":"Solid","glyphName":"peer-review","cssFile":"InstructureIcons-Solid.css","codepoint":"EADB","className":"icon-peer-review","classes":["icon-solid","icon-peer-review"],"bidirectional":false,"deprecated":false},"IconPermissionsLine":{"variant":"Line","glyphName":"permissions","cssFile":"InstructureIcons-Line.css","codepoint":"EADC","className":"icon-permissions","classes":["icon-line","icon-permissions"],"bidirectional":false,"deprecated":false},"IconPermissionsSolid":{"variant":"Solid","glyphName":"permissions","cssFile":"InstructureIcons-Solid.css","codepoint":"EADC","className":"icon-permissions","classes":["icon-solid","icon-permissions"],"bidirectional":false,"deprecated":false},"IconPinLine":{"variant":"Line","glyphName":"pin","cssFile":"InstructureIcons-Line.css","codepoint":"EADD","className":"icon-pin","classes":["icon-line","icon-pin"],"bidirectional":false,"deprecated":false},"IconPinSolid":{"variant":"Solid","glyphName":"pin","cssFile":"InstructureIcons-Solid.css","codepoint":"EADD","className":"icon-pin","classes":["icon-solid","icon-pin"],"bidirectional":false,"deprecated":false},"IconPinterestLine":{"variant":"Line","glyphName":"pinterest","cssFile":"InstructureIcons-Line.css","codepoint":"EADE","className":"icon-pinterest","classes":["icon-line","icon-pinterest"],"bidirectional":false,"deprecated":false},"IconPinterestSolid":{"variant":"Solid","glyphName":"pinterest","cssFile":"InstructureIcons-Solid.css","codepoint":"EADE","className":"icon-pinterest","classes":["icon-solid","icon-pinterest"],"bidirectional":false,"deprecated":false},"IconPlayLine":{"variant":"Line","glyphName":"play","cssFile":"InstructureIcons-Line.css","codepoint":"EADF","className":"icon-play","classes":["icon-line","icon-play"],"bidirectional":false,"deprecated":false},"IconPlaySolid":{"variant":"Solid","glyphName":"play","cssFile":"InstructureIcons-Solid.css","codepoint":"EADF","className":"icon-play","classes":["icon-solid","icon-play"],"bidirectional":false,"deprecated":false},"IconPlusLine":{"variant":"Line","glyphName":"plus","cssFile":"InstructureIcons-Line.css","codepoint":"EAE0","className":"icon-plus","classes":["icon-line","icon-plus"],"bidirectional":false,"deprecated":false},"IconPlusSolid":{"variant":"Solid","glyphName":"plus","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE0","className":"icon-plus","classes":["icon-solid","icon-plus"],"bidirectional":false,"deprecated":false},"IconPostToSisLine":{"variant":"Line","glyphName":"post-to-sis","cssFile":"InstructureIcons-Line.css","codepoint":"EAE1","className":"icon-post-to-sis","classes":["icon-line","icon-post-to-sis"],"bidirectional":false,"deprecated":false},"IconPostToSisSolid":{"variant":"Solid","glyphName":"post-to-sis","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE1","className":"icon-post-to-sis","classes":["icon-solid","icon-post-to-sis"],"bidirectional":false,"deprecated":false},"IconPrerequisiteLine":{"variant":"Line","glyphName":"prerequisite","cssFile":"InstructureIcons-Line.css","codepoint":"EAE2","className":"icon-prerequisite","classes":["icon-line","icon-prerequisite"],"bidirectional":false,"deprecated":false},"IconPrerequisiteSolid":{"variant":"Solid","glyphName":"prerequisite","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE2","className":"icon-prerequisite","classes":["icon-solid","icon-prerequisite"],"bidirectional":false,"deprecated":false},"IconPrinterLine":{"variant":"Line","glyphName":"printer","cssFile":"InstructureIcons-Line.css","codepoint":"EAE3","className":"icon-printer","classes":["icon-line","icon-printer"],"bidirectional":false,"deprecated":false},"IconPrinterSolid":{"variant":"Solid","glyphName":"printer","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE3","className":"icon-printer","classes":["icon-solid","icon-printer"],"bidirectional":false,"deprecated":false},"IconProgressLine":{"variant":"Line","glyphName":"progress","cssFile":"InstructureIcons-Line.css","codepoint":"EAE4","className":"icon-progress","classes":["icon-line","icon-progress"],"bidirectional":false,"deprecated":false},"IconProgressSolid":{"variant":"Solid","glyphName":"progress","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE4","className":"icon-progress","classes":["icon-solid","icon-progress"],"bidirectional":false,"deprecated":false},"IconProtractorLine":{"variant":"Line","glyphName":"protractor","cssFile":"InstructureIcons-Line.css","codepoint":"EAE5","className":"icon-protractor","classes":["icon-line","icon-protractor"],"bidirectional":false,"deprecated":false},"IconProtractorSolid":{"variant":"Solid","glyphName":"protractor","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE5","className":"icon-protractor","classes":["icon-solid","icon-protractor"],"bidirectional":false,"deprecated":false},"IconPublishLine":{"variant":"Line","glyphName":"publish","cssFile":"InstructureIcons-Line.css","codepoint":"EAE6","className":"icon-publish","classes":["icon-line","icon-publish"],"bidirectional":false,"deprecated":false},"IconPublishSolid":{"variant":"Solid","glyphName":"publish","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE6","className":"icon-publish","classes":["icon-solid","icon-publish"],"bidirectional":false,"deprecated":false},"IconQuestionLine":{"variant":"Line","glyphName":"question","cssFile":"InstructureIcons-Line.css","codepoint":"EAE7","className":"icon-question","classes":["icon-line","icon-question"],"bidirectional":false,"deprecated":false},"IconQuestionSolid":{"variant":"Solid","glyphName":"question","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE7","className":"icon-question","classes":["icon-solid","icon-question"],"bidirectional":false,"deprecated":false},"IconQuizInstructionsLine":{"variant":"Line","glyphName":"quiz-instructions","cssFile":"InstructureIcons-Line.css","codepoint":"EAE8","className":"icon-quiz-instructions","classes":["icon-line","icon-quiz-instructions"],"bidirectional":false,"deprecated":false},"IconQuizInstructionsSolid":{"variant":"Solid","glyphName":"quiz-instructions","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE8","className":"icon-quiz-instructions","classes":["icon-solid","icon-quiz-instructions"],"bidirectional":false,"deprecated":false},"IconQuizStatsAvgLine":{"variant":"Line","glyphName":"quiz-stats-avg","cssFile":"InstructureIcons-Line.css","codepoint":"EAE9","className":"icon-quiz-stats-avg","classes":["icon-line","icon-quiz-stats-avg"],"bidirectional":false,"deprecated":false},"IconQuizStatsAvgSolid":{"variant":"Solid","glyphName":"quiz-stats-avg","cssFile":"InstructureIcons-Solid.css","codepoint":"EAE9","className":"icon-quiz-stats-avg","classes":["icon-solid","icon-quiz-stats-avg"],"bidirectional":false,"deprecated":false},"IconQuizStatsCronbachsAlphaLine":{"variant":"Line","glyphName":"quiz-stats-cronbachs-alpha","cssFile":"InstructureIcons-Line.css","codepoint":"EAEA","className":"icon-quiz-stats-cronbachs-alpha","classes":["icon-line","icon-quiz-stats-cronbachs-alpha"],"bidirectional":false,"deprecated":false},"IconQuizStatsCronbachsAlphaSolid":{"variant":"Solid","glyphName":"quiz-stats-cronbachs-alpha","cssFile":"InstructureIcons-Solid.css","codepoint":"EAEA","className":"icon-quiz-stats-cronbachs-alpha","classes":["icon-solid","icon-quiz-stats-cronbachs-alpha"],"bidirectional":false,"deprecated":false},"IconQuizStatsDeviationLine":{"variant":"Line","glyphName":"quiz-stats-deviation","cssFile":"InstructureIcons-Line.css","codepoint":"EAEB","className":"icon-quiz-stats-deviation","classes":["icon-line","icon-quiz-stats-deviation"],"bidirectional":false,"deprecated":false},"IconQuizStatsDeviationSolid":{"variant":"Solid","glyphName":"quiz-stats-deviation","cssFile":"InstructureIcons-Solid.css","codepoint":"EAEB","className":"icon-quiz-stats-deviation","classes":["icon-solid","icon-quiz-stats-deviation"],"bidirectional":false,"deprecated":false},"IconQuizStatsHighLine":{"variant":"Line","glyphName":"quiz-stats-high","cssFile":"InstructureIcons-Line.css","codepoint":"EAEC","className":"icon-quiz-stats-high","classes":["icon-line","icon-quiz-stats-high"],"bidirectional":true,"deprecated":false},"IconQuizStatsHighSolid":{"variant":"Solid","glyphName":"quiz-stats-high","cssFile":"InstructureIcons-Solid.css","codepoint":"EAEC","className":"icon-quiz-stats-high","classes":["icon-solid","icon-quiz-stats-high"],"bidirectional":true,"deprecated":false},"IconQuizStatsLowLine":{"variant":"Line","glyphName":"quiz-stats-low","cssFile":"InstructureIcons-Line.css","codepoint":"EAED","className":"icon-quiz-stats-low","classes":["icon-line","icon-quiz-stats-low"],"bidirectional":true,"deprecated":false},"IconQuizStatsLowSolid":{"variant":"Solid","glyphName":"quiz-stats-low","cssFile":"InstructureIcons-Solid.css","codepoint":"EAED","className":"icon-quiz-stats-low","classes":["icon-solid","icon-quiz-stats-low"],"bidirectional":true,"deprecated":false},"IconQuizStatsTimeLine":{"variant":"Line","glyphName":"quiz-stats-time","cssFile":"InstructureIcons-Line.css","codepoint":"EAEE","className":"icon-quiz-stats-time","classes":["icon-line","icon-quiz-stats-time"],"bidirectional":false,"deprecated":false},"IconQuizStatsTimeSolid":{"variant":"Solid","glyphName":"quiz-stats-time","cssFile":"InstructureIcons-Solid.css","codepoint":"EAEE","className":"icon-quiz-stats-time","classes":["icon-solid","icon-quiz-stats-time"],"bidirectional":false,"deprecated":false},"IconQuizTitleLine":{"variant":"Line","glyphName":"quiz-title","cssFile":"InstructureIcons-Line.css","codepoint":"EAEF","className":"icon-quiz-title","classes":["icon-line","icon-quiz-title"],"bidirectional":false,"deprecated":false},"IconQuizTitleSolid":{"variant":"Solid","glyphName":"quiz-title","cssFile":"InstructureIcons-Solid.css","codepoint":"EAEF","className":"icon-quiz-title","classes":["icon-solid","icon-quiz-title"],"bidirectional":false,"deprecated":false},"IconQuizLine":{"variant":"Line","glyphName":"quiz","cssFile":"InstructureIcons-Line.css","codepoint":"EAF0","className":"icon-quiz","classes":["icon-line","icon-quiz"],"bidirectional":true,"deprecated":false},"IconQuizSolid":{"variant":"Solid","glyphName":"quiz","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF0","className":"icon-quiz","classes":["icon-solid","icon-quiz"],"bidirectional":true,"deprecated":false},"IconRecordLine":{"variant":"Line","glyphName":"record","cssFile":"InstructureIcons-Line.css","codepoint":"EAF1","className":"icon-record","classes":["icon-line","icon-record"],"bidirectional":false,"deprecated":false},"IconRecordSolid":{"variant":"Solid","glyphName":"record","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF1","className":"icon-record","classes":["icon-solid","icon-record"],"bidirectional":false,"deprecated":false},"IconRefreshLine":{"variant":"Line","glyphName":"refresh","cssFile":"InstructureIcons-Line.css","codepoint":"EAF2","className":"icon-refresh","classes":["icon-line","icon-refresh"],"bidirectional":false,"deprecated":false},"IconRefreshSolid":{"variant":"Solid","glyphName":"refresh","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF2","className":"icon-refresh","classes":["icon-solid","icon-refresh"],"bidirectional":false,"deprecated":false},"IconRemoveBookmarkLine":{"variant":"Line","glyphName":"remove-bookmark","cssFile":"InstructureIcons-Line.css","codepoint":"EAF3","className":"icon-remove-bookmark","classes":["icon-line","icon-remove-bookmark"],"bidirectional":false,"deprecated":false},"IconRemoveBookmarkSolid":{"variant":"Solid","glyphName":"remove-bookmark","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF3","className":"icon-remove-bookmark","classes":["icon-solid","icon-remove-bookmark"],"bidirectional":false,"deprecated":false},"IconRemoveFromCollectionLine":{"variant":"Line","glyphName":"remove-from-collection","cssFile":"InstructureIcons-Line.css","codepoint":"EAF4","className":"icon-remove-from-collection","classes":["icon-line","icon-remove-from-collection"],"bidirectional":false,"deprecated":false},"IconRemoveFromCollectionSolid":{"variant":"Solid","glyphName":"remove-from-collection","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF4","className":"icon-remove-from-collection","classes":["icon-solid","icon-remove-from-collection"],"bidirectional":false,"deprecated":false},"IconRemoveLinkLine":{"variant":"Line","glyphName":"remove-link","cssFile":"InstructureIcons-Line.css","codepoint":"EAF5","className":"icon-remove-link","classes":["icon-line","icon-remove-link"],"bidirectional":false,"deprecated":false},"IconRemoveLinkSolid":{"variant":"Solid","glyphName":"remove-link","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF5","className":"icon-remove-link","classes":["icon-solid","icon-remove-link"],"bidirectional":false,"deprecated":false},"IconRepliedLine":{"variant":"Line","glyphName":"replied","cssFile":"InstructureIcons-Line.css","codepoint":"EAF6","className":"icon-replied","classes":["icon-line","icon-replied"],"bidirectional":true,"deprecated":false},"IconRepliedSolid":{"variant":"Solid","glyphName":"replied","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF6","className":"icon-replied","classes":["icon-solid","icon-replied"],"bidirectional":true,"deprecated":false},"IconReply2Line":{"variant":"Line","glyphName":"reply-2","cssFile":"InstructureIcons-Line.css","codepoint":"EAF7","className":"icon-reply-2","classes":["icon-line","icon-reply-2"],"bidirectional":true,"deprecated":false},"IconReply2Solid":{"variant":"Solid","glyphName":"reply-2","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF7","className":"icon-reply-2","classes":["icon-solid","icon-reply-2"],"bidirectional":true,"deprecated":false},"IconReplyAll2Line":{"variant":"Line","glyphName":"reply-all-2","cssFile":"InstructureIcons-Line.css","codepoint":"EAF8","className":"icon-reply-all-2","classes":["icon-line","icon-reply-all-2"],"bidirectional":true,"deprecated":false},"IconReplyAll2Solid":{"variant":"Solid","glyphName":"reply-all-2","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF8","className":"icon-reply-all-2","classes":["icon-solid","icon-reply-all-2"],"bidirectional":true,"deprecated":false},"IconReplyLine":{"variant":"Line","glyphName":"reply","cssFile":"InstructureIcons-Line.css","codepoint":"EAF9","className":"icon-reply","classes":["icon-line","icon-reply"],"bidirectional":true,"deprecated":false},"IconReplySolid":{"variant":"Solid","glyphName":"reply","cssFile":"InstructureIcons-Solid.css","codepoint":"EAF9","className":"icon-reply","classes":["icon-solid","icon-reply"],"bidirectional":true,"deprecated":false},"IconResetLine":{"variant":"Line","glyphName":"reset","cssFile":"InstructureIcons-Line.css","codepoint":"EAFA","className":"icon-reset","classes":["icon-line","icon-reset"],"bidirectional":false,"deprecated":false},"IconResetSolid":{"variant":"Solid","glyphName":"reset","cssFile":"InstructureIcons-Solid.css","codepoint":"EAFA","className":"icon-reset","classes":["icon-solid","icon-reset"],"bidirectional":false,"deprecated":false},"IconReviewScreenLine":{"variant":"Line","glyphName":"review-screen","cssFile":"InstructureIcons-Line.css","codepoint":"EAFB","className":"icon-review-screen","classes":["icon-line","icon-review-screen"],"bidirectional":false,"deprecated":false},"IconReviewScreenSolid":{"variant":"Solid","glyphName":"review-screen","cssFile":"InstructureIcons-Solid.css","codepoint":"EAFB","className":"icon-review-screen","classes":["icon-solid","icon-review-screen"],"bidirectional":false,"deprecated":false},"IconRewindLine":{"variant":"Line","glyphName":"rewind","cssFile":"InstructureIcons-Line.css","codepoint":"EAFC","className":"icon-rewind","classes":["icon-line","icon-rewind"],"bidirectional":false,"deprecated":false},"IconRewindSolid":{"variant":"Solid","glyphName":"rewind","cssFile":"InstructureIcons-Solid.css","codepoint":"EAFC","className":"icon-rewind","classes":["icon-solid","icon-rewind"],"bidirectional":false,"deprecated":false},"IconRssAddLine":{"variant":"Line","glyphName":"rss-add","cssFile":"InstructureIcons-Line.css","codepoint":"EAFD","className":"icon-rss-add","classes":["icon-line","icon-rss-add"],"bidirectional":false,"deprecated":true},"IconRssAddSolid":{"variant":"Solid","glyphName":"rss-add","cssFile":"InstructureIcons-Solid.css","codepoint":"EAFD","className":"icon-rss-add","classes":["icon-solid","icon-rss-add"],"bidirectional":false,"deprecated":true},"IconRssLine":{"variant":"Line","glyphName":"rss","cssFile":"InstructureIcons-Line.css","codepoint":"EAFE","className":"icon-rss","classes":["icon-line","icon-rss"],"bidirectional":false,"deprecated":false},"IconRssSolid":{"variant":"Solid","glyphName":"rss","cssFile":"InstructureIcons-Solid.css","codepoint":"EAFE","className":"icon-rss","classes":["icon-solid","icon-rss"],"bidirectional":false,"deprecated":false},"IconRubricDarkLine":{"variant":"Line","glyphName":"rubric-dark","cssFile":"InstructureIcons-Line.css","codepoint":"EAFF","className":"icon-rubric-dark","classes":["icon-line","icon-rubric-dark"],"bidirectional":true,"deprecated":false},"IconRubricDarkSolid":{"variant":"Solid","glyphName":"rubric-dark","cssFile":"InstructureIcons-Solid.css","codepoint":"EAFF","className":"icon-rubric-dark","classes":["icon-solid","icon-rubric-dark"],"bidirectional":true,"deprecated":false},"IconRubricLine":{"variant":"Line","glyphName":"rubric","cssFile":"InstructureIcons-Line.css","codepoint":"EB00","className":"icon-rubric","classes":["icon-line","icon-rubric"],"bidirectional":true,"deprecated":false},"IconRubricSolid":{"variant":"Solid","glyphName":"rubric","cssFile":"InstructureIcons-Solid.css","codepoint":"EB00","className":"icon-rubric","classes":["icon-solid","icon-rubric"],"bidirectional":true,"deprecated":false},"IconRulerLine":{"variant":"Line","glyphName":"ruler","cssFile":"InstructureIcons-Line.css","codepoint":"EB01","className":"icon-ruler","classes":["icon-line","icon-ruler"],"bidirectional":false,"deprecated":false},"IconRulerSolid":{"variant":"Solid","glyphName":"ruler","cssFile":"InstructureIcons-Solid.css","codepoint":"EB01","className":"icon-ruler","classes":["icon-solid","icon-ruler"],"bidirectional":false,"deprecated":false},"IconSaveLine":{"variant":"Line","glyphName":"save","cssFile":"InstructureIcons-Line.css","codepoint":"EB02","className":"icon-save","classes":["icon-line","icon-save"],"bidirectional":false,"deprecated":false},"IconSaveSolid":{"variant":"Solid","glyphName":"save","cssFile":"InstructureIcons-Solid.css","codepoint":"EB02","className":"icon-save","classes":["icon-solid","icon-save"],"bidirectional":false,"deprecated":false},"IconScreenCaptureLine":{"variant":"Line","glyphName":"screen-capture","cssFile":"InstructureIcons-Line.css","codepoint":"EB03","className":"icon-screen-capture","classes":["icon-line","icon-screen-capture"],"bidirectional":false,"deprecated":false},"IconScreenCaptureSolid":{"variant":"Solid","glyphName":"screen-capture","cssFile":"InstructureIcons-Solid.css","codepoint":"EB03","className":"icon-screen-capture","classes":["icon-solid","icon-screen-capture"],"bidirectional":false,"deprecated":false},"IconSearchAddressBookLine":{"variant":"Line","glyphName":"search-address-book","cssFile":"InstructureIcons-Line.css","codepoint":"EB04","className":"icon-search-address-book","classes":["icon-line","icon-search-address-book"],"bidirectional":false,"deprecated":true},"IconSearchAddressBookSolid":{"variant":"Solid","glyphName":"search-address-book","cssFile":"InstructureIcons-Solid.css","codepoint":"EB04","className":"icon-search-address-book","classes":["icon-solid","icon-search-address-book"],"bidirectional":false,"deprecated":true},"IconSearchLine":{"variant":"Line","glyphName":"search","cssFile":"InstructureIcons-Line.css","codepoint":"EB05","className":"icon-search","classes":["icon-line","icon-search"],"bidirectional":false,"deprecated":false},"IconSearchSolid":{"variant":"Solid","glyphName":"search","cssFile":"InstructureIcons-Solid.css","codepoint":"EB05","className":"icon-search","classes":["icon-solid","icon-search"],"bidirectional":false,"deprecated":false},"IconSettings2Line":{"variant":"Line","glyphName":"settings-2","cssFile":"InstructureIcons-Line.css","codepoint":"EB06","className":"icon-settings-2","classes":["icon-line","icon-settings-2"],"bidirectional":false,"deprecated":true},"IconSettings2Solid":{"variant":"Solid","glyphName":"settings-2","cssFile":"InstructureIcons-Solid.css","codepoint":"EB06","className":"icon-settings-2","classes":["icon-solid","icon-settings-2"],"bidirectional":false,"deprecated":true},"IconSettingsLine":{"variant":"Line","glyphName":"settings","cssFile":"InstructureIcons-Line.css","codepoint":"EB07","className":"icon-settings","classes":["icon-line","icon-settings"],"bidirectional":false,"deprecated":false},"IconSettingsSolid":{"variant":"Solid","glyphName":"settings","cssFile":"InstructureIcons-Solid.css","codepoint":"EB07","className":"icon-settings","classes":["icon-solid","icon-settings"],"bidirectional":false,"deprecated":false},"IconShapeOvalLine":{"variant":"Line","glyphName":"shape-oval","cssFile":"InstructureIcons-Line.css","codepoint":"EB08","className":"icon-shape-oval","classes":["icon-line","icon-shape-oval"],"bidirectional":false,"deprecated":false},"IconShapeOvalSolid":{"variant":"Solid","glyphName":"shape-oval","cssFile":"InstructureIcons-Solid.css","codepoint":"EB08","className":"icon-shape-oval","classes":["icon-solid","icon-shape-oval"],"bidirectional":false,"deprecated":false},"IconShapePolygonLine":{"variant":"Line","glyphName":"shape-polygon","cssFile":"InstructureIcons-Line.css","codepoint":"EB09","className":"icon-shape-polygon","classes":["icon-line","icon-shape-polygon"],"bidirectional":false,"deprecated":false},"IconShapePolygonSolid":{"variant":"Solid","glyphName":"shape-polygon","cssFile":"InstructureIcons-Solid.css","codepoint":"EB09","className":"icon-shape-polygon","classes":["icon-solid","icon-shape-polygon"],"bidirectional":false,"deprecated":false},"IconShapeRectangleLine":{"variant":"Line","glyphName":"shape-rectangle","cssFile":"InstructureIcons-Line.css","codepoint":"EB0A","className":"icon-shape-rectangle","classes":["icon-line","icon-shape-rectangle"],"bidirectional":false,"deprecated":false},"IconShapeRectangleSolid":{"variant":"Solid","glyphName":"shape-rectangle","cssFile":"InstructureIcons-Solid.css","codepoint":"EB0A","className":"icon-shape-rectangle","classes":["icon-solid","icon-shape-rectangle"],"bidirectional":false,"deprecated":false},"IconShareLine":{"variant":"Line","glyphName":"share","cssFile":"InstructureIcons-Line.css","codepoint":"EB0B","className":"icon-share","classes":["icon-line","icon-share"],"bidirectional":false,"deprecated":false},"IconShareSolid":{"variant":"Solid","glyphName":"share","cssFile":"InstructureIcons-Solid.css","codepoint":"EB0B","className":"icon-share","classes":["icon-solid","icon-share"],"bidirectional":false,"deprecated":false},"IconSisImportedLine":{"variant":"Line","glyphName":"sis-imported","cssFile":"InstructureIcons-Line.css","codepoint":"EB0C","className":"icon-sis-imported","classes":["icon-line","icon-sis-imported"],"bidirectional":true,"deprecated":false},"IconSisImportedSolid":{"variant":"Solid","glyphName":"sis-imported","cssFile":"InstructureIcons-Solid.css","codepoint":"EB0C","className":"icon-sis-imported","classes":["icon-solid","icon-sis-imported"],"bidirectional":true,"deprecated":false},"IconSisNotSyncedLine":{"variant":"Line","glyphName":"sis-not-synced","cssFile":"InstructureIcons-Line.css","codepoint":"EB0D","className":"icon-sis-not-synced","classes":["icon-line","icon-sis-not-synced"],"bidirectional":false,"deprecated":false},"IconSisNotSyncedSolid":{"variant":"Solid","glyphName":"sis-not-synced","cssFile":"InstructureIcons-Solid.css","codepoint":"EB0D","className":"icon-sis-not-synced","classes":["icon-solid","icon-sis-not-synced"],"bidirectional":false,"deprecated":false},"IconSisSyncedLine":{"variant":"Line","glyphName":"sis-synced","cssFile":"InstructureIcons-Line.css","codepoint":"EB0E","className":"icon-sis-synced","classes":["icon-line","icon-sis-synced"],"bidirectional":false,"deprecated":false},"IconSisSyncedSolid":{"variant":"Solid","glyphName":"sis-synced","cssFile":"InstructureIcons-Solid.css","codepoint":"EB0E","className":"icon-sis-synced","classes":["icon-solid","icon-sis-synced"],"bidirectional":false,"deprecated":false},"IconSkypeLine":{"variant":"Line","glyphName":"skype","cssFile":"InstructureIcons-Line.css","codepoint":"EB0F","className":"icon-skype","classes":["icon-line","icon-skype"],"bidirectional":false,"deprecated":false},"IconSkypeSolid":{"variant":"Solid","glyphName":"skype","cssFile":"InstructureIcons-Solid.css","codepoint":"EB0F","className":"icon-skype","classes":["icon-solid","icon-skype"],"bidirectional":false,"deprecated":false},"IconSortLine":{"variant":"Line","glyphName":"sort","cssFile":"InstructureIcons-Line.css","codepoint":"EB10","className":"icon-sort","classes":["icon-line","icon-sort"],"bidirectional":false,"deprecated":false},"IconSortSolid":{"variant":"Solid","glyphName":"sort","cssFile":"InstructureIcons-Solid.css","codepoint":"EB10","className":"icon-sort","classes":["icon-solid","icon-sort"],"bidirectional":false,"deprecated":false},"IconSpeedGraderLine":{"variant":"Line","glyphName":"speed-grader","cssFile":"InstructureIcons-Line.css","codepoint":"EB11","className":"icon-speed-grader","classes":["icon-line","icon-speed-grader"],"bidirectional":false,"deprecated":false},"IconSpeedGraderSolid":{"variant":"Solid","glyphName":"speed-grader","cssFile":"InstructureIcons-Solid.css","codepoint":"EB11","className":"icon-speed-grader","classes":["icon-solid","icon-speed-grader"],"bidirectional":false,"deprecated":false},"IconStandardsLine":{"variant":"Line","glyphName":"standards","cssFile":"InstructureIcons-Line.css","codepoint":"EB12","className":"icon-standards","classes":["icon-line","icon-standards"],"bidirectional":false,"deprecated":false},"IconStandardsSolid":{"variant":"Solid","glyphName":"standards","cssFile":"InstructureIcons-Solid.css","codepoint":"EB12","className":"icon-standards","classes":["icon-solid","icon-standards"],"bidirectional":false,"deprecated":false},"IconStarLightLine":{"variant":"Line","glyphName":"star-light","cssFile":"InstructureIcons-Line.css","codepoint":"EB13","className":"icon-star-light","classes":["icon-line","icon-star-light"],"bidirectional":false,"deprecated":false},"IconStarLightSolid":{"variant":"Solid","glyphName":"star-light","cssFile":"InstructureIcons-Solid.css","codepoint":"EB13","className":"icon-star-light","classes":["icon-solid","icon-star-light"],"bidirectional":false,"deprecated":false},"IconStarLine":{"variant":"Line","glyphName":"star","cssFile":"InstructureIcons-Line.css","codepoint":"EB14","className":"icon-star","classes":["icon-line","icon-star"],"bidirectional":false,"deprecated":false},"IconStarSolid":{"variant":"Solid","glyphName":"star","cssFile":"InstructureIcons-Solid.css","codepoint":"EB14","className":"icon-star","classes":["icon-solid","icon-star"],"bidirectional":false,"deprecated":false},"IconStatsLine":{"variant":"Line","glyphName":"stats","cssFile":"InstructureIcons-Line.css","codepoint":"EB15","className":"icon-stats","classes":["icon-line","icon-stats"],"bidirectional":false,"deprecated":false},"IconStatsSolid":{"variant":"Solid","glyphName":"stats","cssFile":"InstructureIcons-Solid.css","codepoint":"EB15","className":"icon-stats","classes":["icon-solid","icon-stats"],"bidirectional":false,"deprecated":false},"IconStopLine":{"variant":"Line","glyphName":"stop","cssFile":"InstructureIcons-Line.css","codepoint":"EB16","className":"icon-stop","classes":["icon-line","icon-stop"],"bidirectional":false,"deprecated":false},"IconStopSolid":{"variant":"Solid","glyphName":"stop","cssFile":"InstructureIcons-Solid.css","codepoint":"EB16","className":"icon-stop","classes":["icon-solid","icon-stop"],"bidirectional":false,"deprecated":false},"IconStrikethroughLine":{"variant":"Line","glyphName":"strikethrough","cssFile":"InstructureIcons-Line.css","codepoint":"EB17","className":"icon-strikethrough","classes":["icon-line","icon-strikethrough"],"bidirectional":false,"deprecated":false},"IconStrikethroughSolid":{"variant":"Solid","glyphName":"strikethrough","cssFile":"InstructureIcons-Solid.css","codepoint":"EB17","className":"icon-strikethrough","classes":["icon-solid","icon-strikethrough"],"bidirectional":false,"deprecated":false},"IconStudentViewLine":{"variant":"Line","glyphName":"student-view","cssFile":"InstructureIcons-Line.css","codepoint":"EB18","className":"icon-student-view","classes":["icon-line","icon-student-view"],"bidirectional":false,"deprecated":false},"IconStudentViewSolid":{"variant":"Solid","glyphName":"student-view","cssFile":"InstructureIcons-Solid.css","codepoint":"EB18","className":"icon-student-view","classes":["icon-solid","icon-student-view"],"bidirectional":false,"deprecated":false},"IconStudioLine":{"variant":"Line","glyphName":"studio","cssFile":"InstructureIcons-Line.css","codepoint":"EB19","className":"icon-studio","classes":["icon-line","icon-studio"],"bidirectional":false,"deprecated":false},"IconStudioSolid":{"variant":"Solid","glyphName":"studio","cssFile":"InstructureIcons-Solid.css","codepoint":"EB19","className":"icon-studio","classes":["icon-solid","icon-studio"],"bidirectional":false,"deprecated":false},"IconSubaccountsLine":{"variant":"Line","glyphName":"subaccounts","cssFile":"InstructureIcons-Line.css","codepoint":"EB1A","className":"icon-subaccounts","classes":["icon-line","icon-subaccounts"],"bidirectional":false,"deprecated":false},"IconSubaccountsSolid":{"variant":"Solid","glyphName":"subaccounts","cssFile":"InstructureIcons-Solid.css","codepoint":"EB1A","className":"icon-subaccounts","classes":["icon-solid","icon-subaccounts"],"bidirectional":false,"deprecated":false},"IconSyllabusLine":{"variant":"Line","glyphName":"syllabus","cssFile":"InstructureIcons-Line.css","codepoint":"EB1B","className":"icon-syllabus","classes":["icon-line","icon-syllabus"],"bidirectional":true,"deprecated":false},"IconSyllabusSolid":{"variant":"Solid","glyphName":"syllabus","cssFile":"InstructureIcons-Solid.css","codepoint":"EB1B","className":"icon-syllabus","classes":["icon-solid","icon-syllabus"],"bidirectional":true,"deprecated":false},"IconTableCellSelectAllLine":{"variant":"Line","glyphName":"table-cell-select-all","cssFile":"InstructureIcons-Line.css","codepoint":"EB1C","className":"icon-table-cell-select-all","classes":["icon-line","icon-table-cell-select-all"],"bidirectional":false,"deprecated":false},"IconTableCellSelectAllSolid":{"variant":"Solid","glyphName":"table-cell-select-all","cssFile":"InstructureIcons-Solid.css","codepoint":"EB1C","className":"icon-table-cell-select-all","classes":["icon-solid","icon-table-cell-select-all"],"bidirectional":false,"deprecated":false},"IconTableDeleteColumnLine":{"variant":"Line","glyphName":"table-delete-column","cssFile":"InstructureIcons-Line.css","codepoint":"EB1D","className":"icon-table-delete-column","classes":["icon-line","icon-table-delete-column"],"bidirectional":false,"deprecated":false},"IconTableDeleteColumnSolid":{"variant":"Solid","glyphName":"table-delete-column","cssFile":"InstructureIcons-Solid.css","codepoint":"EB1D","className":"icon-table-delete-column","classes":["icon-solid","icon-table-delete-column"],"bidirectional":false,"deprecated":false},"IconTableDeleteRowLine":{"variant":"Line","glyphName":"table-delete-row","cssFile":"InstructureIcons-Line.css","codepoint":"EB1E","className":"icon-table-delete-row","classes":["icon-line","icon-table-delete-row"],"bidirectional":false,"deprecated":false},"IconTableDeleteRowSolid":{"variant":"Solid","glyphName":"table-delete-row","cssFile":"InstructureIcons-Solid.css","codepoint":"EB1E","className":"icon-table-delete-row","classes":["icon-solid","icon-table-delete-row"],"bidirectional":false,"deprecated":false},"IconTableDeleteTableLine":{"variant":"Line","glyphName":"table-delete-table","cssFile":"InstructureIcons-Line.css","codepoint":"EB1F","className":"icon-table-delete-table","classes":["icon-line","icon-table-delete-table"],"bidirectional":false,"deprecated":false},"IconTableDeleteTableSolid":{"variant":"Solid","glyphName":"table-delete-table","cssFile":"InstructureIcons-Solid.css","codepoint":"EB1F","className":"icon-table-delete-table","classes":["icon-solid","icon-table-delete-table"],"bidirectional":false,"deprecated":false},"IconTableInsertColumnAfterLine":{"variant":"Line","glyphName":"table-insert-column-after","cssFile":"InstructureIcons-Line.css","codepoint":"EB20","className":"icon-table-insert-column-after","classes":["icon-line","icon-table-insert-column-after"],"bidirectional":false,"deprecated":false},"IconTableInsertColumnAfterSolid":{"variant":"Solid","glyphName":"table-insert-column-after","cssFile":"InstructureIcons-Solid.css","codepoint":"EB20","className":"icon-table-insert-column-after","classes":["icon-solid","icon-table-insert-column-after"],"bidirectional":false,"deprecated":false},"IconTableInsertColumnBeforeLine":{"variant":"Line","glyphName":"table-insert-column-before","cssFile":"InstructureIcons-Line.css","codepoint":"EB21","className":"icon-table-insert-column-before","classes":["icon-line","icon-table-insert-column-before"],"bidirectional":false,"deprecated":false},"IconTableInsertColumnBeforeSolid":{"variant":"Solid","glyphName":"table-insert-column-before","cssFile":"InstructureIcons-Solid.css","codepoint":"EB21","className":"icon-table-insert-column-before","classes":["icon-solid","icon-table-insert-column-before"],"bidirectional":false,"deprecated":false},"IconTableInsertRowAboveLine":{"variant":"Line","glyphName":"table-insert-row-above","cssFile":"InstructureIcons-Line.css","codepoint":"EB22","className":"icon-table-insert-row-above","classes":["icon-line","icon-table-insert-row-above"],"bidirectional":false,"deprecated":false},"IconTableInsertRowAboveSolid":{"variant":"Solid","glyphName":"table-insert-row-above","cssFile":"InstructureIcons-Solid.css","codepoint":"EB22","className":"icon-table-insert-row-above","classes":["icon-solid","icon-table-insert-row-above"],"bidirectional":false,"deprecated":false},"IconTableInsertRowAfterLine":{"variant":"Line","glyphName":"table-insert-row-after","cssFile":"InstructureIcons-Line.css","codepoint":"EB23","className":"icon-table-insert-row-after","classes":["icon-line","icon-table-insert-row-after"],"bidirectional":false,"deprecated":false},"IconTableInsertRowAfterSolid":{"variant":"Solid","glyphName":"table-insert-row-after","cssFile":"InstructureIcons-Solid.css","codepoint":"EB23","className":"icon-table-insert-row-after","classes":["icon-solid","icon-table-insert-row-after"],"bidirectional":false,"deprecated":false},"IconTableLeftHeaderLine":{"variant":"Line","glyphName":"table-left-header","cssFile":"InstructureIcons-Line.css","codepoint":"EB24","className":"icon-table-left-header","classes":["icon-line","icon-table-left-header"],"bidirectional":false,"deprecated":false},"IconTableLeftHeaderSolid":{"variant":"Solid","glyphName":"table-left-header","cssFile":"InstructureIcons-Solid.css","codepoint":"EB24","className":"icon-table-left-header","classes":["icon-solid","icon-table-left-header"],"bidirectional":false,"deprecated":false},"IconTableMergeCellsLine":{"variant":"Line","glyphName":"table-merge-cells","cssFile":"InstructureIcons-Line.css","codepoint":"EB25","className":"icon-table-merge-cells","classes":["icon-line","icon-table-merge-cells"],"bidirectional":false,"deprecated":false},"IconTableMergeCellsSolid":{"variant":"Solid","glyphName":"table-merge-cells","cssFile":"InstructureIcons-Solid.css","codepoint":"EB25","className":"icon-table-merge-cells","classes":["icon-solid","icon-table-merge-cells"],"bidirectional":false,"deprecated":false},"IconTableRowPropertiesLine":{"variant":"Line","glyphName":"table-row-properties","cssFile":"InstructureIcons-Line.css","codepoint":"EB26","className":"icon-table-row-properties","classes":["icon-line","icon-table-row-properties"],"bidirectional":false,"deprecated":false},"IconTableRowPropertiesSolid":{"variant":"Solid","glyphName":"table-row-properties","cssFile":"InstructureIcons-Solid.css","codepoint":"EB26","className":"icon-table-row-properties","classes":["icon-solid","icon-table-row-properties"],"bidirectional":false,"deprecated":false},"IconTableSplitCellsLine":{"variant":"Line","glyphName":"table-split-cells","cssFile":"InstructureIcons-Line.css","codepoint":"EB27","className":"icon-table-split-cells","classes":["icon-line","icon-table-split-cells"],"bidirectional":false,"deprecated":false},"IconTableSplitCellsSolid":{"variant":"Solid","glyphName":"table-split-cells","cssFile":"InstructureIcons-Solid.css","codepoint":"EB27","className":"icon-table-split-cells","classes":["icon-solid","icon-table-split-cells"],"bidirectional":false,"deprecated":false},"IconTableTopHeaderLine":{"variant":"Line","glyphName":"table-top-header","cssFile":"InstructureIcons-Line.css","codepoint":"EB28","className":"icon-table-top-header","classes":["icon-line","icon-table-top-header"],"bidirectional":false,"deprecated":false},"IconTableTopHeaderSolid":{"variant":"Solid","glyphName":"table-top-header","cssFile":"InstructureIcons-Solid.css","codepoint":"EB28","className":"icon-table-top-header","classes":["icon-solid","icon-table-top-header"],"bidirectional":false,"deprecated":false},"IconTableLine":{"variant":"Line","glyphName":"table","cssFile":"InstructureIcons-Line.css","codepoint":"EB29","className":"icon-table","classes":["icon-line","icon-table"],"bidirectional":false,"deprecated":false},"IconTableSolid":{"variant":"Solid","glyphName":"table","cssFile":"InstructureIcons-Solid.css","codepoint":"EB29","className":"icon-table","classes":["icon-solid","icon-table"],"bidirectional":false,"deprecated":false},"IconTagLine":{"variant":"Line","glyphName":"tag","cssFile":"InstructureIcons-Line.css","codepoint":"EB2A","className":"icon-tag","classes":["icon-line","icon-tag"],"bidirectional":false,"deprecated":false},"IconTagSolid":{"variant":"Solid","glyphName":"tag","cssFile":"InstructureIcons-Solid.css","codepoint":"EB2A","className":"icon-tag","classes":["icon-solid","icon-tag"],"bidirectional":false,"deprecated":false},"IconTargetLine":{"variant":"Line","glyphName":"target","cssFile":"InstructureIcons-Line.css","codepoint":"EB2B","className":"icon-target","classes":["icon-line","icon-target"],"bidirectional":false,"deprecated":false},"IconTargetSolid":{"variant":"Solid","glyphName":"target","cssFile":"InstructureIcons-Solid.css","codepoint":"EB2B","className":"icon-target","classes":["icon-solid","icon-target"],"bidirectional":false,"deprecated":false},"IconTextBackgroundColorLine":{"variant":"Line","glyphName":"text-background-color","cssFile":"InstructureIcons-Line.css","codepoint":"EB2C","className":"icon-text-background-color","classes":["icon-line","icon-text-background-color"],"bidirectional":false,"deprecated":false},"IconTextBackgroundColorSolid":{"variant":"Solid","glyphName":"text-background-color","cssFile":"InstructureIcons-Solid.css","codepoint":"EB2C","className":"icon-text-background-color","classes":["icon-solid","icon-text-background-color"],"bidirectional":false,"deprecated":false},"IconTextCenteredLine":{"variant":"Line","glyphName":"text-centered","cssFile":"InstructureIcons-Line.css","codepoint":"EB2D","className":"icon-text-centered","classes":["icon-line","icon-text-centered"],"bidirectional":false,"deprecated":false},"IconTextCenteredSolid":{"variant":"Solid","glyphName":"text-centered","cssFile":"InstructureIcons-Solid.css","codepoint":"EB2D","className":"icon-text-centered","classes":["icon-solid","icon-text-centered"],"bidirectional":false,"deprecated":false},"IconTextColorLine":{"variant":"Line","glyphName":"text-color","cssFile":"InstructureIcons-Line.css","codepoint":"EB2E","className":"icon-text-color","classes":["icon-line","icon-text-color"],"bidirectional":false,"deprecated":false},"IconTextColorSolid":{"variant":"Solid","glyphName":"text-color","cssFile":"InstructureIcons-Solid.css","codepoint":"EB2E","className":"icon-text-color","classes":["icon-solid","icon-text-color"],"bidirectional":false,"deprecated":false},"IconTextDirectionLtrLine":{"variant":"Line","glyphName":"text-direction-ltr","cssFile":"InstructureIcons-Line.css","codepoint":"EB2F","className":"icon-text-direction-ltr","classes":["icon-line","icon-text-direction-ltr"],"bidirectional":false,"deprecated":false},"IconTextDirectionLtrSolid":{"variant":"Solid","glyphName":"text-direction-ltr","cssFile":"InstructureIcons-Solid.css","codepoint":"EB2F","className":"icon-text-direction-ltr","classes":["icon-solid","icon-text-direction-ltr"],"bidirectional":false,"deprecated":false},"IconTextDirectionRtlLine":{"variant":"Line","glyphName":"text-direction-rtl","cssFile":"InstructureIcons-Line.css","codepoint":"EB30","className":"icon-text-direction-rtl","classes":["icon-line","icon-text-direction-rtl"],"bidirectional":false,"deprecated":false},"IconTextDirectionRtlSolid":{"variant":"Solid","glyphName":"text-direction-rtl","cssFile":"InstructureIcons-Solid.css","codepoint":"EB30","className":"icon-text-direction-rtl","classes":["icon-solid","icon-text-direction-rtl"],"bidirectional":false,"deprecated":false},"IconTextEndLine":{"variant":"Line","glyphName":"text-end","cssFile":"InstructureIcons-Line.css","codepoint":"EB31","className":"icon-text-end","classes":["icon-line","icon-text-end"],"bidirectional":true,"deprecated":false},"IconTextEndSolid":{"variant":"Solid","glyphName":"text-end","cssFile":"InstructureIcons-Solid.css","codepoint":"EB31","className":"icon-text-end","classes":["icon-solid","icon-text-end"],"bidirectional":true,"deprecated":false},"IconTextLeftLine":{"variant":"Line","glyphName":"text-left","cssFile":"InstructureIcons-Line.css","codepoint":"EB32","className":"icon-text-left","classes":["icon-line","icon-text-left"],"bidirectional":true,"deprecated":true},"IconTextLeftSolid":{"variant":"Solid","glyphName":"text-left","cssFile":"InstructureIcons-Solid.css","codepoint":"EB32","className":"icon-text-left","classes":["icon-solid","icon-text-left"],"bidirectional":true,"deprecated":true},"IconTextRightLine":{"variant":"Line","glyphName":"text-right","cssFile":"InstructureIcons-Line.css","codepoint":"EB33","className":"icon-text-right","classes":["icon-line","icon-text-right"],"bidirectional":true,"deprecated":true},"IconTextRightSolid":{"variant":"Solid","glyphName":"text-right","cssFile":"InstructureIcons-Solid.css","codepoint":"EB33","className":"icon-text-right","classes":["icon-solid","icon-text-right"],"bidirectional":true,"deprecated":true},"IconTextStartLine":{"variant":"Line","glyphName":"text-start","cssFile":"InstructureIcons-Line.css","codepoint":"EB34","className":"icon-text-start","classes":["icon-line","icon-text-start"],"bidirectional":true,"deprecated":false},"IconTextStartSolid":{"variant":"Solid","glyphName":"text-start","cssFile":"InstructureIcons-Solid.css","codepoint":"EB34","className":"icon-text-start","classes":["icon-solid","icon-text-start"],"bidirectional":true,"deprecated":false},"IconTextSubscriptLine":{"variant":"Line","glyphName":"text-subscript","cssFile":"InstructureIcons-Line.css","codepoint":"EB35","className":"icon-text-subscript","classes":["icon-line","icon-text-subscript"],"bidirectional":false,"deprecated":false},"IconTextSubscriptSolid":{"variant":"Solid","glyphName":"text-subscript","cssFile":"InstructureIcons-Solid.css","codepoint":"EB35","className":"icon-text-subscript","classes":["icon-solid","icon-text-subscript"],"bidirectional":false,"deprecated":false},"IconTextSuperscriptLine":{"variant":"Line","glyphName":"text-superscript","cssFile":"InstructureIcons-Line.css","codepoint":"EB36","className":"icon-text-superscript","classes":["icon-line","icon-text-superscript"],"bidirectional":false,"deprecated":false},"IconTextSuperscriptSolid":{"variant":"Solid","glyphName":"text-superscript","cssFile":"InstructureIcons-Solid.css","codepoint":"EB36","className":"icon-text-superscript","classes":["icon-solid","icon-text-superscript"],"bidirectional":false,"deprecated":false},"IconTextLine":{"variant":"Line","glyphName":"text","cssFile":"InstructureIcons-Line.css","codepoint":"EB37","className":"icon-text","classes":["icon-line","icon-text"],"bidirectional":false,"deprecated":false},"IconTextSolid":{"variant":"Solid","glyphName":"text","cssFile":"InstructureIcons-Solid.css","codepoint":"EB37","className":"icon-text","classes":["icon-solid","icon-text"],"bidirectional":false,"deprecated":false},"IconTextareaLine":{"variant":"Line","glyphName":"textarea","cssFile":"InstructureIcons-Line.css","codepoint":"EB38","className":"icon-textarea","classes":["icon-line","icon-textarea"],"bidirectional":true,"deprecated":false},"IconTextareaSolid":{"variant":"Solid","glyphName":"textarea","cssFile":"InstructureIcons-Solid.css","codepoint":"EB38","className":"icon-textarea","classes":["icon-solid","icon-textarea"],"bidirectional":true,"deprecated":false},"IconTimerLine":{"variant":"Line","glyphName":"timer","cssFile":"InstructureIcons-Line.css","codepoint":"EB39","className":"icon-timer","classes":["icon-line","icon-timer"],"bidirectional":false,"deprecated":false},"IconTimerSolid":{"variant":"Solid","glyphName":"timer","cssFile":"InstructureIcons-Solid.css","codepoint":"EB39","className":"icon-timer","classes":["icon-solid","icon-timer"],"bidirectional":false,"deprecated":false},"IconToggleEndLine":{"variant":"Line","glyphName":"toggle-end","cssFile":"InstructureIcons-Line.css","codepoint":"EB3A","className":"icon-toggle-end","classes":["icon-line","icon-toggle-end"],"bidirectional":true,"deprecated":false},"IconToggleEndSolid":{"variant":"Solid","glyphName":"toggle-end","cssFile":"InstructureIcons-Solid.css","codepoint":"EB3A","className":"icon-toggle-end","classes":["icon-solid","icon-toggle-end"],"bidirectional":true,"deprecated":false},"IconToggleLeftLine":{"variant":"Line","glyphName":"toggle-left","cssFile":"InstructureIcons-Line.css","codepoint":"EB3B","className":"icon-toggle-left","classes":["icon-line","icon-toggle-left"],"bidirectional":true,"deprecated":true},"IconToggleLeftSolid":{"variant":"Solid","glyphName":"toggle-left","cssFile":"InstructureIcons-Solid.css","codepoint":"EB3B","className":"icon-toggle-left","classes":["icon-solid","icon-toggle-left"],"bidirectional":true,"deprecated":true},"IconToggleRightLine":{"variant":"Line","glyphName":"toggle-right","cssFile":"InstructureIcons-Line.css","codepoint":"EB3C","className":"icon-toggle-right","classes":["icon-line","icon-toggle-right"],"bidirectional":true,"deprecated":true},"IconToggleRightSolid":{"variant":"Solid","glyphName":"toggle-right","cssFile":"InstructureIcons-Solid.css","codepoint":"EB3C","className":"icon-toggle-right","classes":["icon-solid","icon-toggle-right"],"bidirectional":true,"deprecated":true},"IconToggleStartLine":{"variant":"Line","glyphName":"toggle-start","cssFile":"InstructureIcons-Line.css","codepoint":"EB3D","className":"icon-toggle-start","classes":["icon-line","icon-toggle-start"],"bidirectional":true,"deprecated":false},"IconToggleStartSolid":{"variant":"Solid","glyphName":"toggle-start","cssFile":"InstructureIcons-Solid.css","codepoint":"EB3D","className":"icon-toggle-start","classes":["icon-solid","icon-toggle-start"],"bidirectional":true,"deprecated":false},"IconTrashLine":{"variant":"Line","glyphName":"trash","cssFile":"InstructureIcons-Line.css","codepoint":"EB3E","className":"icon-trash","classes":["icon-line","icon-trash"],"bidirectional":false,"deprecated":false},"IconTrashSolid":{"variant":"Solid","glyphName":"trash","cssFile":"InstructureIcons-Solid.css","codepoint":"EB3E","className":"icon-trash","classes":["icon-solid","icon-trash"],"bidirectional":false,"deprecated":false},"IconTroubleLine":{"variant":"Line","glyphName":"trouble","cssFile":"InstructureIcons-Line.css","codepoint":"EB3F","className":"icon-trouble","classes":["icon-line","icon-trouble"],"bidirectional":false,"deprecated":false},"IconTroubleSolid":{"variant":"Solid","glyphName":"trouble","cssFile":"InstructureIcons-Solid.css","codepoint":"EB3F","className":"icon-trouble","classes":["icon-solid","icon-trouble"],"bidirectional":false,"deprecated":false},"IconTwitterBoxedLine":{"variant":"Line","glyphName":"twitter-boxed","cssFile":"InstructureIcons-Line.css","codepoint":"EB40","className":"icon-twitter-boxed","classes":["icon-line","icon-twitter-boxed"],"bidirectional":false,"deprecated":true},"IconTwitterBoxedSolid":{"variant":"Solid","glyphName":"twitter-boxed","cssFile":"InstructureIcons-Solid.css","codepoint":"EB40","className":"icon-twitter-boxed","classes":["icon-solid","icon-twitter-boxed"],"bidirectional":false,"deprecated":true},"IconTwitterLine":{"variant":"Line","glyphName":"twitter","cssFile":"InstructureIcons-Line.css","codepoint":"EB41","className":"icon-twitter","classes":["icon-line","icon-twitter"],"bidirectional":false,"deprecated":false},"IconTwitterSolid":{"variant":"Solid","glyphName":"twitter","cssFile":"InstructureIcons-Solid.css","codepoint":"EB41","className":"icon-twitter","classes":["icon-solid","icon-twitter"],"bidirectional":false,"deprecated":false},"IconUnarchiveLine":{"variant":"Line","glyphName":"unarchive","cssFile":"InstructureIcons-Line.css","codepoint":"EB42","className":"icon-unarchive","classes":["icon-line","icon-unarchive"],"bidirectional":false,"deprecated":false},"IconUnarchiveSolid":{"variant":"Solid","glyphName":"unarchive","cssFile":"InstructureIcons-Solid.css","codepoint":"EB42","className":"icon-unarchive","classes":["icon-solid","icon-unarchive"],"bidirectional":false,"deprecated":false},"IconUnderlineLine":{"variant":"Line","glyphName":"underline","cssFile":"InstructureIcons-Line.css","codepoint":"EB43","className":"icon-underline","classes":["icon-line","icon-underline"],"bidirectional":false,"deprecated":false},"IconUnderlineSolid":{"variant":"Solid","glyphName":"underline","cssFile":"InstructureIcons-Solid.css","codepoint":"EB43","className":"icon-underline","classes":["icon-solid","icon-underline"],"bidirectional":false,"deprecated":false},"IconUnlockLine":{"variant":"Line","glyphName":"unlock","cssFile":"InstructureIcons-Line.css","codepoint":"EB44","className":"icon-unlock","classes":["icon-line","icon-unlock"],"bidirectional":false,"deprecated":false},"IconUnlockSolid":{"variant":"Solid","glyphName":"unlock","cssFile":"InstructureIcons-Solid.css","codepoint":"EB44","className":"icon-unlock","classes":["icon-solid","icon-unlock"],"bidirectional":false,"deprecated":false},"IconUnmutedLine":{"variant":"Line","glyphName":"unmuted","cssFile":"InstructureIcons-Line.css","codepoint":"EB45","className":"icon-unmuted","classes":["icon-line","icon-unmuted"],"bidirectional":false,"deprecated":false},"IconUnmutedSolid":{"variant":"Solid","glyphName":"unmuted","cssFile":"InstructureIcons-Solid.css","codepoint":"EB45","className":"icon-unmuted","classes":["icon-solid","icon-unmuted"],"bidirectional":false,"deprecated":false},"IconUnpublishLine":{"variant":"Line","glyphName":"unpublish","cssFile":"InstructureIcons-Line.css","codepoint":"EB46","className":"icon-unpublish","classes":["icon-line","icon-unpublish"],"bidirectional":false,"deprecated":true},"IconUnpublishSolid":{"variant":"Solid","glyphName":"unpublish","cssFile":"InstructureIcons-Solid.css","codepoint":"EB46","className":"icon-unpublish","classes":["icon-solid","icon-unpublish"],"bidirectional":false,"deprecated":true},"IconUnpublishedLine":{"variant":"Line","glyphName":"unpublished","cssFile":"InstructureIcons-Line.css","codepoint":"EB47","className":"icon-unpublished","classes":["icon-line","icon-unpublished"],"bidirectional":false,"deprecated":false},"IconUnpublishedSolid":{"variant":"Solid","glyphName":"unpublished","cssFile":"InstructureIcons-Solid.css","codepoint":"EB47","className":"icon-unpublished","classes":["icon-solid","icon-unpublished"],"bidirectional":false,"deprecated":false},"IconUpdownLine":{"variant":"Line","glyphName":"updown","cssFile":"InstructureIcons-Line.css","codepoint":"EB48","className":"icon-updown","classes":["icon-line","icon-updown"],"bidirectional":false,"deprecated":false},"IconUpdownSolid":{"variant":"Solid","glyphName":"updown","cssFile":"InstructureIcons-Solid.css","codepoint":"EB48","className":"icon-updown","classes":["icon-solid","icon-updown"],"bidirectional":false,"deprecated":false},"IconUploadLine":{"variant":"Line","glyphName":"upload","cssFile":"InstructureIcons-Line.css","codepoint":"EB49","className":"icon-upload","classes":["icon-line","icon-upload"],"bidirectional":false,"deprecated":false},"IconUploadSolid":{"variant":"Solid","glyphName":"upload","cssFile":"InstructureIcons-Solid.css","codepoint":"EB49","className":"icon-upload","classes":["icon-solid","icon-upload"],"bidirectional":false,"deprecated":false},"IconUserAddLine":{"variant":"Line","glyphName":"user-add","cssFile":"InstructureIcons-Line.css","codepoint":"EB4A","className":"icon-user-add","classes":["icon-line","icon-user-add"],"bidirectional":false,"deprecated":true},"IconUserAddSolid":{"variant":"Solid","glyphName":"user-add","cssFile":"InstructureIcons-Solid.css","codepoint":"EB4A","className":"icon-user-add","classes":["icon-solid","icon-user-add"],"bidirectional":false,"deprecated":true},"IconUserLine":{"variant":"Line","glyphName":"user","cssFile":"InstructureIcons-Line.css","codepoint":"EB4B","className":"icon-user","classes":["icon-line","icon-user"],"bidirectional":false,"deprecated":false},"IconUserSolid":{"variant":"Solid","glyphName":"user","cssFile":"InstructureIcons-Solid.css","codepoint":"EB4B","className":"icon-user","classes":["icon-solid","icon-user"],"bidirectional":false,"deprecated":false},"IconVideoCameraOffLine":{"variant":"Line","glyphName":"video-camera-off","cssFile":"InstructureIcons-Line.css","codepoint":"EB4C","className":"icon-video-camera-off","classes":["icon-line","icon-video-camera-off"],"bidirectional":false,"deprecated":false},"IconVideoCameraOffSolid":{"variant":"Solid","glyphName":"video-camera-off","cssFile":"InstructureIcons-Solid.css","codepoint":"EB4C","className":"icon-video-camera-off","classes":["icon-solid","icon-video-camera-off"],"bidirectional":false,"deprecated":false},"IconVideoCameraLine":{"variant":"Line","glyphName":"video-camera","cssFile":"InstructureIcons-Line.css","codepoint":"EB4D","className":"icon-video-camera","classes":["icon-line","icon-video-camera"],"bidirectional":false,"deprecated":false},"IconVideoCameraSolid":{"variant":"Solid","glyphName":"video-camera","cssFile":"InstructureIcons-Solid.css","codepoint":"EB4D","className":"icon-video-camera","classes":["icon-solid","icon-video-camera"],"bidirectional":false,"deprecated":false},"IconVideoLine":{"variant":"Line","glyphName":"video","cssFile":"InstructureIcons-Line.css","codepoint":"EB4E","className":"icon-video","classes":["icon-line","icon-video"],"bidirectional":false,"deprecated":false},"IconVideoSolid":{"variant":"Solid","glyphName":"video","cssFile":"InstructureIcons-Solid.css","codepoint":"EB4E","className":"icon-video","classes":["icon-solid","icon-video"],"bidirectional":false,"deprecated":false},"IconWarningBorderlessLine":{"variant":"Line","glyphName":"warning-borderless","cssFile":"InstructureIcons-Line.css","codepoint":"EB4F","className":"icon-warning-borderless","classes":["icon-line","icon-warning-borderless"],"bidirectional":false,"deprecated":false},"IconWarningBorderlessSolid":{"variant":"Solid","glyphName":"warning-borderless","cssFile":"InstructureIcons-Solid.css","codepoint":"EB4F","className":"icon-warning-borderless","classes":["icon-solid","icon-warning-borderless"],"bidirectional":false,"deprecated":false},"IconWarningLine":{"variant":"Line","glyphName":"warning","cssFile":"InstructureIcons-Line.css","codepoint":"EB50","className":"icon-warning","classes":["icon-line","icon-warning"],"bidirectional":false,"deprecated":false},"IconWarningSolid":{"variant":"Solid","glyphName":"warning","cssFile":"InstructureIcons-Solid.css","codepoint":"EB50","className":"icon-warning","classes":["icon-solid","icon-warning"],"bidirectional":false,"deprecated":false},"IconWindowsLine":{"variant":"Line","glyphName":"windows","cssFile":"InstructureIcons-Line.css","codepoint":"EB51","className":"icon-windows","classes":["icon-line","icon-windows"],"bidirectional":false,"deprecated":false},"IconWindowsSolid":{"variant":"Solid","glyphName":"windows","cssFile":"InstructureIcons-Solid.css","codepoint":"EB51","className":"icon-windows","classes":["icon-solid","icon-windows"],"bidirectional":false,"deprecated":false},"IconWordpressLine":{"variant":"Line","glyphName":"wordpress","cssFile":"InstructureIcons-Line.css","codepoint":"EB52","className":"icon-wordpress","classes":["icon-line","icon-wordpress"],"bidirectional":false,"deprecated":false},"IconWordpressSolid":{"variant":"Solid","glyphName":"wordpress","cssFile":"InstructureIcons-Solid.css","codepoint":"EB52","className":"icon-wordpress","classes":["icon-solid","icon-wordpress"],"bidirectional":false,"deprecated":false},"IconXLine":{"variant":"Line","glyphName":"x","cssFile":"InstructureIcons-Line.css","codepoint":"EB53","className":"icon-x","classes":["icon-line","icon-x"],"bidirectional":false,"deprecated":false},"IconXSolid":{"variant":"Solid","glyphName":"x","cssFile":"InstructureIcons-Solid.css","codepoint":"EB53","className":"icon-x","classes":["icon-solid","icon-x"],"bidirectional":false,"deprecated":false},"IconZippedLine":{"variant":"Line","glyphName":"zipped","cssFile":"InstructureIcons-Line.css","codepoint":"EB54","className":"icon-zipped","classes":["icon-line","icon-zipped"],"bidirectional":false,"deprecated":false},"IconZippedSolid":{"variant":"Solid","glyphName":"zipped","cssFile":"InstructureIcons-Solid.css","codepoint":"EB54","className":"icon-zipped","classes":["icon-solid","icon-zipped"],"bidirectional":false,"deprecated":false},"IconZoomInLine":{"variant":"Line","glyphName":"zoom-in","cssFile":"InstructureIcons-Line.css","codepoint":"EB55","className":"icon-zoom-in","classes":["icon-line","icon-zoom-in"],"bidirectional":false,"deprecated":false},"IconZoomInSolid":{"variant":"Solid","glyphName":"zoom-in","cssFile":"InstructureIcons-Solid.css","codepoint":"EB55","className":"icon-zoom-in","classes":["icon-solid","icon-zoom-in"],"bidirectional":false,"deprecated":false},"IconZoomOutLine":{"variant":"Line","glyphName":"zoom-out","cssFile":"InstructureIcons-Line.css","codepoint":"EB56","className":"icon-zoom-out","classes":["icon-line","icon-zoom-out"],"bidirectional":false,"deprecated":false},"IconZoomOutSolid":{"variant":"Solid","glyphName":"zoom-out","cssFile":"InstructureIcons-Solid.css","codepoint":"EB56","className":"icon-zoom-out","classes":["icon-solid","icon-zoom-out"],"bidirectional":false,"deprecated":false}},"packageName":"@instructure/ui-icons","requirePath":"@instructure/ui-icons/es/font"}}},"showMenu":"false"}